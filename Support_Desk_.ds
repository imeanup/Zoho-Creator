/*
 * Author       : app.zohocreator
 * Generated on : 06-May-2020 22:39:04
 * Version      : 1.0
 */
 application "Support Desk "
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "Asia/Calcutta"
 	time format = "24-hr"
	section Dashboard
	{
		icon = "tachometer"
				 page Dashboard 
	 	 { 
 	 	 displayname = "Dashboard" 

 	 	 icon = "" 
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"style\":\"padding-right:0px;padding-top:0px;padding-bottom:0px;padding-left:0px;\",\"design\":\"fluid\",\"displayType\":\"plain\"}}'\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Dashboard1'>\n\t<![CDATA[htmlpage Dashboard1()\ncontent\n&lt;%{\n\tthisapp.settings.update();\n\t%&gt;\n&lt;style&gt;\n\t\t\t    &lt;%=thisapp.style.home()%&gt;\n\t\t\t\t.zc-formbutton {\n\t\t\t    color: #333!important;\n\t\t\t    font-family: Arial;\n\t\t\t    background-color: #cdcdcd;\n\t\t\t    background-image: url(\/creator\/live\/images\/bg_action_menu_t4c4.png);\n\t\t\t    border-top: 1px solid #a2a2a2;\n\t\t\t    border-left: 1px solid #a2a2a2;\n\t\t\t    border-bottom: 1px solid #a2a2a2;\n\t\t\t    border-right: 1px solid #a2a2a2;\n\t\t\t    padding: 3px 11px;\n\t\t\t    vertical-align: middle;\n\t\t\t    white-space: nowrap;\n\t\t\t    margin-right: 3px;\n\t\t\t    text-shadow: 0 1px 0 #fff;\n\t\t\t    box-shadow: 0 1px 0 rgba(255,255,255,0.5);\n\t\t\t    border-radius: 3px;\n\t\t\t    cursor: pointer;\n\t\t\t}\n\t\t\t\t\t&lt;\/style&gt;\n&lt;%\n\tif(thisapp.user.isAdmin())\n\t{\n\t\tif(!thisapp.user.isEmployee())\n\t\t{\n\t\t\tprofileUrl = &quot;#Form:Employees?zc_LoadIn=dialog&amp;zc_Header=false&quot;;\n\t\t}\n\t\tif(thisapp.user.isEmployee())\n\t\t{\n\t\t\tprofileUrl = &quot;#View:My_Profile_Employee?zc_Header=false&amp;zc_SecHeader=false&amp;zc_LoadIn=dialog&quot;;\n\t\t}\n\t\tallCasesCnt = Add_Case[Case_Status == &quot;Pending&quot;].count();\n\t\tallOpenCasesCnt = Add_Case[Case_Status != &quot;Closed&quot; &amp;&amp; Case_Status == &quot;Open&quot;].count();\n\t\tallEscalatedCasesCnt = Add_Case[Case_Status is not null &amp;&amp; Case_Status == &quot;Escalated&quot;].count();\n\t\tthisweekofYear = today.getWeekOfYear();\n\t\tthisWeekCnt = Add_Case[week == thisweekofYear].count();\n\t\tthisMonth = today.getMonth();\n\t\tthisMonthCnt = Add_Case[Month == thisMonth].count();\n\t\tlast3MonthsCnt = Add_Case[Month == thisMonth || Month == thisMonth - 1 || Month == thisMonth - 2].count();\n\t\tahtMap = thisapp.time.getAHTs();\n\t\t%&gt;\n&lt;div class=&quot;container-fluid&quot; style=&quot;margin:auto;padding:50px 20px 0; box-sizing: border-box;&quot;&gt;\n\t\t\t \t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot; style=&quot;min-height:30px;&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 15px;float: left;&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Add_Case&quot; style=&quot;font-size: 15px;&quot;&gt;&lt;span&gt;&lt;b&gt;Add a New Case&lt;\/b&gt;&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 15px;float: right;&quot;&gt; \n\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-formbutton&quot; style=&quot;font-size: 15px;&quot; href=&lt;%=profileUrl%&gt;&gt;&lt;span&gt;&lt;b&gt;My Profile&lt;\/b&gt;&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style =&quot;margin-left: 10px;&quot;&gt;\n\t\t\t\t        \t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;All Pending Cases&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:All_Cases&quot;&gt;&lt;h2&gt; &lt;%=allCasesCnt%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t \t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;All Open Cases&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:All_Open_Cases&quot;&gt;&lt;h2&gt; &lt;%=allOpenCasesCnt%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t             \t\t&lt;div class=&quot;span3&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Escalated Cases&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:Escalated_Cases&quot;&gt;&lt;h2&gt; &lt;%=allEscalatedCasesCnt%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t    \t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style =&quot;margin-left: 10px;&quot;&gt;\n\t\t\t\t        \t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;This Week&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:All_Cases?week=&lt;%=thisweekofYear%&gt;&quot;&gt;&lt;h2&gt; &lt;%=thisWeekCnt%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t \t &lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;This Month&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:All_Cases?Month=&lt;%=thisMonth%&gt;&quot;&gt;&lt;h2&gt; &lt;%=thisMonthCnt%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t              \t\t&lt;div class=&quot;span3&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Last 3 Months &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:All_Cases&quot;&gt;&lt;h2&gt; &lt;%=last3MonthsCnt%&gt;  &lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t    \t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t&lt;div class=&quot;box-title&quot; title=&quot;Calculated based on Created Time and Resolved Time&quot; &gt;Average Handing Time&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style =&quot;margin-left: 10px;&quot;&gt;\n\t\t\t\t        \t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;This Week&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:All_Cases?week=&lt;%=thisweekofYear%&gt;&quot;&gt;&lt;h2&gt; &lt;%=ahtMap.get(&quot;thisWeekAHT&quot;)%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t \t &lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;This Month&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:All_Cases?Month=&lt;%=thisMonth%&gt;&quot;&gt;&lt;h2&gt; &lt;%=ahtMap.get(&quot;thismonthAHT&quot;)%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t              \t\t&lt;div class=&quot;span3&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;All Time&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:All_Cases&quot;&gt;&lt;h2&gt; &lt;%=ahtMap.get(&quot;totalAHT&quot;)%&gt;  &lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t    \t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Cases Report&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;iframe width=&apos;100%&apos; height=&quot;500px&quot; frameborder=&apos;0&apos; allowTransparency=&apos;true&apos;  src=&apos;https:\/\/creator.zoho.com\/&lt;%=zoho.adminuser%&gt;\/&lt;%=zoho.appname%&gt;\/report-embed\/Cases_Report\/zc_Header=false&apos; style =&quot;padding-left: 3px;padding-right: 3px;&quot;&gt;&lt;\/iframe&gt;\n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\telse if(thisapp.user.isManager())\n\t{\n\t\tempID = thisapp.user.getEmpFromEmail(zoho.loginuserid);\n\t\temp = Employees[ID == empID];\n\t\topenCaseCnt = Add_Case[Case_Owner == empID &amp;&amp; Case_Status == &quot;Open&quot; || Case_Status == &quot;Pending&quot; || Case_Status == &quot;Escalated&quot;].count();\n\t\tmyCaseCnt = Add_Case[Case_Owner == empID].count();\n\t\tmyCallbackCnt = Tasks[Owner == empID &amp;&amp; Status != &quot;Closed&quot;].count();\n\t\tdeptID = emp.Department;\n\t\tmyTeamOpenCaseCnt = Add_Case[Department.Manager_Email == zoho.loginuserid &amp;&amp; Case_Status == &quot;Open&quot; || Case_Status == &quot;Pending&quot; || Case_Status == &quot;Escalated&quot;].count();\n\t\tmyTeamCaseCnt = Add_Case[Department.Manager_Email == zoho.loginuserid].count();\n\t\tmyTeamCallbackCnt = Tasks[Owner.Department == deptID &amp;&amp; Status != &quot;Closed&quot;].count();\n\t\tahtMap = thisapp.time.getAHTsByDept(deptID);\n\t\t%&gt;\n&lt;div class=&quot;container-fluid&quot; &gt;\n\t\t\t \t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot; style=&quot;min-height:50px;&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div style=&quot;margin-bottom:15px&quot;&gt;&lt;span&gt;&lt;strong&gt;Welcome, &lt;%=emp.FirstName%&gt; &lt;%=emp.LastName%&gt;&lt;\/strong&gt;&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 15px;float: left;&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Add_Case&quot; style=&quot;font-size: 15px;&quot;&gt;&lt;span&gt;&lt;b&gt;Add a New Case&lt;\/b&gt;&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 15px;float: right;&quot;&gt; \n\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-formbutton&quot; style=&quot;font-size: 15px;&quot; href=&quot;#View:My_Profile_Employee?zc_Header=false&amp;amp;zc_SecHeader=false&amp;zc_LoadIn=dialog&quot;&gt;&lt;span&gt;&lt;b&gt;My Profile&lt;\/b&gt;&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style =&quot;margin-left: 10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;My Open Cases&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Open_Cases&quot;&gt;&lt;h2&gt; &lt;%=openCaseCnt%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t &lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;My Callbacks&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Callbacks&quot;&gt;&lt;h2&gt; &lt;%=myCallbackCnt%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span3&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;All My Cases&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Cases&quot;&gt;&lt;h2&gt; &lt;%=myCaseCnt%&gt;  &lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style =&quot;margin-left: 10px;&quot;&gt;\n\t\t\t\t\t        \t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;My Team Open Cases&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Team_s_Open_Cases&quot;&gt;&lt;h2&gt; &lt;%=myTeamOpenCaseCnt%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t \t &lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;My Team Callbacks&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Team_Callbacks&quot;&gt;&lt;h2&gt; &lt;%=myTeamCallbackCnt%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t              \t\t&lt;div class=&quot;span3&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;All My Team Cases&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Team_s_Cases&quot;&gt;&lt;h2&gt; &lt;%=myTeamCaseCnt%&gt;  &lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t    \t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;My Teams Average Handing Time&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style =&quot;margin-left: 10px;&quot;&gt;\n\t\t\t\t\t        \t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;This Week&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Team_s_Cases?week=&lt;%=thisweekofYear%&gt;&quot;&gt;&lt;h2&gt; &lt;%=ahtMap.get(&quot;thisWeekAHT&quot;)%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t \t &lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;This Month&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Team_s_Cases?Month=&lt;%=thisMonth%&gt;&quot;&gt;&lt;h2&gt; &lt;%=ahtMap.get(&quot;thismonthAHT&quot;)%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t              \t\t&lt;div class=&quot;span3&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;All Time&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Team_s_Cases&quot;&gt;&lt;h2&gt; &lt;%=ahtMap.get(&quot;totalAHT&quot;)%&gt;  &lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t    \t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t        \t\t\t&lt;div class=&quot;box&quot;&gt;&lt;!--This contains the My Cases Reports of Managers--&gt;\n\t\t\t                            &lt;div class=&quot;box-title&quot;&gt;My Cases &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Cases&quot;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Cases&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading My Cases...&lt;\/div&gt;  \n\t\t\t                        &lt;\/div&gt; \n\t\t\t\t             \t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;&lt;!--This contains the My Open Cases of Employees--&gt;\n\t\t\t                            &lt;div class=&quot;box-title&quot;&gt;My Open Cases &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Open_Cases&quot;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Open_Cases&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading My Open Cases...&lt;\/div&gt;  \n\t\t\t                        &lt;\/div&gt; \n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;&lt;!--This contains the My team Open Cases of Employees--&gt;\n\t\t\t                            &lt;div class=&quot;box-title&quot;&gt;My Team Open Cases &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Team_s_Open_Cases&quot;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Team_s_Open_Cases&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading My team Open Cases...&lt;\/div&gt;  \n\t\t\t                        &lt;\/div&gt; \n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;&lt;!--This contains the My Callbacks of Employees--&gt;\n\t\t\t                            &lt;div class=&quot;box-title&quot;&gt;My Callbacks &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Tasks?zc_LoadIn=dialog&amp;zc_Header=false&amp;Owner=&lt;%=empID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt; &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Callbacks&quot;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Callbacks&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading My Callbacks...&lt;\/div&gt;  \n\t\t\t                        &lt;\/div&gt; \n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;&lt;!--This contains the My Callbacks of Employees--&gt;\n\t\t\t                            &lt;div class=&quot;box-title&quot;&gt;My Team Callbacks &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Tasks?zc_LoadIn=dialog&amp;zc_Header=false&amp;Owner=&lt;%=empID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt; &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Team_Callbacks&quot;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Team_Callbacks&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading My Team Callbacks...&lt;\/div&gt;  \n\t\t\t                        &lt;\/div&gt; \n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\telse if(thisapp.user.isEmployee())\n\t{\n\t\tempID = thisapp.user.getEmpFromEmail(zoho.loginuserid);\n\t\temp = Employees[ID == empID];\n\t\topenCaseCnt = Add_Case[Case_Owner == empID &amp;&amp; Case_Status == &quot;Open&quot; || Case_Status == &quot;Pending&quot;].count();\n\t\tmyCaseCnt = Add_Case[Case_Owner == empID].count();\n\t\tmyCallbackCnt = Tasks[Owner == empID &amp;&amp; Status != &quot;Closed&quot;].count();\n\t\tahtMap = thisapp.time.getAHTsByEmp(empID);\n\t\t%&gt;\n&lt;div class=&quot;container-fluid&quot; &gt;\n\t\t\t \t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot; style=&quot;min-height:50px;&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div style=&quot;margin-bottom:15px&quot;&gt;&lt;span&gt;&lt;strong&gt;Welcome, &lt;%=emp.FirstName%&gt; &lt;%=emp.LastName%&gt;&lt;\/strong&gt;&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 15px;float: left;&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Add_Case&quot; style=&quot;font-size: 15px;&quot;&gt;&lt;span&gt;&lt;b&gt;Add a New Case&lt;\/b&gt;&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 15px;float: right;&quot;&gt; \n\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-formbutton&quot; style=&quot;font-size: 15px;&quot; href=&quot;#View:My_Profile_Employee?zc_Header=false&amp;amp;zc_SecHeader=false&amp;zc_LoadIn=dialog&quot;&gt;&lt;span&gt;&lt;b&gt;My Profile&lt;\/b&gt;&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style =&quot;margin-left: 10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;My Open Cases&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Open_Cases&quot;&gt;&lt;h2&gt; &lt;%=openCaseCnt%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t &lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;My Callbacks&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Callbacks&quot;&gt;&lt;h2&gt; &lt;%=myCallbackCnt%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span3&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;All My Cases&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Cases&quot;&gt;&lt;h2&gt; &lt;%=myCaseCnt%&gt;  &lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Average Handing Time&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style =&quot;margin-left: 10px;&quot;&gt;\n\t\t\t\t\t\t\t        \t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;This Week&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Cases?week=&lt;%=thisweekofYear%&gt;&quot;&gt;&lt;h2&gt; &lt;%=ahtMap.get(&quot;thisWeekAHT&quot;)%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t \t &lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;This Month&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Cases?Month=&lt;%=thisMonth%&gt;&quot;&gt;&lt;h2&gt; &lt;%=ahtMap.get(&quot;thismonthAHT&quot;)%&gt;&lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t              \t\t&lt;div class=&quot;span3&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;All Time&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Cases&quot;&gt;&lt;h2&gt; &lt;%=ahtMap.get(&quot;totalAHT&quot;)%&gt;  &lt;\/h2&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t    \t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t        \t\t\t&lt;div class=&quot;box&quot;&gt;&lt;!--This contains the My Cases Reports of Employees--&gt;\n\t\t\t                                &lt;div class=&quot;box-title&quot;&gt;My Cases &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Cases&quot;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Cases&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading My Cases...&lt;\/div&gt;  \n\t\t\t                            &lt;\/div&gt; \n\t\t\t\t\t             \t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;&lt;!--This contains the My Open Cases of Employees--&gt;\n\t\t\t                                &lt;div class=&quot;box-title&quot;&gt;My Open Cases &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Open_Cases&quot;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Open_Cases&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading My Open Cases...&lt;\/div&gt;  \n\t\t\t                            &lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;&lt;!--This contains the My Callbacks of Employees--&gt;\n\t\t\t                                &lt;div class=&quot;box-title&quot;&gt;My Callbacks &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Tasks?zc_LoadIn=dialog&amp;zc_Header=false&amp;Owner=&lt;%=empID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt; &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Callbacks&quot;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Callbacks&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading My Callbacks...&lt;\/div&gt;  \n\t\t\t                            &lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Customer_Profile(email) 
	 	 { 
 	 	 displayname = "Customer Profile" 

 	 	 icon = "" 
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Customer_Profile1'>\n\t<![CDATA[htmlpage Customer_Profile1(email)\ncontent\n&lt;%{\n\tif(input.email == null || input.email == &quot;null&quot; || input.email == &quot;&quot;)\n\t{\n\t\temail = zoho.loginuserid;\n\t}\n\taccID = thisapp.user.getAccFromEmail(email);\n\t%&gt;\n&lt;style&gt;\n\t\t\t\t&lt;%=thisapp.style.home()%&gt;\n\t\t\t\t.zc-formbutton {\n\t\t\t\t\tcolor: #333!important;\n\t\t\t\t\tfont-family: Arial;\n\t\t\t\t\tbackground-color: #cdcdcd;\n\t\t\t\t\tbackground-image: url(\/creator\/live\/images\/bg_action_menu_t4c4.png);\n\t\t\t\t\tborder-top: 1px solid #a2a2a2;\n\t\t\t\t\tborder-left: 1px solid #a2a2a2;\n\t\t\t\t\tborder-bottom: 1px solid #a2a2a2;\n\t\t\t\t\tborder-right: 1px solid #a2a2a2;\n\t\t\t\t\tpadding: 3px 11px;\n\t\t\t\t\tvertical-align: middle;\n\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\tmargin-right: 3px;\n\t\t\t\t\ttext-shadow: 0 1px 0 #fff;\n\t\t\t\t\tbox-shadow: 0 1px 0 rgba(255,255,255,0.5);\n\t\t\t\t\tborder-radius: 3px;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t}\n\t\t\t\t&lt;\/style&gt;\n\t\t\t\t&lt;div class=&quot;container-fluid&quot; &gt;\n&lt;%\n\tif(!thisapp.user.isCustomer())\n\t{\n\t\t%&gt;\n&lt;div align=&quot;center&quot; style=&quot;margin:10px&quot; class=&quot;enroll&quot; elName=&apos;zc-component&apos; formLinkName=&apos;Search_Form&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Go_to_Account=&lt;%=accID%&gt;&apos;&gt;Loading  Accounts list...&lt;\/div&gt;\n&lt;%\n\t}\n\tif(accID &gt; 0)\n\t{\n\t\tacc = Add_Account[ID == accID];\n\t\tcaseView = &quot;My_Cases_Customers&quot;;\n\t\tprofileUrl = &quot;#View:My_Profile_Customers&quot;;\n\t\tcaseParams = &quot;&quot;;\n\t\tcallParams = &quot;&quot;;\n\t\tnewCaseParams = &quot;&quot;;\n\t\tcallerView = &quot;My_Callers&quot;;\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\tcaseView = &quot;Customer_Cases&quot;;\n\t\t\tprofileUrl = &quot;#View:All_Accounts?Company_Name=&quot; + encodeUrl(acc.Company_Name);\n\t\t\tcaseParams = &quot;&amp;Account=&quot; + acc.Company_Name;\n\t\t\tnewCaseParams = &quot;?Account=&quot; + acc.ID;\n\t\t\tcallerView = &quot;All_Callers&quot;;\n\t\t\tcallParams = &quot;&amp;Associated_Account=&quot; + acc.Company_Name;\n\t\t}\n\t\tcaseCnt = Add_Case[Account == accID &amp;&amp; Case_Status == &quot;Closed&quot;].count();\n\t\tahtMap = thisapp.time.getAHTsByAcc(accID);\n\t\t%&gt;\n&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot; style=&quot;min-height:50px;&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div&gt;&lt;span&gt;&lt;strong&gt;Welcome, &lt;%=acc.Company_Name%&gt;&lt;\/strong&gt;&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 15px;float: left;&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Add_Case&lt;%=newCaseParams%&gt;&quot; style=&quot;font-size: 15px;&quot;&gt;&lt;span&gt;&lt;b&gt;Add a New Case&lt;\/b&gt;&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 15px;float: right;&quot;&gt; \n\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-formbutton&quot; style=&quot;font-size: 15px;&quot; href=&lt;%=profileUrl%&gt;&gt;&lt;b&gt;Profile&lt;\/b&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;&lt;!--This is the Details of the Customer--&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Details&amp;nbsp;&amp;nbsp;&lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Add_Account?zc_LoadIn=dialog&amp;recLinkID=&lt;%=acc.ID%&gt;&amp;viewLinkName=All_Accounts&quot;&gt;&lt;span style= &quot;padding:3px;&quot;&gt;Edit&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;table cellpadding=&quot;10&quot;&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;font-weight: bolder;&quot;&gt;Company Name&amp;nbsp;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;&quot;&gt;:&amp;nbsp;&lt;%=ifnull(acc.Company_Name,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;font-weight: bolder;&quot;&gt; Primary Contact &amp;nbsp;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;&quot;&gt;:&amp;nbsp;&lt;%=ifnull(acc.First_Name,&quot;&quot;)%&gt; &amp;nbsp;&lt;%=thisapp.nullFix.strToStr(acc.Last_Name)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;font-weight: bolder;&quot;&gt; Email &amp;nbsp;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;&quot;&gt;:&amp;nbsp;&lt;%=ifnull(acc.Email,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;font-weight: bolder;&quot;&gt; Website &amp;nbsp;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;&quot;&gt;:&amp;nbsp;&lt;%=thisapp.nullFix.strToStr(acc.Website)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;    \n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Support Hours&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style =&quot;margin-left: 10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Total Cases (Closed)&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Cases_Customers&quot;&gt;&lt;h1&gt; &lt;%=caseCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Average Handling Time&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Cases_Customers&quot;&gt;&lt;h1&gt; &lt;%=ahtMap.get(&quot;aht&quot;)%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Total Support Hours&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Cases_Customers&quot;&gt;&lt;h1&gt; &lt;%=ahtMap.get(&quot;totalHours&quot;)%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;&lt;!--This contains the My company Cases Reports--&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Cases &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:&lt;%=caseView%&gt;&quot;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;&lt;%=caseView%&gt;&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&lt;%=caseParams%&gt;&apos;&gt;Loading My Cases...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;&lt;!--This contains the My company Callers Reports--&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Callers &amp;nbsp;&amp;nbsp;&lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Callers?zc_LoadIn=dialog&amp;zc_Header=false&amp;Associated_Account=&lt;%=acc.ID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt; &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:&lt;%=callerView%&gt;&quot;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;&lt;%=callerView%&gt;&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&lt;%=callParams%&gt;&apos;&gt;Loading Company Callers...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Case_Data
	{
		displayname= "Case Data"
		icon = "database"
		list Unassigned_Open_Cases
		{
			displayName = "Unassigned Open Cases"
			show all rows from Add_Case  [Case_Status is not null && Case_Status == "Pending"]  
			(
				Title
				custom action "Assign"
				(
	  			workflow = Assign
				column header = "Assign"
				success message = ""
				)
				Description
				(
					width = 300px
				)
				Added_Time as "Created On"
				Account
				(
					view = All_Accounts
				)
				Caller
				(
					view = All_Callers
				)
				Product
				(
					view = Products_Report
				)
				Case_ID as "Case ID"
				Source
				Priority
			)
			filters
			(
				Source
			)
			group by
			(
				Source ascending
			)
			options
			(
				icon = "database"
	 		)
			conditional formatting
			(
				"Low Priority"
				{
				condition = (Priority == "Low")
				fields = [Priority]
				format = "font-weight:bold;color:#47b82b;background-color:#faffff;"
				}
				"High Priority"
				{
				condition = (Priority == "High")
				fields = [Priority]
				format = "font-weight:bold;color:#ff0000;background-color:#ffffff;"
				}
				"Normal Priority"
				{
				condition = (Priority == "Normal")
				fields = [Priority]
				format = "font-weight:bold;color:#c2b206;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Assign"
							Title
							Description
							Added_Time as "Created On"
							Account
							Caller
							Product
							Case_ID as "Case ID"
							Source
							Priority
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Assign"
							Title
							Description
							Added_Time as "Created On"
							Account
							Caller
							Product
							Case_ID as "Case ID"
							Source
							Priority
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Open_Cases
		{
			displayName = "My Open Cases"
			show all rows from Add_Case  [Case_Owner.Email == zoho.loginuserid && Case_Status == "" || Case_Status == "Open" || Case_Status == "Pending"]  
			(
				Case_ID as "Case ID"
				Account
				(
					view = All_Accounts
				)
				custom action "Case View"
				(
	  			workflow = Case_View
				column header = "Case View"
				success message = ""
				)
				Caller
				(
					view = All_Callers
				)
				Title
				Case_Owner as "Case Owner"
				(
					view = All_Employees
				)
				Case_Status as "Case Status"
				Due_Time as "Due Time"
				Priority
			)
			filters
			(
				Source
				"Overdue Cases"  :  Due_Time < now && Case_Status != "Closed"
			)
			sort by
			(
				Case_ID descending
			)
			options
			(
				icon = "database"
	 		)
			conditional formatting
			(
				"Low Priority"
				{
				condition = (Priority == "Low")
				fields = [Priority]
				format = "font-weight:bold;color:#47b82b;background-color:#faffff;"
				}
				"High Priority"
				{
				condition = (Priority == "High")
				fields = [Priority]
				format = "font-weight:bold;color:#ff0000;background-color:#ffffff;"
				}
				"Normal Priority"
				{
				condition = (Priority == "Normal")
				fields = [Priority]
				format = "font-weight:bold;color:#c2b206;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
				"Case View"
							Account
							Caller
							Title
							Case_Owner as "Case Owner"
							Case_Status as "Case Status"
							Due_Time as "Due Time"
							Priority
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
				"Case View"
							Account
							Caller
							Title
							Case_Owner as "Case Owner"
							Case_Status as "Case Status"
							Due_Time as "Due Time"
							Priority
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Cases
		{
			displayName = "My Cases"
			show all rows from Add_Case  [Case_Owner.Email == zoho.loginuserid || Account.Email == zoho.loginuserid || Caller.Email == zoho.loginuserid]  
			(
				Case_ID as "Case ID"
				custom action "Case View"
				(
	  			workflow = Case_View1
				column header = "Case View"
				success message = ""
				)
				Account
				(
					view = All_Accounts
				)
				Caller
				(
					view = All_Callers
				)
				Product
				(
					view = Products_Report
				)
				Title
				Case_Owner as "Case Owner"
				(
					view = All_Employees
				)
				Case_Status as "Case Status"
				Due_Time as "Due Time"
				Priority
			)
			filters
			(
				Source
				Case_Status
				"Overdue Cases"  :  Due_Time < now && Case_Status != "Closed"
			)
			group by
			(
				Case_Status ascending
			)
			options
			(
				icon = "table"
	 		)
			conditional formatting
			(
				"Low Priority"
				{
				condition = (Priority == "Low")
				fields = [Priority]
				format = "font-weight:bold;color:#47b82b;background-color:#faffff;"
				}
				"High Priority"
				{
				condition = (Priority == "High")
				fields = [Priority]
				format = "font-weight:bold;color:#ff0000;background-color:#ffffff;"
				}
				"Normal Priority"
				{
				condition = (Priority == "Normal")
				fields = [Priority]
				format = "font-weight:bold;color:#c2b206;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Case View"
							Case_ID as "Case ID"
							Account
							Caller
							Product
							Title
							Case_Owner as "Case Owner"
							Case_Status as "Case Status"
							Due_Time as "Due Time"
							Priority
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Case View"
							Case_ID as "Case ID"
							Account
							Caller
							Product
							Title
							Case_Owner as "Case Owner"
							Case_Status as "Case Status"
							Due_Time as "Due Time"
							Priority
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Callbacks
		{
			displayName = "My Callbacks"
			show all rows from Tasks  [Owner.Email == zoho.loginuserid || Added_User == zoho.loginuser || Owner.Manager_Email == zoho.loginuserid || Account.Email == zoho.loginuserid]  
			(
				Status
				Case
				(
					view = My_Cases
				)
				custom action "Close"
				(
	  			workflow = Close
				column header = "Close"
				success message = ""
				condition = (Status != "Closed")
				)
				Scheduled_Time as "Scheduled at"
				Task_Name as "Description"
				Remarks as "Other Remarks"
				Owner
			)
			filters
			(
				Owner
				Status
				"Future Callbacks"  :  Scheduled_Time > zoho.currenttime && Status != "Closed"
				"Overdue Callbacks"  :  Scheduled_Time < zoho.currenttime && Status != "Closed"
			)
			group by
			(
				Status ascending
			)
			options
			(
				icon = "table"
	 		)
			permission
			(
				add = true
				edit = true
			)
			conditional formatting
			(
				"Future Callbacks"
				{
				condition = (Scheduled_Time > zoho.currenttime && Status != "Closed")
				fields = [Scheduled_Time, Task_Name]
				format = "font-weight:bold;color:#ffffff;background-color:#0cf22f;"
				}
				"Overdue Callbacks"
				{
				condition = (Scheduled_Time < zoho.currenttime && Status != "Closed")
				fields = [Scheduled_Time, Task_Name]
				format = "font-weight:bold;color:#ffffff;background-color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Status
				"Close"
							Case
							Scheduled_Time as "Scheduled at"
							Task_Name as "Description"
							Remarks as "Other Remarks"
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Status
				"Close"
							Case
							Scheduled_Time as "Scheduled at"
							Task_Name as "Description"
							Remarks as "Other Remarks"
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Team_s_Open_Cases
		{
			displayName = "My Team's Open Cases "
			show all rows from Add_Case  [Case_Status != "Closed" && Department.Manager_Email == zoho.loginuserid || Case_Owner.Manager_Email == zoho.loginuserid]  
			(
				Case_ID as "Case ID"
				custom action "Case View"
				(
	  			workflow = Case_View2
				column header = "Case View"
				success message = ""
				)
				Account
				(
					view = All_Accounts
				)
				Caller
				(
					view = All_Callers
				)
				Title
				Case_Owner as "Case Owner"
				(
					view = All_Employees
				)
				Due_Time as "Due Time"
				Priority
			)
			filters
			(
				Source
				Case_Status
			)
			options
			(
				icon = "table"
	 		)
			conditional formatting
			(
				"Low Priority"
				{
				condition = (Priority == "Low")
				fields = [Priority]
				format = "font-weight:bold;color:#47b82b;background-color:#faffff;"
				}
				"High Priority"
				{
				condition = (Priority == "High")
				fields = [Priority]
				format = "font-weight:bold;color:#ff0000;background-color:#ffffff;"
				}
				"Normal Priority"
				{
				condition = (Priority == "Normal")
				fields = [Priority]
				format = "font-weight:bold;color:#c2b206;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Case View"
							Case_ID as "Case ID"
							Account
							Caller
							Title
							Case_Owner as "Case Owner"
							Due_Time as "Due Time"
							Priority
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Case View"
							Case_ID as "Case ID"
							Account
							Caller
							Title
							Case_Owner as "Case Owner"
							Due_Time as "Due Time"
							Priority
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Team_s_Cases
		{
			displayName = "My Team's Cases "
			show all rows from Add_Case  [Department.Manager_Email == zoho.loginuserid || Case_Owner.Manager_Email == zoho.loginuserid || Case_Owner.Email == zoho.loginuserid]  
			(
				Case_Status as "Case Status"
				Case_ID as "Case ID"
				custom action "Case View"
				(
	  			workflow = Case_View3
				column header = "Case View"
				success message = ""
				)
				Account
				(
					view = All_Accounts
				)
				Caller
				(
					view = All_Callers
				)
				Title
				Case_Owner as "Case Owner"
				(
					view = All_Employees
				)
				Due_Time as "Due Time"
				Priority
			)
			filters
			(
				Source
				Case_Status
			)
			group by
			(
				Case_Status ascending
			)
			options
			(
				icon = "database"
	 		)
			conditional formatting
			(
				"Low Priority"
				{
				condition = (Priority == "Low")
				fields = [Priority]
				format = "font-weight:bold;color:#47b82b;background-color:#faffff;"
				}
				"High Priority"
				{
				condition = (Priority == "High")
				fields = [Priority]
				format = "font-weight:bold;color:#ff0000;background-color:#ffffff;"
				}
				"Normal Priority"
				{
				condition = (Priority == "Normal")
				fields = [Priority]
				format = "font-weight:bold;color:#c2b206;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case_Status as "Case Status"
				"Case View"
							Case_ID as "Case ID"
							Account
							Caller
							Title
							Case_Owner as "Case Owner"
							Due_Time as "Due Time"
							Priority
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case_Status as "Case Status"
				"Case View"
							Case_ID as "Case ID"
							Account
							Caller
							Title
							Case_Owner as "Case Owner"
							Due_Time as "Due Time"
							Priority
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Team_Callbacks
		{
			displayName = "My Team Callbacks"
			show all rows from Tasks  [Added_User == zoho.loginuser || Owner.Manager_Email == zoho.loginuserid]  
			(
				Status
				custom action "Close"
				(
	  			workflow = Close1
				column header = "Close"
				success message = ""
				condition = (Status != "Closed")
				)
				Case
				(
					view = My_Cases
				)
				Scheduled_Time as "Scheduled at"
				Task_Name as "Description"
				Remarks as "Other Remarks"
				Owner
				Added_User as "Created By"
			)
			filters
			(
				Owner
				Status
				"Future Callbacks"  :  Scheduled_Time > zoho.currenttime && Status != "Closed"
				"Overdue Callbacks"  :  Scheduled_Time < zoho.currenttime && Status != "Closed"
			)
			group by
			(
				Status ascending
			)
			options
			(
				icon = "database"
	 		)
			permission
			(
				add = true
				edit = true
			)
			conditional formatting
			(
				"Future Callbacks"
				{
				condition = (Scheduled_Time > zoho.currenttime && Status != "Closed")
				fields = [Scheduled_Time, Task_Name]
				format = "font-weight:bold;color:#ffffff;background-color:#0cf22f;"
				}
				"Overdue Callbacks"
				{
				condition = (Scheduled_Time < zoho.currenttime && Status != "Closed")
				fields = [Scheduled_Time, Task_Name]
				format = "font-weight:bold;color:#ffffff;background-color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Close"
							Status
							Case
							Scheduled_Time as "Scheduled at"
							Task_Name as "Description"
							Remarks as "Other Remarks"
							Owner
							Added_User as "Created By"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Close"
							Status
							Case
							Scheduled_Time as "Scheduled at"
							Task_Name as "Description"
							Remarks as "Other Remarks"
							Owner
							Added_User as "Created By"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Overdue_Cases
		{
			displayName = "Overdue Cases"
			show all rows from Add_Case  [Due_Time < zoho.currenttime && Case_Status != "Closed"]  
			(
				Case_ID as "Case ID"
				Account
				(
					view = All_Accounts
				)
				custom action "Case View"
				(
	  			workflow = Case_View4
				column header = "Case View"
				success message = ""
				)
				Caller
				(
					view = All_Callers
				)
				Title
				Case_Owner as "Case Owner"
				(
					view = All_Employees
				)
				Case_Status as "Case Status"
				Priority
				Month
				week
			)
			group by
			(
				Case_Owner ascending
			)
			options
			(
				icon = "database"
	 		)
			conditional formatting
			(
				"Low Priority"
				{
				condition = (Priority == "Low")
				fields = [Priority]
				format = "font-weight:bold;color:#47b82b;background-color:#faffff;"
				}
				"High Priority"
				{
				condition = (Priority == "High")
				fields = [Priority]
				format = "font-weight:bold;color:#ff0000;background-color:#ffffff;"
				}
				"Normal Priority"
				{
				condition = (Priority == "Normal")
				fields = [Priority]
				format = "font-weight:bold;color:#c2b206;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
				"Case View"
							Account
							Caller
							Title
							Case_Owner as "Case Owner"
							Case_Status as "Case Status"
							Priority
							Month
							week
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
				"Case View"
							Account
							Caller
							Title
							Case_Owner as "Case Owner"
							Case_Status as "Case Status"
							Priority
							Month
							week
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Open_Cases
		{
			displayName = "All Open Cases"
			show all rows from Add_Case  [Case_Status != "Closed" && Case_Status == "Open"]  
			(
				Case_ID as "Case ID"
				custom action "Case View"
				(
	  			workflow = Case_View5
				column header = "Case View"
				success message = ""
				)
				Account
				(
					view = All_Accounts
				)
				Caller
				(
					view = All_Callers
				)
				Product
				Title
				Description
				Case_Owner as "Case Owner"
				(
					view = All_Employees
				)
				Due_Time as "Due Time"
				Case_Status as "Case Status"
				Priority
				Source
			)
			filters
			(
				Source
				Case_Status
				Case_Owner
				"Overdue Cases"  :  Due_Time < now && Case_Status != "Closed"
			)
			group by
			(
				Case_Owner ascending
			)
			options
			(
				icon = "database"
	 		)
			conditional formatting
			(
				"Low Priority"
				{
				condition = (Priority == "Low")
				fields = [Priority]
				format = "font-weight:bold;color:#47b82b;background-color:#faffff;"
				}
				"High Priority"
				{
				condition = (Priority == "High")
				fields = [Priority]
				format = "font-weight:bold;color:#ff0000;background-color:#ffffff;"
				}
				"Normal Priority"
				{
				condition = (Priority == "Normal")
				fields = [Priority]
				format = "font-weight:bold;color:#c2b206;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Case View"
							Case_ID as "Case ID"
							Account
							Caller
							Product
							Title
							Description
							Case_Owner as "Case Owner"
							Due_Time as "Due Time"
							Case_Status as "Case Status"
							Priority
							Source
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Case View"
							Case_ID as "Case ID"
							Account
							Caller
							Product
							Title
							Description
							Case_Owner as "Case Owner"
							Due_Time as "Due Time"
							Case_Status as "Case Status"
							Priority
							Source
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Escalated_Cases
		{
			displayName = "Escalated Cases"
			show all rows from Add_Case  [Case_Status == "Escalated"]  
			(
				Case_ID as "Case ID"
				Account
				(
					view = All_Accounts
				)
				custom action "Case View"
				(
	  			workflow = Case_View6
				column header = "Case View"
				success message = ""
				)
				Caller
				(
					view = All_Callers
				)
				Product
				(
					view = Products_Report
				)
				Title
				Description
				Department
				(
					view = Departments_View
				)
				Case_Owner as "Case Owner"
				(
					view = All_Employees
				)
				Case_Status as "Case Status"
				Due_Time as "Due Time"
				Priority
				Source
			)
			filters
			(
				Source
			)
			options
			(
				icon = "table"
	 		)
			conditional formatting
			(
				"Low Priority"
				{
				condition = (Priority == "Low")
				fields = [Priority]
				format = "font-weight:bold;color:#47b82b;background-color:#faffff;"
				}
				"High Priority"
				{
				condition = (Priority == "High")
				fields = [Priority]
				format = "font-weight:bold;color:#ff0000;background-color:#ffffff;"
				}
				"Normal Priority"
				{
				condition = (Priority == "Normal")
				fields = [Priority]
				format = "font-weight:bold;color:#c2b206;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
				"Case View"
							Account
							Caller
							Product
							Title
							Description
							Department
							Case_Owner as "Case Owner"
							Case_Status as "Case Status"
							Due_Time as "Due Time"
							Priority
							Source
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
				"Case View"
							Account
							Caller
							Product
							Title
							Description
							Department
							Case_Owner as "Case Owner"
							Case_Status as "Case Status"
							Due_Time as "Due Time"
							Priority
							Source
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Cases
		{
			displayName = "All Cases"
			show all rows from Add_Case    
			(
				Case_ID as "Case ID"
				custom action "Case View"
				(
	  			workflow = Case_View7
				column header = "Case View"
				success message = ""
				)
				Account
				(
					view = All_Accounts
				)
				Caller
				(
					view = All_Callers
				)
				Title
				Department
				(
					view = Departments_View
				)
				Case_Owner as "Case Owner"
				(
					view = All_Employees
				)
				Case_Status as "Case Status"
				Source
				Priority
			)
			filters
			(
				Source
				Case_Status
				"Overdue Cases"  :  Due_Time < now && Case_Status != "Closed"
			)
			group by
			(
				Case_Status ascending
			)
			sort by
			(
				Case_ID ascending
			)
			options
			(
				icon = "table"
	 		)
			conditional formatting
			(
				"Low Priority"
				{
				condition = (Priority == "Low")
				fields = [Priority]
				format = "font-weight:bold;color:#47b82b;background-color:#faffff;"
				}
				"High Priority"
				{
				condition = (Priority == "High")
				fields = [Priority]
				format = "font-weight:bold;color:#ff0000;background-color:#ffffff;"
				}
				"Normal Priority"
				{
				condition = (Priority == "Normal")
				fields = [Priority]
				format = "font-weight:bold;color:#c2b206;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
				"Case View"
							Account
							Caller
							Title
							Department
							Case_Owner as "Case Owner"
							Case_Status as "Case Status"
							Source
							Priority
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
				"Case View"
							Account
							Caller
							Title
							Department
							Case_Owner as "Case Owner"
							Case_Status as "Case Status"
							Source
							Priority
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Callbacks
		{
			displayName = "All Callbacks"
			show all rows from Tasks    
			(
				Status
				Case
				Scheduled_Time as "Scheduled at"
				Task_Name as "Description"
				Remarks as "Other Remarks"
				Owner
			)
			filters
			(
				Owner
				Status
				"Future Callbacks"  :  Scheduled_Time > zoho.currenttime && Status != "Closed"
				"Overdue Callbacks"  :  Scheduled_Time < zoho.currenttime && Status != "Closed"
			)
			group by
			(
				Status ascending
			)
			options
			(
				icon = "database"
	 		)
			permission
			(
				add = true
				edit = true
			)
			conditional formatting
			(
				"Future Callbacks"
				{
				condition = (Scheduled_Time > zoho.currenttime && Status != "Closed")
				fields = [Scheduled_Time, Task_Name]
				format = "font-weight:bold;color:#ffffff;background-color:#0cf22f;"
				}
				"Overdue Callbacks"
				{
				condition = (Scheduled_Time < zoho.currenttime && Status != "Closed")
				fields = [Scheduled_Time, Task_Name]
				format = "font-weight:bold;color:#ffffff;background-color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Status
							Case
							Scheduled_Time as "Scheduled at"
							Task_Name as "Description"
							Remarks as "Other Remarks"
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Status
							Case
							Scheduled_Time as "Scheduled at"
							Task_Name as "Description"
							Remarks as "Other Remarks"
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Cases_History
		{
			displayName = "All Cases History"
			show all rows from Add_Case    
			(
				Case_ID as "Case ID"
				Caller
				(
					view = All_Callers
				)
				Title
				Added_Time as "Added on"
				Modified_Time as "Last modified on"
				Modified_User as "Last modified by"
			)
			filters
			(
				Source
				Case_Status
			)
			options
			(
				icon = "database"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
							Caller
							Title
							Added_Time as "Added on"
							Modified_Time as "Last modified on"
							Modified_User as "Last modified by"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
							Caller
							Title
							Added_Time as "Added on"
							Modified_Time as "Last modified on"
							Modified_User as "Last modified by"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Add_Case
		{
			displayname = "Add Case"
			success message = "Case Added Successfully!"
			field alignment = left
			feature property = 32
			Case_ID
			(
    			type = autonumber
				displayname = "Case ID"
				start index = 1
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Account
			(
				type = picklist
				values  = Add_Account.ID
    			displayformat = [Company_Name]
				allow new entries = true
				[
					displayname = "New"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Caller
			(
				type = picklist
				values  = Callers[Associated_Account == input.Account && Associated_Account is not null].ID
    			displayformat = [Name]
				allow new entries = true
				[
					displayname = ""
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 300px
			)
			contactHistory
			(
    			type = plaintext
				value = "<div align=\"center\" style=\"color: green\"><strong>Customer Info</strong><br /> <strong>Name:</strong>&nbsp;<br /> <strong>Email:&nbsp;<br /> Phone:&nbsp;<br /> Designation:&nbsp;<br /> <br /> </strong></div> <div style=\"color: orange; float: left\"><strong> Pending Requests: </strong> <a id=\"hoverC\" style=\"text-decoration: none\">0</a></div> <div style=\"color: orange; float: right\"><strong>Total Requests: </strong> <a id=\"hoverC\" style=\"text-decoration: none\">0</a></div>"
	 			row = 1
	 			column = 1   
				width = 300px
			)
			must have Title
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Description
			(
    			type = textarea
				height = 200px
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Source
			(
				type = radiobuttons
				values = {"Call", "Email", "Social Media", "Website"}
				initial value = "Call"
				layout = 2
				others option = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Product
			(
				type = picklist
				values  = Products.ID
    			displayformat = [Name]
				allow new entries = true
				[
					displayname = "New"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Department
			(
				type = picklist
				values  = Departments.ID
    			displayformat = [Name]
				allow new entries = true
				[
					displayname = "New"
				]
				searchable = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Case_Owner
			(
				type = picklist
				displayname = "Case Owner"
				values  = Employees[Department == input.Department].ID
    			displayformat = [" " + FirstName + " " + LastName]
				allow new entries = true
				[
					displayname = "Add New"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Priority
			(
				type = radiobuttons
				values = {"High", "Normal", "Low"}
				initial value = "Normal"
				layout = 3
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Case_Status
			(
				type = picklist
				displayname = "Case Status"
				values = {"Open", "Pending", "Escalated", "Closed"}
				initial value = "Open"
				others option = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Attachments
			(
				type = grid
				values  = Case_Attachments.ID
    			bidirectional = Case_ID
	 			row = 1
	 			column = 1   
				width = 450px
			)
			Start_Time
			(
    			type = datetime
				displayname = "Case Start Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Resolved_at
			(
    			type = datetime
				displayname = "Resolved at"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
				private = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Resolved_By
			(
				type = picklist
				displayname = "Resolved By"
				values  = Employees.ID
    			displayformat = [FirstName + " - " + LastName]
				allow new entries = true
				[
					displayname = "Add New"
				]
				searchable = true
				private = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Due_Time
			(
    			type = datetime
				displayname = "Due Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Days
			(
				type = number
				private = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Hours
			(
				type = number
				private = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Minutes
			(
				type = number
				private = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Duration
			(
    			type = formula
				value =  if(Days > 0,input.Days + "d : ","") + if(Hours > 0,input.Hours + "h : ","") + if(Minutes > 0,input.Minutes + "m : ","") + if(Seconds > 0,input.Seconds + "s : ","")
				visibility = false
				format = plaintext
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Seconds
			(
				type = number
				private = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Month
			(
    			type = formula
				value =  input.Start_Time.getMonth()
				visibility = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
			week
			(
    			type = formula
				displayname = "Week"
				value =  input.Start_Time.getWeekOfYear()
				visibility = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Year
			(
    			type = formula
				value =  input.Start_Time.getYear()
				visibility = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Handling_Time
			(
    			type = formula
				displayname = "Handling Time"
				value =  if(Case_Status == "Closed",(input.Resolved_at - ifnull(input.Start_Time,input.Added_Time)),0)
				visibility = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "plus"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Web_to_Case
		{
			displayname = "Web to Case Form"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
			must have Name
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = 200px
			)
			must have Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Phone_Number
			(
    			type = text
				displayname = "Phone Number"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Product
			(
				type = picklist
				values  = Products.ID
    			displayformat = [Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Title
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Problem
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Source
			(
				type = radiobuttons
				values = {"Call", "Email", "Social Media", "Website"}
				initial value = "Website"
				layout = 2
				others option = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			must have Case_Status
			(
				type = picklist
				displayname = "Case Status"
				values = {"Pending", "Open", "Escalated", "Closed"}
				initial value = "Pending"
				others option = true
	 			row = 1
	 			column = 1   
				width = 200px
			)
	
			customize
			(
				icon = "plus-square-o"
			)
			actions
			{
				Submit
				(
   					type = button
   					displayname = "Submit"
				)
			}
		}
	}
	section My_Data
	{
		displayname= "My Data"
		icon = "user"
		summary My_Profile_Employee
		{
			displayName = "Self Service"
			show all rows from Employees  [Email == zoho.loginuserid]  
			(
				EmpID as "Employee ID"
				FirstName as "First Name"
				LastName as "Last Name"
				Email
				WorkPhone as "Phone"
				Extn
				Photo
				Billing_Rate as "Billing Rate"
				Department
				Designation
			)
			options
			(
				display rows = 1
				display records per row = 2
				icon = "male"
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							EmpID as "Employee ID"
							FirstName as "First Name"
							LastName as "Last Name"
							Email
							WorkPhone as "Phone"
							Extn
							Photo
							Billing_Rate as "Billing Rate"
							Department
							Designation
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							EmpID as "Employee ID"
							FirstName as "First Name"
							LastName as "Last Name"
							Email
							WorkPhone as "Phone"
							Extn
							Photo
							Billing_Rate as "Billing Rate"
							Department
							Designation
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Team_Members
		{
			displayName = "My Team Members"
			show all rows from Employees  [Department.Manager_Email == zoho.loginuserid || Manager_Email == zoho.loginuserid]  
			(
				FirstName as "First Name"
				LastName as "Last Name"
				Email
				WorkPhone as "Phone"
				EmpID as "Employee ID"
				Extn
				Photo
				Billing_Rate as "Billing Rate"
				Designation
				Department
			)
			options
			(
				icon = "users"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							FirstName as "First Name"
							LastName as "Last Name"
							Email
							WorkPhone as "Phone"
							EmpID as "Employee ID"
							Extn
							Photo
							Billing_Rate as "Billing Rate"
							Designation
							Department
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							FirstName as "First Name"
							LastName as "Last Name"
							Email
							WorkPhone as "Phone"
							EmpID as "Employee ID"
							Extn
							Photo
							Billing_Rate as "Billing Rate"
							Designation
							Department
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Customers
	{
		icon = "users"
		summary My_Profile_Customers
		{
			displayName = "Self Service"
			show all rows from Add_Account  [Email == zoho.loginuserid || Associated_Contacts.Email == zoho.loginuserid]  
			(
				First_Name as "First Name"
				Last_Name as "Last Name"
				Email
				Extn
				Direct
				Mobile
				Job_Title as "Designation"
				Active as "Active?"
				Company_Name as "Company Name"
				Website
				Location
				Address as "Remarks"
			)
			options
			(
				display rows = 1
				display records per row = 2
				icon = "table"
			)
			permission
			(
				add = true
				edit = true
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							First_Name as "First Name"
							Last_Name as "Last Name"
							Email
							Extn
							Direct
							Mobile
							Job_Title as "Designation"
							Active as "Active?"
							Company_Name as "Company Name"
							Website
							Location
							Address as "Remarks"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							First_Name as "First Name"
							Last_Name as "Last Name"
							Email
							Extn
							Direct
							Mobile
							Job_Title as "Designation"
							Active as "Active?"
							Company_Name as "Company Name"
							Website
							Location
							Address as "Remarks"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Cases_Customers
		{
			displayName = "My Cases"
			show all rows from Add_Case  [Caller.Email == zoho.loginuserid || Account.Email == zoho.loginuserid || Account.Associated_Emails.contains(zoho.loginuserid)]  
			(
				Case_ID as "Case ID"
				custom action "Case View"
				(
	  			workflow = Case_View8
				column header = "Case View"
				success message = ""
				)
				Title
				Description
				(
					width = 80px
				)
				Product
				(
					view = Products_Report
				)
				Department
				(
					view = Departments_View
				)
				Case_Owner as "Case Owner"
				(
					view = All_Employees
				)
				Priority
				Case_Status as "Case Status"
				Caller
				(
					view = All_Callers
				)
			)
			filters
			(
				Source
				Case_Status
			)
			group by
			(
				Case_Status ascending
			)
			options
			(
				icon = "database"
	 		)
			conditional formatting
			(
				"Low Priority"
				{
				condition = (Priority == "Low")
				fields = [Priority]
				format = "font-weight:bold;color:#47b82b;background-color:#faffff;"
				}
				"High Priority"
				{
				condition = (Priority == "High")
				fields = [Priority]
				format = "font-weight:bold;color:#ff0000;background-color:#ffffff;"
				}
				"Normal Priority"
				{
				condition = (Priority == "Normal")
				fields = [Priority]
				format = "font-weight:bold;color:#c2b206;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Case View"
							Case_ID as "Case ID"
							Title
							Description
							Product
							Department
							Case_Owner as "Case Owner"
							Priority
							Case_Status as "Case Status"
							Caller
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Case View"
							Case_ID as "Case ID"
							Title
							Description
							Product
							Department
							Case_Owner as "Case Owner"
							Priority
							Case_Status as "Case Status"
							Caller
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Callers
		{
			displayName = "My Callers"
			show all rows from Callers  [Associated_Account.Email == zoho.loginuserid]  
			(
				Name
				custom action "Invite to Portal"
				(
	  			workflow = Invite_to_Portal
				column header = "Invite to Portal"
				success message = ""
				condition = (Associated_Account.Enable_Portal && Associated_Account.Invite_Others)
				)
				Email
				Phone as "Callback Number"
				Best_Time_to_Reach as "Best Time to Reach"
			)
			options
			(
				icon = "table"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Name
				"Invite to Portal"
							Email
							Phone as "Callback Number"
							Best_Time_to_Reach as "Best Time to Reach"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
				"Invite to Portal"
							Email
							Phone as "Callback Number"
							Best_Time_to_Reach as "Best Time to Reach"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Accounts
		{
			displayName = "All Accounts"
			show all rows from Add_Account    
			(
				Company_Name as "Company Name"
				custom action "View Profile"
				(
	  			workflow = View_Profile
				column header = "View Profile"
				success message = ""
				)
				Email
				First_Name as "First Name"
				Last_Name as "Last Name"
				Associated_Contacts.Name as "Company Contacts"
				(
					view = All_Callers
				)
				Job_Title as "Designation"
				Mobile
				Direct
				Extn
				Active as "Active?"
				Website
				Location
				Address as "Remarks"
			)
			filters
			(
				"Active Accounts"  :  Active
			)
			options
			(
				icon = "table"
	 		)
			permission
			(
				add = true
				edit = true
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View Profile"
							Company_Name as "Company Name"
							Email
							First_Name as "First Name"
							Last_Name as "Last Name"
							Associated_Contacts.Name as "Company Contacts"
							Job_Title as "Designation"
							Mobile
							Direct
							Extn
							Active as "Active?"
							Website
							Location
							Address as "Remarks"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View Profile"
							Company_Name as "Company Name"
							Email
							First_Name as "First Name"
							Last_Name as "Last Name"
							Associated_Contacts.Name as "Company Contacts"
							Job_Title as "Designation"
							Mobile
							Direct
							Extn
							Active as "Active?"
							Website
							Location
							Address as "Remarks"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Callers
		{
			displayName = "All Callers"
			show all rows from Callers    
			(
				Name
				Email
				custom action "Invite to Portal"
				(
	  			workflow = Invite_to_Portal1
				column header = "Invite to Portal"
				success message = ""
				condition = (Associated_Account.Enable_Portal && Associated_Account.Invite_Others)
				)
				Phone as "Callback Number"
				Best_Time_to_Reach as "Best Time to Reach"
				Associated_Account as "Associated Account"
				(
					view = All_Accounts
				)
			)
			group by
			(
				Associated_Account ascending
			)
			options
			(
				icon = "table"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Name
				"Invite to Portal"
							Email
							Phone as "Callback Number"
							Best_Time_to_Reach as "Best Time to Reach"
							Associated_Account as "Associated Account"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
				"Invite to Portal"
							Email
							Phone as "Callback Number"
							Best_Time_to_Reach as "Best Time to Reach"
							Associated_Account as "Associated Account"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Employees
	{
		icon = "users"
		list All_Employees
		{
			displayName = "All Employees"
			template = Test1
			print template = Test1
			show all rows from Employees    
			(
				Employee_Type as "Employee Type"
				FirstName as "First Name"
				LastName as "Last Name"
				EmpID as "Employee ID"
				Email
				Extn
				WorkPhone as "Phone"
				Billing_Rate as "BillingRate"
				Department
				(
					view = Departments_View
				)
				Designation
				Manager
				(
					view = All_Managers
				)
			)
			group by
			(
				Department ascending
			)
			options
			(
				icon = "database"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Employee_Type as "Employee Type"
							FirstName as "First Name"
							LastName as "Last Name"
							EmpID as "Employee ID"
							Email
							Extn
							WorkPhone as "Phone"
							Billing_Rate as "BillingRate"
							Department
							Designation
							Manager
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Employee_Type as "Employee Type"
							FirstName as "First Name"
							LastName as "Last Name"
							EmpID as "Employee ID"
							Email
							Extn
							WorkPhone as "Phone"
							Billing_Rate as "BillingRate"
							Department
							Designation
							Manager
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Managers
		{
			displayName = "All Managers"
			show all rows from Managers    
			(
				Department as "Departments"
				FirstName as "First Name"
				LastName as "Last Name"
				Email
				Extn
				WorkPhone as "Phone"
				Photo
				Billing_Rate as "Billing Rate"
				Designation
			)
			group by
			(
				Department ascending
			)
			options
			(
				icon = "database"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Department as "Departments"
							FirstName as "First Name"
							LastName as "Last Name"
							Email
							Extn
							WorkPhone as "Phone"
							Photo
							Billing_Rate as "Billing Rate"
							Designation
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Department as "Departments"
							FirstName as "First Name"
							LastName as "Last Name"
							Email
							Extn
							WorkPhone as "Phone"
							Photo
							Billing_Rate as "Billing Rate"
							Designation
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Departments_View
		{
			displayName = "All Departments"
			show all rows from Departments    
			(
				Name
				Manager as "Managers"
				(
					view = All_Managers
				)
				Manager_Email as "Manager Email"
				Employees
				(
					view = All_Employees
				)
			)
			options
			(
				icon = "database"
	 		)
			permission
			(
				add = true
				edit = true
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Name
							Manager as "Managers"
							Manager_Email as "Manager Email"
							Employees
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Manager as "Managers"
							Manager_Email as "Manager Email"
							Employees
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Solution
	{
		icon = "laptop"
		list All_Problems
		{
			displayName = "All Problems"
			show all rows from Add_a_Problem    
			(
				Problem
				Help_Text as "Help Text"
				Trouble_shooting_Questions as "Trouble shooting Questions"
				(
					view = All_Questions
				)
			)
			options
			(
				icon = "table"
	 		)
			permission
			(
				add = true
				edit = true
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Problem
							Help_Text as "Help Text"
							Trouble_shooting_Questions as "Trouble shooting Questions"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Problem
							Help_Text as "Help Text"
							Trouble_shooting_Questions as "Trouble shooting Questions"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Questions
		{
			displayName = "All Questions"
			show all rows from Add_a_Question    
			(
				Question as "Q"
				Help_Text as "Help Text"
			)
			options
			(
				icon = "table"
	 		)
			permission
			(
				add = true
				edit = true
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Question as "Q"
							Help_Text as "Help Text"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Question as "Q"
							Help_Text as "Help Text"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Questions_Map
		{
			displayName = "Questions Map"
			show all rows from QA_Map    
			(
				Parent_Question as "Parent Question"
				Child_Questions as "Child Questions"
			)
			options
			(
				icon = "table"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Parent_Question as "Parent Question"
							Child_Questions as "Child Questions"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Parent_Question as "Parent Question"
							Child_Questions as "Child Questions"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Troubleshooting_Log_Report
		{
			displayName = "Troubleshooting Logs"
			show all rows from Troubleshooting_Log    
			(
				Case
				(
					view = All_Cases
				)
				Problem
				custom action "Display in Portal"
				(
	  			workflow = Display_in_Portal
				column header = "Display in Portal"
				success message = ""
				condition = (Display_in_Portal == false)
				)
				Status
				Added_Time as "Added Time"
			)
			group by
			(
				Case ascending
			)
			options
			(
				icon = "database"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case
				"Display in Portal"
							Problem
							Status
							Added_Time as "Added Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case
				"Display in Portal"
							Problem
							Status
							Added_Time as "Added Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Troubleshooting_Logs_Customer
		{
			displayName = "Troubleshooting Logs for Customers"
			show all rows from Troubleshooting_Log  [Display_in_Portal]  
			(
				Case
				(
					view = All_Cases
				)
				Problem
				Status
				Added_Time as "Added Time"
			)
			group by
			(
				Case ascending
			)
			options
			(
				icon = "table"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case
							Problem
							Status
							Added_Time as "Added Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case
							Problem
							Status
							Added_Time as "Added Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Settings
	{
		icon = "cog"
		summary Case_Settings_Report
		{
			displayName = "Case Settings"
			show all rows from Case_Settings    
			(
				Send_Notification_Emails_to as "Send Notification Emails to"
				CC_escalated_cases_to as "CC escalated cases to"
				Notify_Employee as "Notify Employee when a case is assigned"
				Notify_Manager as "Notify Manager when a case is assigned to his/her Employess"
				Acknowledge_Contact_in_case_of as "Acknowledge Contact in case of"
				SLA_for_escalated_cases_in_hours as "SLA for escalated cases (in hours)"
				SLA_for_High_priority_cases as "SLA for High priority cases (in hours)"
				SLA_for_Low_priority_cases as "SLA for Low priority cases (in hours)"
				SLA_for_Normal_priority_cases as "SLA for Normal priority cases (in hours)"
				Enable_Attachments as "Enable Attachments"
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "table"
			)
			permission
			(
				add = true
				edit = true
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Send_Notification_Emails_to as "Send Notification Emails to"
							CC_escalated_cases_to as "CC escalated cases to"
							Notify_Employee as "Notify Employee when a case is assigned"
							Notify_Manager as "Notify Manager when a case is assigned to his/her Employess"
							Acknowledge_Contact_in_case_of as "Acknowledge Contact in case of"
							SLA_for_escalated_cases_in_hours as "SLA for escalated cases (in hours)"
							SLA_for_High_priority_cases as "SLA for High priority cases (in hours)"
							SLA_for_Low_priority_cases as "SLA for Low priority cases (in hours)"
							SLA_for_Normal_priority_cases as "SLA for Normal priority cases (in hours)"
							Enable_Attachments as "Enable Attachments"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Send_Notification_Emails_to as "Send Notification Emails to"
							CC_escalated_cases_to as "CC escalated cases to"
							Notify_Employee as "Notify Employee when a case is assigned"
							Notify_Manager as "Notify Manager when a case is assigned to his/her Employess"
							Acknowledge_Contact_in_case_of as "Acknowledge Contact in case of"
							SLA_for_escalated_cases_in_hours as "SLA for escalated cases (in hours)"
							SLA_for_High_priority_cases as "SLA for High priority cases (in hours)"
							SLA_for_Low_priority_cases as "SLA for Low priority cases (in hours)"
							SLA_for_Normal_priority_cases as "SLA for Normal priority cases (in hours)"
							Enable_Attachments as "Enable Attachments"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Tables
	{
		hide = true
		icon = "bars"
		form Add_a_Problem
		{
			displayname = "Add a Problem"
			success message = "Problem Recorded Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			must have unique Problem
			(
    			type = text
				maxchar = 227
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Help_Text
			(
    			type = richtext
				displayname = "Help Text"
				height = 198px
				toolbar = enable
				[
					style, font-color, background-color, alignment, link, bullets-and-numbering, quote, 
					font-size : {1, 2, 3, 4, 5, 6, 7},
					font-family : {"Serif", "Arial", "Courier New", "Georgia", "Tahoma", "Times New Roman", "Trebuchet", "Verdana", "Comic Sans Ms"}
				]
	 			row = 1
	 			column = 1   
				width = 270px
			)
			Trouble_shooting_Questions
			(
				type = list
				displayname = "Trouble shooting Questions"
				values  = Add_a_Question.ID
    			displayformat = [Question]
				allow new entries = true
				[
					displayname = "New"
				]
				searchable = true
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = 200px
			)
	
			customize
			(
				icon = "plus-square-o"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_a_Question
		{
			displayname = "Add a Question"
			success message = "Question Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			must have unique Question
			(
    			type = text
				maxchar = 254
	 			row = 1
	 			column = 1   
				width = 200px
			)
			must have Help_Text
			(
    			type = richtext
				displayname = "Help Text"
				height = 200px
				toolbar = enable
				[
					style, strike-through, font-color, background-color, alignment, link, bullets-and-numbering, quote, 
					font-size : {1, 2, 3, 4, 5, 6, 7},
					font-family : {"Serif", "Arial", "Courier New", "Georgia", "Tahoma", "Times New Roman", "Trebuchet", "Verdana", "Comic Sans Ms"}
				]
	 			row = 1
	 			column = 1   
				width = 382px
			)
	
			customize
			(
				icon = "plus"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form QA_Map
		{
			displayname = "QA Map Form"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			must have Parent_Question
			(
				type = picklist
				displayname = "Parent Question"
				values  = Add_a_Question.ID
    			displayformat = [Question]
				allow new entries = true
				[
					displayname = ""
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Child_Questions
			(
				type = list
				displayname = "Child Questions"
				values  = Add_a_Question.ID
    			displayformat = [Question]
				allow new entries = true
				[
					displayname = "New"
				]
				searchable = true
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = 206px
			)
	
			customize
			(
				icon = "plus-square"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Troubleshooting_Log
		{
			displayname = "Troubleshooting Log Form"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Case
			(
				type = picklist
				values  = Add_Case.ID
    			displayformat = [Case_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Account
			(
				type = picklist
				values  = Add_Account.ID
    			displayformat = [Company_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Caller
			(
				type = picklist
				values  = Callers.ID
    			displayformat = [Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Problem
			(
				type = picklist
				values  = Add_a_Problem.ID
    			displayformat = [Problem]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Status
			(
				type = radiobuttons
				values = {"Solved", "Not Solved"}
				layout = 2
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Display_in_Portal
			(
    			type = checkbox
				displayname = "Display in Portal"
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "plus-square-o"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Case_Settings
		{
			displayname = "Case Setting Form"
			success message = "Data Added Successfully!"
			field alignment = top
			feature property = 32
					hide = true
			Enable_Attachments
			(
    			type = checkbox
				displayname = "Enable Attachments"
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
			plain
			(
    			type = plaintext
				value = "<b><font color=\"#000099\">SLA (Service Level Agreement)</font></b>"
	 			row = 1
	 			column = 1   
				width = 300px
			)
			SLA_for_escalated_cases_in_hours
			(
				type = number
				displayname = "SLA for escalated cases (in hours)"
				initial value = 3
	 			row = 1
	 			column = 1   
				width = 200px
			)
			SLA_for_High_priority_cases
			(
				type = number
				displayname = "SLA for High priority cases (in hours)"
				initial value = 6
	 			row = 1
	 			column = 1   
				width = 200px
			)
			SLA_for_Normal_priority_cases
			(
				type = number
				displayname = "SLA for Normal priority cases (in hours)"
				initial value = 12
	 			row = 1
	 			column = 1   
				width = 200px
			)
			SLA_for_Low_priority_cases
			(
				type = number
				displayname = "SLA for Low priority cases (in hours)"
				initial value = 24
	 			row = 1
	 			column = 1   
				width = 200px
			)
			plain1
			(
    			type = plaintext
				value = "<b><font color=\"#000099\">Notification</font></b>"
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Notify_Employee
			(
    			type = checkbox
				displayname = "Notify Employee when a case is assigned"
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Notify_Manager
			(
    			type = checkbox
				displayname = "Notify Manager when a case is assigned to his/her Employess"
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Callback_Reminder
			(
    			type = checkbox
				displayname = "Callback Reminder"
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Acknowledge_Contact_in_case_of
			(
				type = checkboxes
				displayname = "Acknowledge Contact when"
				values = {"Case is Closed", "Case is Escalated", "Case is Created"}
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Send_Notification_Emails_to
			(
    			type = email
				displayname = "Send all nofitications to (separated by a comma)"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			CC_escalated_cases_to
			(
    			type = email
				displayname = "CC escalated cases to (separated by a comma)"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			plain2
			(
    			type = plaintext
				value = "<b><font color=\"#000099\">Portal</font></b>"
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Customer_Portal_Url
			(
    			type = text
				displayname = "Customer Portal Url"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Enable_Portal
			(
    			type = checkbox
				displayname = "Enable Portal"
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Allow_Clients_to_invite_Colleagues
			(
    			type = checkbox
				displayname = "Allow Clients to invite Colleagues"
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "plus"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		properties
		{
			total entries
			{
				allowed count = 1
			}
		}
		}
		form Case_Comments
		{
			displayname = "Case Comment Form"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			must have Case_ID
			(
				type = picklist
				displayname = "Case ID"
				values  = Add_Case.ID
    			displayformat = [Case_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Owner
			(
				type = picklist
				values  = Employees.ID
    			displayformat = [FirstName + " - " + LastName]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Caller
			(
				type = picklist
				values  = Callers.ID
    			displayformat = [Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Account
			(
				type = picklist
				values  = Add_Account.ID
    			displayformat = [Company_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Product
			(
				type = picklist
				values  = Products.ID
    			displayformat = [Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Comments
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Notify_Customer
			(
    			type = checkbox
				displayname = "Notify Customer"
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "plus-square-o"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Email_Cases
		{
			displayname = "Email Case Form"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			ZC_Subject
			(
    			type = text
				displayname = "Title"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			ZC_Content
			(
    			type = textarea
				displayname = "Description"
				height = 100px
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Case_Status
			(
				type = picklist
				displayname = "Case Status"
				values = {"Pending", "Open", "Escalated", "Closed"}
				initial value = "Pending"
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Source
			(
				type = radiobuttons
				values = {"Call", "Email", "Social Media", "Website"}
				initial value = "Email"
				layout = 2
				others option = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Related_Case
			(
				type = picklist
				displayname = "Related Case"
				values  = Add_Case.ID
    			displayformat = [Case_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Caller
			(
				type = picklist
				values  = Callers.ID
    			displayformat = [Email]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
	
			customize
			(
				icon = "plus-square"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Callers
		{
			displayname = "Add Caller"
			success message = "Caller Details Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			must have Name
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = 300px
			)
			must have Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Phone
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Best_Time_to_Reach
			(
    			type = text
				displayname = "Best Time to Reach"
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Other_Info
			(
    			type = textarea
				displayname = "Other Info"
				height = 75px
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Associated_Account
			(
				type = picklist
				displayname = "Associated Account"
				values  = Add_Account.ID
    			bidirectional = Associated_Contacts
    			displayformat = [Company_Name + "  -" + First_Name + "   " + Last_Name]
				allow new entries = true
				[
					displayname = "Add a new Account"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "plus-square"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Account
		{
			displayname = "Add Account"
			success message = "Account Added SuccessFully!"
			field alignment = top
			feature property = 32
					hide = true
			plain1
			(
    			type = plaintext
				value = "<strong><span style=\"color: rgb(0, 0, 255)\">Company Details :</span></strong>"
	 			row = 1
	 			column = 1   
				width = 300px
			)
			must have Company_Name
			(
    			type = text
				displayname = "Company Name"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Website
			(
    			type = url
				displayname = "Company Website"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Address
			(
    			type = textarea
				height = 75px
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Location
			(
				type = picklist
				values = {"Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming"}
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Active
			(
    			type = checkbox
				displayname = "Active?"
				initial value = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			plain2
			(
    			type = plaintext
				value = "<span style=\"color: rgb(0, 0, 255)\"><strong>Primary Contact Info :</strong></span>"
	 			row = 1
	 			column = 1   
				width = 300px
			)
			must have First_Name
			(
    			type = text
				displayname = "First Name"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Last_Name
			(
    			type = text
				displayname = "Last Name"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			must have unique Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Job_Title
			(
				type = picklist
				displayname = "Job Title"
				values = {"CEO", "CTO", "VP", "Director", "Manager"}
				others option = true
	 			row = 1
	 			column = 1   
				width = 200px
			)
			plain
			(
    			type = plaintext
				value = "<span style=\"color: rgb(0, 0, 255)\"><strong>Phone Numbers :</strong></span>"
	 			row = 1
	 			column = 2   
				width = 300px
			)
			Mobile
			(
    			type = text
	 			row = 1
	 			column = 2   
				width = 200px
			)
			Direct
			(
    			type = text
	 			row = 1
	 			column = 2   
				width = 200px
			)
			Extn
			(
    			type = text
				displayname = "Office (with Extn)"
	 			row = 1
	 			column = 2   
				width = 200px
			)
			Associated_Contacts
			(
				type = grid
				displayname = "All Associated Contacts"
				values  = Callers.ID
    			bidirectional = Associated_Account
				private = true
	 			row = 1
	 			column = 2   
				width = 300px
			)
			Enable_Portal
			(
    			type = checkbox
				displayname = "Enable Portal"
				initial value = true
	 			row = 1
	 			column = 2   
				width = 300px
			)
			Invite_Others
			(
    			type = checkbox
				displayname = "Invite Others"
				initial value = true
	 			row = 1
	 			column = 2   
				width = 300px
			)
			Associated_Emails
			(
    			type = textarea
				displayname = "Associated Emails"
				height = 100px
				private = true
	 			row = 1
	 			column = 2   
				width = 200px
			)
	
			customize
			(
				icon = "plus"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Departments
		{
			displayname = "Add Department"
			success message = ""
			field alignment = left
			feature property = 32
					hide = true
			unique Name
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Manager
			(
				type = picklist
				values  = Managers.ID
    			bidirectional = Department
    			displayformat = [FirstName + " - " + LastName]
				allow new entries = true
				[
					displayname = "Add New"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Manager_Email
			(
    			type = email
				displayname = "Manager Email"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Employees
			(
				type = list
				values  = Employees.ID
    			bidirectional = Department
    			displayformat = [FirstName]
				allow new entries = true
				[
					displayname = "Add New"
				]
				searchable = true
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = 200px
			)
	
			customize
			(
				icon = "plus"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Employees
		{
			displayname = "Add Employee"
			success message = "Employee Added SuccessFully!"
			field alignment = left
			feature property = 32
					hide = true
			Employee_Type
			(
				type = radiobuttons
				displayname = "Employee Type"
				values = {"Employee", "Manager", "Agent"}
				initial value = "Employee"
				layout = 3
	 			row = 1
	 			column = 1   
				width = 300px
			)
			must have FirstName
			(
    			type = text
				displayname = "First Name"
    			description
    			[
    				type = tooltip
    			 	message = "Web application"
    			]
	 			row = 1
	 			column = 1   
				width = 200px
			)
			must have LastName
			(
    			type = text
				displayname = "Last Name"
    			description
    			[
    				type = tooltip
    			 	message = "Web application"
    			]
	 			row = 1
	 			column = 1   
				width = 200px
			)
			must have unique Email
			(
    			type = text
    			description
    			[
    				type = tooltip
    			 	message = "Web application"
    			]
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Extn
			(
				type = number
	 			row = 1
	 			column = 1   
				width = 200px
			)
			WorkPhone
			(
    			type = text
				displayname = "Phone"
    			description
    			[
    				type = tooltip
    			 	message = "Web application"
    			]
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Designation
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Photo
			(
    			type = image
				source  = public_url,file
				aspect ratio = original
				camera = primary
				preview duration = 0
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Billing_Rate
			(
				displayname = "Billing Rate"
				type = USD
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Department
			(
				type = picklist
				values  = Departments.ID
    			bidirectional = Employees
    			displayformat = [" - " + Name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				searchable = true
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Manager
			(
				type = picklist
				values  = Managers[Department == input.Department].ID
    			displayformat = [FirstName + " - " + LastName]
				allow new entries = true
				[
					displayname = "Add new Manager"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Manager_Email
			(
    			type = email
				displayname = "Manager Email"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			EmpID
			(
    			type = autonumber
				displayname = "Employee ID"
				start index = 1
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "plus-square-o"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		print template
			{
				Test1
				{
						displayname = "Test"
						content = {"layout":"1","isFooterEnabled":false,"mainLayout":[{"elements":[{"type":"columns","element":{"split":"30,70","id":"elem_14ac971360d","elemStyle":"","collayouts":[{"colElements":[{"id":"elem_14ac9719852","type":"fields","element":{"valueStyle":"width: 50%;","valueTextStyle":"","fieldLayoutType":"1","labelText":"Photo","wrapperStyle":"","labelStyle":"width: 50%; display: none;","Label_Name":"Photo","labelTextStyle":""}}]},{"colElements":[{"id":"elem_14ac97206e4","type":"fields","element":{"valueStyle":"width: 50%;","valueTextStyle":"background-color: rgb(245, 235, 233);","fieldLayoutType":"2","labelText":"First Name","wrapperStyle":"","labelStyle":"width: 50%; background-color: rgb(255, 255, 255);","Label_Name":"FirstName","labelTextStyle":"background-color: rgb(255, 255, 255);"}},{"type":"text","element":{"id":"elem_14ac971360e","fields":[],"content":"<div>\n  <p>Your content goes here ..<\/p><\/div>"}}]}]}},{"type":"columns","element":{"split":"50,50","id":"elem_14ac97167d2","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_14ac97167d2","fields":[],"content":"<div>\n  <p>Your content goes here ..<\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_14ac97167d2","fields":[],"content":"<div>\n  <p>Your content goes here ..<\/p><\/div>"}}]}]}}],"id":1}],"resize":"default","templateStyle":"text-align: left; width:95%;margin: 0 auto;","isHeaderEnabled":false}
				}
			}
		}
		form Managers
		{
			displayname = "Add Manager"
			success message = "Manager Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			must have FirstName
			(
    			type = text
				displayname = "First Name"
    			description
    			[
    				type = tooltip
    			 	message = "Web application"
    			]
	 			row = 1
	 			column = 1   
				width = 200px
			)
			must have LastName
			(
    			type = text
				displayname = "Last Name"
    			description
    			[
    				type = tooltip
    			 	message = "Web application"
    			]
	 			row = 1
	 			column = 1   
				width = 200px
			)
			must have unique Email
			(
    			type = text
    			description
    			[
    				type = tooltip
    			 	message = "Web application"
    			]
	 			row = 1
	 			column = 1   
				width = 200px
			)
			WorkPhone
			(
    			type = text
				displayname = "Phone"
    			description
    			[
    				type = tooltip
    			 	message = "Web application"
    			]
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Extn
			(
				type = number
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Designation
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Photo
			(
    			type = image
				source  = public_url,file
				aspect ratio = original
				camera = primary
				preview duration = 0
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Billing_Rate
			(
				displayname = "Billing Rate"
				type = USD
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Department
			(
				type = picklist
				values  = Departments.ID
    			bidirectional = Manager
    			displayformat = [Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 200px
			)
	
			customize
			(
				icon = "plus-square"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Products
		{
			displayname = "Add Product"
			success message = "Product Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			must have unique Name
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Category
			(
				type = picklist
				values = {"Software", "Hardware"}
				others option = true
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Status
			(
				type = radiobuttons
				values = {"Available", "Deprecated"}
				layout = 2
				others option = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "plus-square-o"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Tasks
		{
			displayname = "Add Case Task"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			must have Case
			(
				type = picklist
				values  = Add_Case.ID
    			displayformat = [Case_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 300px
			)
			must have Task_Name
			(
    			type = text
				displayname = "Description"
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Scheduled_Time
			(
    			type = datetime
				displayname = "Scheduled Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = 300px
			)
			must have Owner
			(
				type = picklist
				values  = Employees.ID
    			displayformat = [FirstName + " - " + LastName]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Account
			(
				type = picklist
				values  = Add_Account.ID
    			displayformat = [Company_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Remarks
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = 300px
			)
			must have Status
			(
				type = picklist
				values = {"Open", "Pending", "Closed"}
				initial value = "Open"
				others option = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "plus-square-o"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Case_Attachments
		{
			displayname = "Case Attachment Form"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Case_ID
			(
				type = picklist
				displayname = "Case ID"
				values  = Add_Case.ID
    			bidirectional = Attachments
    			displayformat = [Case_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 200px
			)
			must have Description
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = 200px
			)
			File
			(
    			type = upload file
				displayname = "Attachment"
				browse = local_drive
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "plus-square"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Reports
	{
		hide = true
		icon = "bars"
		list Customer_Cases
		{
			displayName = "Customer Cases"
   			hide = true
			show all rows from Add_Case    
			(
				Case_ID as "Case ID"
				custom action "Case View"
				(
	  			workflow = Case_View9
				column header = "Case View"
				success message = ""
				)
				Account
				(
					view = All_Accounts
				)
				Caller
				(
					view = All_Callers
				)
				Title
				Start_Time as "Case Start Time"
				Case_Owner as "Case Owner"
				(
					view = All_Employees
				)
				Case_Status as "Case Status"
				Priority
				Month
				week
			)
			group by
			(
				Case_Status ascending
			)
			options
			(
				icon = "table"
	 		)
			conditional formatting
			(
				"Low Priority"
				{
				condition = (Priority == "Low")
				fields = [Priority]
				format = "font-weight:bold;color:#47b82b;background-color:#faffff;"
				}
				"High Priority"
				{
				condition = (Priority == "High")
				fields = [Priority]
				format = "font-weight:bold;color:#ff0000;background-color:#ffffff;"
				}
				"Normal Priority"
				{
				condition = (Priority == "Normal")
				fields = [Priority]
				format = "font-weight:bold;color:#c2b206;background-color:#ffffff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
				"Case View"
							Account
							Caller
							Title
							Start_Time as "Case Start Time"
							Case_Owner as "Case Owner"
							Case_Status as "Case Status"
							Priority
							Month
							week
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
				"Case View"
							Account
							Caller
							Title
							Start_Time as "Case Start Time"
							Case_Owner as "Case Owner"
							Case_Status as "Case Status"
							Priority
							Month
							week
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Email_Cases
		{
			displayName = "All Email Cases"
   			hide = true
			show all rows from Email_Cases    
			(
				Related_Case as "Related Case"
				(
					view = All_Cases
				)
				ZC_Subject as "Subject"
				ZC_Content as "Message"
				(
					width = 300px
				)
				Added_User as "Added User"
				Added_Time as "Added Time"
			)
			options
			(
				icon = "table"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Related_Case as "Related Case"
							ZC_Subject as "Subject"
							ZC_Content as "Message"
							Added_User as "Added User"
							Added_Time as "Added Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Related_Case as "Related Case"
							ZC_Subject as "Subject"
							ZC_Content as "Message"
							Added_User as "Added User"
							Added_Time as "Added Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Case_Attachments
		{
			displayName = "Case Attachments"
   			hide = true
			show all rows from Case_Attachments    
			(
				Case_ID as "Case"
				File as "Attachment"
				Description
			)
			group by
			(
				Case_ID ascending
			)
			options
			(
				icon = "database"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case_ID as "Case"
							File as "Attachment"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case_ID as "Case"
							File as "Attachment"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Case_Comments
		{
			displayName = "Case Comments"
   			hide = true
			show all rows from Case_Comments    
			(
				Case_ID as "Case ID"
				Caller as "Callers"
				Product as "Products"
				Comments
				Owner as "Case Owner"
				Added_User as "Added User"
				Added_Time as "Added Time"
			)
			group by
			(
				Case_ID ascending
			)
			options
			(
				icon = "database"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
							Caller as "Callers"
							Product as "Products"
							Comments
							Owner as "Case Owner"
							Added_User as "Added User"
							Added_Time as "Added Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
							Caller as "Callers"
							Product as "Products"
							Comments
							Owner as "Case Owner"
							Added_User as "Added User"
							Added_Time as "Added Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Products_Report
		{
			displayName = "Products Report"
   			hide = true
			show all rows from Products    
			(
				Name
				Category
				Status
			)
			options
			(
				icon = "database"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Name
							Category
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Category
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Case_Comments
		{
			displayName = "My Case Comments"
   			hide = true
			show all rows from Case_Comments  [Caller.Email == zoho.loginuserid || Owner.Email == zoho.loginuserid]  
			(
				Case_ID as "Case ID"
				Owner
				Account
				Caller
				Comments
				Added_Time as "Added on"
			)
			group by
			(
				Case_ID ascending
			)
			options
			(
				icon = "table"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
							Owner
							Account
							Caller
							Comments
							Added_Time as "Added on"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
							Owner
							Account
							Caller
							Comments
							Added_Time as "Added on"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Case_History
		{
			displayName = "My Case History"
   			hide = true
			show all rows from Add_Case  [Account.Email == zoho.loginuserid || Caller.Email == zoho.loginuserid || Case_Owner.Email == zoho.loginuserid || Department.Manager_Email == zoho.loginuserid]  
			(
				Case_ID as "Case ID"
				Caller
				(
					view = All_Callers
				)
				Title
				Added_Time as "Added On"
				Modified_Time as "Modified On"
				Modified_User as "Modified By"
			)
			filters
			(
				Source
				Case_Status
			)
			options
			(
				icon = "database"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
							Caller
							Title
							Added_Time as "Added On"
							Modified_Time as "Modified On"
							Modified_User as "Modified By"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Case_ID as "Case ID"
							Caller
							Title
							Added_Time as "Added On"
							Modified_Time as "Modified On"
							Modified_User as "Modified By"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		pivotchart Cases_Report
		{ 
			displayname = "Cases Report"
			based on Autoview_1421061787085_Add_Case
					hide = true
							icon = "area-chart"				show all rows from Add_Case
				(
 					Minutes 
 					Case_Owner  as "Case Owner"
 					Year 
 					Case_ID  as "Ticket ID"
 					Handling_Time  as "Handling Time"
 					Month 
 					Duration 
 					Source 
 					Hours 
 					Start_Time  as "Case Start Time"
 					Title 
 					Product 
 					Seconds 
 					Resolved_at  as "Resolved at"
 					Resolved_By  as "Resolved By"
 					Added_Time  as "Added Time"
 					Department 
 					Days 
 					week 
 					Caller 
 					Account 
 					Due_Time  as "Due Time"
 					Priority 
 					Case_Status  as "Case Status"
				)
		}
	}
	section Interfaces
	{
		hide = true
		icon = "bars"
				 page Case_View(caseStr) 
	 	 { 
 	 	 displayname = "Case View" 

 	 	 icon = "" 

 	 	 hide =  true
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Case_View1'>\n\t<![CDATA[htmlpage Case_View1(caseStr)\ncontent\n&lt;%{\n\tif(input.caseStr != null &amp;&amp; input.caseStr != &quot;null&quot; &amp;&amp; input.caseStr != &quot;&quot;)\n\t{\n\t\tcID = caseStr.toLong();\n\t\tcase = Add_Case[ID = cID];\n\t\tcaller = Callers[ID == case.Caller];\n\t\taccount = Add_Account[ID == case.Account];\n\t\t%&gt;\n&lt;style&gt;\n\t\t\t\t\t&lt;%=thisapp.style.home()%&gt;\n\t\t\t\t&lt;%=thisapp.style.caseView()%&gt;\n\t\t\t\th1,h2,h3{\n\t\t\t\t\tfont-weight:bold;\n\t\t\t\t}\n\t\t\t\t.box {\n\t\t\t    border: 1px solid #d6d6d6;\n\t\t\t    box-shadow: 0 1px 3px rgba(100,100,100,0.1);\n\t\t\t    margin-bottom: 15px;\n\t\t\t    border-radius: 3px 3px 0 0;\n\t\t\t    overflow: visible;\n\t\t\t\tposition: static;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t.casedesc\n\t\t\t{\n\t\t\tmargin-bottom:10px;\n\t\t\t}\n\t\t\t\t\n\t\t\t*.zc-formbutton {\n\t\t\tcolor: #333!important;\n\t\t\tfont-size: 11px;\n\t\t\tfont-family: Arial;\n\t\t\tfont-weight: normal;\n\t\t\tbackground-color: #cdcdcd;\n\t\t\tbackground-image:url(\/creator\/live\/images\/bg_action_menu_t4c4.png);\n\t\t\tborder-top: 1px solid #a2a2a2;\n\t\t\tborder-left: 1px solid #a2a2a2;\n\t\t\tborder-bottom: 1px solid #a2a2a2;\n\t\t\tborder-right: 1px solid #a2a2a2;\n\t\t\tpadding: 3px 11px;\n\t\t\tvertical-align: middle;\n\t\t\twhite-space: nowrap;\n\t\t\tmargin-left: 10px;\n\t\t\tmargin-bottom: 5px;\n\t\t\ttext-shadow: 0 1px 0 #fff;\n\t\t\tbox-shadow: 0 1px 0 rgba(255,255,255,0.5);\n\t\t\tborder-radius: 3px;\n\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t\t&lt;\/style&gt;  \n\t\t\t&lt;div class =&quot;container&quot;&gt;\n\t\t\t\t&lt;div class=&quot;sidebar&quot;&gt;\n\t\t\t\t&lt;div class=&quot;row-fluid&quot; style=&quot;text-align:center;&quot;&gt;\n\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Case Details\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;a class=&quot;zc-formbutton&quot; target=&quot;_blank&quot; href=&quot;#Form:Add_Case?recLinkID=&lt;%=case.ID%&gt;&amp;viewLinkName=All_Cases&quot;&gt;&lt;span&gt;Edit&lt;\/span&gt;&lt;\/a&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;       \n\t\t\t              &lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t&lt;table style=&quot;font-size: small;&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;tr&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Case ID&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=case.Case_ID%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Product&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=ifnull(case.Product.Name,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Added On&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=if(case.Start_Time == null,if(case.Added_Time == null,&quot;&quot;,case.Added_Time.toString(&quot;dd-MMM-yyyy hh:mm a&quot;)),case.Start_Time.toString(&quot;dd-MMM-yyyy hh:mm a&quot;))%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Department&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=ifnull(case.Department.Name,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;\/tr&gt;\t\n\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Assign To&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=ifnull(case.Case_Owner.FirstName,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;\/tr&gt;\t\n\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Due Time&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=if(case.Due_Time == null,&quot;&quot;,case.Due_Time.toString(&quot;dd-MMM-yyyy hh:mm a&quot;))%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\tif(case.Case_Status == &quot;Closed&quot;)\n\t\t{\n\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Resolved On&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=if(case.Resolved_at == null,&quot;&quot;,case.Resolved_at.toString(&quot;dd-MMM-yyyy hh:mm a&quot;))%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Priority&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=ifnull(case.Priority,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;\/tr&gt;\t\n\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Source&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=ifnull(case.Source,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t&lt;th style=&quot;color:black;margin:5%;&quot;&gt;Case Status&lt;\/th&gt;\n\t\t\t\t\t\t\t\t\t&lt;th&gt;:&amp;nbsp&lt;%=ifnull(case.Case_Status,&quot;&quot;)%&gt;&lt;\/th&gt;\n\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t&lt;\/table&gt;\t\n\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t&lt;\/div&gt;\n\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Caller Details&lt;\/div&gt;\n\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; style=&quot;text-align:center;&quot;&gt;\n\t\t\t\t\t\t&lt;table style=&quot;font-size: small;&quot;&gt;\n\t\t\t\t\t\t\t&lt;tr&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Caller&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=ifnull(caller.Name,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt; Email&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;td &gt;:&amp;nbsp&lt;%=ifnull(caller.Email,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt; Phone&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=ifnull(caller.Phone,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t&lt;\/tr&gt;\t\n\t\t\t\t\t\t&lt;\/table&gt;\n\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t&lt;\/div&gt;\n\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Account Details&lt;\/div&gt;\n\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; style=&quot;text-align:center;&quot;&gt;\n\t\t\t        \t&lt;table style=&quot;font-size: small;&quot;&gt;\n\t\t\t\t\t\t\t&lt;tr&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Company&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=if(account.Company_Name == null,&quot;&quot;,account.Company_Name)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Email&lt;\/td&gt;\n\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp&lt;%=if(account.Email == null,&quot;&quot;,account.Email)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t&lt;\/tr&gt;\t\n\t\t\t\t\t\t&lt;\/table&gt;\t\n\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\tif(thisapp.settings.enableAttachment())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Attachments &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Case_Attachments?zc_Header=false&amp;zc_LoadIn=dialog&amp;Case_ID=&lt;%=case.ID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; style=&quot;text-align:center&quot;&gt;\n\t\t\t\t\t\t\t&lt;table style=&quot;font-size: small;&quot;&gt;\n&lt;%\n\t\t\tfor each  attach in Case_Attachments[Case_ID == case.ID]\n\t\t\t{\n\t\t\t\tattachUrl = &quot;https:\/\/creatorexport.zoho.com\/&quot; + zoho.adminuser + &quot;\/customer-service-support\/All_Case_Attachments\/&quot; + attach.ID + &quot;\/Attachments\/download\/&quot; + attach.File;\n\t\t\t\t%&gt;\n&lt;tr&gt;&lt;td&gt;&lt;a href=&lt;%=attachUrl%&gt;&gt;&lt;%=attach.Description%&gt;&lt;\/a&gt;&lt;\/td&gt;&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/table&gt;\n\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t&lt;\/div&gt;\n\t\t\t&lt;\/div&gt;\n\t\t\t   \t          \n\t\t\t\t\t\t\t&lt;div class=&quot;content&quot;&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style=&quot;text-align:center;&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div style=&quot;margin:20px&quot;&gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div align=&quot;center&quot; style=&quot;margin:10px&quot; elName=&apos;zc-component&apos;  formLinkName=&apos;Case_Actions&apos; params=&apos;zc_Header=false&amp;Case_ID=&lt;%=cID%&gt;&apos; style=&quot;margin-left:5%&quot;&gt;Loading Comments...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div&gt;&lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Troubleshooting_Interface?zc_Header=false&amp;zc_LoadIn=dialog&amp;Case_ID=&lt;%=case.ID%&gt;&quot;&gt;&lt;span&gt;Troubleshoot&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;casedesc&quot; &gt;\n\t\t\t\t\t\t\t\t\t   \t\t&lt;div class=&quot;span12&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div style=&quot;text-align:center&quot;&gt; &lt;h2&gt;&lt;%=case.Title%&gt;&lt;\/h2&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div style=&quot;text-align:left;&quot;&gt;&lt;h3&gt;Description&lt;\/h3&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;p&gt;&lt;%=case.Description%&gt;&lt;\/p&gt;\n\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/br&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; &gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Comments &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Case_Comments?zc_Header=false&amp;zc_LoadIn=dialog&amp;Case_ID=&lt;%=case.ID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;All_Case_Comments&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Case_ID=&lt;%=case.Case_ID%&gt;&apos;&gt;Loading Case Comments...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;My_Case_Comments&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Case_ID=&lt;%=case.Case_ID%&gt;&apos;&gt;Loading Case Comments...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Troubleshooting Log&lt;\/div&gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;Troubleshooting_Log_Report&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Case=&lt;%=case.Case_ID%&gt;&apos;&gt;Loading Troubleshooting Log...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;Troubleshooting_Logs_Customer&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Case=&lt;%=case.Case_ID%&gt;&apos;&gt;Loading Troubleshooting Log...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;All Cases from this Customer&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;Customer_Cases&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Account=&lt;%=account.Company_Name%&gt;&apos;&gt;Loading All Cases of this Customer...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-title&quot;&gt;Callbacks &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Tasks?zc_LoadIn=dialog&amp;zc_Header=false&amp;Case=&lt;%=case.ID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;My_Callbacks&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Case=&lt;%=case.Case_ID%&gt;&apos;&gt;Loading Callbacks...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-title&quot;&gt;Calls&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;My_Callbacks&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Case=&lt;%=case.Case_ID%&gt;&apos;&gt;Loading Calls...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\n\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t&lt;\/div&gt; \n\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
		form Alert
		{
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			msg
			(
    			type = text
				private = true
	 			row = 1
	 			column = 1   
				width = 200px
			)
			plain
			(
    			type = plaintext
				value = "<div><br /></div><div><br /></div><div><br /></div>"
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "plus-square-o"
			)
		}
		form Escalation_Form
		{
			displayname = "Escalation Form"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			must have Case_ID
			(
				type = picklist
				displayname = "Case"
				values  = Add_Case.ID
    			displayformat = [Case_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Department
			(
				type = picklist
				values  = Departments.ID
    			displayformat = [Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Manager
			(
				type = picklist
				values  = Managers[Department == input.Department].ID
    			displayformat = [FirstName + " - " + LastName]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Comments
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = 200px
			)
	
			customize
			(
				icon = "plus-square"
			)
			actions
			{
				Escalate
				(
   					type = button
   					displayname = "Escalate"
				)
			}
		}
		form Troubleshooting_Interface
		{
			displayname = "Troubleshooting Interface"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = top
			feature property = 32
					hide = true
			must have Case_ID
			(
				type = picklist
				displayname = "Case"
				values  = Add_Case.ID
    			displayformat = [Case_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Problem_ID
			(
				type = picklist
				displayname = "Search for your problem"
				values  = Add_a_Problem.ID
    			displayformat = [Problem]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 400px
			)
			plain
			(
    			type = plaintext
				value = "&nbsp;&nbsp;<div class=\"box-content\"><br /></div>"
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Parent_Question
			(
				type = radiobuttons
				displayname = "<br/>"
				values  = Add_a_Question.ID
    			displayformat = [Question]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Child_Question
			(
				type = radiobuttons
				displayname = "</br>"
				values  = Add_a_Question.ID
    			displayformat = [Question]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Status
			(
				type = radiobuttons
				values = {"Solved", "Not Solved"}
				layout = 2
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Display_in_Portal
			(
    			type = checkbox
				displayname = "Display in Portal"
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "plus-square-o"
			)
			actions
			{
				Save
				(
   					type = button
   					displayname = "Save"
				)
			}
		}
		form Case_Actions
		{
			displayname = "Case Actions"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Case_ID
			(
				type = picklist
				displayname = "Case ID"
				values  = Add_Case.ID
    			displayformat = [Case_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			plain
			(
    			type = plaintext
				value = ""
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "plus-square-o"
			)
			actions
			{
				Escalate
				(
   					type = button
   					displayname = "Escalate"
				)
				Troubleshoot
				(
   					type = button
   					displayname = "Troubleshoot"
				)
				Assign
				(
   					type = button
   					displayname = "Assign"
				)
			}
		}
		form Assign_Case
		{
			displayname = "Assign Case Form"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			must have Case_ID
			(
				type = picklist
				displayname = "Case ID"
				values  = Add_Case.ID
    			displayformat = [Case_ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Department
			(
				type = picklist
				values  = Departments.ID
    			displayformat = [Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Assign_To
			(
				type = picklist
				displayname = "Assign To"
				values  = Employees[Department == input.Department || Manager_Email == zoho.loginuserid].ID
    			displayformat = [FirstName + " - " + LastName]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Due_Time
			(
    			type = datetime
				displayname = "Due Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Priority
			(
				type = radiobuttons
				values = {"High", "Normal", "Low"}
				initial value = "Normal"
				layout = 3
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Case_Status
			(
				type = picklist
				displayname = "Case Status"
				values = {"Open", "Pending", "Escalated", "Resolved", "Closed"}
				others option = true
	 			row = 1
	 			column = 1   
				width = 200px
			)
	
			customize
			(
				icon = "plus-square-o"
			)
			actions
			{
				Assign
				(
   					type = button
   					displayname = "Assign"
				)
				Reset
				(
   					type = button
   					displayname = "Reset"
				)
			}
		}
		form Search_Form
		{
			displayname = "Search Form"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Go_to_Account
			(
				type = picklist
				displayname = "Go to Account"
				values  = Add_Account.ID
    			displayformat = [Company_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
	
			customize
			(
				icon = "plus-square-o"
			)
		}
	}
	functions
	{
 			bool user.isAdmin()
			{
				return zoho.loginuserid == zoho.adminuserid;
			}
 			string nullFix.dateToStr(date day)
			{
				myStr = "";
				if(input.day != null)
				{
					myStr = day.toString();
				}
				return myStr;
			}
 			string nullFix.floatToStr(float num)
			{
				myStr = "";
				if(input.num != null && input.num > 0.0)
				{
					myNum = num.round(2);
					myStr = myNum.toString();
				}
				return myStr;
			}
 			string nullFix.intToStr(int num)
			{
				myStr = "";
				if(input.num != null && input.num > 0)
				{
					myNum = num.round(2);
					myStr = myNum.toString();
				}
				return myStr;
			}
 			string nullFix.strToStr(string str)
			{
				myStr = "";
				if(input.str != null && input.str != "")
				{
					myStr = str.replaceAll("null","");
				}
				return myStr;
			}
 			void launch.customerProfile(string email)
			{
				openUrl("#View:Customer_Profile?email=" + email,"samewindow");
			}
 			void launch.caseTask(Add_Case case)
			{
				openUrl("#Form:Tasks?Case=" + case.ID + "&zc_BdrClr=transparent&zc_Header=false&zc_LoadIn=dialog","same window");
			}
 			void notify.empOnCaseOverDue(Add_Case case)
			{
				if(thisapp.settings.notifyEmp())
				{
					caseIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Case_View?caseStr=" + case.ID;
					ownerEmail = Employees[ID == case.Case_Owner].Email;
					if(ownerEmail != "")
					{
						toAddresses = ownerEmail;
						if(thisapp.settings.notifyTo() != "")
						{
							toAddresses = toAddresses + "," + thisapp.settings.notifyTo();
						}
						sendmail
						[
							from :zoho.loginuserid
							to :toAddresses
							subject :"Overdue reminder for the case #" + case.Case_ID
							message :"Hi, <br />\n<br />\nDue time to resolve your case \"<b>" + case.Title + "</b>\" ends in an hour. Case ID is " + case.Case_ID + ". Click <a href=\"" + caseIntUrl + "\">here</a> to review<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
						]
					}
				}
			}
 			bool settings.notifyEmp()
			{
				setting = Case_Settings[ID is not null];
				return setting.Notify_Employee;
			}
 			string settings.notifyTo()
			{
				setting = Case_Settings[ID is not null];
				return ifnull(setting.Send_Notification_Emails_to,"");
			}
 			bool settings.enableAttachment()
			{
				setting = Case_Settings[ID is not null];
				return setting.Enable_Attachments;
			}
 			bool settings.notifyContacts(string type)
			{
				setting = Case_Settings[ID is not null];
				type = "Case is " + type;
				return setting.Acknowledge_Contact_in_case_of.contains(type);
			}
 			bool settings.notifyManager()
			{
				setting = Case_Settings[ID is not null];
				return setting.Notify_Manager;
			}
 			int user.getEmpFromEmail(string email)
			{
				if(input.email != null && input.email != "")
				{
					empID = Employees[Email == input.email].ID;
				}
				return empID;
			}
 			bool settings.callbackReminder()
			{
				setting = Case_Settings[ID is not null];
				return setting.Callback_Reminder;
			}
 			bool user.isCustomer()
			{
				return Callers[Email == zoho.loginuserid].count() > 0 || Add_Account[Email == zoho.loginuserid].count() > 0;
			}
 			void case.pickUp(Add_Case case)
			{
				emp = Employees[Email == zoho.loginuserid];
				if(emp.count() > 0)
				{
					case.Case_Status="Open";
					case.Case_Owner=emp.ID;
				}
			}
 			void case.setDueTime(Add_Case case)
			{
				caseSetting = Case_Settings[ID != 0];
				hrsToAdd = if(case.Case_Status == "Escalated",ifnull(caseSetting.SLA_for_escalated_cases_in_hours,12),if(case.Priority == "High",ifnull(caseSetting.SLA_for_High_priority_cases,24),if(case.Priority == "Normal",ifnull(caseSetting.SLA_for_Normal_priority_cases,24),if(case.Priority == "Low",ifnull(caseSetting.SLA_for_Low_priority_cases,24),24))));
				if(case.Start_Time == null)
				{
					case.Start_Time=case.Added_Time;
				}
				case.Due_Time=case.Start_Time.addHour(hrsToAdd);
			}
 			void case.setTimeDifference(Add_Case case)
			{
				if(case.Resolved_at != null)
				{
					dateDiffInMilSecs = (case.Resolved_at - ifnull(case.Start_Time,case.Added_Time));
					case.Days=days360(case.Resolved_at,ifnull(case.Start_Time,case.Added_Time));
					totalDays = (dateDiffInMilSecs / (1000 * 60 * 60 * 24)).toLong();
					totalHrs = (dateDiffInMilSecs / (1000 * 60 * 60)).toLong();
					totalMins = (dateDiffInMilSecs / (1000 * 60)).toLong();
					totalSeconds = (dateDiffInMilSecs / 1000).toLong();
					case.Hours=totalHrs - totalDays * 24;
					case.Minutes=totalMins - totalHrs * 60;
					case.Seconds=totalSeconds - totalMins * 60;
				}
			}
 			string html.genCallerInfoHTML(Callers customer)
			{
				//Used on Add Case Form
				pendCnt = Add_Case[Caller == customer.ID && Case_Status != "Closed"].count();
				totalCnt = Add_Case[Caller == customer.ID].count();
				callerInfoHTML = "<div align='center' style='width:400px;'><div style='color:grey;text-align:left;'><div align='center'><span style='color: blue !important; '><u><strong>Caller Info</strong></u></span><br /></div>";
				callerInfoHTML = callerInfoHTML + "Name:&nbsp;" + customer.Name + "<br />";
				if(customer.Email != "")
				{
					callerInfoHTML = callerInfoHTML + "Email:&nbsp;" + customer.Email + " <br /> ";
				}
				if(customer.Phone != "")
				{
					callerInfoHTML = callerInfoHTML + "Callback Number:&nbsp;" + customer.Phone + " <br /> ";
				}
				if(customer.Best_Time_to_Reach != "")
				{
					callerInfoHTML = callerInfoHTML + "Best Time to Reach:&nbsp;" + customer.Best_Time_to_Reach + "<br />";
				}
				if(customer.Other_Info != "")
				{
					callerInfoHTML = callerInfoHTML + "Other Info:&nbsp;" + customer.Other_Info + "<br /><br />";
				}
				if(pendCnt != 0)
				{
					callerInfoHTML = callerInfoHTML + "<div style='color:blue;'> Pending Requests:  <a id='hoverC' style='text-decoration:none;' href=''>" + pendCnt + "</a></div>";
				}
				if(totalCnt != 0)
				{
					callerInfoHTML = callerInfoHTML + "<div style='color:blue;'>Total Requests:  <a id='hoverC' style='text-decoration:none;' href=''>" + totalCnt + "</a></div>";
				}
				callerInfoHTML = callerInfoHTML + "</div>";
				callerInfoHTML = callerInfoHTML.replaceAll("null","");
				return callerInfoHTML;
			}
 			string html.genCustomerInfoHTML(Add_Account customer)
			{
				//Used on Add Case Form
				act = "<span style='color:green;'>Active</span>";
				if(!customer.Active)
				{
					act = "<span style='color:red;'>Inactive</span>";
				}
				ph = "";
				if(customer.Extn != "")
				{
					ph = ph + customer.Extn + "(Off) | ";
				}
				if(customer.Direct != "")
				{
					ph = ph + customer.Direct + "(Direct) | ";
				}
				if(customer.Mobile != "")
				{
					ph = ph + customer.Mobile + "(Mob) ";
				}
				pendCnt = Add_Case[Account == customer.ID && Case_Status != "Closed"].count();
				totalCnt = Add_Case[Account == customer.ID].count();
				custInfoHTML = "<div align='center' style='width:400px;'><div style='color:grey;text-align:left;'><div align='center'><span style='color: rgb(153, 51, 102);'><u><strong>Account Info</strong></u></span><br /></div>Name:&nbsp;" + customer.First_Name + " " + customer.Last_Name + "<br />Email:&nbsp;" + customer.Email + "<br />Phone:&nbsp;" + ph + "<br />Designation:&nbsp;" + customer.Job_Title + "<br />Status:&nbsp;" + act + "</div><br>";
				if(pendCnt != 0)
				{
					custInfoHTML = custInfoHTML + "<div style='color:blue;'> Pending Requests:  <a id='hoverC' style='text-decoration:none;' href=''>" + pendCnt + "</a></div>";
				}
				if(totalCnt != 0)
				{
					custInfoHTML = custInfoHTML + "<div style='color:blue;'>Total Requests:  <a id='hoverC' style='text-decoration:none;' href=''>" + totalCnt + "</a></div>";
				}
				custInfoHTML = custInfoHTML + "</div>";
				custInfoHTML = custInfoHTML.replaceAll("null","");
				return custInfoHTML;
			}
 			void share.toEmployee(string email)
			{
			}
 			void share.toManager(string email)
			{
			}
 			void user.addManager(Employees emp)
			{
				if(emp.Employee_Type == "Manager")
				{
					if(Managers[Email == emp.Email].count() == 0)
					{
						insert into Managers
						[
							Added_User=zoho.loginuser
							FirstName=emp.FirstName
							LastName=emp.LastName
							Email=emp.Email
							Extn=emp.Extn
							WorkPhone=emp.WorkPhone
							Photo=emp.Photo
							Billing_Rate=emp.Billing_Rate
							Designation=emp.Designation
							Department=emp.Department
						]
						thisapp.share.toManager(emp.Email);
					}
				}
			}
 			int user.getEmpFromManID(int manID)
			{
				man = Managers[ID == input.manID];
				if(Employees[Email == man.Email].count() > 0)
				{
					empID = Employees[Email == man.Email].ID;
				}
				else
				{
					empID = insert into Employees
			[
				Employee_Type="Manager"
				FirstName=man.FirstName
				LastName=man.LastName
				Email=man.Email
				Extn=man.Extn
				WorkPhone=man.WorkPhone
				Photo=man.Photo
				Billing_Rate=man.Billing_Rate
				Designation=man.Designation
				Department=man.Department
				Added_User=zoho.loginuser
			];
				}
				return empID;
			}
 			bool settings.inviteOthersToPortal()
			{
				return Case_Settings[ID != 0].Allow_Clients_to_invite_Colleagues;
			}
 			string time.intToTime(int timeVal)
			{
				ahtStr = "N/A";
				if(input.timeVal != null && input.timeVal > 0)
				{
					totalDays = (timeVal / (1000 * 60 * 60 * 24)).toLong();
					totalHrs = (timeVal / (1000 * 60 * 60)).toLong();
					totalMins = (timeVal / (1000 * 60)).toLong();
					totalSeconds = (timeVal / 1000).toLong();
					remHours = totalHrs - totalDays * 24;
					remMinutes = totalMins - totalHrs * 60;
					ahtStr = if(totalDays > 0,totalDays + "d : ","") + if(remHours > 0,remHours + "h : ","") + if(remMinutes > 0,remMinutes + "m","");
				}
				return ahtStr;
			}
 			void notify.portalInviteByCustomer(string email)
			{
				settings = Case_Settings[ID != 0];
				accID = thisapp.user.getAccFromEmail(zoho.loginuserid);
				acc = Add_Account[ID == accID];
				if(acc.Enable_Portal && acc.Invite_Others)
				{
					accID = thisapp.user.getAccFromEmail(zoho.loginuserid);
					acc = Add_Account[ID == accID];
					portalUrl = "<a href='" + settings.Customer_Portal_Url + "'>" + settings.Customer_Portal_Url + "</a>";
					//send portal invitation Email
					sendmail
					[
						from :zoho.loginuserid
						to :email
						subject :"You are invited to the support portal"
						message :"Hi, <br /> \nYou are invited to access the support portal at " + portalUrl + ". Click on Signup at the bottom and sign up with " + email + " email. <br />\nThanks,<br />\n" + acc.First_Name + " " + acc.Last_Name
					]
				}
				else
				{
					//Customer Alert	
					openUrl("#Form:Alert?zc_Header=false&zc_LoadIn=dialog&msg=cPortalInvite","same window");
				}
			}
 			int user.getAccFromEmail(string email)
			{
				accID = 0;
				if(input.email != null && input.email != "")
				{
					if(Add_Account[Email == input.email].count() > 0)
					{
						accID = Add_Account[Email == input.email].ID;
					}
					else if(Callers[Email == input.email && Associated_Account is not null].count() > 0)
					{
						accID = Callers[Email == input.email && Associated_Account is not null].Associated_Account;
					}
				}
				return accID;
			}
 			bool settings.portalEnabled()
			{
				settings = Case_Settings[ID != 0];
				return settings.Enable_Portal && settings.Customer_Portal_Url != "" && settings.Customer_Portal_Url != null;
			}
 			void user.addToPortal(string email)
			{
				if(thisapp.user.isCustomer())
				{
					if(thisapp.settings.inviteOthersToPortal())
					{
						thisapp.notify.portalInviteByCustomer(email);
					}
				}
				else
				{
					if(thisapp.settings.portalEnabled())
					{
						thisapp.notify.portalInviteByUser(email);
					}
					else
					{
						openUrl("#Form:Alert?zc_Header=false&zc_LoadIn=dialog&msg=cPortalEnableSettings","same window");
					}
				}
			}
 			void notify.portalInviteByUser(string email)
			{
				settings = Case_Settings[ID != 0];
				accID = thisapp.user.getAccFromEmail(email);
				acc = Add_Account[ID == accID];
				if(acc.Enable_Portal)
				{
					//send portal invitation Email
					portalUrl = "<a href='" + settings.Customer_Portal_Url + "'>" + settings.Customer_Portal_Url + "</a>";
					sendmail
					[
						from :zoho.loginuserid
						to :email
						subject :"You are invited to the support portal"
						message :"Hi, <br /> \nYou are invited to access the support portal at " + portalUrl + ". Click on Signup at the bottom and sign up with " + email + " email. <br />\nThanks,<br />\n Adminstrator"
					]
				}
				else
				{
					openUrl("#Form:Alert?zc_Header=false&zc_LoadIn=dialog&msg=cPortalEnable","same window");
				}
			}
 			void settings.update()
			{
				if(Case_Settings.count() == 0)
				{
					insert into Case_Settings
					[
						Enable_Attachments=true
						Notify_Employee=true
						Customer_Portal_Url="https://" + zoho.adminuser + ".zohocreator.com/portal/" + zoho.appname + "/"
						Enable_Portal=true
						Send_Notification_Emails_to=zoho.adminuserid
						Added_User=zoho.adminuser
					]
				}
			}
 			void launch.addNotes(Add_Case case)
			{
				subUrl = "#Form:Case_Comments?zc_LoadIn=dialog&Case_ID=" + case.ID;
				openUrl(subUrl,"same window");
			}
 			void launch.assignCase(Add_Case case)
			{
				subUrl = "#Form:Assign_Case?zc_LoadIn=dialog&Case_ID=" + case.ID;
				openUrl(subUrl,"same window");
			}
 			void launch.escalateCase(Add_Case case)
			{
				subUrl = "#Form:Escalation_Form?zc_LoadIn=dialog&Case_ID=" + case.ID;
				openUrl(subUrl,"same window");
			}
 			bool settings.notifyContactOnCreate()
			{
				setting = Case_Settings[ID is not null];
				type = "Case is Created";
				return setting.Acknowledge_Contact_in_case_of.contains(type);
			}
 			string settings.ccEsclatedCases()
			{
				setting = Case_Settings[ID is not null];
				return if(setting.CC_escalated_cases_to != "" && setting.CC_escalated_cases_to != null,setting.CC_escalated_cases_to,"");
			}
 			void notify.callerOnCaseClosure(Add_Case case)
			{
				if(thisapp.settings.notifyContacts(case.Case_Status))
				{
					caseIntUrl = zoho.adminuser + ".zohocreator.com/portal/customer-service-support#View:Case_View?caseStr=" + case.ID;
					callerEmail = Callers[ID == case.Caller].Email;
					if(callerEmail != "")
					{
						toAddresses = callerEmail;
						if(thisapp.settings.notifyTo() != "")
						{
							toAddresses = toAddresses + "," + thisapp.settings.notifyTo();
						}
						sendmail
						[
							from :zoho.loginuserid
							to :toAddresses
							subject :"Your case (#" + case.Case_ID + ") has been Closed"
							message :"Hi,&nbsp;<br />\n<br />\nThe case \"<b>" + case.Title + "</b>\" has been Closed. Click&nbsp;<a href=\"https://creator.zoho.com/appcreator/js/edit/fckeditor/editor/" + caseIntUrl + "\">here</a>&nbsp;to review<br />\n<br />\nThank You<br />\nYours,<br />\nAdministrator"
						]
					}
				}
			}
 			void notify.callerOnCaseCreation(Add_Case case)
			{
				if(thisapp.settings.notifyContactOnCreate())
				{
					toAddresses = "";
					if(case.Caller != null)
					{
						callerEmail = Callers[ID == case.Caller].Email;
						if(callerEmail != "")
						{
							toAddresses = toAddresses + callerEmail;
						}
					}
					if(case.Account != null)
					{
						accountEmail = Add_Account[ID == case.Account].Email;
						if(accountEmail != "")
						{
							toAddresses = toAddresses + if(toAddresses != "",",","") + accountEmail;
						}
					}
					if(toAddresses != "")
					{
						if(thisapp.settings.notifyTo() != "")
						{
							toAddresses = toAddresses + "," + thisapp.settings.notifyTo();
						}
						sendmail
						[
							from :zoho.adminuserid
							to :toAddresses
							subject :"Your case (#" + case.Case_ID + ") has been filed"
							message :"Hi,&nbsp;<br />\n<br />\nThe case \"<b>" + case.Title + "</b>\" has been created. You will hear from us shortly. <br />\n<br />\nThank You<br />\nYours,<br />\nAdministrator"
						]
					}
				}
			}
 			void notify.callerOnCaseEscalation(Add_Case case)
			{
				if(thisapp.settings.notifyContacts(case.Case_Status))
				{
					caseIntUrl = zoho.adminuser + ".zohocreator.com/portal/customer-service-support#View:Case_View?caseStr=" + case.ID;
					callerEmail = Callers[ID == case.Caller].Email;
					if(callerEmail != "")
					{
						toAddresses = callerEmail;
						if(thisapp.settings.notifyTo() != "")
						{
							toAddresses = toAddresses + "," + thisapp.settings.notifyTo();
						}
						if(thisapp.settings.ccEsclatedCases() != "")
						{
							toAddresses = toAddresses + "," + thisapp.settings.ccEsclatedCases();
						}
						sendmail
						[
							from :zoho.loginuserid
							to :toAddresses
							subject :"Case id #" + case.Case_ID + " has been Escalated"
							message :"Hi, <br />\n<br />\nThe case \"<b>" + case.Title + "<b>\" has been escalated. Click <a href=\"" + caseIntUrl + "\">here</a> to review.<br />\n<br />\nThank You<br />\nYours,<br />\nAdministrator"
						]
					}
				}
			}
 			void notify.empOnCallback(Add_Case case)
			{
				caseTask = Tasks[Case == case.ID];
				if(thisapp.settings.callbackReminder())
				{
					if(thisapp.settings.notifyEmp())
					{
						ownEmail = Employees[ID == caseTask.Owner].Email;
						if(ownEmail != null)
						{
							toAddresses = ownEmail;
							if(thisapp.settings.notifyTo() != "")
							{
								toAddresses = toAddresses + "," + thisapp.settings.notifyTo();
							}
							caseIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Case_View?caseStr=" + caseTask.Case;
							sendmail
							[
								from :zoho.loginuserid
								to :toAddresses
								subject :"You have a new call back"
								message :"Hi,&nbsp;<br />\n<br />\nA New callback \"<b>" + caseTask.Task_Name + "</b> \" has been assigned to you for the case " + case.Case_ID + ". Click <a href=\"" + caseIntUrl + "\">here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
							]
						}
					}
				}
			}
 			void notify.empOnCaseAssignment(Add_Case case)
			{
				if(thisapp.settings.notifyEmp())
				{
					caseIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Case_View?caseStr=" + case.ID;
					ownerEmail = Employees[ID == case.Case_Owner].Email;
					if(ownerEmail != "")
					{
						toAddresses = ownerEmail;
						if(thisapp.settings.notifyTo() != "")
						{
							toAddresses = toAddresses + "," + thisapp.settings.notifyTo();
						}
						sendmail
						[
							from :zoho.loginuserid
							to :toAddresses
							subject :"You have a new case - #" + case.Case_ID
							message :"Hi, <br />\n<br />\nA new case \"<b>" + case.Title + "</b> \" has been assigned to you. Case ID is " + case.Case_ID + ". Click <a href=\"" + caseIntUrl + "\">here</a> to review<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
						]
					}
				}
			}
 			void notify.manOnCaseAssignment(Add_Case case)
			{
				if(thisapp.settings.notifyManager())
				{
					caseIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Case_View?caseStr=" + case.ID;
					mgrEmail = Departments[ID == case.Department].Manager_Email;
					owner = Employees[ID == case.Case_Owner];
					if(mgrEmail != "")
					{
						toAddresses = mgrEmail;
						if(thisapp.settings.notifyTo() != "")
						{
							toAddresses = toAddresses + "," + thisapp.settings.notifyTo();
						}
						sendmail
						[
							from :zoho.loginuserid
							to :toAddresses
							subject :"New case is assigned for your team - #" + case.Case_ID
							message :"Hi, <br />\n<br />\nA new case \"<b>" + case.Title + "</b> \" has been assigned to your employee <strong>" + owner.FirstName + " " + owner.LastName + "</strong>. Case ID is <strong>" + case.Case_ID + "</strong>. Click <a href=\"" + caseIntUrl + "\">here</a> to review.<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
						]
					}
				}
			}
 			void notify.manOnCaseEscalation(Add_Case case)
			{
				if(thisapp.settings.notifyManager())
				{
					caseIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Case_View?caseStr=" + case.ID;
					mgrEmail = Departments[ID == case.Department].Manager_Email;
					if(mgrEmail != "")
					{
						toAddresses = mgrEmail;
						if(thisapp.settings.notifyTo() != "")
						{
							toAddresses = toAddresses + "," + thisapp.settings.notifyTo();
						}
						if(thisapp.settings.ccEsclatedCases() != "")
						{
							toAddresses = toAddresses + "," + thisapp.settings.ccEsclatedCases();
						}
						sendmail
						[
							from :zoho.loginuserid
							to :toAddresses
							subject :"New case has been escalated to you"
							message :"Hi, <br />\n<br />\nA new case \"<b>" + case.Title + "</b>\" has been escalated to your department. Case ID is " + case.Case_ID + ". Click <a href=\"" + caseIntUrl + "\">here</a> to review<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
						]
					}
				}
			}
 			void notify.manOnCaseOverDue(Add_Case case)
			{
				if(thisapp.settings.notifyManager())
				{
					caseIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Case_View?caseStr=" + case.ID;
					mgrEmail = Departments[ID == case.Department].Manager_Email;
					if(mgrEmail != "")
					{
						toAddresses = mgrEmail;
						if(thisapp.settings.notifyTo() != "")
						{
							toAddresses = toAddresses + "," + thisapp.settings.notifyTo();
						}
						sendmail
						[
							from :zoho.loginuserid
							to :toAddresses
							subject :"Overdue reminder for the case -#" + case.Case_ID
							message :"Hi, <br />\n<br />\nDue date to resolve the case \"<b>" + case.Title + "</b>\" ends in an hour. Case ID is " + case.Case_ID + " Click <a href=\"" + caseIntUrl + "\">here</a> to review<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
						]
					}
				}
			}
 			void case.closeTask(Tasks task)
			{
				task.Status="Closed";
			}
 			void launch.caseView(int cId)
			{
				openUrl("#View:Case_View?caseStr=" + cId,"new window");
			}
 			void case.close(Add_Case case)
			{
				if(case.Case_Status != "Closed")
				{
					case.Case_Status="Closed";
					case.Resolved_at=zoho.currenttime;
					case.Resolved_By=thisapp.user.getEmpFromEmail(zoho.loginuserid);
					thisapp.case.setTimeDifference(case);
				}
			}
 			string style.caseView()
			{
				return "body{font-family:Verdana,arial;color:#393a3a;}p{font-size:13px;line-height:18px;color:#393a3a;}h1,h2,h3,h4,h5,h5{font-weight:normal;color:#393a3a;}h1{font-size:22px;line-height:18px;}h5{color:#000000;text-align:center;}.container{width:100%;max-width:1000px;margin:auto;margin-top:20px;}.sidebar{margin : 0px 1% 0 0px;width:28%;float:left;  background-color:#FFFFFF;}.course_sharing{text-align: center;margin: -10px 2px;width: 215px;}.sidetext{color: #FFFFFF;font-weight: 600;}.instructors{font-size:15px;font-weight:bold;color:black;}.highlight{font-size:16px;}.highlight a{font-size:16px;color:#fff;}.context{padding:15px;}.content{width:65%;border: 2px solid trasnparent;background-color: whitesmoke;float:left;padding:5px 15px;margin:1px 0px 20px 0px;}.topic{color:#ffffff;}.softrain{background-color: black;color: #39d1b4;text-align:center;margin:15px 0px;}.softrain a{background-color: black;color: #39d1b4;text-align:center;font-size:22px;text-decoration:none;}.tuter{font-size:14px;color:#000000;font-weight:bold;}.tuter span{font-size:13px;color:#ccc;}.latest {border: 2px solid trasnparent;color: lightslategrey;width: 250;margin:-127 0 0 250px;}.colortakethis{color:white;font-size: 16px;text-align:center;padding:20px 20px;text-decoration:none;font-weight:bold;border-radius:5px;}.colortakethis a{background-color: #009CBD;color:white;font-size: 14px;padding:10px 20px;text-decoration:none;font-weight:bold;border-radius:5px;}.photo{float:left;width:250px;margin:10px 0px 0px 0px;}.photo1{float:left;margin:0px;padding:0px 5px 0px 0px}li{color:#000000;}li a{color:#000000;text-decoration:none;}.coursetitle{text-align:center;}.coursetitle h2{text-align:center;font-size:22px;font-weight:normal;}.casedesc{background-color: #FFF;padding:15px 18px;border-bottom: 1px solid #F5F5F5;font-weight: normal;border-radius: 5px;float: left;width: 95%;}.casedesc a{font-weight:normal;color:#000;text-decoration:none;padding:15px 20px;}.casedesc:hover{color:#fff;text-decoration:none;background-color:whitesmoke;border-radius: 5px;}.casedesc:hover a{color:#fff;text-decoration:none;}.imag{width:100%;}.image{width: 98.6%;border: 2px solid #42B3E5;border-radius: 10px;}.page-numbers{color:#42B3E5;font-weight:bold;font-size:13px;}.row-fluid {  width: 100%;  *zoom: 1;}.row-fluid:before,.row-fluid:after {  display: table;  content: '';}.row-fluid:after {  clear: both;}.row-fluid [class*='span'] {  display: block;  float: left;  width: 100%;  margin-left: 2.127659574%;  *margin-left: 2.0744680846382977%;  -webkit-box-sizing: border-box; -moz-box-sizing: border-box;  -ms-box-sizing: border-box;  box-sizing: border-box;}.row-fluid [class*='span']:first-child {  margin-left: 0;}.row-fluid .span12 {  width: 99.99999998999999%;  *width: 99.94680850063828%;}.row-fluid .span11 {  width: 91.489361693%;  *width: 91.4361702036383%;}.row-fluid .span10 {  width: 82.97872339599999%;  *width: 82.92553190663828%;}.row-fluid .span9 {  width: 74.468085099%;  *width: 74.4148936096383%;}.row-fluid .span8 {  width: 65.95744680199999%;  *width: 65.90425531263828%;}.row-fluid .span7 {  width: 57.446808505%;  *width: 57.3936170156383%;}.row-fluid .span6 {  width: 48.93617020799999%;  *width: 48.88297871863829%;}.row-fluid .span5 {  width: 40.425531911%;  *width: 40.3723404216383%;}.row-fluid .span4 {  width: 31.914893614%;  *width: 31.8617021246383%;}.row-fluid .span3 {  width: 23.404255317%;  *width: 23.3510638276383%;}.row-fluid .span2 {  width: 14.89361702%;  *width: 14.8404255306383%;}.row-fluid .span1 {  width: 6.382978723%;  *width: 6.329787233638298%;}.tile{text-align:center;}.zc-formcontent{box-shadow: 0 0 10px grey;border-radius: 5px;padding: 0 0 10px 0 !important;}.zc-dialog-border-top {border-top: none !important;}";
			}
 			bool user.isManager()
			{
				return Managers[Email == zoho.loginuserid].count() > 0 && !thisapp.user.isAdmin();
			}
 			void notify.callerOnCommentCreation(Case_Comments comment)
			{
				case = Add_Case[ID == comment.Case_ID];
				caseIntUrl = zoho.adminuser + ".zohocreator.com/portal/customer-service-support#View:Case_View?caseStr=" + case.ID;
				callerEmail = Callers[ID == case.Caller].Email;
				if(callerEmail != "")
				{
					toAddresses = callerEmail;
					if(thisapp.settings.notifyTo() != "")
					{
						toAddresses = toAddresses + "," + thisapp.settings.notifyTo();
					}
					sendmail
					[
						from :zoho.loginuserid
						to :toAddresses
						subject :"New comment has been posted for the case #" + case.Case_ID
						message :"Hi,&nbsp;<br />\n<br />\nNew comment has been posted for the case  &quot;<b>" + case.Title + "</b>&quot;. Please read the comment below and click&nbsp;<a href=\"https://creator.zoho.com/appcreator/js/edit/fckeditor/editor/" + caseIntUrl + "\">here</a>&nbsp;to review the case.<br />\n<br />\n<b>" + comment.Comments + "</b><br />\n<br />\nThank You<br />\nYours,<br />\nAdministrator"
					]
				}
			}
 			void troubleshoot.displayInPortal(Troubleshooting_Log trsht)
			{
				if(!trsht.Display_in_Portal)
				{
					trsht.Display_in_Portal=true;
				}
			}
 			bool user.isEmployee()
			{
				return Employees[Email == zoho.loginuserid].count() > 0 && !thisapp.user.isManager();
			}
 			string style.home()
			{
				return "body {margin: 0;font-family:Verdana, arial;font-size: 13px;line-height: 18px;color: #333333;background-color: #ffffff;}a {color: #0088cc;text-decoration: none;}a:hover {color:darkred}.row {margin-left: -20px;*zoom: 1;}.row:before,.row:after {display: table;content: '';}.row:after {clear: both;}[class*=span] {float: left;margin-left: 20px;}.container,.navbar-fixed-top .container,.navbar-fixed-bottom .container {width: 940px;}.span12 {width: 940px;padding:15px}.span11 {width: 860px;}.span10 {width: 780px;}.span9 {width: 700px;}.span8 {width: 620px;}.span7 {width: 540px;}.span6 {width: 460px;}.span5 {width: 380px;}.span4 {width: 300px;}.span3 {width: 220px;}.span2 {width: 140px;}.span1 {width: 60px;}.offset12 {margin-left: 980px;}.row-fluid {width: 100%;*zoom: 1;}.row-fluid:before,.row-fluid:after {display: table;content: '' ;}.row-fluid:after {clear: both;}.row-fluid [class*=span] {display: block;float: left;width: 100%;min-height: 28px;margin-left: 2.127659574%;*margin-left: 2.0744680846382977%;-webkit-box-sizing: border-box;   -moz-box-sizing: border-box;    -ms-box-sizing: border-box;        box-sizing: border-box;}.row-fluid [class*=span]:first-child {margin-left: 0;}.row-fluid .span12 {width: 99.99999998999999%;*width: 99.94680850063828%;}.row-fluid .span11 {width: 91.489361693%;*width: 91.4361702036383%;}.row-fluid .span10 {width: 82.97872339599999%;*width: 82.92553190663828%;}.row-fluid .span9 {width: 74.468085099%;*width: 74.4148936096383%;}.row-fluid .span8 {width: 65.95744680199999%;*width: 65.90425531263828%;}.row-fluid .span7 {width: 57.446808505%;*width: 57.3936170156383%;}.row-fluid .span6 { }.row-fluid .span5 {width: 40.425531911%;*width: 40.3723404216383%;}.row-fluid .span4 {width:23.4%}.row-fluid .span3 {width: 31.2%;*width: 31.2%;}.row-fluid .span2 {width: 14.89361702%;*width: 14.8404255306383%;}.row-fluid .span2 a {	text-decoration: none;}.row-fluid .span1 {width: 6.382978723%;*width: 6.329787233638298%;}.container {margin-right: auto;margin-left: auto;*zoom: 1;}.container:before,.container:after {display: table;content: '';}.container:after {clear: both;}.container-fluid {margin: 50px auto;width: 80%;padding-left: 20px;padding-right: 20px;padding-bottom: 30px;}.container-fluid:before,.container-fluid:after {display: table;content: '';}.container-fluid:after {clear: both;}p {margin: 0 0 9px;}p small {font-size: 11px;color: #999999;}.lead {margin-bottom: 18px;font-size: 20px;font-weight: 200;line-height: 27px;}h1,h2,h3,h4,h5,h6 {margin: 0;font-family: inherit;font-weight: bold;color: inherit;text-rendering: optimizelegibility;}h1 small,h2 small,h3 small,h4 small,h5 small,h6 small {font-weight: normal;color: #999999;}h1 {font-size: 30px;line-height: 36px;}h1 small {font-size: 18px;}h2 {font-size: 24px;line-height: 36px;}h2 small {font-size: 18px;}h3 {font-size: 18px;line-height: 27px;}h3 small {font-size: 14px;}h4,h5,h6 {line-height: 18px;}h4 {font-size: 14px;}h4 small {font-size: 12px;}h5 {font-size: 12px;}h6 {font-size: 11px;color: #999999;text-transform: uppercase;}.page-header {padding-bottom: 17px;margin: 18px 0;border-bottom: 1px solid #eeeeee;}.page-header h1 {line-height: 1;}ul,ol {padding: 0;margin: 0 0 9px 25px;}ul ul,ul ol,ol ol,ol ul {margin-bottom: 0;}ul {list-style: disc;}ol {list-style: decimal;}li {line-height: 18px;}ul.unstyled,ol.unstyled {margin-left: 0;list-style: none;}dl {margin-bottom: 18px;}dt,dd {line-height: 18px;}dt {font-weight: bold;line-height: 17px;}dd {margin-left: 9px;}.dl-horizontal dt {float: left;width: 120px;overflow: hidden;clear: left;text-align: right;text-overflow: ellipsis;white-space: nowrap;}.dl-horizontal dd {margin-left: 130px;}hr {margin: 18px 0;border: 0;border-top: 1px solid #eeeeee;border-bottom: 1px solid #ffffff;}strong {font-weight: bold;}em {font-style: italic;}table {max-width: 100%;background-color: transparent;border-collapse: collapse;border-spacing: 0;}.table {width: 100%;margin-bottom: 18px;}.table th,.table td {padding: 8px;line-height: 18px;text-align: left;vertical-align: top;border-top: 1px solid #dddddd;}.table th {font-weight: bold;}.table thead th {vertical-align: bottom;}.table tbody + tbody {border-top: 2px solid #dddddd;}.table-condensed th,.table-condensed td {padding: 4px 5px;}.table-bordered {border: 1px solid #dddddd;border-collapse: separate;*border-collapse: collapsed;border-left: 0;-webkit-border-radius: 4px;   -moz-border-radius: 4px;        border-radius: 4px;}.table tbody tr:hover td,.table tbody tr:hover th {background-color: #f5f5f5;}table .span1 {float: none;width: 44px;margin-left: 0;}table .span2 {float: none;width: 124px;margin-left: 0;}table .span3 {float: none;width: 204px;margin-left: 0;}table .span4 {float: none;width: 284px;margin-left: 0;}table .span5 {float: none;width: 364px;margin-left: 0;}table .span6 {float: none;width: 444px;margin-left: 0;}table .span7 {float: none;width: 524px;margin-left: 0;}table .span8 {float: none;width: 604px;margin-left: 0;}table .span9 {float: none;width: 684px;margin-left: 0;}table .span10 {float: none;width: 764px;margin-left: 0;}table .span11 {float: none;width: 844px;margin-left: 0;}table .span12 {float: none;width: 924px;margin-left: 0;}table .span13 {float: none;width: 1004px;margin-left: 0;}table .span14 {float: none;width: 1084px;margin-left: 0;}table .span15 {float: none;width: 1164px;margin-left: 0;}table .span16 {float: none;width: 1244px;margin-left: 0;}table .span17 {float: none;width: 1324px;margin-left: 0;}table .span18 {float: none;width: 1404px;margin-left: 0;}table .span19 {float: none;width: 1484px;margin-left: 0;}table .span20 {float: none;width: 1564px;margin-left: 0;}table .span21 {float: none;width: 1644px;margin-left: 0;}table .span22 {float: none;width: 1724px;margin-left: 0;}table .span23 {float: none;width: 1804px;margin-left: 0;}table .span24 {float: none;width: 1884px;margin-left: 0;}.quick-action {  display: block;  background-color: #fdfdfd;  background-image: -moz-linear-gradient(top, #fefefe, #f3f3f3);  background-image: -ms-linear-gradient(top, #fefefe, #f3f3f3);  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#fefefe), to(#f3f3f3));  background-image: -webkit-linear-gradient(top, #FDD7A5,#A9BEEC);  background-image: -o-linear-gradient(top, #fefefe, #f3f3f3);  background-image: linear-gradient(top, #fefefe, #f3f3f3);  box-shadow: 0 1px 2px rgba(100,100,100,0.1), 0 1px 0 #ffffff inset;  padding: 10px 0;  color: #999999;  text-shadow: 0 1px 0 #ffffff;  text-align: center;  margin-bottom: 15px;  border: 1px solid #d6d6d6;  border-radius: 3px;    }.quick-action:hover {  color: #666666;}.quick-action span {  margin: 0 auto 3px;  opacity: .4;  filter: alpha(opacity=40); /* for  IE < 9 */  -webkit-transition: opacity 0.2s ease-in-out;     -moz-transition: opacity 0.2s ease-in-out;      -ms-transition: opacity 0.2s ease-in-out;       -o-transition: opacity 0.2s ease-in-out;          transition: opacity 0.2s ease-in-out;}.quick-action:hover span {  opacity: .7;  filter: alpha(opacity=70); /* for  IE < 9 */}/* Boxes */.box {  border: 1px solid #d6d6d6;  box-shadow: 0 1px 3px rgba(100,100,100,0.1);  margin-bottom: 15px;  border-radius: 3px 3px 0 0;  overflow: visible;  position: relative;}.accordion .box {  border-radius: 0;  margin-bottom: -1px !important;}.accordion .box:first-child {  border-radius: 3px 3px 0 0;       }.box.login {  margin: 50px auto 0;  width: 350px;}.box-title {text-align:center;  padding: 10px 15px;margin-bottom:10px;  background-color: #f8f8f8;  background-image: -moz-linear-gradient(top, #fdfdfd, #f6f6f6);  background-image: -ms-linear-gradient(top, #fdfdfd, #f6f6f6);  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#fdfdfd), to(#f6f6f6));  background-image: -webkit-linear-gradient(top, #fdfdfd, #f6f6f6);  background-image: -o-linear-gradient(top, #fdfdfd, #f6f6f6);  background-image: linear-gradient(top, #fdfdfd, #f6f6f6);  border-bottom: 1px solid #d6d6d6;  color: #555555;  text-shadow: 0 1px 0 #ffffff;  font-size: 14px;  font-weight: bold;}.accordion .box-title {  border-bottom: 0;}.box-title[data-toggle=collapse]:hover {  cursor: pointer;}.box.alternate .box-title {  background-color: #444444;  background-image: -moz-linear-gradient(top, #555555, #333333);  background-image: -ms-linear-gradient(top, #555555, #333333);  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#555555), to(#333333));  background-image: -webkit-linear-gradient(top, #555555, #333333);  background-image: -o-linear-gradient(top, #555555, #333333);  background-image: linear-gradient(top, #555555, #333333);  color: #ffffff;  text-shadow: 0 1px 0 #000000;}.box-title span.ico {  display: inline-block;  padding: 10px;  margin: -10px 10px -10px -10px;  border-right: 1px solid #d6d6d6;}.box.alternate .box-title span.ico {  border-right: 1px solid #333;}.box-title span.label {  float: right;}.box-content, .box-content.collapse.in {  background-color: #ffffff;  padding: 15px;}.box.login .box-content form {  margin-bottom: 0;}.box.login .box-content .control-label {  width: 70px;}.box.login .box-content .controls {  margin-left: 90px;}.box.login .box-content .form-actions {  margin: 0 -15px -15px;  padding: 15px;  text-align: center;}.accordion .box-content.in {  border-top: 1px solid #d6d6d6;}.box-content div[class*=span] {  margin-top: 15px;  margin-bottom: 15px;}.box-content.collapse {  padding: 0;}.box-title .nav {  margin: -10px -15px;}.box-title .nav-tabs {  border-bottom: 0;  margin-bottom: -10px !important;}.box-title .nav-tabs li a {  border-radius: 0;  border-top: none;  border-left: 1px solid #d6d6d6;  border-right: 1px solid #d6d6d6;  border-bottom: none !important;  color: #999999;  margin: 0 ;  outline: none;}.box.alternate .box-title .nav-tabs li a {  text-shadow:none;  border-left: 1px solid #444444;  border-right: 1px solid #444444;}.box-title .nav-tabs li a:first-child {  border-left: none !important;}.box-title .nav-tabs li a:hover {  color: #666666;  background-color: transparent !important;  border-width: 0 1px;  border-color: #d6d6d6;}.box-title .nav-tabs li.active a {  background-color: #ffffff !important;  color: #444444;}/** Widgets **/.activity-list {  margin: 0;  list-style: none;}.activity-list li {  display: block;  border-bottom: 1px solid #eeeeee;}.activity-list li:last-child {  border-bottom: none;}.activity-list li a {  display: block;  padding: 7px 10px 7px;  color: #888888;}.activity-list li a:hover {  background-color: #fbfbfb;}.activity-list li a span {  font-size: 11px;  color: #aaaaaa;  font-style: italic;}.activity-list li a i {  opacity: 0.6;  margin-right: 10px;  vertical-align: sub;}.taskDesc i {  margin: 1px 5px 0;}.taskStatus, .taskOptions {  text-align: center !important;}.taskStatus .in-progress {  color: #64909E;}.taskStatus .pending {  color: #AC6363;}.taskStatus .done {  color: #75B468;}.box-content h3 {  background-color: #ffffff;  padding: 15px;  text-align:center;}.container-fluid1 {margin:0px auto;width:600px; *zoom: 1;background:#E4EAEC;padding-left:20px;padding-right:20px;padding-bottom:30px;}.btn-primary,.btn-primary:hover {color: #ffffff;text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);  text-decoration:none;} .btn-primary.active, {color: rgba(255, 255, 255, 0.75);} .btn {border-color: #ccc;border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);} .btn-primary {background-color: #0074cc;*background-color: #0055cc;background-image: -ms-linear-gradient(top, #0088cc, #0055cc);background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#0088cc), to(#AB2A2A));background-image: -webkit-linear-gradient(top, #0088cc,#6B5781c);background-image: -o-linear-gradient(top, #0088cc, #0055cc);background-image: -moz-linear-gradient(top, #0088cc, #0055cc);background-image: linear-gradient(top, #0088cc, #0055cc);background-repeat: repeat-x;border-color: #0055cc #0055cc #003580;border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);padding:10px;border-radius:4px;} .btn-primary:hover,.btn-primary:active,.btn-primary.active,.btn-primary.disabled,.btn-primary[disabled] {background-color: #0055cc;*background-color: #004ab3;} .btn-primary:active,.btn-primary.active {background-color: #004099 \9;} button, input[type=button], input[type=reset], input[type=submit] {  cursor: pointer;}      /* Header */#header {  background-color: #333333;  background-image: -moz-linear-gradient(top, #444444, #222222);  background-image: -ms-linear-gradient(top,#AAA7AD4,#B8CBEA2);  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#444444), to(#222222));  background-image: -webkit-linear-gradient(top#6B57811,#C6CDC32);  background-image: -o-linear-gradient(top, #444444, #222222);  background-image: linear-gradient(top, #444444, #222222);  box-shadow: 0 0 7px rgb(33, 122, 239, 0.23));  height: 70px;  margin-bottom: 0px;  position: relative;}#header form {  margin: 0 !important;}#header > a > img {  margin: 10px 0 0 25px;}#header .hright {  position: relative;  float: right;  margin-right: 30px;}#header .column {  float: left;  padding: 17px 10px;  position: relative;  vertical-align: middle;  color:#FFFFFF;} #header .column span{  float: left;  padding: 7px 10px;  position: relative;  vertical-align: middle;  color:#FFFFFF;} #header .search input {  background: #222222;  box-shadow: 0 -1px 0 #444444 inset, 0 1px 8px rgba(0,0,0,0.5) inset !important;  border: none !important;  padding: 8px 10px;  color: #666666;  margin-bottom: 0;}#header .userinfo {  background: none no-repeat scroll top left #373737;  border: 1px solid #272727;  box-shadow: 0 1px 0 #444444;  color: #CCCCCC;  display: inline-block;  padding: 4px;  position: relative;  vertical-align: top;}#header .userinfo img {  vertical-align: middle;}#header .userinfo span {  width: auto;  display:inline-block !important;}#header .dropdown-menu {  margin-top: -13px;  margin-left: -35px !important;}";
			}
 			map time.getAHTs()
			{
				ahtMap = Map();
				thismonthAHT = Add_Case[Month == today.getMonth() && Case_Status == "Closed"].avg(Handling_Time);
				if(thismonthAHT != null)
				{
					thismonthAHTStr = thisapp.time.intToTime(thismonthAHT.toLong());
					ahtMap.put("thismonthAHT",thismonthAHTStr);
				}
				else
				{
					ahtMap.put("thismonthAHT","N/A");
				}
				thisWeekAHT = Add_Case[week == today.getWeekOfYear() && Case_Status == "Closed"].avg(Handling_Time);
				if(thisWeekAHT != null)
				{
					thisWeekAHTStr = thisapp.time.intToTime(thisWeekAHT.toLong());
					ahtMap.put("thisWeekAHT",thisWeekAHTStr);
				}
				else
				{
					ahtMap.put("thisWeekAHT","N/A");
				}
				totalAHT = Add_Case[Case_Status == "Closed"].avg(Handling_Time);
				if(totalAHT != null)
				{
					totalAHTStr = thisapp.time.intToTime(totalAHT.toLong());
					ahtMap.put("totalAHT",totalAHTStr);
				}
				else
				{
					ahtMap.put("totalAHT","N/A");
				}
				return ahtMap;
			}
 			map time.getAHTsByAcc(int accID)
			{
				ahtMap = Map();
				totalHours = Add_Case[Account == input.accID && Month == today.getMonth() && Case_Status == "Closed"].sum(Handling_Time).toLong();
				totalHoursStr = thisapp.time.intToTime(totalHours);
				ahtMap.put("totalHours",totalHoursStr);
				totalAHT = Add_Case[Account == input.accID && Case_Status == "Closed"].avg(Handling_Time);
				if(totalAHT != null)
				{
					totalAHTStr = thisapp.time.intToTime(totalAHT.toLong());
					ahtMap.put("aht",totalAHTStr);
				}
				else
				{
					ahtMap.put("aht","N/A");
				}
				return ahtMap;
			}
 			map time.getAHTsByDept(int deptID)
			{
				ahtMap = Map();
				thismonthAHT = Add_Case[Department == input.deptID && Month == today.getMonth() && Case_Status == "Closed"].avg(Handling_Time);
				if(thismonthAHT != null)
				{
					thismonthAHTStr = thisapp.time.intToTime(thismonthAHT.toLong());
					ahtMap.put("thismonthAHT",thismonthAHTStr);
				}
				else
				{
					ahtMap.put("thismonthAHT","N/A");
				}
				thisWeekAHT = Add_Case[Department == input.deptID && week == today.getWeekOfYear() && Case_Status == "Closed"].avg(Handling_Time);
				if(thisWeekAHT != null)
				{
					thisWeekAHTStr = thisapp.time.intToTime(thisWeekAHT.toLong());
					ahtMap.put("thisWeekAHT",thisWeekAHTStr);
				}
				else
				{
					ahtMap.put("thisWeekAHT","N/A");
				}
				totalAHT = Add_Case[Department == input.deptID && Case_Status == "Closed"].avg(Handling_Time);
				if(totalAHT != null)
				{
					totalAHTStr = thisapp.time.intToTime(totalAHT.toLong());
					ahtMap.put("totalAHT",totalAHTStr);
				}
				else
				{
					ahtMap.put("totalAHT","N/A");
				}
				return ahtMap;
			}
 			map time.getAHTsByEmp(int empID)
			{
				ahtMap = Map();
				thismonthAHT = Add_Case[Case_Owner == input.empID && Month == today.getMonth() && Case_Status == "Closed"].avg(Handling_Time);
				if(thismonthAHT != null)
				{
					thismonthAHTStr = thisapp.time.intToTime(thismonthAHT.toLong());
					ahtMap.put("thismonthAHT",thismonthAHTStr);
				}
				else
				{
					ahtMap.put("thismonthAHT","N/A");
				}
				thisWeekAHT = Add_Case[Case_Owner == input.empID && week == today.getWeekOfYear() && Case_Status == "Closed"].avg(Handling_Time);
				if(thisWeekAHT != null)
				{
					thisWeekAHTStr = thisapp.time.intToTime(thisWeekAHT.toLong());
					ahtMap.put("thisWeekAHT",thisWeekAHTStr);
				}
				else
				{
					ahtMap.put("thisWeekAHT","N/A");
				}
				totalAHT = Add_Case[Case_Owner == input.empID && Case_Status == "Closed"].avg(Handling_Time);
				if(totalAHT != null)
				{
					totalAHTStr = thisapp.time.intToTime(totalAHT.toLong());
					ahtMap.put("totalAHT",totalAHTStr);
				}
				else
				{
					ahtMap.put("totalAHT","N/A");
				}
				return ahtMap;
			}
	}



	workflow
	{
		form
		{
			Submit_Actions as "Submit"
			{
				type =  form
				form = Web_to_Case
				button = Submit
				on click
				{
					actions 
					{
					on click
					(
						cnt = Callers[Email == input.Email].count();
										if(cnt > 0)
										{
											callerID = Callers[Email == input.Email].ID;
										}
										else
										{
											callerID = insert into Callers
										[
											Added_User=zoho.loginuser
											Phone=input.Phone_Number
											Email=input.Email
											Name=input.Name
										];
										}
										caseID = insert into Add_Case
										[
											Added_User=zoho.loginuser
											Caller=callerID
											Start_Time=zoho.currenttime
											Due_Time=zoho.currenttime.addHour(24)
											Case_Status=input.Case_Status
											Description=input.Problem
											Product=input.Product
											Source=input.Source
											Title=input.Title
										];
										case = Add_Case[ID == caseID];
										thisapp.notify.callerOnCaseCreation(case);
										alert "We have received your request. Your reference number is" + case.Case_ID + ". We will get back to you shortly!";
					)
					}
				}
			}
			Escalate_Actions as "Escalate"
			{
				type =  form
				form = Escalation_Form
				button = Escalate
				on click
				{
					actions 
					{
					on click
					(
						case = Add_Case[ID == input.Case_ID];
										case.Case_Status="Escalated";
										if(input.Department != case.Department && input.Manager == null)
										{
											case.Department=input.Department;
											mng = Managers[Department == input.Department];
											if(mng.count() > 0)
											{
												case.Case_Owner=thisapp.user.getEmpFromManID(mng.ID);
											}
										}
										else if(input.Department != null && input.Manager != null)
										{
											//Department changed
											if(input.Department != case.Department)
											{
												case.Department=input.Department;
											}
											case.Case_Owner=thisapp.user.getEmpFromManID(input.Manager);
										}
										thisapp.case.setDueTime(case);
										thisapp.notify.callerOnCaseEscalation(case);
										thisapp.notify.manOnCaseEscalation(case);
										if(input.Comments != null && input.Comments != "")
										{
											insert into Case_Comments
											[
												Owner=case.Case_Owner
												Case_ID=input.Case_ID
												Caller=case.Caller
												Product=case.Product
												Comments=input.Comments
												Added_User=zoho.loginuser
											]
										}
										openUrl("#Script:dialog.close","same window");
					)
					}
				}
			}
			Save_Actions as "Save"
			{
				type =  form
				form = Troubleshooting_Interface
				button = Save
				on click
				{
					actions 
					{
					on click
					(
						if(input.Case_ID != null)
										{
											case = Add_Case[ID == input.Case_ID];
											insert into Troubleshooting_Log
											[
												Case=input.Case_ID
												Problem=input.Problem_ID
												Status=input.Status
												Account=case.Account
												Caller=case.Caller
												Display_in_Portal=input.Display_in_Portal
												Added_User=zoho.loginuser
											]
										}
										openUrl("#Script:dialog.close","same window");
					)
					}
				}
			}
			Escalate_Actions1 as "Escalate"
			{
				type =  form
				form = Case_Actions
				button = Escalate
				on click
				{
					actions 
					{
					on click
					(
						if(thisapp.user.isManager() || thisapp.user.isEmployee())
										{
											openUrl("#Form:Escalation_Form?zc_Header=false&zc_LoadIn=dialog&Case_ID=" + input.Case_ID,"same window");
										}
					)
					}
				}
			}
			Assign_Actions as "Assign"
			{
				type =  form
				form = Case_Actions
				button = Assign
				on click
				{
					actions 
					{
					on click
					(
						if(!thisapp.user.isCustomer())
										{
											case = Add_Case[ID == input.Case_ID];
											openUrl("#Form:Assign_Case" + "?zc_Header=false&zc_LoadIn=dialog&Case_ID=" + input.Case_ID,"Same window");
										}
					)
					}
				}
			}
			Troubleshoot_Actions as "Troubleshoot"
			{
				type =  form
				form = Case_Actions
				button = Troubleshoot
				on click
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Troubleshooting_Interface?zc_Header=false&zc_LoadIn=dialog&Case_ID=" + input.Case_ID,"same window");
					)
					}
				}
			}
			Assign_Actions1 as "Assign"
			{
				type =  form
				form = Assign_Case
				button = Assign
				on click
				{
					actions 
					{
					on click
					(
						case = Add_Case[ID == input.Case_ID];
										if(input.Department != case.Department)
										{
											case.Department=input.Department;
											thisapp.notify.manOnCaseAssignment(case);
										}
										if(input.Assign_To != case.Case_Owner)
										{
											case.Case_Owner=input.Assign_To;
											thisapp.notify.empOnCaseAssignment(case);
										}
										case.Priority=input.Priority;
										if(input.Due_Time != case.Due_Time)
										{
											thisapp.case.setDueTime(case);
										}
										if(input.Case_Status != case.Case_Status)
										{
											case.Case_Status=input.Case_Status;
											if(case.Case_Status == "Closed")
											{
												case.Resolved_at=zoho.currenttime;
												thisapp.case.setTimeDifference(case);
												thisapp.notify.callerOnCaseClosure(case);
											}
										}
										openUrl("#Script:dialog.close","same window");
					)
					}
				}
			}
			Create_record_scripts14 as "Create record scripts"
			{
				type =  form
				form = Add_Case
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Start_Time = zoho.currenttime;
										hide Start_Time;
										hide Due_Time;
										hide Days;
										hide contactHistory;
										if(!thisapp.settings.enableAttachment())
										{
											hide Attachments;
										}
										hide Hours;
										hide Minutes;
										hide Seconds;
										if(thisapp.user.isEmployee())
										{
											caseOwn = Employees[Email == zoho.loginuserid];
											input.Case_Owner = caseOwn.ID;
											input.Department = caseOwn.Department;
										}
										if(thisapp.user.isCustomer())
										{
											if(thisapp.user.getAccFromEmail(zoho.loginuserid) > 0)
											{
												input.Account = thisapp.user.getAccFromEmail(zoho.loginuserid);
											}
											customer = Callers[Email == zoho.loginuserid];
											input.Caller = customer.ID;
											hide Account;
											if(input.Caller != null)
											{
												disable Caller;
											}
											hide Case_Owner;
											hide Case_Status;
										}
						)
					}
	}

			}
			Create_record_scripts15 as "Create record scripts"
			{
				type =  form
				form = Add_Case
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											case = Add_Case[ID == input.ID];
										thisapp.case.setDueTime(case);
										if(input.Case_Owner != null)
										{
											thisapp.notify.empOnCaseAssignment(case);
										}
										if(input.Department != null)
										{
											thisapp.notify.manOnCaseAssignment(case);
										}
										thisapp.notify.callerOnCaseCreation(case);
						)
					}
	}

			}
			Edit_record_scripts5 as "Edit record scripts"
			{
				type =  form
				form = Add_Case
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											if(!thisapp.settings.enableAttachment())
										{
											hide Attachments;
										}
						)
					}
	}

			}
			Edit_record_scripts6 as "Edit record scripts"
			{
				type =  form
				form = Add_Case
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											case = Add_Case[ID == input.ID];
										thisapp.case.setTimeDifference(case);
										if(input.Due_Time == null)
										{
											thisapp.case.setDueTime(case);
										}
						)
					}
	}

			}
			Edit_record_scripts7 as "Edit record scripts"
			{
				type =  form
				form = Add_Case
				record event = on edit

	on update of Case_Status
	{
					actions 
					{
						custom deluge script
						(
											case = Add_Case[ID == input.ID];
										if(input.Case_Status == "Closed")
										{
											input.Resolved_at = zoho.currenttime;
											thisapp.case.setTimeDifference(case);
										}
										if(input.Case_Status == "Escalated")
										{
											thisapp.case.setDueTime(case);
										}
						)
					}
	}

			}
			Edit_record_scripts8 as "Edit record scripts"
			{
				type =  form
				form = Add_Case
				record event = on edit

	on update of Priority
	{
					actions 
					{
						custom deluge script
						(
											case = Add_Case[ID == input.ID];
										thisapp.case.setDueTime(case);
						)
					}
	}

			}
			Field_scripts5 as "Field scripts"
			{
				type =  form
				form = Add_Case
				record event = on add or edit

	on user input of Caller
	{
					actions 
					{
						custom deluge script
						(
											if(input.Caller != null && !thisapp.user.isCustomer())
										{
											contactInfo = thisapp.html.genCallerInfoHTML(Callers[ID == input.Caller]);
											calInfo = Callers[ID == input.Caller];
											if(calInfo.Associated_Account != null)
											{
												input.Account = calInfo.Associated_Account;
												disable Account;
												if(input.Account != null)
												{
													contactInfo = contactInfo + thisapp.html.genCustomerInfoHTML(Add_Account[ID == input.Account]);
												}
											}
											input.contactHistory = contactInfo;
											show contactHistory;
										}
										else
										{
											hide contactHistory;
										}
						)
					}
	}

			}
			Create_record_scripts16 as "Create record scripts"
			{
				type =  form
				form = Troubleshooting_Log
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Account;
										hide Caller;
										hide Display_in_Portal;
						)
					}
	}

			}
			Create_record_scripts17 as "Create record scripts"
			{
				type =  form
				form = Case_Comments
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Owner;
										hide Case_ID;
										hide Caller;
										hide Product;
										hide Account;
										hide Notify_Customer;
										case = Add_Case[ID == input.Case_ID];
										if(thisapp.user.isCustomer())
										{
											input.Account = thisapp.user.getAccFromEmail(zoho.loginuserid);
											input.Caller = Callers[Email == zoho.loginuserid].ID;
										}
										else
										{
											if(case.Caller != null)
											{
												show Notify_Customer;
											}
											input.Caller = case.Caller;
										}
										if(thisapp.user.isEmployee())
										{
											input.Owner = thisapp.user.getEmpFromEmail(zoho.loginuserid);
										}
										input.Product = case.Product;
						)
					}
	}

			}
			Create_record_scripts18 as "Create record scripts"
			{
				type =  form
				form = Case_Comments
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											if(input.Notify_Customer)
										{
											comment = Case_Comments[ID == input.ID];
											thisapp.notify.callerOnCommentCreation(comment);
										}
										openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			Create_record_scripts19 as "Create record scripts"
			{
				type =  form
				form = Email_Cases
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											disable Case_Status;
										hide Source;
						)
					}
	}

			}
			Create_record_scripts20 as "Create record scripts"
			{
				type =  form
				form = Email_Cases
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											//Commenting out the below script as the Email data returns "Public" as the value for Added_User
										/*cnt = Callers[Email == Added_User].count();
																																	if (cnt  >  0)
																																	{
																																	    callerID = Callers[Email == Added_User].ID;
																																	}
																																	else
																																	{
																																	    callerID = insert into Callers
																																	    [
																																		                                                                                        Added_User = zoho.loginuser
																																		                                                                                        Email = input.Added_User
																																	    ];
																																	}
																																	input.Caller = callerID;*/
										caseID = insert into Add_Case
										[
											Added_User=zoho.loginuser
											Case_Status="Pending"
											Description=input.ZC_Content
											Source="Email"
											Start_Time=zoho.currenttime
											Due_Time=zoho.currenttime.addHour(24)
											Title=input.ZC_Subject
										];
										input.Related_Case = caseID;
						)
					}
	}

			}
			Create_record_scripts21 as "Create record scripts"
			{
				type =  form
				form = Callers
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											if(thisapp.user.isCustomer())
										{
											input.Associated_Account = thisapp.user.getAccFromEmail(zoho.loginuserid);
											hide Associated_Account;
										}
						)
					}
	}

			}
			Create_record_scripts22 as "Create record scripts"
			{
				type =  form
				form = Callers
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											if(input.Associated_Account != null)
										{
											acc = Add_Account[ID == input.Associated_Account];
											//for a better filter results at My_Cases_Customers
											if(!acc.Associated_Emails.contains(input.Email))
											{
												acc.Associated_Emails=acc.Associated_Emails + "," + input.Email;
											}
										}
										openUrl("#Script:dialog.close","samewindow");
						)
					}
	}

			}
			Edit_record_scripts9 as "Edit record scripts"
			{
				type =  form
				form = Callers
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											if(thisapp.user.isCustomer())
										{
											input.Associated_Account = thisapp.user.getAccFromEmail(zoho.loginuserid);
											hide Associated_Account;
										}
						)
					}
	}

			}
			Edit_record_scripts10 as "Edit record scripts"
			{
				type =  form
				form = Callers
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											if(input.Associated_Account != null)
										{
											acc = Add_Account[ID == input.Associated_Account];
											//for a better filter results at My_Cases_Customers
											if(!acc.Associated_Emails.contains(input.Email))
											{
												acc.Associated_Emails=acc.Associated_Emails + "," + input.Email;
											}
										}
										openUrl("#Script:dialog.close","samewindow");
						)
					}
	}

			}
			Edit_record_scripts11 as "Edit record scripts"
			{
				type =  form
				form = Departments
				record event = on edit

	on update of Manager
	{
					actions 
					{
						custom deluge script
						(
											man = Managers[ID == input.Manager];
										input.Manager_Email = man.Email;
						)
					}
	}

			}
			Field_scripts6 as "Field scripts"
			{
				type =  form
				form = Departments
				record event = on add or edit

	on user input of Manager
	{
					actions 
					{
						custom deluge script
						(
											man = Managers[ID == input.Manager];
										input.Manager_Email = man.Email;
						)
					}
	}

			}
			Create_record_scripts23 as "Create record scripts"
			{
				type =  form
				form = Employees
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Manager_Email;
										if(thisapp.user.isEmployee() && !thisapp.user.isAdmin())
										{
											hide Employee_Type;
											disable Manager;
											disable Billing_Rate;
										}
						)
					}
	}

			}
			Create_record_scripts24 as "Create record scripts"
			{
				type =  form
				form = Employees
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											//Insert into Manager if the employee is a manager
										if(input.Employee_Type == "Manager")
										{
											thisapp.user.addManager(Employees[ID == input.ID]);
										}
						)
					}
	}

			}
			Edit_record_scripts12 as "Edit record scripts"
			{
				type =  form
				form = Employees
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											if(input.Email == zoho.loginuserid && !thisapp.user.isAdmin())
										{
											hide Employee_Type;
											disable Manager;
											disable Email;
											disable Billing_Rate;
										}
										hide Manager_Email;
						)
					}
	}

			}
			Edit_record_scripts13 as "Edit record scripts"
			{
				type =  form
				form = Employees
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											//Insert into Manager if the employee is a manager
										if(input.Employee_Type == "Manager")
										{
											thisapp.user.addManager(Employees[ID == input.ID]);
										}
						)
					}
	}

			}
			Field_scripts7 as "Field scripts"
			{
				type =  form
				form = Employees
				record event = on add or edit

	on user input of Manager
	{
					actions 
					{
						custom deluge script
						(
											if(input.Manager != null)
										{
											man = Managers[ID == input.Manager];
											input.Manager_Email = man.Email;
										}
						)
					}
	}

			}
			Create_record_scripts25 as "Create record scripts"
			{
				type =  form
				form = Managers
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											thisapp.user.getEmpFromManID(input.ID);
						)
					}
	}

			}
			Edit_record_scripts14 as "Edit record scripts"
			{
				type =  form
				form = Managers
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											if(input.Email == zoho.loginuserid && !thisapp.user.isAdmin())
										{
											disable Email;
										}
						)
					}
	}

			}
			Create_record_scripts26 as "Create record scripts"
			{
				type =  form
				form = Tasks
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											if(input.Case != null)
										{
											caseTicket = Add_Case[ID == input.Case];
											input.Owner = thisapp.user.getEmpFromEmail(zoho.loginuserid);
											input.Account = caseTicket.Account;
											if(caseTicket.Account != null)
											{
												disable Account;
											}
											if(input.Owner != null)
											{
												disable Owner;
											}
										}
						)
					}
	}

			}
			Create_record_scripts27 as "Create record scripts"
			{
				type =  form
				form = Tasks
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:dialog.close","samewindow");
						)
					}
	}

			}
			Create_record_scripts28 as "Create record scripts"
			{
				type =  form
				form = Case_Attachments
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Case_ID;
						)
					}
	}

			}
			Create_record_scripts29 as "Create record scripts"
			{
				type =  form
				form = Case_Attachments
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			Create_record_scripts30 as "Create record scripts"
			{
				type =  form
				form = Alert
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											if(input.msg = "cPortalEnableSettings")
										{
											input.plain = "<div><p>Portal is not enabled for anybody yet. Set the portal information from the Case Settings.</p</div>>";
										}
										else if(input.msg = "cPortalEnable")
										{
											input.plain = "<div><p>Portal is disabled for this account or you cannot invite others. </p</div>>";
										}
										else if(input.msg = "cPortalInvite")
										{
											input.plain = "<div><p>You cannot invite your colleagues to this portal yet.</p</div>>";
										}
						)
					}
	}

			}
			Create_record_scripts31 as "Create record scripts"
			{
				type =  form
				form = Escalation_Form
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Case_ID;
										if(input.Case_ID != null)
										{
											case = Add_Case[ID == input.Case_ID];
											emp = Employees[ID == case.Case_Owner];
											if(emp.count() > 0)
											{
												input.Department = emp.Department;
												input.Manager = emp.Manager;
											}
										}
						)
					}
	}

			}
			Create_record_scripts32 as "Create record scripts"
			{
				type =  form
				form = Troubleshooting_Interface
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Parent_Question;
										hide Child_Question;
										hide Case_ID;
										if(thisapp.user.isCustomer())
										{
											hide Display_in_Portal;
											input.Display_in_Portal = true;
										}
						)
					}
	}

			}
			Field_scripts8 as "Field scripts"
			{
				type =  form
				form = Troubleshooting_Interface
				record event = on add or edit

	on user input of Problem_ID
	{
					actions 
					{
						custom deluge script
						(
											problem = Add_a_Problem[ID == input.Problem_ID];
										style = "<style>.help{min-width:400px;}</style>";
										input.plain = style + "<div class='help'>" + problem.Help_Text + "</div>";
										show Parent_Question;
										input.Parent_Question:ui.add(problem.Trouble_shooting_Questions);
										hide Child_Question;
						)
					}
	}

			}
			Field_scripts9 as "Field scripts"
			{
				type =  form
				form = Troubleshooting_Interface
				record event = on add or edit

	on user input of Child_Question
	{
					actions 
					{
						custom deluge script
						(
											que = Add_a_Question[ID == input.Child_Question];
										input.plain = que.Help_Text;
						)
					}
	}

			}
			Field_scripts10 as "Field scripts"
			{
				type =  form
				form = Troubleshooting_Interface
				record event = on add or edit

	on user input of Parent_Question
	{
					actions 
					{
						custom deluge script
						(
											que = Add_a_Question[ID == input.Parent_Question];
										input.plain = que.Help_Text;
										if(QA_Map[Parent_Question == input.Parent_Question].count() > 0)
										{
											qaMap = QA_Map[Parent_Question == input.Parent_Question].Child_Questions.getAll();
											input.Child_Question:ui.add(qaMap);
											show Child_Question;
										}
						)
					}
	}

			}
			Create_record_scripts33 as "Create record scripts"
			{
				type =  form
				form = Case_Actions
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Case_ID;
						)
					}
	}

			}
			Create_record_scripts34 as "Create record scripts"
			{
				type =  form
				form = Assign_Case
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											if(input.Case_ID != null)
										{
											case = Add_Case[ID == input.Case_ID];
											input.Priority = case.Priority;
											input.Department = case.Department;
											input.Assign_To = case.Case_Owner;
											input.Case_Status = case.Case_Status;
											input.Due_Time = case.Due_Time;
											hide Case_ID;
											if(input.Assign_To == null)
											{
												input.Assign_To = thisapp.user.getEmpFromEmail(zoho.loginuserid);
											}
											if(input.Department == null)
											{
												input.Department = Departments[Employees == input.Assign_To || Manager_Email == zoho.loginuserid].ID;
											}
											if(input.Case_Status == "Pending")
											{
												input.Case_Status = "Open";
											}
										}
						)
					}
	}

			}
			Field_scripts11 as "Field scripts"
			{
				type =  form
				form = Search_Form
				record event = on add or edit

	on user input of Go_to_Account
	{
					actions 
					{
						custom deluge script
						(
											acc = Add_Account[ID == input.Go_to_Account];
										if(acc.Email != null)
										{
											openUrl("#View:Customer_Profile?email=" + acc.Email,"same window");
										}
						)
					}
	}

			}
		}
		schedule
		{
			Callback_Reminder as "Callback_Reminder"
			{
				type =  schedule
				form = Tasks
				start = before 1 hours from Scheduled_Time
				time zone = "Asia/Calcutta"
				on start
				{
					actions 
					{
					on load
					(
						case = Add_Case[ID == input.Case];
										if(case.Case_Owner != null)
										{
											thisapp.notify.empOnCallback(case);
										}
					)
					}
				}
			}
			Overdue_Reminder as "Overdue_Reminder"
			{
				type =  schedule
				form = Add_Case
				start = before 1 hours from Due_Time
				time zone = "Asia/Calcutta"
				on start
				{
					actions 
					{
					on load
					(
						case = Add_Case[ID == input.ID];
										if(case.Case_Owner != null)
										{
											thisapp.notify.empOnCaseOverDue(case);
										}
										if(case.Department != null)
										{
											thisapp.notify.manOnCaseOverDue(case);
										}
					)
					}
				}
			}
		}
		functions
		{
			Assign as "Assign"
			{
				type =  functions
				form = Add_Case
				on start
				{
					actions 
					{
					launch.assignCase(Add_Case);
					}
				}
			}
			Case_View as "Case View"
			{
				type =  functions
				form = Add_Case
				on start
				{
					actions 
					{
					launch.caseView(ID);
					}
				}
			}
			Case_View1 as "Case View"
			{
				type =  functions
				form = Add_Case
				on start
				{
					actions 
					{
					launch.caseView(ID);
					}
				}
			}
			Close as "Close"
			{
				type =  functions
				form = Tasks
				on start
				{
					actions 
					{
					case.closeTask(Tasks);
					}
				}
			}
			Case_View2 as "Case View"
			{
				type =  functions
				form = Add_Case
				on start
				{
					actions 
					{
					launch.caseView(ID);
					}
				}
			}
			Case_View3 as "Case View"
			{
				type =  functions
				form = Add_Case
				on start
				{
					actions 
					{
					launch.caseView(ID);
					}
				}
			}
			Close1 as "Close"
			{
				type =  functions
				form = Tasks
				on start
				{
					actions 
					{
					case.closeTask(Tasks);
					}
				}
			}
			Case_View4 as "Case View"
			{
				type =  functions
				form = Add_Case
				on start
				{
					actions 
					{
					launch.caseView(ID);
					}
				}
			}
			Case_View5 as "Case View"
			{
				type =  functions
				form = Add_Case
				on start
				{
					actions 
					{
					launch.caseView(ID);
					}
				}
			}
			Case_View6 as "Case View"
			{
				type =  functions
				form = Add_Case
				on start
				{
					actions 
					{
					launch.caseView(ID);
					}
				}
			}
			Case_View7 as "Case View"
			{
				type =  functions
				form = Add_Case
				on start
				{
					actions 
					{
					launch.caseView(ID);
					}
				}
			}
			Case_View8 as "Case View"
			{
				type =  functions
				form = Add_Case
				on start
				{
					actions 
					{
					launch.caseView(ID);
					}
				}
			}
			Invite_to_Portal as "Invite to Portal"
			{
				type =  functions
				form = Callers
				on start
				{
					actions 
					{
					user.addToPortal(Email);
					}
				}
			}
			View_Profile as "View Profile"
			{
				type =  functions
				form = Add_Account
				on start
				{
					actions 
					{
					launch.customerProfile(Email);
					}
				}
			}
			Invite_to_Portal1 as "Invite to Portal"
			{
				type =  functions
				form = Callers
				on start
				{
					actions 
					{
					user.addToPortal(Email);
					}
				}
			}
			Display_in_Portal as "Display in Portal"
			{
				type =  functions
				form = Troubleshooting_Log
				on start
				{
					actions 
					{
					troubleshoot.displayInPortal(Troubleshooting_Log);
					}
				}
			}
			Case_View9 as "Case View"
			{
				type =  functions
				form = Add_Case
				on start
				{
					actions 
					{
					launch.caseView(ID);
					}
				}
			}
		}
	}
	share_settings
	{
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true}
				description = "This profile will have all the permissions.\n"
			}
			"User"
			{
				name = "User"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:true}
				description = "This profile only have add and view permission.\n"
			}
			"Member"
			{
				name = "Member"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:true}
				description = "This profile will not have administrative permissions.\n"
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users."
				}
			}
	}

	customize
	{
		
		layout = "pane left"
		color = "black"
		base theme = "professional"
		new theme = 4
		new theme color = 1
		icons = true
    	icon type = 1
    	icon name = "zc-ab-sales-and-supp2"
    	icon theme = "yellow"
	}

	
}