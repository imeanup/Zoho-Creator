/*
 * Author       : app.zohocreator
 * Generated on : 06-May-2020 23:08:24
 * Version      : 1.0
 */
 application "Real Estate Management"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "Asia/Kolkata"
 	time format = "24-hr"
	section Search_Property
	{
		displayname= "Search Property"
		icon = "ui-1-zoom"
				 page Mobile_Search 
	 	 { 
 	 	 displayname = "Search Property" 

 	 	 icon = "" 

 	 	 hide =  true
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\tmobileDeviceConfig='{\"layout\":{\"displayType\":\"card\",\"design\":\"onebyone\",\"forcedOrientation\":false}}'\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = '385'\n   \t\t size = '8'\n   \t\t color = '#FFFFFF'\n   \t\t bold = 'true'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'New employees this month'\n   \t\t size = '3'\n   \t\t color = '#FFFFFF'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#7FA9F1'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Builder\/Developer'\n   \t\t size = '2'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<button    \t\t text = 'View Properties'\n   \t\t size = '4'\n   \t\t color = '#FFFFFF'\n   \t\t bgColor = '#089e3c'\n   \t\t type = 'rounded'\n   \t\t action = 'OpenPage'\n   \t\t componentLinkName = 'Property_Type_Selection_Mobile_Builder'\n   \t\t target = 'same-window'\n   \t\t cornerRadius = '60px'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t padding = '20px'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Agent\/Broker\/Individual\/Owner'\n   \t\t size = '2'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<button    \t\t text = 'View Properties'\n   \t\t size = '4'\n   \t\t color = '#FFFFFF'\n   \t\t bgColor = '#089e3c'\n   \t\t type = 'rounded'\n   \t\t action = 'OpenPage'\n   \t\t componentLinkName = 'Property_Type_Selection_Mobile_Others'\n   \t\t target = 'same-window'\n   \t\t cornerRadius = '60px'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Search 
	 	 { 
 	 	 displayname = "Search" 

 	 	 icon = "" 
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"displayType\":\"card\",\"design\":\"fluid\",\"style\":\"padding-right:0px;padding-top:0px;padding-bottom:0px;padding-left:0px;\"}}'\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Search1'>\n\t<![CDATA[htmlpage Search1()\ncontent\n&lt;%{\n\t%&gt;\n&lt;style&gt;\n#zppagesLive, #elementsContainer, .elemContainment, #row_1, .column-container, #Search1, .zpAlignPos, .zc-pb-tile-container, .zc-pb-tile-card, .zc-pb-embed-placeholder-content{\n\theight:100% !important;\n\toverflow: hidden;\n}\n\n\t.body-class\n\t\t{\n\t\toverflow: hidden;\n\t\t}\n\t.page_content_wrapper{\n\t\toverflow:hidden;\n\t}\n\t\n  #Location{\n  border:none;\n  }\n .inner .container-fixed{\n\t  padding: 0px !important;\n  }\n  form.form-table.label-left\n  {\n\t  width:inherit !important;\n\t \/\/ position:fixed;\n  }\n  .zc-form-fullheight\n  {\n\t  background:inherit !important;\n  }\n  .zc-footer-wrapper\n  {\n\t  border-top:none !important;\n  }\n  .zc-form-fullheight .form-outer-wrapper .formContainer{\n\t  padding-right:0px !important;\n  }\n  .zcform_Search_Property_Form .form-outer-wrapper{\n  background:none;\n  }\n  .zcform_Search_Property_Form .form-outer-wrapper .formbutton{\n  border-top:none;\n  padding:0px;\n  }\n  .zcform_Search_Property_Form .form-group label.form-label{\n  color:#103c7e;\n  }\n  \n  .zcform_Search_Property_Form .select2-container .select2-choice&gt;.select2-chosen {\n    color: #103c7e;\n\t}\n\t\n  .zcform_Search_Property_Form #select2-result-label-li.select2-result-label {\n  color:#103c7e;\n  }\n  .zcform_Search_Property_Form .flLeft.tempContDiv.zc-For_field {\n  color:#103c7e;\n  }\n    #Search_Property_Form_1 .zc-appformcontent\n  {\n    background: none;\n  }\n  #Search_Property_Form_1 .zc-formcontent\n  {\n  border:0 none !important;\n  box-shadow: none;\n  }\n  \n  #Search_Property_Form_1 .zc-labelheader label {\n    color: #103c7e;\n  }\n#Search_Property_Form_1 .zc-radiolabel {\n    color: #103c7e;\n  }\n#Search_Property_Form_1  .zc-searchlookupvalue-div table {\n    color: #103c7e;\n  }\n  #Search_Property_Form_1  .search-selected-val {\n    color: #103c7e;\n  }\n   #Search_Property_Form_1  .zc-dropdown {\n    color: #103c7e;\n  }\n  .searchFormContainer table{\n\t    margin: auto;\n  }\n  .searchFormContainer .zc-inputheader table{\n    position:relative;\n  }\n   .back{\n    background-image: url(&quot;http:\/\/i.stack.imgur.com\/kOnzy.gif&quot;);\nbackground-repeat: none;\n    background-position: 50% 40%;\n  background-repeat: no-repeat;\n  background-size: 130px;\n  }\n  .select2-drop.select2-drop-active{\n\t min-width:151px !important;\n\t max-width:151px !important;\n  }\n  .zc-searchlookup-div-singleselect {\t\t\n    width: 151px !important;\t\t\n    box-sizing: border-box;\t\t\n\t}\t\t\n\t#Search_Property_Form_1 .zc-dropdown {\t\t\n    width: 151px !important;\t\t\n\t}\n  .form-choice-field {\n\t width:151px !important;\n  }\n  .zc-component{\n\t  height:100%;\n  }\n  .select2-container .select2-choice{\n\t  border-radius: 8px;\n  }\n  .select2-drop-above{\nborder-top-left-radius: 8px;\t  \nborder-top-right-radius: 8px;\nborder-bottom-left-radius: 0px !important;\t  \nborder-bottom-right-radius: 0px !important;\t  \n  }\n  .select2-drop-active{\nborder-top-left-radius: 0px;\t  \nborder-top-right-radius: 0px;\nborder-bottom-left-radius: 8px;\t  \nborder-bottom-right-radius: 8px;\t  \n  }\n  \n  &lt;\/style&gt;\n  &lt;div style=&quot;width:100%; overflow:hidden; background: white; box-sizing: border-box;&quot;&gt;\n  &lt;div style=&quot;width:27%;display:inline-block;box-sizing: border-box;&quot;&gt;\n  &lt;div style=&quot;max-width:362px;margin:0px auto;text-align: center;box-sizing: border-box;&quot;&gt;\n    &lt;h2 style=&quot;color: #103c7e;&quot;&gt;Filter Result&lt;\/h2&gt;\n  &lt;div style=&quot;width: 100%; margin: 10px auto&quot;&gt;\n         &lt;div class=&quot;searchFormContainer&quot; style=&quot;width:100%; height:460px;&quot; zc_mobileView=&apos;inline&apos; elName=&apos;zc-component&apos; formLinkName=&apos;Search_Property_Form&apos; params=&apos;zc_BdrClr=white&amp;zc_Header=false&amp;zc_SuccMsg=Data Added Sucessfully!&amp;zc_SubmitVal=Submit&amp;zc_ResetVal=Reset&amp;zc_mobileView=inline&apos;&gt; &lt;\/div&gt;\n\n   &lt;\/div&gt;\n\t\t \n  &lt;\/div&gt;\n&lt;\/div&gt;\n  \t\n\t\t &lt;div style=&quot;display:inline-block;float:right;width:73%;border-left: 2px solid black;box-sizing: border-box;height:100%;position:absolute;&quot;&gt;\n    \n\n  &lt;div style=&quot;width:100%;height:100%;&quot;&gt;\n  &lt;iframe class=&quot;back&quot; name=&apos;frame12&apos; allowTransparency=&apos;true&apos; zc_mobileView=&apos;inline&apos;  style=&quot;border:none; margin:0px auto; width:100%;box-sizing:border-box; height:100%;&quot; src=&apos;&lt;%=zoho.appuri%&gt;view-embed\/New_Search_Result?forr=null&amp;PropertyType=null&amp;bedrooms=null&amp;posted_by=null&amp;City=null&amp;zc_mobileView=inline&apos;&gt;&lt;\/iframe&gt;    \n &lt;\/div&gt;\n  &lt;div style=&quot;clear:both;&quot;&gt;&lt;\/div&gt;\n  &lt;\/div&gt;\n   &lt;div style=&quot;clear:both;&quot;&gt;&lt;\/div&gt;\n  &lt;\/div\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Other_Property
	{
		displayname= "Other Property"
		icon = "users-2-a-add"
		form Add_Your_Property
		{
			displayname = "Add Your Property"
			success message = "Your Property Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Member
			(
				type = picklist
				values  = Add_User[Email == zoho.loginuserid].ID
    			displayformat = [Name1.first_name + " - " + Name1.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_field
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Property_Type1
			(
				type = picklist
				displayname = "Property Type"
				values = {"Flat/Apartment", "House/Villa", "Shop", "Land"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Property_Condition
			(
				type = picklist
				displayname = "Property Condition"
				values = {"New Property", "Resale"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Property_For
			(
				type = picklist
				displayname = "Property For"
				values = {"Rent", "Sale"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Location1
			(
    			type = address
				displayname = "Location"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have City1
			(
				type = picklist
				displayname = "City"
				values  = Cities.ID
    			displayformat = [City]
				allow new entries = true
				[
					displayname = ""
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Total_Area_in_square_feets
			(
    			type = text
				displayname = "Total Area (in square feets)"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Nearest_Landmark
			(
    			type = text
				displayname = "Nearest Landmark"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Furnishing
			(
				type = picklist
				values = {"Unfurnished", "Semi Furnished", "Fully Furnished"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Image
			(
    			type = image
				source  = public_url,file
				aspect ratio = original
				camera = primary
				preview duration = 0
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Number_of_Bed_Rooms
			(
				type = number
				displayname = "Number of Bed Rooms"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Number_of_Bathrooms
			(
				type = number
				displayname = "Number of Bathrooms"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Land_Breadth
			(
				type = number
				displayname = "Land Breadth"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Land_Length
			(
				type = number
				displayname = "Land Length"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Floor_Number
			(
				type = number
				displayname = "Floor Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Rent_Per_Month
			(
				displayname = "Rent Per Month"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			Rate_Per_Square_Feet
			(
				displayname = "Rate (Per Square Feet)"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			Maintainence_Charge
			(
				displayname = "Maintainence Charge"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			Parking_Space
			(
				type = picklist
				displayname = "Parking Space"
				values = {"No Parking Space", "1 Two-Wheeler", "2 Two-Wheelers", "1 Four-Wheeler", "2 Four-Wheelers"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Comments
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"Active", "Inactive"}
				initial value = "Active"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Sold_By
			(
				type = picklist
				displayname = "Sold By"
				values  = Add_User.ID
    			displayformat = [Name1.first_name + " - " + Name1.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		custom All_Properties_by_Others
		{
			displayName = "All Properties by Others"
			show all rows from Add_Your_Property    
			(
				Status
				Sold_By as "Sold By"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				custom action "Sold"
				(
	  			workflow = Change_Property_Status_to
				show action in edit record menu = true
				column header = "Sold"
				condition = (Status == "Active")
				)
				City1 as "City"
				custom action "View Enquiries"
				(
	  			workflow = Open_Enquiries_script
				show action in edit record menu = true
				column header = "View Enquiries"
				)
				Member
				(
					view = All_Users
				)
				Date_field as "Date"
				Furnishing
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Number_of_Bathrooms as "Number of Bathrooms"
				Land_Breadth as "Land Breadth"
				Nearest_Landmark as "Nearest Landmark"
				Land_Length as "Land Length"
				Floor_Number as "Floor Number"
				Rent_Per_Month as "Rent Per Month"
				Rate_Per_Square_Feet as "Rate (Per Square Feet)"
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				Comments
				Property_For as "Property For"
				Property_Type1 as "Property Type"
				Image
				Location1  as "Location"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
				Property_Condition as "Property Condition"
			)
			filters
			(
				Member
			)
			group by
			(
				Status ascending
			)
			options
			(
				icon = "ui-1-database"
	 		)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 19
		     			title = "Overview"
						fields
						(
							Image
							Property_Type1 as "Property Type"
							Location1 as "Location"
							Property_For as "Property For"
							Property_Condition as "Property Condition"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Print   	   
								Delete   	   
								"Sold"
								"View Enquiries"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
								"Sold"
								"View Enquiries"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 15
		     			title = "Overview"
						fields
						(
							Image
							Property_For as "Property For"
							Location1 as "Location"
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Property_Type1 as "Property Type"
							Property_Condition as "Property Condition"
							Date_field as "Date"
							Location1 as "Location"
							Nearest_Landmark as "Nearest Landmark"
							City1 as "City"
							Total_Area_in_square_feets as "Total Area (in square feets)"
				"Sold"
				"View Enquiries"
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Other Details"
						fields
						(
							Furnishing
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_Bathrooms as "Number of Bathrooms"
							Land_Breadth as "Land Breadth"
							Land_Length as "Land Length"
							Floor_Number as "Floor Number"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							Rent_Per_Month as "Rent Per Month"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom Your_Added_Properties
		{
			displayName = "Your Added Properties"
			show all rows from Add_Your_Property  [Member.Email == zoho.loginuserid]  
			(
				Status
				Sold_By as "Sold By"
				custom action "View Enquiries"
				(
	  			workflow = Open_Enquiries_script1
				show action in edit record menu = true
				column header = "View Enquiries"
				)
				Location1  as "Location"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
				Image
				Rate_Per_Square_Feet as "Rate (Per Square Feet)"
				Nearest_Landmark as "Nearest Landmark"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				Date_field as "Date"
				Property_Condition as "Property Condition"
				City1 as "City"
				Member
				Property_Type1 as "Property Type"
				Property_For as "Property For"
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Furnishing
				Number_of_Bathrooms as "Number of Bathrooms"
				Land_Breadth as "Land Breadth"
				Land_Length as "Land Length"
				Floor_Number as "Floor Number"
				Rent_Per_Month as "Rent Per Month"
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				Comments
			)
			group by
			(
				Property_For ascending
				Status ascending
			)
			options
			(
				icon = "ui-2-grid-49"
	 		)
			quickview
			(
				layout
				(
		 			type = 3
					datablock1
					(
			 			layout type = 15
		     			title = "Overview"
						fields
						(
							Image
							Property_Type1 as "Property Type"
							Location1 as "Location"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"View Enquiries"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Property_For as "Property For"
							Location1 as "Location"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							Rent_Per_Month as "Rent Per Month"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Member
							Property_Type1 as "Property Type"
							Property_Condition as "Property Condition"
							Date_field as "Date"
							Property_For as "Property For"
							Location1 as "Location"
							Nearest_Landmark as "Nearest Landmark"
							City1 as "City"
							Total_Area_in_square_feets as "Total Area (in square feets)"
				"View Enquiries"
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Other Details"
						fields
						(
							Furnishing
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_Bathrooms as "Number of Bathrooms"
							Land_Breadth as "Land Breadth"
							Land_Length as "Land Length"
							Floor_Number as "Floor Number"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Projects
	{
		icon = "education-books-46"
		form Add_Project
		{
			displayname = "1. Add Project"
			success message = "Project Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Member
			(
				type = picklist
				values  = Add_User.ID
    			displayformat = [Email]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			must have Project_Name
			(
    			type = text
				displayname = "Project Name"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			must have Project_Includes1
			(
				type = checkboxes
				displayname = "Project Includes"
				values = {"Shop", "House/Villa", "Land", "Flat/Apartment"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Location1
			(
    			type = address
				displayname = "Location"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have City
			(
				type = picklist
				values  = Cities.ID
    			displayformat = [City]
				allow new entries = true
				[
					displayname = ""
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			must have Project_Area
			(
				type = decimal
				displayname = "Project Area(Sq.Ft.)"
	 			row = 1
	 			column = 1   
				width = 100px
			)
			must have Amenities
			(
				type = list
				values = {"Grand Reception Lounge", "Luxurious,feature-rich Clubhouse", "Fully equipped Gym and Health Studio", "Swimming pool", "Elders corner", "Dance/Aerobics/Yoga Studio", "Kids Arena with Creche", "Indoor Sports Arena", "Pool Room for Snooker/Billiards", "Room for Board game", "Lawn Tennis", "Half Basket Ball Court and Jogging Track", "Luxurious", "feature-rich Clubhouse"}
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = 206px
			)
			must have Blocks_Details
			(
				type = grid
				displayname = "Blocks Details"
				values  = Project_Blocks_Subform.ID
    			bidirectional = Project
	 			row = 1
	 			column = 1   
				width = medium
			)
			About
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Flats_Apartments_Master_ID
			(
				type = list
				displayname = "Flats/Apartments Master - ID"
				values  = Add_Flats_Apartments_Shop_Details.ID
    			bidirectional = Project_Name
    			displayformat = [ID]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Block_Details_Master_ID
			(
				type = list
				displayname = "Block Details Master - ID"
				values  = Add_Block_Detail.ID
    			bidirectional = Project_Name
    			displayformat = [ID]
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assign_Agent
			(
				type = picklist
				displayname = "Assign Agent"
				values  = Add_User.ID
    			displayformat = [" " + Name1.prefix + " " + Name1.first_name + " " + Name1.last_name + " " + Name1.suffix]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "location-pin-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Block_Detail
		{
			displayname = "2. Add Blocks - Flats/Apartments/Shops"
			success message = "Block Details Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Project_Name
			(
				type = picklist
				displayname = "Project Name"
				values  = Add_Project.ID
    			bidirectional = Block_Details_Master_ID
    			displayformat = [Project_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			must have Block_Name
			(
				type = picklist
				displayname = "Block Name"
				values  = Project_Blocks_Subform.ID
    			displayformat = [Block_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Section2
			(
				type = section
				displayname = "Section"
	 			row = 2
	 			column = 0   
				width = medium
			)
			Show_Block_Type_Details
			(
    			type = plaintext
				value = "<br />"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Floor_Details
			(
				type = grid
				displayname = "Floor Details"
				values  = Floor_Details_Subform.ID
    			bidirectional = Block_Details_Master_Lookup
				defaultrow = 1
	 			row = 3
	 			column = 1   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 4
	 			column = 0   
				width = medium
			)
			Input_Flats_Apartments_Shop_Details
			(
    			type = checkbox
				displayname = "Select If You Want To Input More Details Like Flats/Apartments/Shop Details Of Each Floor In This Block Now"
				initial value = false
	 			row = 4
	 			column = 1   
				width = medium
			)
			Land_House_Villa_Details
			(
				type = grid
				displayname = "Land/House/Villa Details"
				values  = Land_House_Villa_Subform.ID
	 			row = 5
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "media-1-polaroid-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Flats_Apartments_Shop_Details
		{
			displayname = "2.1. Add Units - Flats/Apartments/Shop"
			success message = "Flats/Apartments/Shop Details Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Project_Name
			(
				type = picklist
				displayname = "Project Name"
				values  = Add_Project.ID
    			bidirectional = Flats_Apartments_Master_ID
    			displayformat = [Project_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			must have Block_Name
			(
				type = picklist
				displayname = "Block Name"
				values  = Project_Blocks_Subform.ID
    			displayformat = [Block_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			must have Floor_Number
			(
				type = picklist
				displayname = "Floor Number"
				values  = Floor_Details_Subform.ID
    			displayformat = [Floor_Number]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Show_Block_Type_Details
			(
    			type = plaintext
				value = ""
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Flats_Apartments_Shop_Details
			(
				type = grid
				displayname = "Flats/Apartments/Shop Details"
				values  = Floor_Flats_Apartments_Subform.ID
    			bidirectional = Flats_Apartments_Master
				defaultrow = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assign_Agent
			(
				type = picklist
				displayname = "Assign Agent"
				values  = Add_User.ID
    			displayformat = [" " + Name1.prefix + " " + Name1.first_name + " " + Name1.last_name + " " + Name1.suffix]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "media-1-polaroid-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Land_House_Villa_Details
		{
			displayname = "3. Add Units - Land/House/Villa"
			success message = "Block Details Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Project_Name
			(
				type = picklist
				displayname = "Project Name"
				values  = Add_Project.ID
    			displayformat = [Project_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			must have Block_Name
			(
				type = picklist
				displayname = "Block Name"
				values  = Project_Blocks_Subform.ID
    			displayformat = [Block_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Section2
			(
				type = section
				displayname = "Section"
	 			row = 2
	 			column = 0   
				width = medium
			)
			Show_Block_Type_Details
			(
    			type = plaintext
				value = "<br />"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Floor_Details
			(
				type = grid
				displayname = "Floor Details"
				values  = Floor_Details_Subform.ID
				defaultrow = 1
	 			row = 3
	 			column = 1   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 4
	 			column = 0   
				width = medium
			)
			Input_Flats_Apartments_Shop_Details
			(
    			type = checkbox
				displayname = "Select If You Want To Input More Details Like Flats/Apartments/Shop Details Of Each Floor In This Block Now"
				initial value = false
	 			row = 4
	 			column = 1   
				width = medium
			)
			Land_House_Villa_Details
			(
				type = grid
				displayname = "Land/House/Villa Details"
				values  = Land_House_Villa_Subform.ID
    			bidirectional = Block_Details_Master_Lookup
	 			row = 5
	 			column = 1   
				width = medium
			)
			Section3
			(
				type = section
				displayname = "Section"
	 			row = 6
	 			column = 0   
				width = medium
			)
			Assign_Agent
			(
				type = picklist
				displayname = "Assign Agent"
				values  = Add_User.ID
    			displayformat = [" " + Name1.prefix + " " + Name1.first_name + " " + Name1.last_name + " " + Name1.suffix]
				sortorder = ascending
	 			row = 6
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "media-1-polaroid-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Projects
		{
			displayName = "All Projects"
			show all rows from Add_Project    
			(
				Blocks_Details.Block_Type1 as "Blocks Details.Block_Type1"
				Member
				About
				Project_Includes1 as "Project Includes"
				Blocks_Details.Block_Name as "Blocks Details"
				custom action "Sold Out"
				(
	  			workflow = Project_Sold_out_Script
				show action in edit record menu = true
				column header = "Sold Out"
				)
				Amenities
				City
				Project_Area as "Project Area(Sq.Ft.)"
				custom action "Assign Agent"
				(
	  			workflow = Assign_agent_to_project_s
				show action in view header = true
				show action in edit record menu = true
				column header = "Assign Agent"
				)
				Project_Name as "Project Name"
				Assign_Agent as "Current Agent"
			)
			options
			(
				icon = "location-pins"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Blocks_Details.Block_Name as "Blocks Details"
							Blocks_Details.Block_Type1 as "Blocks Details.Block_Type1"
							Project_Area as "Project Area(Sq.Ft.)"
							Amenities
							City
							Member
							About
							Project_Includes1 as "Project Includes"
				"Sold Out"
				"Assign Agent"
							Assign_Agent as "Current Agent"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Sold Out"
								"Assign Agent"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
								"Sold Out"
								"Assign Agent"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Project_Area as "Project Area(Sq.Ft.)"
							Amenities
							City
				"Assign Agent"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Project_Blocks
		{
			displayName = "All Blocks - Flats/Apartment/Shops"
			show all rows from Add_Block_Detail    
			(
				Project_Name as "Project Name"
				Floor_Details as "Shops/Apartments Floor Details"
				(
					view = Floor_Details_Subform_Report
					field = Floor_Details.Floor_Number + " - " + Floor_Details.Number_of_Flats_Apartments_Shops
				)
				Block_Name as "Block Name"
				Block_Name.Block_Type1 as "Block Type"
			)
			options
			(
				icon = "media-1-polaroid-multiple"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Block_Name.Block_Type1 as "Block Type"
							Floor_Details.Floor_Number as "Shops/Apartments Floor Details"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Block_Name.Block_Type1 as "Block Type"
							Floor_Details.Floor_Number as "Shops/Apartments Floor Details"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Project_Flats_Apartments_Shop
		{
			displayName = "All Units - Flats/Apartments/Shop"
			show all rows from Add_Flats_Apartments_Shop_Details    
			(
				Project_Name as "Project Name"
				Block_Name as "Block Name"
				Floor_Number as "Floor Number"
				Flats_Apartments_Shop_Details.Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Details"
				(
					view = Floor_Flats_Apartments_Subform_Report
				)
				Assign_Agent as "Current Agent"
				custom action "Assign Agent"
				(
	  			workflow = Assign_agent_to_block_scr
				show action in edit record menu = true
				column header = "Assign Agent"
				)
			)
			options
			(
				icon = "media-1-polaroid-multiple"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Floor_Number as "Floor Number"
							Flats_Apartments_Shop_Details.Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Details"
							Assign_Agent as "Current Agent"
				"Assign Agent"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Floor_Number as "Floor Number"
							Flats_Apartments_Shop_Details.Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Details"
				"Assign Agent"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Project_Lands_Houses_Villas
		{
			displayName = "All Units - Lands/Houses/Villas"
			show all rows from Add_Land_House_Villa_Details    
			(
				Project_Name as "Project Name"
				Block_Name as "Block Name"
				Assign_Agent as "Current Agent"
				Land_House_Villa_Details.Land_House_Villa_Number as "Lands/Houses/Villas"
				(
					view = Land_House_Villa_Subform_Report
				)
				custom action "Assign Agent"
				(
	  			workflow = Assign_agent_to_house_scr
				show action in edit record menu = true
				column header = "Assign Agent"
				)
			)
			options
			(
				icon = "media-1-polaroid-multiple"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Land_House_Villa_Details.Land_House_Villa_Number as "Lands/Houses/Villas"
							Assign_Agent as "Current Agent"
				"Assign Agent"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Assign_Agent as "Current Agent"
							Land_House_Villa_Details.Land_House_Villa_Number as "Lands/Houses/Villas"
				"Assign Agent"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Users
	{
		icon = "users-multiple-11"
		form Add_User
		{
			displayname = "Add User"
			success message = "User Details Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Member_Type
			(
				type = picklist
				displayname = "Member Type"
				values = {"Individual/Owner", "Agent/Broker", "Builder/Developer"}
	 			row = 1
	 			column = 1   
				width = 206px
			)
			must have Name1
			(
    			type = name
				displayname = "Name"
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Image
			(
    			type = image
				source  = public_url,file
				aspect ratio = original
				camera = primary
				preview duration = 0
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = 140px
			)
			must have Address1
			(
    			type = address
				displayname = "Address"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Mobile_Number
			(
    			type = phonenumber
				displayname = "Mobile Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Configuration_Index
			(
				type = number
				displayname = "Configuration Index"
	 			row = 1
	 			column = 1   
				width = 100px
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Users
		{
			displayName = "All Users"
			show all rows from Add_User    
			(
				Member_Type as "Member Type"
				Email
				Image
			)
			options
			(
				icon = "users-multiple-11"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Member_Type as "Member Type"
							Email
							Image
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Member_Type as "Member Type"
							Email
							Image
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Subforms
	{
		hide = true
		icon = "ui-2-menu-bold"
		form Project_Blocks_Subform
		{
			displayname = "Project Blocks Subform"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Block_Name
			(
    			type = text
				displayname = "Block Name"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			must have Block_Type1
			(
				type = picklist
				displayname = "Block Type"
				values = {"Shop", "House/Villa", "Land", "Flat/Apartment"}
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Project
			(
				type = picklist
				values  = Add_Project.ID
    			bidirectional = Blocks_Details
    			displayformat = [Project_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Floor_Details_Subform
		{
			displayname = "Floor Details Subform"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Floor_Number
			(
				type = number
				displayname = "Floor Number"
	 			row = 1
	 			column = 1   
				width = 100px
			)
			Number_of_Flats_Apartments_Shops
			(
				type = number
				displayname = "Number of Flats/Apartments/Shops"
	 			row = 1
	 			column = 1   
				width = 100px
			)
			Project_Name
			(
				type = picklist
				displayname = "Project Name"
				values  = Add_Project.ID
    			displayformat = [Project_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Block_Name
			(
				type = picklist
				displayname = "Block Name"
				values  = Project_Blocks_Subform.ID
    			displayformat = [Block_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Block_Details_Master_Lookup
			(
				type = picklist
				displayname = "Block Details Master Lookup"
				values  = Add_Block_Detail.ID
    			bidirectional = Floor_Details
    			displayformat = [ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Floor_Flats_Apartments_Subform
		{
			displayname = "Floor Flats/Apartments Subform"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Flats_Apartments_Shop_Number
			(
    			type = text
				displayname = "Flats/Apartments/Shop Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Date_field
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Number_of_Bed_Rooms
			(
				type = number
				displayname = "Number of Bed Rooms"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Number_of_BathRooms
			(
				type = number
				displayname = "Number of BathRooms"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Furnishing
			(
				type = picklist
				values = {"Unfurnished", "Semi Furnished", "Fully Furnished"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Image
			(
    			type = image
				source  = public_url,file
				aspect ratio = original
				camera = primary
				preview duration = 0
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Total_Area_in_square_feets
			(
				type = decimal
				displayname = "Total Area (in square feets)"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Rate_per_square_feets
			(
				displayname = "Rate (per square feets)"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Maintainence_Charge
			(
				displayname = "Maintainence Charge"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Parking_Space
			(
				type = picklist
				displayname = "Parking Space"
				values = {"No Parking Space", "1 Two-Wheeler", "2 Two-Wheelers", "1 Four-Wheeler", "2 Four-Wheelers"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assign_Agent
			(
				type = picklist
				displayname = "Assign Agent"
				values  = Add_User[Member_Type == "Agent/Broker"].ID
    			displayformat = [" " + Name1.first_name + " " + Name1.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"Active", "Inactive"}
				initial value = "Active"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Project_Name
			(
				type = picklist
				displayname = "Project Name"
				values  = Add_Project.ID
    			displayformat = [Project_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Block_Name
			(
				type = picklist
				displayname = "Block Name"
				values  = Project_Blocks_Subform.ID
    			displayformat = [Block_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Floor_Number
			(
				type = picklist
				displayname = "Floor Number"
				values  = Floor_Details_Subform.ID
    			displayformat = [Floor_Number]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Flats_Apartments_Master
			(
				type = picklist
				displayname = "Flats/Apartments Master Lookup"
				values  = Add_Flats_Apartments_Shop_Details.ID
    			bidirectional = Flats_Apartments_Shop_Details
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Sold_By
			(
				type = picklist
				displayname = "Sold By"
				values  = Add_User.ID
    			displayformat = [" " + Name1.prefix + " " + Name1.first_name + " " + Name1.last_name + " " + Name1.suffix]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Land_House_Villa_Subform
		{
			displayname = "Land/House/Villa Subform"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Land_House_Villa_Number
			(
    			type = text
				displayname = "Land/House/Villa Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Number_of_Bed_Rooms
			(
				type = number
				displayname = "Number of Bed Rooms"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_field
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Number_of_Bathrooms
			(
				type = number
				displayname = "Number of Bathrooms"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Furnishing
			(
				type = picklist
				values = {"Unfurnished", "Semi Furnished", "Fully Furnished"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Image
			(
    			type = image
				source  = public_url,file
				aspect ratio = original
				camera = primary
				preview duration = 0
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Number_of_Floors
			(
				type = number
				displayname = "Number of Floors"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Total_Area
			(
				type = number
				displayname = "Total Area"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Built_Area
			(
				type = number
				displayname = "Built Area"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Rate_per_square_feets
			(
				displayname = "Rate (per square feets)"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			Land_Breadth
			(
				type = number
				displayname = "Land Breadth"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Land_Length
			(
				type = number
				displayname = "Land Length"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"Active", "Inactive"}
				initial value = "Active"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assign_Agent
			(
				type = picklist
				displayname = "Assign Agent"
				values  = Add_User[Member_Type == "Agent/Broker"].ID
    			displayformat = [" " + Name1.first_name + " " + Name1.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Project_Name
			(
				type = picklist
				displayname = "Project Name"
				values  = Add_Project.ID
    			displayformat = [Project_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Block_Name
			(
				type = picklist
				displayname = "Block Name"
				values  = Project_Blocks_Subform.ID
    			displayformat = [Block_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Block_Details_Master_Lookup
			(
				type = picklist
				displayname = "Block Details Master_Lookup"
				values  = Add_Land_House_Villa_Details.ID
    			bidirectional = Land_House_Villa_Details
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Sold_By
			(
				type = picklist
				displayname = "Sold By"
				values  = Add_User.ID
    			displayformat = [" " + Name1.prefix + " " + Name1.first_name + " " + Name1.last_name + " " + Name1.suffix]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Cities
		{
			success message = "City Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			unique City
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = 200px
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Cities_Report
		{
			displayName = "Cities Report"
   			hide = true
			show all rows from Cities    
			(
				City
				ID
			)
			options
			(
				icon = "ui-1-database"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							City
							ID
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							City
							ID
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Search_Property_Form
		{
			displayname = "Search Property Form"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Posted_By
			(
				type = picklist
				displayname = "Posted By"
				values = {"Individual/Owner", "Agent/Broker", "Builder/Developer"}
	 			row = 1
	 			column = 1   
				width = 206px
			)
			PropertyType1
			(
				type = picklist
				displayname = "Property Type"
				values = {"Shop", "House/Villa", "Land", "Flat/Apartment"}
	 			row = 1
	 			column = 1   
				width = 206px
			)
			City
			(
				type = picklist
				values  = Cities.ID
    			displayformat = [City]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			For_field
			(
				type = radiobuttons
				displayname = "Property For?"
				values = {"Buy", "Rent"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Bedroom
			(
				type = picklist
				values = {"1 BHK", "2 BHK", "3 BHK"}
	 			row = 1
	 			column = 1   
				width = 206px
			)
			show_search
			(
    			type = plaintext
				value = "<div> </div>"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
		}
				 page New_Search_Result(forr,PropertyType,bedrooms,posted_by,City,indexx) 
	 	 { 
 	 	 displayname = "Search Result" 

 	 	 icon = "" 

 	 	 hide =  true
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"style\":\"padding-right:0px;padding-top:0px;padding-bottom:0px;padding-left:0px;\",\"design\":\"fluid\",\"displayType\":\"plain\"}}'\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='New_Search_Result1'>\n\t<![CDATA[htmlpage New_Search_Result1(forr,PropertyType,bedrooms,posted_by,City,indexx)\ncontent\n&lt;%{\n\t%&gt;\n&lt;link href=&quot;https:\/\/fonts.googleapis.com\/css?family=Poppins&quot; rel=&quot;stylesheet&quot;&gt;\n    &lt;link href=&quot;https:\/\/fonts.googleapis.com\/css?family=Catamaran&quot; rel=&quot;stylesheet&quot;&gt;\n\n&lt;style&gt;\n  .main{\n  width: 100%;\n  padding-top:20px;\n  margin:auto;\n  background: #ffffff;\nbox-sizing: border-box;\nmin-height:100%;\n\n\n  }\n  .body-class{\n      padding-bottom:16em;  \n  }\n  body{\n    background: #ffffff;\n  }\n.maincontainer{\n  height:100%;\n  padding:0px;\n  }\n  .anchor{\n  text-decoration: none;\n  color:black;\n  }\n  .anchor a:visited {\n  color: #999999;\n  }\n  .prodetails{\n  margin-top: 13px;\n  display:inline-block;\n  border-right:1px solid gray;\n  padding:5px;\n  font-size:15px;\n  }\n  \n.zc-appformcontent {\n    background: none;\n    border: 0px solid black;\n}\n\n.zc-formcontent {\n    border:0px solid black;;\n    box-shadow: none;\n    padding: 10px 0px;\n}\nh2{\n     font-size: 1.6em;\n    margin: 0px;\n    line-height: 45px;\n  color:#103c7e;\n    font-weight: normal;\nfont-family: &apos;Catamaran&apos;, sans-serif;\n  }\n  \n.contentBlock{\n  width:98%;\n box-sizing: border-box;\n  background: white none repeat scroll 0% 0%;\n  margin:25px auto;\n  border-radius: 4px;\n  display: block;\n  -webkit-box-shadow: 0px 0px 12px 2px rgba(0,0,0,1);\n  -moz-box-shadow: 0px 0px 12px 2px rgba(0,0,0,1);\n  box-shadow: 0px 0px 12px 2px rgba(0,0,0,1);\n\n  \n  }\n  .propDetails{\n  float: left;   \n    width: 61%;\n    margin: 0px 10px;\n  margin-bottom: 10px;\nfont-family: &apos;Catamaran&apos;, sans-serif;\n  box-sizing: border-box;\n}\n.propDetailsType{\n font-weight: bold;\n       font-size: inherit;\n}\n.locn{\n      font-size: 13px;\n    color: #979797;\n    border-bottom: 1px solid #103c7e;\n    margin-bottom: 6px;\n    padding-bottom: 5px;\n  }\n  \n  .locn_det{\n  width:100%;\n  display:inline-block;  \n  }\n  \n  .commonInfo{\nfont-family: &apos;Catamaran&apos;, sans-serif;\n  font-size: 15x;\n    color: #979797;\n    margin-top: 9px;\n  }\n  .btn{\n  background: #00ac92;\n  padding: 7px;\n  border: #00ac92;\n  border-radius: 5px;\n  text-align: center;\n  color: white;\n  cursor: pointer;\n  font-size:13px;\n  text-shadow: none !important;\n  }\n.propDetailss{\n  float: left;\n  margin:0px;\n  padding-left: 10px;\n  margin-bottom: 0px;\n  width:386px;\n  }\n  .propDetailss p{\n  line-height: 112%;\n  margin: 10px 0;\n}\n  \n  .propImage{\n  width: 35%;\n    height: 239px;\n    background: #EEE;\n    margin: 10px 0px 10px 10px;\n    float: left;\n    border: 1px solid black;\n  box-sizing: border-box;\n  }\n  .contentFooter{\n  padding: 0px 10px 3px;\nborder-top: 2px solid rgb(16, 60, 126);\n  }\n  .footerSpanTop{\nfont-family: &apos;Catamaran&apos;, sans-serif;\ndisplay: block;\nfont-size: 1.2em;\nfont-weight: bold;\nline-height: 1.5;\ncolor: rgb(16, 60, 126);\n  }\n  .footerSpanBottom{\nfont-family: &apos;Catamaran&apos;, sans-serif;\ncolor: #979797;\nmargin: 0px;\nline-height: 20px;\npadding: 0px 20px;\ndisplay: block;\nvertical-align: baseline;\noverflow: hidden;\nfont-size: 15px;\n-webkit-line-clamp: 4;\n    text-overflow: ellipsis;\n    white-space: normal;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n  }\n  .logoimg\n  {\n    height: 100%;\n    width: 100%;\n}\n\n    line-height: 1;\n    text-overflow: ellipsis;\n    -webkit-line-clamp: 2;\n\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n\n    -webkit-box-orient: vertical;\n\n#paraaa\n  {\n    line-height: 1; text-overflow: ellipsis; -webkit-line-clamp: 2; overflow: hidden; text-overflow: ellipsis; display: -webkit-box; -webkit-box-orient: vertical;  \n  }\n  \n.ppp{\n  line-height: 100%;\n  margin:10px 0px;\n  }\n  .addNewPropertyBtn{\n    padding: 5px 10px;\n    min-width: 70px;\n    cursor: pointer;\n    outline: none;\n    font-weight: normal;\n    text-align: center;\n    vertical-align: middle;\n    background-image: none;\n    border: 1px solid transparent;\n    white-space: nowrap;\n    font-size: 13px;\n    line-height: 1.5;\n    border-radius: 0;\n    display: inline-block;\n    background-color: #1abc9c;\n    border-color: rgba(0,0,0,0.1);\n    color: white;\n    margin-right:10px;\n  }\n  .addNewPropertyBtn:hover{\n  background-color: #10b292;\n  }\n  &lt;\/style&gt;\n&lt;%\n\tindex = 0;\n\tind = &quot;&quot;;\n\tif(input.City == &quot;&quot;)\n\t{\n\t\tCity = &quot;null&quot;;\n\t}\n\tif(input.bedrooms == &quot;-Select-&quot; || input.bedrooms == &quot;&quot;)\n\t{\n\t\tbedrooms = &quot;null&quot;;\n\t}\n\tif(input.PropertyType == &quot;-Select-&quot; || input.PropertyType == &quot;&quot;)\n\t{\n\t\tPropertyType = &quot;null&quot;;\n\t}\n\tif(input.posted_by == &quot;-Select-&quot; || input.posted_by == &quot;&quot;)\n\t{\n\t\tposted_by = &quot;null&quot;;\n\t}\n\tif(input.indexx == &quot;null&quot; || input.indexx == &quot;&quot; || input.indexx == null)\n\t{\n\t\tindex = 1;\n\t}\n\telse\n\t{\n\t\tind = indexx;\n\t\tindex = indexx.toLong();\n\t}\n\tforr1 = &quot;&quot;;\n\tif(input.forr == &quot;Buy&quot;)\n\t{\n\t\tforr1 = &quot;Sale&quot;;\n\t}\n\telse if(input.forr == &quot;&quot;)\n\t{\n\t\tforr = &quot;null&quot;;\n\t\tforr1 = &quot;null&quot;;\n\t}\n\telse if(input.forr == &quot;Rent&quot;)\n\t{\n\t\tforr1 = forr;\n\t}\n\tbedd = &quot;&quot;;\n\tbed = &quot;&quot;;\n\tbed1 = 0;\n\tlist1 = List();\n\tplotIds = List();\n\tplotIdss = List();\n\tproplength = 0;\n\tif(input.posted_by == &quot;-otherVal-&quot;)\n\t{\n\t\tposted_by = &quot;-Select-&quot;;\n\t}\n\t%&gt;\n&lt;!--    &lt;p&gt;&lt;%=forr%&gt; for&lt;\/p&gt;\n  &lt;p&gt;&lt;%=PropertyType%&gt; Property type&lt;\/p&gt;\n  &lt;p&gt;&lt;%=bedrooms%&gt; Bedroom&lt;\/p&gt;\n  &lt;p&gt;&lt;%=posted_by%&gt; Posted by&lt;\/p&gt;\n  &lt;p&gt;&lt;%=City%&gt; City&lt;\/p&gt;\n  &lt;p&gt;&lt;%=indexx%&gt; index&lt;\/p&gt;--&gt;\n&lt;%\n\tif(input.posted_by == &quot;Individual\/Owner&quot; || input.posted_by == &quot;Agent\/Broker&quot;)\n\t{\n\t\tplotIDAndLenghtMap = thisapp.individualOrAgentProperties(PropertyType,forr,bedrooms,City,posted_by,forr1,index);\n\t\tif(plotIDAndLenghtMap.get(&quot;plotIds&quot;) != &quot;&quot;)\n\t\t{\n\t\t\tplotIds = plotIDAndLenghtMap.get(&quot;plotIds&quot;).toList();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tplotIds = List();\n\t\t}\n\t\tproplength = plotIDAndLenghtMap.get(&quot;proplength&quot;).toLong();\n\t}\n\telse if(input.posted_by == &quot;Builder\/Developer&quot;)\n\t{\n\t\tif(input.PropertyType == &quot;Shop&quot; || input.PropertyType == &quot;Flat\/Apartment&quot;)\n\t\t{\n\t\t\tplotIDAndLenghtMap = thisapp.builderShopOrFLatProperties(PropertyType,forr,bedrooms,City,posted_by,forr1,index);\n\t\t\tif(plotIDAndLenghtMap.get(&quot;plotIds&quot;) != &quot;&quot;)\n\t\t\t{\n\t\t\t\tplotIds = plotIDAndLenghtMap.get(&quot;plotIds&quot;).toList();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tplotIds = List();\n\t\t\t}\n\t\t\tproplength = plotIDAndLenghtMap.get(&quot;proplength&quot;).toLong();\n\t\t}\n\t\telse if(input.PropertyType == &quot;Land&quot; || input.PropertyType == &quot;House\/Villa&quot;)\n\t\t{\n\t\t\tplotIDAndLenghtMap = thisapp.builderLandOrHouseProperties(PropertyType,forr,bedrooms,City,posted_by,forr1,index);\n\t\t\tif(plotIDAndLenghtMap.get(&quot;plotIds&quot;) != &quot;&quot;)\n\t\t\t{\n\t\t\t\tplotIds = plotIDAndLenghtMap.get(&quot;plotIds&quot;).toList();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tplotIds = List();\n\t\t\t}\n\t\t\tproplength = plotIDAndLenghtMap.get(&quot;proplength&quot;).toLong();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tplotIDAndLenghtMap = thisapp.builderAllProperties(PropertyType,forr,bedrooms,City,posted_by,forr1,index);\n\t\t\tif(plotIDAndLenghtMap.get(&quot;plotIds&quot;) != &quot;&quot;)\n\t\t\t{\n\t\t\t\tplotIds = plotIDAndLenghtMap.get(&quot;plotIds&quot;).toList();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tplotIds = List();\n\t\t\t}\n\t\t\tproplength = plotIDAndLenghtMap.get(&quot;proplength&quot;).toLong();\n\t\t}\n\t}\n\telse if(input.posted_by == &quot;null&quot;)\n\t{\n\t\tplotIDAndLenghtMap = thisapp.noPostedByProperties(PropertyType,forr,bedrooms,City,posted_by,forr1,index,ind);\n\t\tif(plotIDAndLenghtMap.get(&quot;plotIds&quot;) != &quot;&quot;)\n\t\t{\n\t\t\tplotIds = plotIDAndLenghtMap.get(&quot;plotIds&quot;).toList();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tplotIds = List();\n\t\t}\n\t\tproplength = plotIDAndLenghtMap.get(&quot;proplength&quot;).toLong();\n\t}\n\telse\n\t{\n\t\tfor each  rec in Add_Your_Property[ID != 0] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1\n\t\t{\n\t\t\tplotIds.add(rec.ID);\n\t\t\tproplength = proplength + 1;\n\t\t}\n\t}\n\thasnext = false;\n\thasprev = false;\n\trFrom = (index - 1) * 10 + 1;\n\trTo = 1;\n\tif(proplength == 11)\n\t{\n\t\trTo = index * 10;\n\t}\n\telse\n\t{\n\t\trTo = rFrom + proplength - 1;\n\t}\n\tif(index &gt; 1)\n\t{\n\t\thasprev = true;\n\t}\n\tif(proplength == 11)\n\t{\n\t\tnextindex = index + 1;\n\t\tindexx = nextindex.toString();\n\t\thasnext = true;\n\t}\n\t%&gt;\n&lt;div class=&quot;main&quot;&gt;\n  &lt;div style=&quot;width:97%;  margin:auto; box-sizing:border-box;&quot;&gt;\n \n  &lt;div style=&quot;98%&quot;&gt;\n&lt;%\n\tif(plotIds.size() != 0)\n\t{\n\t\tif(!hasprev)\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;width:113px; font-size: 15px;  margin:auto; color:103c7e;&quot;&gt;Showing :&lt;%=rFrom%&gt; - &lt;%=rTo%&gt;&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;width:113px; font-size: 15px;  margin:auto; color:103c7e;&quot;&gt;Showing :&lt;%=rFrom%&gt; - &lt;%=rTo%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\tprevIndex = index - 1;\n\t\t\t%&gt;\n&lt;div style=&quot;float: left;&quot;&gt;&lt;a style=&quot;color:#103c7e;font-weight: bold;&quot; href=&apos;&lt;%=zoho.appuri%&gt;view-embed\/New_Search_Result\/forr=&lt;%=forr%&gt;&amp;PropertyType=&lt;%=PropertyType%&gt;&amp;bedrooms=&lt;%=bedrooms%&gt;&amp;posted_by=&lt;%=posted_by%&gt;&amp;City=&lt;%=City%&gt;&amp;indexx=&lt;%=prevIndex%&gt;&apos; target=&quot;frame12&quot;&gt;&lt; Previous&lt;\/a&gt;&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(hasnext)\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;float: right;&quot;&gt;&lt;a style=&quot;color:#103c7e;font-weight: bold;;&quot; href=&apos;&lt;%=zoho.appuri%&gt;view-embed\/New_Search_Result\/forr=&lt;%=forr%&gt;&amp;PropertyType=&lt;%=PropertyType%&gt;&amp;bedrooms=&lt;%=bedrooms%&gt;&amp;posted_by=&lt;%=posted_by%&gt;&amp;City=&lt;%=City%&gt;&amp;indexx=&lt;%=indexx%&gt;&apos; target=&quot;frame12&quot;&gt;Next &gt;&lt;\/a&gt;\n        \n        &lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n    &lt;div style=&quot;clear:both;&quot;&gt;\n    &lt;\/div&gt;\n&lt;%\n\t}\n\tif(plotIds.size() != 0)\n\t{\n\t\ti = 1;\n\t\tif(input.posted_by == &quot;Individual\/Owner&quot; || input.posted_by == &quot;Agent\/Broker&quot; || input.posted_by == &quot;-Select-&quot; || input.posted_by == &quot;null&quot; || input.posted_by == null)\n\t\t{\n\t\t\tfor each  rec in Add_Your_Property[ID in plotIds]\n\t\t\t{\n\t\t\t\tif(i != 11)\n\t\t\t\t{\n\t\t\t\t\ti = i + 1;\n\t\t\t\t\timgg = rec.Image;\n\t\t\t\t\timg1 = imgg.replaceAll(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image\/&quot;,zoho.appuri + &quot;All_Properties_by_Others\/Image\/image\/&quot;);\n\t\t\t\t\timg2 = img1.replaceAll(&quot;img&quot;,&quot;img class=&apos;logoimg&apos;&quot;);\n\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentBlock&quot; style=&quot;min-height:0px;&quot;&gt;\n        &lt;div class=&quot;propImage&quot;&gt;\n      &lt;%=img2%&gt; \n     &lt;\/div&gt;\n\n\n  \n  &lt;div class=&quot;propDetails&quot;&gt;\n        &lt;h2&gt;&lt;span class=&quot;propDetailsType&quot;&gt;&lt;%=rec.Property_Type1%&gt;&lt;\/span&gt; in &lt;%=rec.City1.City%&gt; for &lt;%=rec.Property_For%&gt;&lt;\/h2&gt;\n  &lt;div class=&quot;locn&quot;&gt;&lt;p style=&quot;margin:0px;&quot;&gt;&lt;%=rec.Location1.address_line_12%&gt; &lt;%=rec.Location1.address_line_22%&gt;, &lt;%=rec.City1.City%&gt;&lt;\/p&gt;&lt;\/div&gt;\n  &lt;div class=&quot;locn_det&quot;&gt;\n  &lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;display:inline-block;&quot;&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; By: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=rec.Member.Name1%&gt; (&lt;%=rec.Member.Member_Type%&gt;)&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Landmark: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=rec.Nearest_Landmark%&gt;&lt;\/span&gt;&lt;\/div&gt;\n   &lt;div class=&quot;commonInfo&quot;&gt; Posted On: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=rec.Date_field%&gt;&lt;\/span&gt;&lt;\/div&gt;\n &lt;\/div&gt;\n  \n  &lt;div style=&quot;color: black;font-size: 16px;display:inline-block; float:right;margin-top: 11px;font-weight: bold;font-family: &apos;Catamaran&apos;, sans-serif;&quot;&gt;\n&lt;%\n\t\t\t\t\tif(input.forr == &quot;Buy&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rec.Rate_Per_Square_Feet.toLong() != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rate_Per_Square_Feet.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ 0 &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(input.forr == &quot;Rent&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rec.Rent_Per_Month.toLong() != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rent_Per_Month.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Rent\/Month&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ 0 &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rec.Rate_Per_Square_Feet != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rate_Per_Square_Feet%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(rec.Rent_Per_Month.toLong() != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rent_Per_Month.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Rent\/Month&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ 0 &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;\/div&gt;\n   \n  \n&lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;color: #666;font-size: 16px;display: inline-block; width:82%;font-weight: normal;font-family: Proxima Nova,sans-serif;&quot;&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Property_Condition%&gt;&lt;\/div&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Total_Area_in_square_feets.trim()%&gt; sq.ft.&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(rec.Number_of_Bed_Rooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Number_of_Bed_Rooms%&gt; BHK&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Number_of_Bathrooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Number_of_Bathrooms%&gt; Bathrooms&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Furnishing != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Furnishing%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Land_Breadth != null &amp;&amp; rec.Land_Length != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Land_Breadth%&gt; by &lt;%=rec.Land_Length%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Rent_Per_Month != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Rent_Per_Month%&gt; \/Month&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Rate_Per_Square_Feet != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Rate_Per_Square_Feet%&gt; Price\/sq.ft.&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n  \n  &lt;div style=&quot;display:inline-block;float:right;margin-top:11px&quot;&gt;\n  \n  &lt;a class=&quot;anchor&quot; href=&quot;&lt;%=zoho.appuri%&gt;#Form:Contact_Seller?zc_LoadIn=dialog&amp;zc_Header=false&amp;Viewed_Property_Rec_Id=&lt;%=rec.ID%&gt;&amp;Viewed_Property_Posted_By1=&lt;%=rec.Member%&gt;&amp;Property_Type1=&lt;%=rec.Property_Type1%&gt;&quot; target=&quot;_top&quot;&gt;\n  &lt;button class=&quot;btn&quot;  data-url=&quot;#&quot;&gt;\n        Contact Builder\n    &lt;\/button&gt;\n  &lt;\/a&gt;\n    &lt;\/div&gt;\n  &lt;\/div&gt;\n  &lt;\/div&gt;\n  \n &lt;\/div&gt;\n  &lt;div style=&quot;clear:both;&quot;&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(rec.Comments == null || rec.Comments == &quot;&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentFooter&quot;&gt;&lt;span class=&quot;footerSpanTop&quot;&gt;Details: &lt;\/span&gt;&lt;span class=&quot;footerSpanBottom&quot;&gt;&lt;%=rec.Comments%&gt; &lt;\/span&gt;\n                    &lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor each  recor in Floor_Flats_Apartments_Subform[ID in plotIds]\n\t\t\t{\n\t\t\t\tif(i != 11)\n\t\t\t\t{\n\t\t\t\t\ti = i + 1;\n\t\t\t\t\timgg = recor.Image;\n\t\t\t\t\timg1 = imgg.replaceAll(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image\/&quot;,zoho.appuri + &quot;Floor_Flats_Apartments_Subform_Report\/Image\/image\/&quot;);\n\t\t\t\t\timg2 = img1.replaceAll(&quot;img&quot;,&quot;img class=&apos;logoimg&apos;&quot;);\n\t\t\t\t\tblock = Project_Blocks_Subform[ID == recor.Block_Name].Block_Type1;\n\t\t\t\t\tproj = Add_Project[ID == recor.Project_Name];\n\t\t\t\t\tcit = proj.City;\n\t\t\t\t\tcii = Cities[ID == cit].City;\n\t\t\t\t\tvar = proj.Member;\n\t\t\t\t\tmem = Add_User[ID == var];\n\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentBlock&quot; style=&quot;min-height:0px;&quot;&gt;\n        &lt;div class=&quot;propImage&quot;&gt;\n&lt;%=img2%&gt;      \n     &lt;\/div&gt;\n\n    &lt;div class=&quot;propDetails&quot;&gt;\n        &lt;h2&gt;&lt;span class=&quot;propDetailsType&quot;&gt;&lt;%=block%&gt;&lt;\/span&gt; in &lt;%=cii%&gt;  for Sale&lt;\/h2&gt;\n\n  &lt;div class=&quot;locn&quot;&gt;&lt;p style=&quot;margin:0px;&quot;&gt;&lt;%=recor.Project_Name.Location1.address_line_12%&gt; &lt;%=recor.Project_Name.Location1.address_line_22%&gt;, &lt;%=cii%&gt;&lt;\/p&gt;&lt;\/div&gt;\n  &lt;div class=&quot;locn_det&quot;&gt;\n  &lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;display:inline-block;&quot;&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; By: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=mem.Name1%&gt; (&lt;%=mem.Member_Type%&gt;)&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Project Name: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=proj.Project_Name%&gt;&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Project Area: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=proj.Project_Area%&gt; Sq.Ft.&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Posted On: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=recor.Date_field%&gt;&lt;\/span&gt;&lt;\/div&gt;\n &lt;\/div&gt;\n  \n  \n   &lt;div style=&quot;color: black;font-size: 16px;display:inline-block; float:right;margin-top: 11px;font-weight: bold;font-family: &apos;Catamaran&apos;, sans-serif;&quot;&gt;\n&lt;%\n\t\t\t\t\tif(recor.Rate_per_square_feets.toLong() != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n$ &lt;%=recor.Rate_per_square_feets.toLong()%&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n$ 0\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt;Price\/sq.ft.&lt;\/span&gt;\n  &lt;\/div&gt;\n&lt;\/div&gt;\n   \n  \n&lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;color: #666;font-size: 16px;display: inline-block; width:82%;font-weight: normal;font-family: Proxima Nova,sans-serif;&quot;&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Total_Area_in_square_feets%&gt; Sq.Ft.&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(recor.Number_of_Bed_Rooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Number_of_Bed_Rooms%&gt; BHK&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recor.Number_of_BathRooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Number_of_BathRooms%&gt; Bathrooms&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recor.Furnishing != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Furnishing%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recor.Parking_Space != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Parking_Space%&gt;Parking Space&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n  \n  &lt;div style=&quot;display:inline-block;float:right;margin-top:11px&quot;&gt;\n  \n  &lt;a class=&quot;anchor&quot; href=&quot;&lt;%=zoho.appuri%&gt;#Form:Contact_Seller?zc_LoadIn=dialog&amp;zc_Header=false&amp;Viewed_Property_Rec_Id=&lt;%=recor.ID%&gt;&amp;Viewed_Property_Posted_By1=&lt;%=proj.Member%&gt;&amp;Property_Type1=&lt;%=block%&gt;&quot; target=&quot;_top&quot;&gt;\n  &lt;button class=&quot;btn&quot;  data-url=&quot;#&quot;&gt;\n        Contact Builder\n    &lt;\/button&gt;\n  &lt;\/a&gt;\n  &lt;\/div&gt;\n  &lt;\/div&gt; \n  &lt;\/div&gt;\n &lt;\/div&gt;\n  &lt;div style=&quot;clear:both;&quot;&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(proj.About == null || proj.About == &quot;&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentFooter&quot;&gt;&lt;span class=&quot;footerSpanTop&quot;&gt;Details: &lt;\/span&gt;&lt;span class=&quot;footerSpanBottom&quot;&gt;&lt;%=proj.About%&gt; &lt;\/span&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor each  recorr in Land_House_Villa_Subform[ID in plotIds]\n\t\t\t{\n\t\t\t\tif(i != 11)\n\t\t\t\t{\n\t\t\t\t\ti = i + 1;\n\t\t\t\t\timgg = recorr.Image;\n\t\t\t\t\timg1 = imgg.replaceAll(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image\/&quot;,zoho.appuri + &quot;Land_House_Villa_Subform_Report\/Image\/image\/&quot;);\n\t\t\t\t\timg2 = img1.replaceAll(&quot;img&quot;,&quot;img class=&apos;logoimg&apos;&quot;);\n\t\t\t\t\tblock = Project_Blocks_Subform[ID == recorr.Block_Name].Block_Type1;\n\t\t\t\t\tproj = Add_Project[ID == recorr.Project_Name];\n\t\t\t\t\tcit = proj.City;\n\t\t\t\t\tcii = Cities[ID == cit].City;\n\t\t\t\t\tvar = proj.Member;\n\t\t\t\t\tmem = Add_User[ID == var];\n\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentBlock&quot; style=&quot;min-height:0px;&quot;&gt;\n                &lt;div class=&quot;propImage&quot;&gt;\n                &lt;%=img2%&gt;      \n                &lt;\/div&gt;\n                &lt;div class=&quot;propDetails&quot;&gt;\n                &lt;h2&gt;&lt;span class=&quot;propDetailsType&quot;&gt;&lt;%=block%&gt;&lt;\/span&gt; in &lt;%=cii%&gt; for Sale&lt;\/h2&gt;\n                &lt;div class=&quot;locn&quot;&gt;&lt;p style=&quot;margin:0px;&quot;&gt;&lt;%=recorr.Project_Name.Location1.address_line_12%&gt; &lt;%=recorr.Project_Name.Location1.address_line_22%&gt;, &lt;%=cii%&gt;&lt;\/p&gt;&lt;\/div&gt;\n                &lt;div class=&quot;locn_det&quot;&gt;\n                &lt;div style=&quot;&quot;&gt;\n                &lt;div style=&quot;display:inline-block;&quot;&gt;\n                &lt;div class=&quot;commonInfo&quot;&gt; By: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=mem.Name1%&gt; (&lt;%=mem.Member_Type%&gt;)&lt;\/span&gt;&lt;\/div&gt;\n                &lt;div class=&quot;commonInfo&quot;&gt; Project Name: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=proj.Project_Name%&gt;&lt;\/span&gt;&lt;\/div&gt;\n                &lt;div class=&quot;commonInfo&quot;&gt; Project Area: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=proj.Project_Area%&gt; Sq.Ft.&lt;\/span&gt;&lt;\/div&gt;\n                &lt;div class=&quot;commonInfo&quot;&gt; Posted On: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=recorr.Date_field%&gt;&lt;\/span&gt;&lt;\/div&gt;\n                &lt;\/div&gt;\n  \n  \n   &lt;div style=&quot;color: black;font-size: 16px;display:inline-block; float:right;margin-top: 11px;font-weight: bold;font-family: &apos;Catamaran&apos;, sans-serif;&quot;&gt;\n&lt;%\n\t\t\t\t\tif(recorr.Rate_per_square_feets.toLong() != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n$ &lt;%=recorr.Rate_per_square_feets.toLong()%&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n$ 0\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt;Price\/sq.ft.&lt;\/span&gt;\n  &lt;\/div&gt;\n&lt;\/div&gt;\n   \n  \n&lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;color: #666;font-size: 16px;display: inline-block; width:82%;font-weight: normal;font-family: Proxima Nova,sans-serif;&quot;&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Total_Area%&gt; sqft&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(recorr.Number_of_Bed_Rooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Number_of_Bed_Rooms%&gt; BHK&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Number_of_Bathrooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Number_of_Bathrooms%&gt; Bathroom&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Furnishing != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Furnishing%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Number_of_Floors != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Number_of_Floors%&gt; Floors&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Built_Area != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt; &lt;span style=&quot;display:block&quot;&gt;&lt;%=recorr.Built_Area%&gt; Sq.ft. Built Up Area&lt;span&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Land_Breadth != null &amp;&amp; recorr.Land_Length != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Land_Breadth%&gt; by &lt;%=recorr.Land_Length%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n  \n  &lt;div style=&quot;display:inline-block;float:right;margin-top:11px&quot;&gt;\n  \n  &lt;a class=&quot;anchor&quot; href=&quot;&lt;%=zoho.appuri%&gt;#Form:Contact_Seller?zc_LoadIn=dialog&amp;zc_Header=false&amp;Viewed_Property_Rec_Id=&lt;%=recorr.ID%&gt;&amp;Viewed_Property_Posted_By1=&lt;%=proj.Member%&gt;&amp;Property_Type1=&lt;%=block%&gt;&quot; target=&quot;_top&quot;&gt;\n  &lt;button class=&quot;btn&quot;  data-url=&quot;#&quot;&gt;\n        Contact Builder\n    &lt;\/button&gt;\n  &lt;\/a&gt;\n  &lt;\/div&gt;\n  &lt;\/div&gt; \n  &lt;\/div&gt;\n &lt;\/div&gt;\n  &lt;div style=&quot;clear:both;&quot;&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(proj.About == null || proj.About == &quot;&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentFooter&quot;&gt;&lt;span class=&quot;footerSpanTop&quot;&gt;Details: &lt;\/span&gt;&lt;span class=&quot;footerSpanBottom&quot;&gt;&lt;%=proj.About%&gt; &lt;\/span&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt;     &lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse if(input.posted_by == &quot;Builder\/Developer&quot; &amp;&amp; input.PropertyType == &quot;Shop&quot; || input.PropertyType == &quot;Flat\/Apartment&quot;)\n\t\t{\n\t\t\tfor each  recor in Floor_Flats_Apartments_Subform[ID in plotIds]\n\t\t\t{\n\t\t\t\tif(i != 11)\n\t\t\t\t{\n\t\t\t\t\ti = i + 1;\n\t\t\t\t\timgg = recor.Image;\n\t\t\t\t\timg1 = imgg.replaceAll(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image\/&quot;,zoho.appuri + &quot;Floor_Flats_Apartments_Subform_Report\/Image\/image\/&quot;);\n\t\t\t\t\timg2 = img1.replaceAll(&quot;img&quot;,&quot;img class=&apos;logoimg&apos;&quot;);\n\t\t\t\t\tblock = Project_Blocks_Subform[ID == recor.Block_Name].Block_Type1;\n\t\t\t\t\tproj = Add_Project[ID == recor.Project_Name];\n\t\t\t\t\tcit = proj.City;\n\t\t\t\t\tcii = Cities[ID == cit].City;\n\t\t\t\t\tvar = proj.Member;\n\t\t\t\t\tmem = Add_User[ID == var];\n\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentBlock&quot; style=&quot;min-height:0px;&quot;&gt;\n        &lt;div class=&quot;propImage&quot;&gt;\n&lt;%=img2%&gt;      \n     &lt;\/div&gt;\n\n    &lt;div class=&quot;propDetails&quot;&gt;\n        &lt;h2&gt;&lt;span class=&quot;propDetailsType&quot;&gt;&lt;%=block%&gt;&lt;\/span&gt; in &lt;%=cii%&gt;  for Sale&lt;\/h2&gt;\n\n  &lt;div class=&quot;locn&quot;&gt;&lt;p style=&quot;margin:0px;&quot;&gt;&lt;%=recor.Project_Name.Location1.address_line_12%&gt; &lt;%=recor.Project_Name.Location1.address_line_22%&gt;, &lt;%=cii%&gt;&lt;\/p&gt;&lt;\/div&gt;\n  &lt;div class=&quot;locn_det&quot;&gt;\n  &lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;display:inline-block;&quot;&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; By: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=mem.Name1%&gt; (&lt;%=mem.Member_Type%&gt;)&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Project Name: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=proj.Project_Name%&gt;&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Project Area: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=proj.Project_Area%&gt; Sq.Ft.&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Posted On: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=recor.Date_field%&gt;&lt;\/span&gt;&lt;\/div&gt;\n &lt;\/div&gt;\n  \n  \n   &lt;div style=&quot;color: black;font-size: 16px;display:inline-block; float:right;margin-top: 11px;font-weight: bold;font-family: &apos;Catamaran&apos;, sans-serif;&quot;&gt;\n&lt;%\n\t\t\t\t\tif(recor.Rate_per_square_feets.toLong() != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n$ &lt;%=recor.Rate_per_square_feets.toLong()%&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n$ 0\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt;Price\/sq.ft.&lt;\/span&gt;\n  &lt;\/div&gt;\n&lt;\/div&gt;\n   \n  \n&lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;color: #666;font-size: 16px;display: inline-block; width:82%;font-weight: normal;font-family: Proxima Nova,sans-serif;&quot;&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Total_Area_in_square_feets%&gt; Sq.Ft.&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(recor.Number_of_Bed_Rooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Number_of_Bed_Rooms%&gt; BHK&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recor.Number_of_BathRooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Number_of_BathRooms%&gt; Bathrooms&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recor.Furnishing != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Furnishing%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recor.Parking_Space != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Parking_Space%&gt;Parking Space&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n  \n  &lt;div style=&quot;display:inline-block;float:right;margin-top:11px&quot;&gt;\n  \n  &lt;a class=&quot;anchor&quot; href=&quot;&lt;%=zoho.appuri%&gt;#Form:Contact_Seller?zc_LoadIn=dialog&amp;zc_Header=false&amp;Viewed_Property_Rec_Id=&lt;%=recor.ID%&gt;&amp;Viewed_Property_Posted_By1=&lt;%=proj.Member%&gt;&amp;Property_Type1=&lt;%=block%&gt;&quot; target=&quot;_top&quot;&gt;\n  &lt;button class=&quot;btn&quot;  data-url=&quot;#&quot;&gt;\n        Contact Builder\n    &lt;\/button&gt;\n  &lt;\/a&gt;\n  &lt;\/div&gt;\n  &lt;\/div&gt; \n  &lt;\/div&gt;\n &lt;\/div&gt;\n  &lt;div style=&quot;clear:both;&quot;&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(proj.About == null || proj.About == &quot;&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentFooter&quot;&gt;&lt;span class=&quot;footerSpanTop&quot;&gt;Details: &lt;\/span&gt;&lt;span class=&quot;footerSpanBottom&quot;&gt;&lt;%=proj.About%&gt; &lt;\/span&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor each  rec in Add_Your_Property[ID in plotIds]\n\t\t\t{\n\t\t\t\tif(i != 11)\n\t\t\t\t{\n\t\t\t\t\ti = i + 1;\n\t\t\t\t\timgg = rec.Image;\n\t\t\t\t\timg1 = imgg.replaceAll(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image\/&quot;,zoho.appuri + &quot;All_Properties_by_Others\/Image\/image\/&quot;);\n\t\t\t\t\timg2 = img1.replaceAll(&quot;img&quot;,&quot;img class=&apos;logoimg&apos;&quot;);\n\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentBlock&quot; style=&quot;min-height:0px;&quot;&gt;\n        &lt;div class=&quot;propImage&quot;&gt;\n      &lt;%=img2%&gt; \n     &lt;\/div&gt;\n\n\n  \n  &lt;div class=&quot;propDetails&quot;&gt;\n        &lt;h2&gt;&lt;span class=&quot;propDetailsType&quot;&gt;&lt;%=rec.Property_Type1%&gt;&lt;\/span&gt; in &lt;%=rec.City1.City%&gt; for &lt;%=rec.Property_For%&gt;&lt;\/h2&gt;\n  &lt;div class=&quot;locn&quot;&gt;&lt;p style=&quot;margin:0px;&quot;&gt;&lt;%=rec.Location1.address_line_12%&gt; &lt;%=rec.Location1.address_line_22%&gt;, &lt;%=rec.City1.City%&gt;&lt;\/p&gt;&lt;\/div&gt;\n  &lt;div class=&quot;locn_det&quot;&gt;\n  &lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;display:inline-block;&quot;&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; By: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=rec.Member.Name1%&gt; (&lt;%=rec.Member.Member_Type%&gt;)&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Landmark: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=rec.Nearest_Landmark%&gt;&lt;\/span&gt;&lt;\/div&gt;\n   &lt;div class=&quot;commonInfo&quot;&gt; Posted On: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=rec.Date_field%&gt;&lt;\/span&gt;&lt;\/div&gt;\n &lt;\/div&gt;\n  \n  &lt;div style=&quot;color: black;font-size: 16px;display:inline-block; float:right;margin-top: 11px;font-weight: bold;font-family: &apos;Catamaran&apos;, sans-serif;&quot;&gt;\n&lt;%\n\t\t\t\t\tif(input.forr == &quot;Buy&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rec.Rate_Per_Square_Feet.toLong() != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rate_Per_Square_Feet.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ 0 &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(input.forr == &quot;Rent&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rec.Rent_Per_Month.toLong() != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rent_Per_Month.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Rent\/Month&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ 0 &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rec.Rate_Per_Square_Feet != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rate_Per_Square_Feet%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(rec.Rent_Per_Month.toLong() != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rent_Per_Month.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Rent\/Month&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ 0 &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;\/div&gt;\n   \n  \n&lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;color: #666;font-size: 16px;display: inline-block; width:82%;font-weight: normal;font-family: Proxima Nova,sans-serif;&quot;&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Property_Condition%&gt;&lt;\/div&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Total_Area_in_square_feets.trim()%&gt; sq.ft.&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(rec.Number_of_Bed_Rooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Number_of_Bed_Rooms%&gt; BHK&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Number_of_Bathrooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Number_of_Bathrooms%&gt; Bathrooms&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Furnishing != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Furnishing%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Land_Breadth != null &amp;&amp; rec.Land_Length != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Land_Breadth%&gt; by &lt;%=rec.Land_Length%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Rent_Per_Month != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Rent_Per_Month%&gt; \/Month&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Rate_Per_Square_Feet != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Rate_Per_Square_Feet%&gt; Price\/sq.ft.&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n  \n  &lt;div style=&quot;display:inline-block;float:right;margin-top:11px&quot;&gt;\n  \n  &lt;a class=&quot;anchor&quot; href=&quot;&lt;%=zoho.appuri%&gt;#Form:Contact_Seller?zc_LoadIn=dialog&amp;zc_Header=false&amp;Viewed_Property_Rec_Id=&lt;%=rec.ID%&gt;&amp;Viewed_Property_Posted_By1=&lt;%=rec.Member%&gt;&amp;Property_Type1=&lt;%=rec.Property_Type1%&gt;&quot; target=&quot;_top&quot;&gt;\n  &lt;button class=&quot;btn&quot;  data-url=&quot;#&quot;&gt;\n        Contact Builder\n    &lt;\/button&gt;\n  &lt;\/a&gt;\n    &lt;\/div&gt;\n  &lt;\/div&gt;\n  &lt;\/div&gt;\n  \n &lt;\/div&gt;\n  &lt;div style=&quot;clear:both;&quot;&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(rec.Comments == null || rec.Comments == &quot;&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentFooter&quot;&gt;&lt;span class=&quot;footerSpanTop&quot;&gt;Details: &lt;\/span&gt;&lt;span class=&quot;footerSpanBottom&quot;&gt;&lt;%=rec.Comments%&gt; &lt;\/span&gt;\n                    &lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse if(input.posted_by == &quot;Builder\/Developer&quot; &amp;&amp; input.PropertyType == &quot;Land&quot; || input.PropertyType == &quot;House\/Villa&quot;)\n\t\t{\n\t\t\tfor each  recorr in Land_House_Villa_Subform[ID in plotIds]\n\t\t\t{\n\t\t\t\tif(i != 11)\n\t\t\t\t{\n\t\t\t\t\ti = i + 1;\n\t\t\t\t\timgg = recorr.Image;\n\t\t\t\t\timg1 = imgg.replaceAll(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image\/&quot;,zoho.appuri + &quot;Land_House_Villa_Subform_Report\/Image\/image\/&quot;);\n\t\t\t\t\timg2 = img1.replaceAll(&quot;img&quot;,&quot;img class=&apos;logoimg&apos;&quot;);\n\t\t\t\t\tblock = Project_Blocks_Subform[ID == recorr.Block_Name].Block_Type1;\n\t\t\t\t\tproj = Add_Project[ID == recorr.Project_Name];\n\t\t\t\t\tcit = proj.City;\n\t\t\t\t\tcii = Cities[ID == cit].City;\n\t\t\t\t\tvar = proj.Member;\n\t\t\t\t\tmem = Add_User[ID == var];\n\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentBlock&quot; style=&quot;min-height:0px;&quot;&gt;\n                &lt;div class=&quot;propImage&quot;&gt;\n                &lt;%=img2%&gt;      \n                &lt;\/div&gt;\n                &lt;div class=&quot;propDetails&quot;&gt;\n                &lt;h2&gt;&lt;span class=&quot;propDetailsType&quot;&gt;&lt;%=block%&gt;&lt;\/span&gt; in &lt;%=cii%&gt; for Sale&lt;\/h2&gt;\n                &lt;div class=&quot;locn&quot;&gt;&lt;p style=&quot;margin:0px;&quot;&gt;&lt;%=recorr.Project_Name.Location1.address_line_12%&gt; &lt;%=recorr.Project_Name.Location1.address_line_22%&gt;, &lt;%=cii%&gt;&lt;\/p&gt;&lt;\/div&gt;\n                &lt;div class=&quot;locn_det&quot;&gt;\n                &lt;div style=&quot;&quot;&gt;\n                &lt;div style=&quot;display:inline-block;&quot;&gt;\n                &lt;div class=&quot;commonInfo&quot;&gt; By: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=mem.Name1%&gt; (&lt;%=mem.Member_Type%&gt;)&lt;\/span&gt;&lt;\/div&gt;\n                &lt;div class=&quot;commonInfo&quot;&gt; Project Name: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=proj.Project_Name%&gt;&lt;\/span&gt;&lt;\/div&gt;\n                &lt;div class=&quot;commonInfo&quot;&gt; Project Area: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=proj.Project_Area%&gt; Sq.Ft.&lt;\/span&gt;&lt;\/div&gt;\n                &lt;div class=&quot;commonInfo&quot;&gt; Posted On: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=recorr.Date_field%&gt;&lt;\/span&gt;&lt;\/div&gt;\n                &lt;\/div&gt;\n  \n  \n   &lt;div style=&quot;color: black;font-size: 16px;display:inline-block; float:right;margin-top: 11px;font-weight: bold;font-family: &apos;Catamaran&apos;, sans-serif;&quot;&gt;\n&lt;%\n\t\t\t\t\tif(recorr.Rate_per_square_feets.toLong() != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n$ &lt;%=recorr.Rate_per_square_feets.toLong()%&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n$ 0\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt;Price\/sq.ft.&lt;\/span&gt;\n  &lt;\/div&gt;\n&lt;\/div&gt;\n   \n  \n&lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;color: #666;font-size: 16px;display: inline-block; width:82%;font-weight: normal;font-family: Proxima Nova,sans-serif;&quot;&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Total_Area%&gt; sqft&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(recorr.Number_of_Bed_Rooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Number_of_Bed_Rooms%&gt; BHK&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Number_of_Bathrooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Number_of_Bathrooms%&gt; Bathroom&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Furnishing != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Furnishing%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Number_of_Floors != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Number_of_Floors%&gt; Floors&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Built_Area != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt; &lt;span style=&quot;display:block&quot;&gt;&lt;%=recorr.Built_Area%&gt; Sq.ft. Built Up Area&lt;span&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Land_Breadth != null &amp;&amp; recorr.Land_Length != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Land_Breadth%&gt; by &lt;%=recorr.Land_Length%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n  \n  &lt;div style=&quot;display:inline-block;float:right;margin-top:11px&quot;&gt;\n  \n  &lt;a class=&quot;anchor&quot; href=&quot;&lt;%=zoho.appuri%&gt;#Form:Contact_Seller?zc_LoadIn=dialog&amp;zc_Header=false&amp;Viewed_Property_Rec_Id=&lt;%=recorr.ID%&gt;&amp;Viewed_Property_Posted_By1=&lt;%=proj.Member%&gt;&amp;Property_Type1=&lt;%=block%&gt;&quot; target=&quot;_top&quot;&gt;\n  &lt;button class=&quot;btn&quot;  data-url=&quot;#&quot;&gt;\n        Contact Builder\n    &lt;\/button&gt;\n  &lt;\/a&gt;\n  &lt;\/div&gt;\n  &lt;\/div&gt; \n  &lt;\/div&gt;\n &lt;\/div&gt;\n  &lt;div style=&quot;clear:both;&quot;&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(proj.About == null || proj.About == &quot;&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentFooter&quot;&gt;&lt;span class=&quot;footerSpanTop&quot;&gt;Details: &lt;\/span&gt;&lt;span class=&quot;footerSpanBottom&quot;&gt;&lt;%=proj.About%&gt; &lt;\/span&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor each  rec in Add_Your_Property[ID in plotIds]\n\t\t\t{\n\t\t\t\tif(i != 11)\n\t\t\t\t{\n\t\t\t\t\ti = i + 1;\n\t\t\t\t\timgg = rec.Image;\n\t\t\t\t\timg1 = imgg.replaceAll(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image\/&quot;,zoho.appuri + &quot;All_Properties_by_Others\/Image\/image\/&quot;);\n\t\t\t\t\timg2 = img1.replaceAll(&quot;img&quot;,&quot;img class=&apos;logoimg&apos;&quot;);\n\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentBlock&quot; style=&quot;min-height:0px;&quot;&gt;\n        &lt;div class=&quot;propImage&quot;&gt;\n      &lt;%=img2%&gt; \n     &lt;\/div&gt;\n\n\n  \n  &lt;div class=&quot;propDetails&quot;&gt;\n        &lt;h2&gt;&lt;span class=&quot;propDetailsType&quot;&gt;&lt;%=rec.Property_Type1%&gt;&lt;\/span&gt; in &lt;%=rec.City1.City%&gt; for &lt;%=rec.Property_For%&gt;&lt;\/h2&gt;\n  &lt;div class=&quot;locn&quot;&gt;&lt;p style=&quot;margin:0px;&quot;&gt;&lt;%=rec.Location1.address_line_12%&gt; &lt;%=rec.Location1.address_line_22%&gt;, &lt;%=rec.City1.City%&gt;&lt;\/p&gt;&lt;\/div&gt;\n  &lt;div class=&quot;locn_det&quot;&gt;\n  &lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;display:inline-block;&quot;&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; By: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=rec.Member.Name1%&gt; (&lt;%=rec.Member.Member_Type%&gt;)&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Landmark: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=rec.Nearest_Landmark%&gt;&lt;\/span&gt;&lt;\/div&gt;\n   &lt;div class=&quot;commonInfo&quot;&gt; Posted On: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=rec.Date_field%&gt;&lt;\/span&gt;&lt;\/div&gt;\n &lt;\/div&gt;\n  \n  &lt;div style=&quot;color: black;font-size: 16px;display:inline-block; float:right;margin-top: 11px;font-weight: bold;font-family: &apos;Catamaran&apos;, sans-serif;&quot;&gt;\n&lt;%\n\t\t\t\t\tif(input.forr == &quot;Buy&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rec.Rate_Per_Square_Feet.toLong() != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rate_Per_Square_Feet.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ 0 &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(input.forr == &quot;Rent&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rec.Rent_Per_Month.toLong() != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rent_Per_Month.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Rent\/Month&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ 0 &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rec.Rate_Per_Square_Feet != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rate_Per_Square_Feet%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(rec.Rent_Per_Month.toLong() != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rent_Per_Month.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Rent\/Month&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ 0 &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;\/div&gt;\n   \n  \n&lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;color: #666;font-size: 16px;display: inline-block; width:82%;font-weight: normal;font-family: Proxima Nova,sans-serif;&quot;&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Property_Condition%&gt;&lt;\/div&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Total_Area_in_square_feets.trim()%&gt; sq.ft.&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(rec.Number_of_Bed_Rooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Number_of_Bed_Rooms%&gt; BHK&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Number_of_Bathrooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Number_of_Bathrooms%&gt; Bathrooms&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Furnishing != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Furnishing%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Land_Breadth != null &amp;&amp; rec.Land_Length != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Land_Breadth%&gt; by &lt;%=rec.Land_Length%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Rent_Per_Month != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Rent_Per_Month%&gt; \/Month&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Rate_Per_Square_Feet != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Rate_Per_Square_Feet%&gt; Price\/sq.ft.&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n  \n  &lt;div style=&quot;display:inline-block;float:right;margin-top:11px&quot;&gt;\n  \n  &lt;a class=&quot;anchor&quot; href=&quot;&lt;%=zoho.appuri%&gt;#Form:Contact_Seller?zc_LoadIn=dialog&amp;zc_Header=false&amp;Viewed_Property_Rec_Id=&lt;%=rec.ID%&gt;&amp;Viewed_Property_Posted_By1=&lt;%=rec.Member%&gt;&amp;Property_Type1=&lt;%=rec.Property_Type1%&gt;&quot; target=&quot;_top&quot;&gt;\n  &lt;button class=&quot;btn&quot;  data-url=&quot;#&quot;&gt;\n        Contact Builder\n    &lt;\/button&gt;\n  &lt;\/a&gt;\n    &lt;\/div&gt;\n  &lt;\/div&gt;\n  &lt;\/div&gt;\n  \n &lt;\/div&gt;\n  &lt;div style=&quot;clear:both;&quot;&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(rec.Comments == null || rec.Comments == &quot;&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentFooter&quot;&gt;&lt;span class=&quot;footerSpanTop&quot;&gt;Details: &lt;\/span&gt;&lt;span class=&quot;footerSpanBottom&quot;&gt;&lt;%=rec.Comments%&gt; &lt;\/span&gt;\n                    &lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor each  recor in Floor_Flats_Apartments_Subform[ID in plotIds]\n\t\t\t{\n\t\t\t\tif(i != 11)\n\t\t\t\t{\n\t\t\t\t\ti = i + 1;\n\t\t\t\t\timgg = recor.Image;\n\t\t\t\t\timg1 = imgg.replaceAll(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image\/&quot;,zoho.appuri + &quot;Floor_Flats_Apartments_Subform_Report\/Image\/image\/&quot;);\n\t\t\t\t\timg2 = img1.replaceAll(&quot;img&quot;,&quot;img class=&apos;logoimg&apos;&quot;);\n\t\t\t\t\tblock = Project_Blocks_Subform[ID == recor.Block_Name].Block_Type1;\n\t\t\t\t\tproj = Add_Project[ID == recor.Project_Name];\n\t\t\t\t\tcit = proj.City;\n\t\t\t\t\tcii = Cities[ID == cit].City;\n\t\t\t\t\tvar = proj.Member;\n\t\t\t\t\tmem = Add_User[ID == var];\n\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentBlock&quot; style=&quot;min-height:0px;&quot;&gt;\n        &lt;div class=&quot;propImage&quot;&gt;\n&lt;%=img2%&gt;      \n     &lt;\/div&gt;\n\n    &lt;div class=&quot;propDetails&quot;&gt;\n        &lt;h2&gt;&lt;span class=&quot;propDetailsType&quot;&gt;&lt;%=block%&gt;&lt;\/span&gt; in &lt;%=cii%&gt; for Sale&lt;\/h2&gt;\n\n  &lt;div class=&quot;locn&quot;&gt;&lt;p style=&quot;margin:0px;&quot;&gt;&lt;%=recor.Project_Name.Location1.address_line_12%&gt; &lt;%=recor.Project_Name.Location1.address_line_22%&gt;, &lt;%=cii%&gt;&lt;\/p&gt;&lt;\/div&gt;\n  &lt;div class=&quot;locn_det&quot;&gt;\n  &lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;display:inline-block;&quot;&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; By: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=mem.Name1%&gt; (&lt;%=mem.Member_Type%&gt;)&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Project Name: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=proj.Project_Name%&gt;&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Project Area: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=proj.Project_Area%&gt; Sq.Ft.&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Posted On: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=recor.Date_field%&gt;&lt;\/span&gt;&lt;\/div&gt;\n &lt;\/div&gt;\n  \n  \n   &lt;div style=&quot;color: black;font-size: 16px;display:inline-block; float:right;margin-top: 11px;font-weight: bold;font-family: &apos;Catamaran&apos;, sans-serif;&quot;&gt;\n    $ &lt;%=recor.Rate_per_square_feets.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt;Price\/sq.ft.&lt;\/span&gt;\n  &lt;\/div&gt;\n&lt;\/div&gt;\n   \n  \n&lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;color: #666;font-size: 16px;display: inline-block; width:84%;font-weight: normal;font-family: Proxima Nova,sans-serif;&quot;&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Total_Area_in_square_feets%&gt; Sq.Ft.&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(recor.Number_of_Bed_Rooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Number_of_Bed_Rooms%&gt; BHK&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recor.Number_of_BathRooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Number_of_BathRooms%&gt; Bathroom&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recor.Furnishing != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Furnishing%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recor.Parking_Space != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recor.Parking_Space%&gt; Parking Space&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n  \n  &lt;div style=&quot;display:inline-block;float:right;margin-top:11px&quot;&gt;\n  \n  &lt;a class=&quot;anchor&quot; href=&quot;&lt;%=zoho.appuri%&gt;#Form:Contact_Seller?zc_LoadIn=dialog&amp;zc_Header=false&amp;Viewed_Property_Rec_Id=&lt;%=recor.ID%&gt;&amp;Viewed_Property_Posted_By1=&lt;%=proj.Member%&gt;&amp;Property_Type1=&lt;%=block%&gt;&quot; target=&quot;_top&quot;&gt;\n  &lt;button class=&quot;btn&quot;  data-url=&quot;#&quot;&gt;\n        Contact Builder\n    &lt;\/button&gt;\n  &lt;\/a&gt;\n  &lt;\/div&gt;\n  &lt;\/div&gt; \n  &lt;\/div&gt;\n &lt;\/div&gt;\n  &lt;div style=&quot;clear:both;&quot;&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(proj.About == null || proj.About == &quot;&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentFooter&quot;&gt;&lt;span class=&quot;footerSpanTop&quot;&gt;Details: &lt;\/span&gt;&lt;span class=&quot;footerSpanBottom&quot;&gt;&lt;%=proj.About%&gt; &lt;\/span&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor each  recorr in Land_House_Villa_Subform[ID in plotIds]\n\t\t\t{\n\t\t\t\tif(i != 11)\n\t\t\t\t{\n\t\t\t\t\ti = i + 1;\n\t\t\t\t\timgg = recorr.Image;\n\t\t\t\t\timg1 = imgg.replaceAll(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image\/&quot;,zoho.appuri + &quot;Land_House_Villa_Subform_Report\/Image\/image\/&quot;);\n\t\t\t\t\timg2 = img1.replaceAll(&quot;img&quot;,&quot;img class=&apos;logoimg&apos;&quot;);\n\t\t\t\t\tblock = Project_Blocks_Subform[ID == recorr.Block_Name].Block_Type1;\n\t\t\t\t\tproj = Add_Project[ID == recorr.Project_Name];\n\t\t\t\t\tcit = proj.City;\n\t\t\t\t\tcii = Cities[ID == cit].City;\n\t\t\t\t\tvar = proj.Member;\n\t\t\t\t\tmem = Add_User[ID == var];\n\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentBlock&quot; style=&quot;min-height:0px;&quot;&gt;\n                &lt;div class=&quot;propImage&quot;&gt;\n                &lt;%=img2%&gt;      \n                &lt;\/div&gt;\n                &lt;div class=&quot;propDetails&quot;&gt;\n                &lt;h2&gt;&lt;span class&quot;propDetailsType&quot;&gt;&lt;%=block%&gt;&lt;\/span&gt; in &lt;%=cii%&gt; for Sale&lt;\/h2&gt;\n                &lt;div class=&quot;locn&quot;&gt;&lt;p style=&quot;margin:0px;&quot;&gt;&lt;%=recorr.Project_Name.Location1.address_line_12%&gt; &lt;%=recorr.Project_Name.Location1.address_line_22%&gt;, &lt;%=cii%&gt;&lt;\/p&gt;&lt;\/div&gt;\n                &lt;div class=&quot;locn_det&quot;&gt;\n                &lt;div style=&quot;&quot;&gt;\n                &lt;div style=&quot;display:inline-block;&quot;&gt;\n                &lt;div class=&quot;commonInfo&quot;&gt; By: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=mem.Name1%&gt; (&lt;%=mem.Member_Type%&gt;)&lt;\/span&gt;&lt;\/div&gt;\n                &lt;div class=&quot;commonInfo&quot;&gt; Project Name: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=proj.Project_Name%&gt;&lt;\/span&gt;&lt;\/div&gt;\n                &lt;div class=&quot;commonInfo&quot;&gt; Project Area: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=proj.Project_Area%&gt; Sq.Ft.&lt;\/span&gt;&lt;\/div&gt;\n                &lt;div class=&quot;commonInfo&quot;&gt; Posted On: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=recorr.Date_field%&gt;&lt;\/span&gt;&lt;\/div&gt;\n                &lt;\/div&gt;\n  \n  \n   &lt;div style=&quot;color: black;font-size: 16px;display:inline-block; float:right;margin-top: 11px;font-weight: bold;font-family: &apos;Catamaran&apos;, sans-serif;&quot;&gt;\n&lt;%\n\t\t\t\t\tif(recorr.Rate_per_square_feets.toLong() != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n$ &lt;%=recorr.Rate_per_square_feets.toLong()%&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n$ 0\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt;Price\/sq.ft.&lt;\/span&gt;\n  &lt;\/div&gt;\n&lt;\/div&gt;\n   \n  \n&lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;color: #666;font-size: 16px;display: inline-block; width:82%;font-weight: normal;font-family: Proxima Nova,sans-serif;&quot;&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Total_Area%&gt; sqft&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(recorr.Number_of_Bed_Rooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Number_of_Bed_Rooms%&gt; BHK&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Number_of_Bathrooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Number_of_Bathrooms%&gt; Bathroom&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Furnishing != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Furnishing%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Number_of_Floors != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Number_of_Floors%&gt; Floors&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Built_Area != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt; &lt;span style=&quot;display:block&quot;&gt;&lt;%=recorr.Built_Area%&gt; Sq.ft. Built Up Area&lt;span&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(recorr.Land_Breadth != null &amp;&amp; recorr.Land_Length != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=recorr.Land_Breadth%&gt; by &lt;%=recorr.Land_Length%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n  \n  &lt;div style=&quot;display:inline-block;float:right;margin-top:11px&quot;&gt;\n  \n  &lt;a class=&quot;anchor&quot; href=&quot;&lt;%=zoho.appuri%&gt;#Form:Contact_Seller?zc_LoadIn=dialog&amp;zc_Header=false&amp;Viewed_Property_Rec_Id=&lt;%=recorr.ID%&gt;&amp;Viewed_Property_Posted_By1=&lt;%=proj.Member%&gt;&amp;Property_Type1=&lt;%=block%&gt;&quot; target=&quot;_top&quot;&gt;\n  &lt;button class=&quot;btn&quot;  data-url=&quot;#&quot;&gt;\n        Contact Builder\n    &lt;\/button&gt;\n  &lt;\/a&gt;\n  &lt;\/div&gt;\n  &lt;\/div&gt; \n  &lt;\/div&gt;\n &lt;\/div&gt;\n  &lt;div style=&quot;clear:both;&quot;&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(proj.About == null || proj.About == &quot;&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentFooter&quot;&gt;&lt;span class=&quot;footerSpanTop&quot;&gt;Details: &lt;\/span&gt;&lt;span class=&quot;footerSpanBottom&quot;&gt;&lt;%=proj.About%&gt; &lt;\/span&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor each  rec in Add_Your_Property[ID in plotIds]\n\t\t\t{\n\t\t\t\tif(i != 11)\n\t\t\t\t{\n\t\t\t\t\ti = i + 1;\n\t\t\t\t\timgg = rec.Image;\n\t\t\t\t\timg1 = imgg.replaceAll(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName\/image\/&quot;,zoho.appuri + &quot;All_Properties_by_Others\/Image\/image\/&quot;);\n\t\t\t\t\timg2 = img1.replaceAll(&quot;img&quot;,&quot;img class=&apos;logoimg&apos;&quot;);\n\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentBlock&quot; style=&quot;min-height:0px;&quot;&gt;\n        &lt;div class=&quot;propImage&quot;&gt;\n      &lt;%=img2%&gt; \n     &lt;\/div&gt;\n\n\n  \n  &lt;div class=&quot;propDetails&quot;&gt;\n        &lt;h2&gt;&lt;span class=&quot;propDetailsType&quot;&gt;&lt;%=rec.Property_Type1%&gt;&lt;\/span&gt; in &lt;%=rec.City1.City%&gt; for &lt;%=rec.Property_For%&gt;&lt;\/h2&gt;\n  &lt;div class=&quot;locn&quot;&gt;&lt;p style=&quot;margin:0px;&quot;&gt;&lt;%=rec.Location1.address_line_12%&gt; &lt;%=rec.Location1.address_line_22%&gt;, &lt;%=rec.City1.City%&gt;&lt;\/p&gt;&lt;\/div&gt;\n  &lt;div class=&quot;locn_det&quot;&gt;\n  &lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;display:inline-block;&quot;&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; By: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=rec.Member.Name1%&gt; (&lt;%=rec.Member.Member_Type%&gt;)&lt;\/span&gt;&lt;\/div&gt;\n  &lt;div class=&quot;commonInfo&quot;&gt; Landmark: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=rec.Nearest_Landmark%&gt;&lt;\/span&gt;&lt;\/div&gt;\n   &lt;div class=&quot;commonInfo&quot;&gt; Posted On: &lt;span style=&quot;margin:0px;color:#103c7e;&quot;&gt;&lt;%=rec.Date_field%&gt;&lt;\/span&gt;&lt;\/div&gt;\n &lt;\/div&gt;\n  \n  &lt;div style=&quot;color: black;font-size: 16px;display:inline-block; float:right;margin-top: 11px;font-weight: bold;font-family: &apos;Catamaran&apos;, sans-serif;&quot;&gt;\n&lt;%\n\t\t\t\t\tif(input.forr == &quot;Buy&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rec.Rate_Per_Square_Feet.toLong() != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rate_Per_Square_Feet.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ 0 &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(input.forr == &quot;Rent&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rec.Rent_Per_Month.toLong() != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rent_Per_Month.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Rent\/Month&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ 0 &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(rec.Rate_Per_Square_Feet != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rate_Per_Square_Feet%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(rec.Rent_Per_Month.toLong() != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ &lt;%=rec.Rent_Per_Month.toLong()%&gt; &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Rent\/Month&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%&gt;\n$ 0 &lt;span style=&quot;color: #666;font-weight: normal;&quot;&gt; Price\/sq.ft.&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;\/div&gt;\n   \n  \n&lt;div style=&quot;&quot;&gt;\n  &lt;div style=&quot;color: #666;font-size: 16px;display: inline-block; width:82%;font-weight: normal;font-family: Proxima Nova,sans-serif;&quot;&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Property_Condition%&gt;&lt;\/div&gt;\n  &lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Total_Area_in_square_feets.trim()%&gt; sq.ft.&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(rec.Number_of_Bed_Rooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Number_of_Bed_Rooms%&gt; BHK&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Number_of_Bathrooms != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Number_of_Bathrooms%&gt; Bathrooms&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Furnishing != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Furnishing%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Land_Breadth != null &amp;&amp; rec.Land_Length != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Land_Breadth%&gt; by &lt;%=rec.Land_Length%&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Rent_Per_Month != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Rent_Per_Month%&gt; \/Month&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\tif(rec.Rate_Per_Square_Feet != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;prodetails&quot;&gt;&lt;%=rec.Rate_Per_Square_Feet%&gt; Price\/sq.ft.&lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n  \n  &lt;div style=&quot;display:inline-block;float:right;margin-top:11px&quot;&gt;\n  \n  &lt;a class=&quot;anchor&quot; href=&quot;&lt;%=zoho.appuri%&gt;#Form:Contact_Seller?zc_LoadIn=dialog&amp;zc_Header=false&amp;Viewed_Property_Rec_Id=&lt;%=rec.ID%&gt;&amp;Viewed_Property_Posted_By1=&lt;%=rec.Member%&gt;&amp;Property_Type1=&lt;%=rec.Property_Type1%&gt;&quot; target=&quot;_top&quot;&gt;\n  &lt;button class=&quot;btn&quot;  data-url=&quot;#&quot;&gt;\n        Contact Builder\n    &lt;\/button&gt;\n  &lt;\/a&gt;\n    &lt;\/div&gt;\n  &lt;\/div&gt;\n  &lt;\/div&gt;\n  \n &lt;\/div&gt;\n  &lt;div style=&quot;clear:both;&quot;&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t\t\tif(rec.Comments == null || rec.Comments == &quot;&quot;)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;div class=&quot;contentFooter&quot;&gt;&lt;span class=&quot;footerSpanTop&quot;&gt;Details: &lt;\/span&gt;&lt;span class=&quot;footerSpanBottom&quot;&gt;&lt;%=rec.Comments%&gt; &lt;\/span&gt;\n                    &lt;\/div&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t}\n\t}\n\telse\n\t{\n\t\t%&gt;\n&lt;div style=&quot;height:100vh;width:100vw;position:relative;left:0px;&quot;&gt;\n  &lt;h2 align=&apos;center&apos;&gt;&lt;strong&gt;No Property Found.&lt;\/strong&gt;&lt;\/h2&gt;\n  &lt;div style=&quot;text-align: center;margin-top: 50px;&quot;&gt;\n&lt;a href=&apos;&lt;%=zoho.appuri%&gt;#Form:Add_Your_Property&apos; target=&apos;_parent&apos;&gt; &lt;div class=&quot;addNewPropertyBtn&quot;&gt;  Add a Property&lt;\/div&gt;&lt;\/a&gt;\n&lt;%\n\t\tif(zoho.loginuserid == zoho.adminuserid)\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;color: #aaa;display:inline-block;margin-right:10px;&quot;&gt; or &lt;\/div&gt;\n  &lt;a href=&apos;&lt;%=zoho.appuri%&gt;#Form:Add_Project&apos; target=&apos;_parent&apos;&gt; &lt;div class=&quot;addNewPropertyBtn&quot;&gt; Add a Project    &lt;\/div&gt; &lt;\/a&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n  \n  &lt;\/div&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/div&gt;\n  &lt;\/div&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
		form Contact_Seller
		{
			displayname = "Contact Seller"
			success message = "Request Mail Sent  Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			plain
			(
    			type = plaintext
				value = "<font size=\"5\" color=\"#333333\">Request Call Back</font>"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Name1
			(
    			type = name
				displayname = "Name"
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Mobile
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			Property_Type1
			(
				type = picklist
				displayname = "Property Type"
				values = {"Shop", "House/Villa", "Land", "Flat/Apartment"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Viewed_Property_Posted_By1
			(
				type = picklist
				displayname = "Viewed Property Posted By"
				values  = Add_User.ID
    			displayformat = [Name1.first_name + " - " + Name1.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Viewed_Property_Rec_Id
			(
				type = number
				displayname = "Viewed Property Rec-Id"
				maxchar = 19
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					Call_Me_Back
					(
   						type = submit
   						displayname = "Call Me Back"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Contact_Seller_Report
		{
			displayName = "Contact Seller Report"
   			hide = true
			show all rows from Contact_Seller    
			(
				Mobile
				Email
				Viewed_Property_Rec_Id as "Property ID"
				Viewed_Property_Posted_By1 as "Viewed Property Posted By"
				Property_Type1 as "Property Type"
				Name1  as "Name"
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Added_Time as "Enquired at"
			)
			options
			(
				icon = "ui-1-database"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Name1 as "Name"
							Mobile
							Email
							Added_Time as "Enquired at"
							Viewed_Property_Rec_Id as "Property ID"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Mobile
							Email
							Viewed_Property_Rec_Id as "Property ID"
							Viewed_Property_Posted_By1 as "Viewed Property Posted By"
							Property_Type1 as "Property Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Project_Blocks_Subform_Report
		{
			displayName = "Project Blocks Subform Report"
   			hide = true
			show all rows from Project_Blocks_Subform    
			(
				Block_Name as "Block Name"
				Project as "Project Name"
				Block_Type1 as "Block Type"
			)
			options
			(
				icon = "ui-1-database"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Block_Name as "Block Name"
							Project as "Project Name"
							Block_Type1 as "Block Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Block_Name as "Block Name"
							Project as "Project Name"
							Block_Type1 as "Block Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Floor_Details_Subform_Report
		{
			displayName = "Floor Details Subform Report"
   			hide = true
			show all rows from Floor_Details_Subform    
			(
				Floor_Number as "Floor Number"
				Number_of_Flats_Apartments_Shops as "Number of Flats"
				Project_Name as "Project Name"
				Block_Name as "Block Name"
				Block_Details_Master_Lookup as "Block Details Master Lookup"
			)
			options
			(
				icon = "ui-2-grid-49"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Floor_Number as "Floor Number"
							Number_of_Flats_Apartments_Shops as "Number of Flats"
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Block_Details_Master_Lookup as "Block Details Master Lookup"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Floor_Number as "Floor Number"
							Number_of_Flats_Apartments_Shops as "Number of Flats"
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Block_Details_Master_Lookup as "Block Details Master Lookup"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom Floor_Flats_Apartments_Subform_Report
		{
			displayName = "Floor Flats/Apartments Subform Report"
   			hide = true
			show all rows from Floor_Flats_Apartments_Subform    
			(
				Status
				Flats_Apartments_Master as "Flats/Apartments Master Lookup"
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				Assign_Agent as "Agent"
				Project_Name as "Project Name"
				Block_Name as "Block Name"
				Floor_Number as "Floor Number"
				Project_Name.Project_Includes1 as "Project Includes"
				Project_Name.Amenities
				Project_Name.Project_Area as "Project Area(Sq.Ft.)"
				Project_Name.About
				Date_field as "Date"
				Furnishing
				Number_of_BathRooms as "Number of BathRooms"
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Sold_By as "Sold By"
				Block_Name.Block_Type1 as "Block Type"
				custom action "Sold"
				(
	  			workflow = Flat_Shop_sold_script2
				show action in view header = true
				column header = "Sold"
				condition = (Status == "Active")
				)
				Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
				Image
				Rate_per_square_feets as "Rate (per square feets)"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				custom action "View Enquiries"
				(
	  			workflow = Open_Enquiries_script3
				show action in edit record menu = true
				column header = "View Enquiries"
				)
				Project_Name.Project_Name as "Project Name"
			)
			group by
			(
				Block_Name.Block_Type1 ascending
			)
			options
			(
				icon = "ui-1-database"
	 		)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
							Project_Name.Project_Name as "Project Name"
							Rate_per_square_feets as "Rate (per square feets)"
							Total_Area_in_square_feets as "Total Area (in square feets)"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"View Enquiries"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
								"Sold"
								"View Enquiries"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Floor_Number as "Floor Number"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_BathRooms as "Number of BathRooms"
							Furnishing
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Rate_per_square_feets as "Rate (per square feets)"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
							Assign_Agent as "Agent"
							Date_field as "Date"
							Sold_By as "Sold By"
				"Sold"
				"View Enquiries"
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Project Details"
						fields
						(
							Project_Name.Project_Includes1 as "Project Includes"
							Project_Name.Amenities as "Amenities"
							Project_Name.Project_Area as "Project Area(Sq.Ft.)"
							Project_Name.About as "About"
						)
					)
					datablock4
					(
			 			layout type = 15
		     			title = "Overview"
						fields
						(
							Image
							Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
			 			"Sold"
    	 			)
    			)
			)
		}
		custom Land_House_Villa_Subform_Report
		{
			displayName = "Land/House/Villa Subform Report"
   			hide = true
			show all rows from Land_House_Villa_Subform    
			(
				Status
				Furnishing
				Number_of_Floors as "Number of Floors"
				Date_field as "Added Date"
				Number_of_Bathrooms as "Number of Bathrooms"
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Built_Area as "Built Area"
				Land_Breadth as "Land Breadth"
				Land_Length as "Land Length"
				Assign_Agent as "Agent"
				Block_Name as "Block Name"
				Sold_By as "Sold By"
				Project_Name.Project_Area as "Project Area(Sq.Ft.)"
				Project_Name.Amenities
				Project_Name.About
				Block_Name.Block_Type1 as "Block Type"
				custom action "Sold"
				(
	  			workflow = Land_House_sold_script2
				show action in edit record menu = true
				column header = "Sold"
				condition = (Status == "Active")
				)
				Project_Name.Project_Includes1 as "Project Includes"
				Project_Name as "Project Name"
				Total_Area as "Total Area"
				custom action "View Enquiries"
				(
	  			workflow = Open_Enquiries_script2
				show action in edit record menu = true
				column header = "View Enquiries"
				)
				Rate_per_square_feets as "Rate (per square feets)"
				Land_House_Villa_Number as "Land/House/Villa Number"
				Image
			)
			group by
			(
				Block_Name.Block_Type1 ascending
			)
			options
			(
				icon = "ui-2-grid-49"
	 		)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Land_House_Villa_Number as "Land/House/Villa Number"
							Project_Name as "Project Name"
							Rate_per_square_feets as "Rate (per square feets)"
							Total_Area as "Total Area"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Sold"
								"View Enquiries"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
								"Sold"
								"View Enquiries"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 7
		     			title = "Overview"
						fields
						(
							Image
							Land_House_Villa_Number as "Land/House/Villa Number"
							Project_Name.Project_Includes1 as "Project Includes"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Rate_per_square_feets as "Rate (per square feets)"
							Number_of_Floors as "Number of Floors"
							Total_Area as "Total Area"
							Built_Area as "Built Area"
							Land_Breadth as "Land Breadth"
							Land_Length as "Land Length"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_Bathrooms as "Number of Bathrooms"
							Furnishing
							Date_field as "Added Date"
							Assign_Agent as "Agent"
							Sold_By as "Sold By"
				"Sold"
				"View Enquiries"
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Project Details"
						fields
						(
							Project_Name.Project_Includes1 as "Project Includes"
							Project_Name.Project_Area as "Project Area(Sq.Ft.)"
							Project_Name.Amenities as "Amenities"
							Project_Name.About as "About"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Cantact_Seller
	{
		displayname= "Cantact Seller"
		hide = true
		icon = "ui-2-menu-bold"
		form Contact_Seller_Button
		{
			displayname = "Contact Seller Button"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Property_Type1
			(
				type = picklist
				displayname = "Property Type"
				values = {"Choice 1", "Choice 2", "Choice 3"}
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Viewed_Property_Posted_By1
			(
				type = picklist
				displayname = "Viewed Property Posted By"
				values  = Add_User.ID
    			displayformat = [Name1.first_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = 206px
			)
			Viewed_Property_Rec_Id
			(
				type = number
				displayname = "Viewed Property Rec-Id"
				maxchar = 19
	 			row = 1
	 			column = 1   
				width = 100px
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				Contact_Seller
				(
   					type = button
   					displayname = "Contact Seller"
				)
			}
		}
				 page Cantact_Seller_PopUp(Viewed_Property_Rec_Id,Viewed_Property_Posted_By1,Property_Type1) 
	 	 { 
 	 	 displayname = "Cantact Seller PopUp" 

 	 	 icon = "" 

 	 	 hide =  true
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Cantact_Seller_PopUp1'>\n\t<![CDATA[htmlpage Cantact_Seller_PopUp1(Viewed_Property_Rec_Id,Viewed_Property_Posted_By1,Property_Type1)\ncontent\n&lt;%{\n\t%&gt;\n&lt;iframe name=&apos;zohoview&apos; height=&apos;400&apos; width=&apos;100%&apos; frameborder=&apos;0&apos; scrolling=&apos;Auto&apos; src=&apos;&lt;%=zoho.appuri%&gt;form-embed\/Contact_Seller\/zc_Header=false&amp;Viewed_Property_Rec_Id=&lt;%=Viewed_Property_Rec_Id%&gt;&amp;Viewed_Property_Posted_By1=&lt;%=Viewed_Property_Posted_By1%&gt;&amp;Property_Type1=&lt;%=Property_Type1%&gt; &apos;&gt;\n\t&lt;\/iframe&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Floor_Flats_Apartments_Subform
	{
		displayname= "Builder/Developer Properties"
		custom All_Flats_by_Builder_Developer
		{
			displayName = "All Flats"
   			hide = true
			show all rows from Floor_Flats_Apartments_Subform  [Block_Name.Block_Type1 == "Flat/Apartment"]  
			(
				Status
				Flats_Apartments_Master as "Flats/Apartments Master Lookup"
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				custom action "Sold"
				(
	  			workflow = Flat_Shop_sold_script
				show action in edit record menu = true
				column header = "Sold"
				condition = (Status == "Active")
				)
				Project_Name as "Project Name"
				Block_Name as "Block Name"
				Floor_Number as "Floor Number"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				Furnishing
				Number_of_BathRooms as "Number of BathRooms"
				Date_field as "Date"
				Project_Name.City
				Project_Name.Project_Area as "Project Area(Sq.Ft.)"
				Project_Name.Amenities
				Project_Name.About
				Project_Name.Project_Includes1 as "Project Includes"
				Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
				Image
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Rate_per_square_feets as "Rate (per square feets)"
			)
			filters
			(
				Project_Name
			)
			options
			(
				icon = "ui-3-playlist"
	 		)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder_Custom_Ac
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
							Project_Name.Project_Includes1 as "Project Includes"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Rate_per_square_feets as "Rate (per square feets)"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 15
		     			title = "Overview"
						fields
						(
							Image
							Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Floor_Number as "Floor Number"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Date_field as "Date"
							Number_of_BathRooms as "Number of BathRooms"
							Furnishing
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Rate_per_square_feets as "Rate (per square feets)"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
						)
					)
					datablock5
					(
			 			layout type = -2
		     			title = "Project Details"
						fields
						(
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Project_Name.Project_Includes1 as "Project Includes"
							Project_Name.City as "City"
							Project_Name.Project_Area as "Project Area(Sq.Ft.)"
							Project_Name.Amenities as "Amenities"
							Project_Name.About as "About"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_Shops_by_Builder_Developer
		{
			displayName = "All Shops"
   			hide = true
			show all rows from Floor_Flats_Apartments_Subform  [Block_Name.Block_Type1 == "Shop"]  
			(
				Status
				Flats_Apartments_Master as "Flats/Apartments Master Lookup"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				custom action "Sold"
				(
	  			workflow = Flat_Shop_sold_script1
				show action in edit record menu = true
				column header = "Sold"
				condition = (Status == "Active")
				)
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				Block_Name as "Block Name"
				Date_field as "Added Date"
				Project_Name.Project_Includes1 as "Project Includes"
				Project_Name.City
				Project_Name.Amenities
				Project_Name.About
				Project_Name.Project_Area as "Project Area(Sq.Ft.)"
				Floor_Number as "Floor Number"
				Rate_per_square_feets as "Rate (per square feets)"
				Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
				Image
				Project_Name as "Project Name"
			)
			filters
			(
				Project_Name
			)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder_Custom_Ac1
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
							Project_Name as "Project Name"
							Floor_Number as "Floor Number"
							Rate_per_square_feets as "Rate (per square feets)"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 7
		     			title = "Overview"
						fields
						(
							Image
							Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Floor_Number as "Floor Number"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
							Rate_per_square_feets as "Rate (per square feets)"
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Date_field as "Added Date"
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Project Details"
						fields
						(
							Project_Name.City as "City"
							Project_Name.Project_Includes1 as "Project Includes"
							Project_Name.Amenities as "Amenities"
							Project_Name.Project_Area as "Project Area(Sq.Ft.)"
							Project_Name.About as "About"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_House_Villa_by_Builder_Developer
		{
			displayName = "All House/Villas"
   			hide = true
			show all rows from Land_House_Villa_Subform  [Block_Name.Block_Type1 == "House/Villa"]  
			(
				Land_Breadth as "Land Breadth"
				Land_Length as "Land Length"
				Status
				Total_Area as "Total Area"
				Built_Area as "Built Area"
				Project_Name as "Project Name"
				Block_Name as "Block Name"
				Date_field as "Date"
				Number_of_Bathrooms as "Number of Bathrooms"
				Furnishing
				Number_of_Floors as "Number of Floors"
				Project_Name.City
				Project_Name.Project_Area as "Project Area(Sq.Ft.)"
				Project_Name.Amenities
				Project_Name.About
				Project_Name.Project_Includes1 as "Project Includes"
				Land_House_Villa_Number as "Land/House/Villa Number"
				Image
				Rate_per_square_feets as "Rate (per square feets)"
				Number_of_Bed_Rooms as "Number of Bed Rooms"
			)
			filters
			(
				Project_Name
			)
			options
			(
				icon = "ui-3-playlist"
	 		)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder_Custom_Ac3
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Land_House_Villa_Number as "Land/House/Villa Number"
							Project_Name.Project_Includes1 as "Project Includes"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Rate_per_square_feets as "Rate (per square feets)"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 15
		     			title = "Overview"
						fields
						(
							Image
							Land_House_Villa_Number as "Land/House/Villa Number"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_Bathrooms as "Number of Bathrooms"
							Date_field as "Date"
							Furnishing
							Number_of_Floors as "Number of Floors"
							Total_Area as "Total Area"
							Built_Area as "Built Area"
							Rate_per_square_feets as "Rate (per square feets)"
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Project Details"
						fields
						(
							Project_Name.City as "City"
							Project_Name.Project_Includes1 as "Project Includes"
							Project_Name.Project_Area as "Project Area(Sq.Ft.)"
							Project_Name.Amenities as "Amenities"
							Project_Name.About as "About"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_Lands_by_Builder_Developer
		{
			displayName = "All Lands"
   			hide = true
			show all rows from Land_House_Villa_Subform  [Block_Name.Block_Type1 == "Land"]  
			(
				Built_Area as "Built Area"
				Status
				Land_Breadth as "Land Breadth"
				custom action "Sold"
				(
	  			workflow = Land_House_sold_script
				show action in edit record menu = true
				column header = "Sold"
				condition = (Status == "Active")
				)
				Land_Length as "Land Length"
				Project_Name.Project_Includes1 as "Project Includes"
				Project_Name.City
				Project_Name.Project_Area as "Project Area(Sq.Ft.)"
				Project_Name.Amenities
				Project_Name.About
				Block_Name as "Block Name"
				Project_Name as "Project Name"
				Land_House_Villa_Number as "Land/House/Villa Number"
				Total_Area as "Total Area"
				Rate_per_square_feets as "Rate (per square feets)"
				Image
			)
			filters
			(
				Project_Name
			)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder_Custom_Ac2
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Land_House_Villa_Number as "Land/House/Villa Number"
							Rate_per_square_feets as "Rate (per square feets)"
							Total_Area as "Total Area"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 15
		     			title = "Overview"
						fields
						(
							Image
							Land_House_Villa_Number as "Land/House/Villa Number"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Land_Breadth as "Land Breadth"
							Land_Length as "Land Length"
							Rate_per_square_feets as "Rate (per square feets)"
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Project Details"
						fields
						(
							Project_Name.City as "City"
							Project_Name.Project_Includes1 as "Project Includes"
							Project_Name.Project_Area as "Project Area(Sq.Ft.)"
							Project_Name.Amenities as "Amenities"
							Project_Name.About as "About"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Search_Property_Mobile
	{
		displayname= "Mobile Components"
		form Search_Property_Mobile
		{
			displayname = "Search Property Mobile"
			store data in zc = false
			success message = ""
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			For_field
			(
				type = radiobuttons
				displayname = "Property For?"
				values = {"Buy", "Rent"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			PropertyType1
			(
				type = picklist
				displayname = "Property Type"
				values = {"Shop", "House/Villa", "Land", "Flat/Apartment"}
	 			row = 1
	 			column = 1   
				width = 206px
			)
			show_search
			(
    			type = plaintext
				value = "<div> </div>"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				Submit
				(
   					type = submit
   					displayname = "Submit"
				)
				Reset
				(
   					type = reset
   					displayname = "Reset"
				)
			}
		}
				 page Property_Type_Selection_Mobile_Builder(Added,Posted_By) 
	 	 { 
 	 	 displayname = "Property Type Selection Mobile Builder" 

 	 	 icon = "" 

 	 	 hide =  true
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t padding = '20px'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<button    \t\t text = 'Flat\/Apartment'\n   \t\t size = '4'\n   \t\t color = '#FFFFFF'\n   \t\t bgColor = '#089e3c'\n   \t\t type = 'rounded'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'All_Flats_by_Builder_Developer'\n   \t\t target = 'new-window'\n   \t\t cornerRadius = '60px'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t padding = '20px'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<button    \t\t text = 'Shops'\n   \t\t size = '4'\n   \t\t color = '#FFFFFF'\n   \t\t bgColor = '#089e3c'\n   \t\t type = 'rounded'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'All_Shops_by_Builder_Developer'\n   \t\t target = 'new-window'\n   \t\t cornerRadius = '60px'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t padding = '20px'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<button    \t\t text = 'House\/Villa'\n   \t\t size = '4'\n   \t\t color = '#FFFFFF'\n   \t\t bgColor = '#089e3c'\n   \t\t type = 'rounded'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'All_House_Villa_by_Builder_Developer'\n   \t\t target = 'new-window'\n   \t\t cornerRadius = '60px'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t padding = '20px'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<button    \t\t text = 'Lands'\n   \t\t size = '4'\n   \t\t color = '#FFFFFF'\n   \t\t bgColor = '#089e3c'\n   \t\t type = 'rounded'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'All_Lands_by_Builder_Developer'\n   \t\t target = 'new-window'\n   \t\t cornerRadius = '60px'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Property_Type_Selection_Mobile_Others 
	 	 { 
 	 	 displayname = "Property Type Selection Mobile Others" 

 	 	 icon = "" 

 	 	 hide =  true
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\tmobileDeviceConfig='{\"layout\":{\"displayType\":\"card\",\"design\":\"onebyone\",\"forcedOrientation\":false}}'\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#D9D9D9'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<button    \t\t text = 'Flat\/Apartment'\n   \t\t size = '4'\n   \t\t color = '#FFFFFF'\n   \t\t bgColor = '#089e3c'\n   \t\t type = 'rounded'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'All_Flats_for_Rent_by_Others'\n   \t\t target = 'same-window'\n   \t\t cornerRadius = '60px'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#D9D9D9'\n   \t\t padding = '20px'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<button    \t\t text = 'Shops'\n   \t\t size = '4'\n   \t\t color = '#FFFFFF'\n   \t\t bgColor = '#089e3c'\n   \t\t type = 'rounded'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'All_Shops_by_Others'\n   \t\t target = 'same-window'\n   \t\t cornerRadius = '60px'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#D9D9D9'\n   \t\t padding = '20px'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<button    \t\t text = 'House\/Villa'\n   \t\t size = '4'\n   \t\t color = '#FFFFFF'\n   \t\t bgColor = '#089e3c'\n   \t\t type = 'rounded'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'All_House_Villas_by_Others'\n   \t\t target = 'same-window'\n   \t\t cornerRadius = '60px'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#D9D9D9'\n   \t\t padding = '20px'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<button    \t\t text = 'Lands'\n   \t\t size = '4'\n   \t\t color = '#FFFFFF'\n   \t\t bgColor = '#089e3c'\n   \t\t type = 'rounded'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'All_Lands_for_Sale_by_Others'\n   \t\t target = 'same-window'\n   \t\t cornerRadius = '60px'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Other_s_Properties
	{
		displayname= "Other's Properties"
		custom All_Flats_for_Sale_by_Others
		{
			displayName = "All Flats for Sale by Others"
   			hide = true
			show all rows from Add_Your_Property  [Property_Type1 == "Flat/Apartment" && Property_For == "Sale" && Status == "Active"]  
			(
				Land_Length as "Land Length"
				Land_Breadth as "Land Breadth"
				Status
				Sold_By as "Sold By"
				Rent_Per_Month as "Rent Per Month"
				Date_field as "Date"
				Property_Condition as "Property Condition"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				Nearest_Landmark as "Nearest Landmark"
				Furnishing
				Number_of_Bathrooms as "Number of Bathrooms"
				Floor_Number as "Floor Number"
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				Comments
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Member
				Rate_Per_Square_Feet as "Rate (Per Square Feet)"
				Image
				City1 as "City"
			)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder
				show action in edit record menu = true
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Member
							City1 as "City"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Contact Builder"
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock3
					(
			 			layout type = 19
		     			title = "Overview"
						fields
						(
							Image
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Date_field as "Date"
							Property_Condition as "Property Condition"
							City1 as "City"
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Nearest_Landmark as "Nearest Landmark"
							Furnishing
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_Bathrooms as "Number of Bathrooms"
							Floor_Number as "Floor Number"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_Flats_for_Rent_by_Others
		{
			displayName = "All Flats for Rent by Others"
   			hide = true
			show all rows from Add_Your_Property  [Property_Type1 == "Flat/Apartment" && Property_For == "Rent" && Status == "Active"]  
			(
				Land_Length as "Land Length"
				Land_Breadth as "Land Breadth"
				Status
				Sold_By as "Sold By"
				Rate_Per_Square_Feet as "Rate (Per Square Feet)"
				Rent_Per_Month as "Rent Per Month"
				Property_Type1 as "Property Type"
				Property_For as "Property For"
				Property_Condition as "Property Condition"
				Date_field as "Added Date"
				City1 as "City"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				Nearest_Landmark as "Nearest Landmark"
				Furnishing
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Number_of_Bathrooms as "Number of Bathrooms"
				Floor_Number as "Floor Number"
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				Comments
				Member.Email
				Image
				Member
				Member.Mobile_Number as "Mobile Number"
				Location1  as "Location"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
			)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder
				show action in edit record menu = true
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Member
							Location1 as "Location"
							Member.Email as "Email"
							Member.Mobile_Number as "Mobile Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Contact Builder"
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 19
		     			title = "Overview"
						fields
						(
							Image
							Location1 as "Location"
							Rent_Per_Month as "Rent Per Month"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Property_Condition as "Property Condition"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_Bathrooms as "Number of Bathrooms"
							Furnishing
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Nearest_Landmark as "Nearest Landmark"
							City1 as "City"
							Floor_Number as "Floor Number"
							Date_field as "Added Date"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_House_Villas_for_Rent_by_Others
		{
			displayName = "All House/Villas for Rent by Others"
   			hide = true
			show all rows from Add_Your_Property  [Property_Type1 == "House/Villa" && Property_For == "Rent" && Status == "Active"]  
			(
				Number_of_Bathrooms as "Number of Bathrooms"
				Maintainence_Charge as "Maintainence"
				Nearest_Landmark as "Nearest Landmark"
				Furnishing
				Floor_Number as "Floor Number"
				Land_Length as "Land Length"
				Land_Breadth as "Land Breadth"
				Status
				Sold_By as "Sold By"
				City1 as "City"
				Date_field as "Date"
				Property_Type1 as "Property Type"
				Parking_Space as "Parking Space"
				Comments
				Total_Area_in_square_feets as "Total Area (in square feets)"
				Property_Condition as "Property Condition"
				Rate_Per_Square_Feet as "Rate (Per Square Feet)"
				Member
				Property_For as "Property For"
				Image
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Rent_Per_Month as "Rent Per Month"
				Location1  as "Location"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
			)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder
				show action in edit record menu = true
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Property_For as "Property For"
							Location1 as "Location"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Rent_Per_Month as "Rent Per Month"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Contact Builder"
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Property_For as "Property For"
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_Bathrooms as "Number of Bathrooms"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							Maintainence_Charge as "Maintainence"
							Nearest_Landmark as "Nearest Landmark"
							Furnishing
							Floor_Number as "Floor Number"
							Member
							Property_Condition as "Property Condition"
							Land_Length as "Land Length"
							Land_Breadth as "Land Breadth"
							Status
							Sold_By as "Sold By"
							Rent_Per_Month as "Rent Per Month"
							Image
							City1 as "City"
							Comments
							Date_field as "Date"
							Property_Type1 as "Property Type"
							Parking_Space as "Parking Space"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_Shops_for_Rent_by_Others
		{
			displayName = "All Shops for Rent by Others"
   			hide = true
			show all rows from Add_Your_Property  [Property_Type1 == "Shop" && Property_For == "Rent" && Status == "Active"]  
			(
				Land_Length as "Land Length"
				Land_Breadth as "Land Breadth"
				Status
				Sold_By as "Sold By"
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Rate_Per_Square_Feet as "Rate (Per Square Feet)"
				Number_of_Bathrooms as "Number of Bathrooms"
				Member
				Property_Condition as "Property Condition"
				City1 as "City"
				Date_field as "Added Date"
				Rent_Per_Month as "Rent Per Month"
				Image
				Total_Area_in_square_feets as "Total Area (in square feets)"
				Nearest_Landmark as "Nearest Landmark"
				Furnishing
				Floor_Number as "Floor Number"
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				Comments
			)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder
				show action in edit record menu = true
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Member
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Rent_Per_Month as "Rent Per Month"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Contact Builder"
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 19
		     			title = "Overview"
						fields
						(
							Image
							Rent_Per_Month as "Rent Per Month"
							Total_Area_in_square_feets as "Total Area (in square feets)"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Member
							Date_field as "Added Date"
							Property_Condition as "Property Condition"
							City1 as "City"
							Nearest_Landmark as "Nearest Landmark"
							Furnishing
							Floor_Number as "Floor Number"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_Lands_for_Sale_by_Others
		{
			displayName = "All Lands for Sale by Others"
   			hide = true
			show all rows from Add_Your_Property  [Property_Type1 == "Land" && Status == "Active"]  
			(
				Furnishing
				Floor_Number as "Floor Number"
				Status
				Sold_By as "Sold By"
				Parking_Space as "Parking Space"
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Maintainence_Charge as "Maintainence Charge"
				Number_of_Bathrooms as "Number of Bathrooms"
				Rent_Per_Month as "Rent Per Month"
				Property_Condition as "Property Condition"
				Date_field as "Added Date"
				City1 as "City"
				Nearest_Landmark as "Nearest Landmark"
				Land_Breadth as "Land Breadth"
				Land_Length as "Land Length"
				Comments
				Member
				Image
				Rate_Per_Square_Feet as "Rate (Per Square Feet)"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				Property_For as "Property For"
				Location1  as "Location"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
			)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder
				show action in edit record menu = true
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Property_For as "Property For"
							Location1 as "Location"
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Contact Builder"
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Property_For as "Property For"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							Rent_Per_Month as "Rent Per Month"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Date_field as "Added Date"
							Property_Condition as "Property Condition"
							City1 as "City"
							Nearest_Landmark as "Nearest Landmark"
							Land_Breadth as "Land Breadth"
							Land_Length as "Land Length"
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_House_Villas_for_Sale_by_Others
		{
			displayName = "All House/Villas for Sale by Others"
   			hide = true
			show all rows from Add_Your_Property  [Property_Type1 == "House/Villa" && Property_For == "Sale" && Status == "Active"]  
			(
				Number_of_Bathrooms as "Number of Bathrooms"
				Maintainence_Charge as "Maintainence"
				Nearest_Landmark as "Nearest Landmark"
				Furnishing
				Floor_Number as "Floor Number"
				Land_Length as "Land Length"
				Land_Breadth as "Land Breadth"
				Status
				Sold_By as "Sold By"
				Rent_Per_Month as "Rent Per Month"
				City1 as "City"
				Date_field as "Date"
				Property_Type1 as "Property Type"
				Parking_Space as "Parking Space"
				Comments
				Total_Area_in_square_feets as "Total Area (in square feets)"
				Property_Condition as "Property Condition"
				Member
				Property_For as "Property For"
				Image
				Rate_Per_Square_Feet as "Rate (Per Square Feet)"
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Location1  as "Location"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
			)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder
				show action in edit record menu = true
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Property_For as "Property For"
							Location1 as "Location"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Contact Builder"
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Property_For as "Property For"
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_Bathrooms as "Number of Bathrooms"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							Maintainence_Charge as "Maintainence"
							Nearest_Landmark as "Nearest Landmark"
							Furnishing
							Floor_Number as "Floor Number"
							Member
							Property_Condition as "Property Condition"
							Land_Length as "Land Length"
							Land_Breadth as "Land Breadth"
							Status
							Sold_By as "Sold By"
							Rent_Per_Month as "Rent Per Month"
							Image
							City1 as "City"
							Comments
							Date_field as "Date"
							Property_Type1 as "Property Type"
							Parking_Space as "Parking Space"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_Shops_for_Sale_by_Others
		{
			displayName = "All Shops for Sale by Others"
   			hide = true
			show all rows from Add_Your_Property  [Property_Type1 == "Shop" && Property_For == "Sale" && Status == "Active"]  
			(
				Land_Length as "Land Length"
				Land_Breadth as "Land Breadth"
				Status
				Sold_By as "Sold By"
				Rent_Per_Month as "Rent Per Month"
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Number_of_Bathrooms as "Number of Bathrooms"
				Property_Condition as "Property Condition"
				City1 as "City"
				Date_field as "Added Date"
				Member
				Rate_Per_Square_Feet as "Rate (Per Square Feet)"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				Image
				Nearest_Landmark as "Nearest Landmark"
				Furnishing
				Floor_Number as "Floor Number"
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				Comments
			)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder
				show action in edit record menu = true
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Member
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Contact Builder"
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 19
		     			title = "Overview"
						fields
						(
							Image
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							Total_Area_in_square_feets as "Total Area (in square feets)"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Member
							Date_field as "Added Date"
							Property_Condition as "Property Condition"
							City1 as "City"
							Nearest_Landmark as "Nearest Landmark"
							Furnishing
							Floor_Number as "Floor Number"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_Flats_by_Others
		{
			displayName = "All Flats by Others"
   			hide = true
			show all rows from Add_Your_Property  [Property_Type1 == "Flat/Apartment" && Status == "Active"]  
			(
				Land_Length as "Land Length"
				Land_Breadth as "Land Breadth"
				Status
				Sold_By as "Sold By"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				Property_Condition as "Property Condition"
				City1 as "City"
				Date_field as "Added Date"
				Nearest_Landmark as "Nearest Landmark"
				Furnishing
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Number_of_Bathrooms as "Number of Bathrooms"
				Floor_Number as "Floor Number"
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				Comments
				Member.Email
				Property_For as "Property For"
				Rent_Per_Month as "Rent Per Month"
				Rate_Per_Square_Feet as "Rate (Per Square Feet)"
				Member.Mobile_Number as "Mobile Number"
				Image
			)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder
				show action in edit record menu = true
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Property_For as "Property For"
							Member.Mobile_Number as "Mobile Number"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							Rent_Per_Month as "Rent Per Month"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Contact Builder"
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Property_For as "Property For"
							Member.Email as "Email"
							Member.Mobile_Number as "Mobile Number"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Date_field as "Added Date"
							Property_Condition as "Property Condition"
							City1 as "City"
							Nearest_Landmark as "Nearest Landmark"
							Furnishing
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_Bathrooms as "Number of Bathrooms"
							Floor_Number as "Floor Number"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_House_Villas_by_Others
		{
			displayName = "All House/Villas by Others"
   			hide = true
			show all rows from Add_Your_Property  [Property_Type1 == "House/Villa" && Status == "Active"]  
			(
				Land_Length as "Land Length"
				Land_Breadth as "Land Breadth"
				Status
				Sold_By as "Sold By"
				Property_Condition as "Property Condition"
				City1 as "City"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				Nearest_Landmark as "Nearest Landmark"
				Furnishing
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Number_of_Bathrooms as "Number of Bathrooms"
				Floor_Number as "Floor Number"
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				Comments
				Rent_Per_Month as "Rent Per Month"
				Property_For as "Property For"
				Rate_Per_Square_Feet as "Rate (Per Square Feet)"
				Image
				Member
				Location1  as "Location"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
			)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder
				show action in edit record menu = true
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Property_For as "Property For"
							Location1 as "Location"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							Member
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Contact Builder"
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Property_For as "Property For"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							Rent_Per_Month as "Rent Per Month"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Property_Condition as "Property Condition"
							Nearest_Landmark as "Nearest Landmark"
							City1 as "City"
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Furnishing
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_Bathrooms as "Number of Bathrooms"
							Floor_Number as "Floor Number"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_Shops_by_Others
		{
			displayName = "All Shops by Others"
   			hide = true
			show all rows from Add_Your_Property  [Property_Type1 == "Shop" && Status == "Active"]  
			(
				Land_Length as "Land Length"
				Land_Breadth as "Land Breadth"
				Status
				Sold_By as "Sold By"
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Number_of_Bathrooms as "Number of Bathrooms"
				Image
				Rate_Per_Square_Feet as "Rate (Per Square Feet)"
				Rent_Per_Month as "Rent Per Month"
				Property_Condition as "Property Condition"
				Property_For as "Property For"
				Date_field as "Added Date"
				City1 as "City"
				Member as "Added By"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				Nearest_Landmark as "Nearest Landmark"
				Floor_Number as "Floor Number"
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				Comments
			)
			custom actions
			(
				"Contact Builder"
				(
	  			workflow = Contact_Builder
				show action in edit record menu = true
				)
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Member as "Added By"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							Rent_Per_Month as "Rent Per Month"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Contact Builder"
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Property_For as "Property For"
							Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							Rent_Per_Month as "Rent Per Month"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Member as "Added By"
							Date_field as "Added Date"
							Floor_Number as "Floor Number"
							Property_Condition as "Property Condition"
							Nearest_Landmark as "Nearest Landmark"
							City1 as "City"
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
							Comments
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Property_Sale_Details
	{
		displayname= "Property Sale Details"
		icon = "shopping-tag-sale"
		form Property_Sale_Details
		{
			displayname = "Property Sale Details"
			success message = "Property Sale Detail Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Sold_by
			(
				type = picklist
				displayname = "Sold by"
				values  = Add_User[Member_Type == "Agent/Broker"].ID
    			displayformat = [" " + Name1.prefix + " " + Name1.first_name + " " + Name1.last_name + " " + Name1.suffix]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Sold_at
			(
				displayname = "Sold at"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Agent_Commision
			(
				displayname = "Agent Commision"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			Commission_Percent
			(
    			type = percentage
				displayname = "Commission Percent"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Property_from
			(
				type = radiobuttons
				displayname = "Property from"
				values = {"Other's Properties", "Builder Flats/Apartments", "Builder Land/House/Villa"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Flats_Apartments_Number
			(
				type = picklist
				displayname = "Builder Flats/Apartments ID"
				values  = Floor_Flats_Apartments_Subform.ID
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Builder_Land_House_Villa_ID
			(
				type = picklist
				displayname = "Builder Land/House/Villa ID"
				values  = Land_House_Villa_Subform.ID
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Other_Property_ID
			(
				type = picklist
				displayname = "Other Property ID"
				values  = Add_Your_Property.ID
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-tag-sale"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Property_Sale_Details
		{
			displayName = "All Property Sale Details"
   			hide = true
			show all rows from Property_Sale_Details    
			(
				Sold_by as "Sold by"
				Sold_at as "Sold at"
				Flats_Apartments_Number as "Builder Flats/Apartments ID"
				Builder_Land_House_Villa_ID as "Builder Land/House/Villa ID"
				Other_Property_ID as "Other Property ID"
				Property_from as "Property from"
				Agent_Commision as "Agent Commision"
				Commission_Percent as "Commission Percent"
			)
			options
			(
				icon = "users-2-contacts-44"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Sold_by as "Sold by"
							Sold_at as "Sold at"
							Flats_Apartments_Number as "Builder Flats/Apartments ID"
							Builder_Land_House_Villa_ID as "Builder Land/House/Villa ID"
							Other_Property_ID as "Other Property ID"
							Property_from as "Property from"
							Agent_Commision as "Agent Commision"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Sold_by as "Sold by"
							Sold_at as "Sold at"
							Flats_Apartments_Number as "Builder Flats/Apartments ID"
							Builder_Land_House_Villa_ID as "Builder Land/House/Villa ID"
							Other_Property_ID as "Other Property ID"
							Property_from as "Property from"
							Agent_Commision as "Agent Commision"
							Commission_Percent as "Commission Percent"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Copy_of_Select_Agent
	{
		displayname= "Copy of Select Agent"
		form Select_Project_Agent
		{
			displayname = "Select Project Agent"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Agent
			(
				type = picklist
				displayname = "Select Agent"
				values  = Add_User.ID
    			displayformat = [" " + Name1.first_name + " " + Name1.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			rec_ID
			(
    			type = text
				displayname = "rec-ID"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assign_agent_in
			(
				type = radiobuttons
				displayname = "Assign agent to"
				values = {"Builder Project", "Builder Flats/Apartments", "Builder Land/House/Villa", "Other's Properties"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			rec_IDs
			(
				type = list
				displayname = "rec-IDs"
				values = {"1"}
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				Assign
				(
   					type = submit
   					displayname = "Assign"
				)
				Reset
				(
   					type = reset
   					displayname = "Reset"
				)
			}
		}
	}
	section My_Assigned_Properties
	{
		displayname= "My Assigned Properties"
		custom My_Assigned_Flats_Apartments_Shops
		{
			displayName = "Flats/Apartments/Shops"
   			hide = true
			show all rows from Floor_Flats_Apartments_Subform  [Assign_Agent.Email == zoho.loginuserid]  
			(
				Status
				Flats_Apartments_Master as "Flats/Apartments Master Lookup"
				Maintainence_Charge as "Maintainence Charge"
				Parking_Space as "Parking Space"
				Assign_Agent as "Agent"
				Project_Name as "Project Name"
				Block_Name as "Block Name"
				Floor_Number as "Floor Number"
				Project_Name.Project_Includes1 as "Project Includes"
				Project_Name.Amenities
				Project_Name.Project_Area as "Project Area(Sq.Ft.)"
				Project_Name.About
				Date_field as "Date"
				Furnishing
				Number_of_BathRooms as "Number of BathRooms"
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Sold_By as "Sold By"
				Block_Name.Block_Type1 as "Block Type"
				custom action "Sold"
				(
	  			workflow = Flat_Shop_sold_script2
				show action in view header = true
				column header = "Sold"
				condition = (Status == "Active")
				)
				Image
				Rate_per_square_feets as "Rate (per square feets)"
				Total_Area_in_square_feets as "Total Area (in square feets)"
				custom action "View Enquiries"
				(
	  			workflow = Open_Enquiries_script3
				show action in edit record menu = true
				column header = "View Enquiries"
				)
				Project_Name.Project_Name as "Project Name"
				Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
			)
			group by
			(
				Block_Name.Block_Type1 ascending
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
							Project_Name.Project_Name as "Project Name"
							Rate_per_square_feets as "Rate (per square feets)"
							Total_Area_in_square_feets as "Total Area (in square feets)"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"View Enquiries"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
								"Sold"
								"View Enquiries"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Floor_Number as "Floor Number"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_BathRooms as "Number of BathRooms"
							Furnishing
							Total_Area_in_square_feets as "Total Area (in square feets)"
							Rate_per_square_feets as "Rate (per square feets)"
							Maintainence_Charge as "Maintainence Charge"
							Parking_Space as "Parking Space"
							Assign_Agent as "Agent"
							Date_field as "Date"
							Sold_By as "Sold By"
				"Sold"
				"View Enquiries"
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Project Details"
						fields
						(
							Project_Name.Project_Includes1 as "Project Includes"
							Project_Name.Amenities as "Amenities"
							Project_Name.Project_Area as "Project Area(Sq.Ft.)"
							Project_Name.About as "About"
						)
					)
					datablock4
					(
			 			layout type = 15
		     			title = "Overview"
						fields
						(
							Image
							Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
			 			"Sold"
    	 			)
    			)
			)
		}
		custom My_Assigned_Lands_Houses_Villas
		{
			displayName = "Lands/Houses/Villas"
   			hide = true
			show all rows from Land_House_Villa_Subform  [Assign_Agent.Email == zoho.loginuserid]  
			(
				Status
				Furnishing
				Number_of_Floors as "Number of Floors"
				Date_field as "Added Date"
				Number_of_Bathrooms as "Number of Bathrooms"
				Number_of_Bed_Rooms as "Number of Bed Rooms"
				Built_Area as "Built Area"
				Land_Breadth as "Land Breadth"
				Land_Length as "Land Length"
				Assign_Agent as "Agent"
				Block_Name as "Block Name"
				Sold_By as "Sold By"
				Project_Name.Project_Area as "Project Area(Sq.Ft.)"
				Project_Name.Amenities
				Project_Name.About
				Block_Name.Block_Type1 as "Block Type"
				Project_Name.Project_Includes1 as "Project Includes"
				custom action "Sold"
				(
	  			workflow = Land_House_sold_script2
				show action in edit record menu = true
				column header = "Sold"
				condition = (Status == "Active")
				)
				Total_Area as "Total Area"
				Rate_per_square_feets as "Rate (per square feets)"
				Land_House_Villa_Number as "Land/House/Villa Number"
				Image
				custom action "View Enquiries"
				(
	  			workflow = Open_Enquiries_script2
				show action in edit record menu = true
				column header = "View Enquiries"
				)
				Project_Name as "Project Name"
			)
			group by
			(
				Block_Name.Block_Type1 ascending
			)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 27
		     			title = "Overview"
						fields
						(
							Image
							Land_House_Villa_Number as "Land/House/Villa Number"
							Project_Name as "Project Name"
							Rate_per_square_feets as "Rate (per square feets)"
							Total_Area as "Total Area"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
								"Sold"
								"View Enquiries"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
								"Sold"
								"View Enquiries"
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 7
		     			title = "Overview"
						fields
						(
							Image
							Land_House_Villa_Number as "Land/House/Villa Number"
							Project_Name.Project_Includes1 as "Project Includes"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Property Details"
						fields
						(
							Project_Name as "Project Name"
							Block_Name as "Block Name"
							Rate_per_square_feets as "Rate (per square feets)"
							Number_of_Floors as "Number of Floors"
							Total_Area as "Total Area"
							Built_Area as "Built Area"
							Land_Breadth as "Land Breadth"
							Land_Length as "Land Length"
							Number_of_Bed_Rooms as "Number of Bed Rooms"
							Number_of_Bathrooms as "Number of Bathrooms"
							Furnishing
							Date_field as "Added Date"
							Assign_Agent as "Agent"
							Sold_By as "Sold By"
				"Sold"
				"View Enquiries"
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Project Details"
						fields
						(
							Project_Name.Project_Includes1 as "Project Includes"
							Project_Name.Project_Area as "Project Area(Sq.Ft.)"
							Project_Name.Amenities as "Amenities"
							Project_Name.About as "About"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	functions
	{
 			int indexCalculation(int var)
			{
				if(input.var >= 10)
				{
					var2 = var % 10;
					var = var2.toLong();
				}
				return var;
			}
 			int indexCountCalculation(int ind, int indCount)
			{
				if(input.ind >= 10)
				{
					indexCount = ind / 10;
					indCount = indexCount.toLong();
					indCount = indCount + 1;
				}
				return indCount;
			}
 			map builderAllProperties(string PropertyType, string forr, string bedrooms, string City, string posted_by, string forr1, int index)
			{
				plotIds = List:Int();
				proplength = 0;
				if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms == "null" && input.City == "null")
				{
					for each  recor in Floor_Flats_Apartments_Subform[ID != 0 && Status == "Active"] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[ID != 0 && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[ID != 0 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[ID != 0 && Status == "Active"].count() + Land_House_Villa_Subform[ID != 0 && Status == "Active"].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[ID != 0 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms == "null" && input.City != "null")
				{
					for each  recor in Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()] && Status == "Active"].count() + Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()] && Status == "Active"].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms != "null" && input.City == "null")
				{
					//%><p>347</p><%
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  recor in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"].count() + Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms == "null" && input.City == "null")
				{
					//%><p>347</p><%
					for each  recor in Floor_Flats_Apartments_Subform[ID != 0 && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[ID != 0 && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[ID != 0 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[ID != 0 && Status == "Active"].count() + Land_House_Villa_Subform[ID != 0 && Status == "Active"].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[ID != 0 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms != "null" && input.City == "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					//%><p>278</p><%
					for each  recor in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"].count() + Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Number_of_Bed_Rooms == bed1 && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Number_of_Bed_Rooms == bed1 && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Number_of_Bed_Rooms == bed1 && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms == "null" && input.City != "null")
				{
					//%><p>278</p><%
					for each  recor in Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()] && Status == "Active"].count() + Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()] && Status == "Active"].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					//%><p>278</p><%
					for each  recor in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()] && Status == "Active"].count() + Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()] && Status == "Active"].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					//%><p>278</p><%
					for each  recor in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()] && Status == "Active"].count() + Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()] && Status == "Active"].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				plotIDAndLenghtMap = {"proplength":proplength,"plotIds":plotIds};
				return plotIDAndLenghtMap;
			}
 			map builderLandOrHouseProperties(string PropertyType, string forr, string bedrooms, string City, string posted_by, string forr1, int index)
			{
				plotIds = List:Int();
				proplength = 0;
				if(input.forr == "null" && input.bedrooms == "null" && input.City == "null")
				{
					for each  recorr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Status == "Active"] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recorr.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr == "null" && input.bedrooms == "null" && input.City != "null")
				{
					for each  recorr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recorr.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && City1 == City.toLong() && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && City1 == City.toLong() && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr != "null" && input.bedrooms == "null" && input.City == "null")
				{
					for each  recorr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Status == "Active"] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recorr.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr != "null" && input.bedrooms == "null" && input.City != "null")
				{
					for each  recorr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recorr.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && Property_For == forr1 && City1 == City.toLong() && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && Property_For == forr1 && City1 == City.toLong() && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr != "null" && input.bedrooms != "null" && input.City == "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  recorr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Status == "Active"] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recorr.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && Property_For == forr1 && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && Property_For == forr1 && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr == "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  recorr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recorr.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr != "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  recorr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recorr.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr == "null" && input.bedrooms != "null" && input.City == "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  recorr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recorr.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				plotIDAndLenghtMap = {"proplength":proplength,"plotIds":plotIds};
				return plotIDAndLenghtMap;
			}
 			map builderShopOrFLatProperties(string PropertyType, string forr, string bedrooms, string City, string posted_by, string forr1, int index)
			{
				plotIDAndLenghtMap = Map();
				plotIds = List:Int();
				proplength = 0;
				if(input.forr == "null" && input.bedrooms == "null" && input.City == "null")
				{
					for each  recor in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr == "null" && input.bedrooms == "null" && input.City != "null")
				{
					for each  recor in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()] && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && City1 == City.toLong() && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && City1 == City.toLong() && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr == "null" && input.bedrooms != "null" && input.City == "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  recor in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr != "null" && input.bedrooms == "null" && input.City == "null")
				{
					for each  recor in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr != "null" && input.bedrooms == "null" && input.City != "null")
				{
					for each  recor in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()] && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && City1 == City.toLong() && Property_For == forr1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && City1 == City.toLong() && Property_For == forr && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr == "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  recor in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()] && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr != "null" && input.bedrooms != "null" && input.City == "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  recor in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && Property_For == forr1 && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && Property_For == forr1 && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.forr != "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  recor in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Status == "Active"].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && City1 == City.toLong() && Property_For == forr && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_Type1 == PropertyType && City1 == City.toLong() && Property_For == forr && Number_of_Bed_Rooms == bed1 && Status == "Active"] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				plotIDAndLenghtMap.put("proplength",proplength);
				plotIDAndLenghtMap.put("plotIds",plotIds);
				aa = plotIDAndLenghtMap.get("plotIds").toList();
				info plotIDAndLenghtMap.get("plotIds").toList();
				info plotIDAndLenghtMap.get("proplength").toLong();
				info aa.size();
				return plotIDAndLenghtMap;
			}
 			map individualOrAgentProperties(string PropertyType, string forr, string bedrooms, string City, string posted_by, string forr1, int index)
			{
				plotIds = List:Int();
				proplength = 0;
				if(input.PropertyType != "null" && input.forr != "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1 && City1 == City.toLong() && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType != "null" && input.forr != "null" && input.bedrooms == "null" && input.City != "null")
				{
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Property_Type1 == input.PropertyType && City1 == City.toLong() && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Number_of_Bed_Rooms == bed1 && City1 == City.toLong() && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType != "null" && input.forr = "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1 && City1 == City.toLong() && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType != "null" && input.forr != "null" && input.bedrooms != "null" && input.City = "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1 && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType != "null" && input.forr == "null" && input.bedrooms == "null" && input.City != "null")
				{
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_Type1 == input.PropertyType && City1 == City.toLong() && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType != "null" && input.forr == "null" && input.bedrooms != "null" && input.City == "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1 && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Number_of_Bed_Rooms == bed1 && City1 == City.toLong() && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms == "null" && input.City != "null")
				{
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && City1 == City.toLong() && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms != "null" && input.City == "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Number_of_Bed_Rooms == bed1 && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType != "null" && input.forr != "null" && input.bedrooms == "null" && input.City == "null")
				{
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Property_Type1 == input.PropertyType && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms == "null" && input.City != "null")
				{
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[City1 == City.toLong() && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms == "null" && input.City == "null")
				{
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms != "null" && input.City == "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Number_of_Bed_Rooms == bed1 && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType != "null" && input.forr == "null" && input.bedrooms == "null" && input.City == "null")
				{
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_Type1 == input.PropertyType && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms == "null" && input.City == "null")
				{
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				else if(input.PropertyType != "null" && input.forr != "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					list1 = Add_User[Member_Type == input.posted_by].ID.getAll();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1 && City1 == City.toLong() && Member in list1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
				}
				plotIDAndLenghtMap = {"proplength":proplength,"plotIds":plotIds};
				return plotIDAndLenghtMap;
			}
 			map noPostedByProperties(string PropertyType, string forr, string bedrooms, string City, string posted_by, string forr1, int index, string i)
			{
				if(input.i != "")
				{
					ind = i.toLong();
				}
				else
				{
					ind = 0;
				}
				plotIds = List:Int();
				proplength = 0;
				if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms == "null" && input.City == "null")
				{
					// %><p>358</p><%
					for each  rec in Add_Your_Property[ID != 0] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						ind = ind + 1;
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Add_Your_Property[ID != 0].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  r in Floor_Flats_Apartments_Subform[ID != 0] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(r.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  r in Floor_Flats_Apartments_Subform[ID != 0] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(r.ID);
							proplength = proplength + 1;
						}
					}
					if(proplength == 0)
					{
						inde = Add_Your_Property[ID != 0].count() + Floor_Flats_Apartments_Subform[ID != 0].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[ID != 0] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[ID != 0] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.PropertyType != "null" && input.forr == "null" && input.bedrooms == "null" && input.City == "null")
				{
					//%><p>367</p><%
					for each  rec in Add_Your_Property[Property_Type1 == input.PropertyType] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(input.PropertyType == "Flat/Apartment" || input.PropertyType == "Shop")
					{
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_Type1 == input.PropertyType].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  r in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  r in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
					}
					if(input.PropertyType == "House/Villa" || input.PropertyType == "Land")
					{
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_Type1 == input.PropertyType].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  rr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  rr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms == "null" && input.City != "null")
				{
					Cityy = City.toLong();
					//%><p>376</p><%
					for each  rec in Add_Your_Property[City1 == Cityy] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						cityID = City.toLong();
						inde = Add_Your_Property[City1 == cityID].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  r in Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(r.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  r in Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(r.ID);
							proplength = proplength + 1;
						}
					}
					if(proplength == 0)
					{
						cityID = City.toLong();
						projectFormID = Add_Project[City == City.toLong()].ID.getAll();
						inde = Add_Your_Property[City1 == cityID].count() + Floor_Flats_Apartments_Subform[Project_Name in projectFormID].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms == "null" && input.City == "null")
				{
					//%><p>385</p><%
					for each  rec in Add_Your_Property[Property_For == input.forr1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(input.forr == "Buy")
					{
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_For == input.forr1].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  r in Floor_Flats_Apartments_Subform[ID != 0] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  r in Floor_Flats_Apartments_Subform[ID != 0] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_For == input.forr1].count();
							inde = inde + Floor_Flats_Apartments_Subform[ID != 0].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  rr in Land_House_Villa_Subform[ID != 0] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  rr in Land_House_Villa_Subform[ID != 0] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms != "null" && input.City == "null")
				{
					//%><p>393</p><%
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  rec in Add_Your_Property[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Add_Your_Property[Number_of_Bed_Rooms == bed1].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  r in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(r.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  r in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(r.ID);
							proplength = proplength + 1;
						}
					}
					if(proplength == 0)
					{
						inde = Add_Your_Property[Number_of_Bed_Rooms == bed1].count() + Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.PropertyType != "null" && input.forr == "null" && input.bedrooms == "null" && input.City != "null")
				{
					//%><p>405</p><%
					for each  rec in Add_Your_Property[Property_Type1 == input.PropertyType && City1 == City.toLong()] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(input.PropertyType == "Flat/Apartment" || input.PropertyType == "Shop")
					{
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_Type1 == input.PropertyType && City1 == City.toLong()].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  r in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  r in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
					}
					if(input.PropertyType == "House/Villa" || input.PropertyType == "Land")
					{
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_Type1 == input.PropertyType && City1 == City.toLong()].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  rr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  rr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType != "null" && input.forr != "null" && input.bedrooms == "null" && input.City == "null")
				{
					//%><p>423</p><%
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Property_Type1 == input.PropertyType] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(input.forr == "Buy")
					{
						if(input.PropertyType == "Flat/Apartment" || input.PropertyType == "Shop")
						{
							if(proplength == 0)
							{
								inde = Add_Your_Property[Property_Type1 == input.PropertyType && Property_For == input.forr1].count();
								if(inde >= 10)
								{
									indCount = thisapp.indexCountCalculation(inde,1);
									inde = thisapp.indexCalculation(inde);
								}
								else if(inde == 0)
								{
									inde = 10;
									indCount = 0;
								}
								else
								{
									indCount = 1;
								}
								rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
								rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
								for each  r in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from rangeFrom to rangeTo
								{
									plotIds.add(r.ID);
									proplength = proplength + 1;
								}
							}
							else if(plotIds.size() != 11)
							{
								for each  r in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from 1 to 11 - proplength
								{
									plotIds.add(r.ID);
									proplength = proplength + 1;
								}
							}
						}
						if(input.PropertyType == "House/Villa" || input.PropertyType == "Land")
						{
							if(proplength == 0)
							{
								inde = Add_Your_Property[Property_Type1 == input.PropertyType && Property_For == input.forr1].count();
								if(inde >= 10)
								{
									indCount = thisapp.indexCountCalculation(inde,1);
									inde = thisapp.indexCalculation(inde);
								}
								else if(inde == 0)
								{
									inde = 10;
									indCount = 0;
								}
								else
								{
									indCount = 1;
								}
								rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
								rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
								for each  rr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from rangeFrom to rangeTo
								{
									plotIds.add(rr.ID);
									proplength = proplength + 1;
								}
							}
							else if(plotIds.size() != 11)
							{
								for each  rr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from 1 to 11 - proplength
								{
									plotIds.add(rr.ID);
									proplength = proplength + 1;
								}
							}
						}
					}
				}
				else if(input.PropertyType != "null" && input.forr == "null" && input.bedrooms != "null" && input.City == "null")
				{
					//%><p>423</p><%
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  rec in Add_Your_Property[Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(input.PropertyType == "Flat/Apartment" || input.PropertyType == "Shop")
					{
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  r in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  r in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
					}
					if(input.PropertyType == "House/Villa" || input.PropertyType == "Land")
					{
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms != "null" && input.City == "null")
				{
					//%><p>423</p><%
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(input.forr == "Buy")
					{
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_For == input.forr1 && Number_of_Bed_Rooms == bed1].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  r in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  r in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_For == input.forr1 && Number_of_Bed_Rooms == bed1].count() + Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms == "null" && input.City != "null")
				{
					//%><p>423</p><%
					for each  rec in Add_Your_Property[Property_For == input.forr1 && City1 == City.toLong()] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(input.forr == "Buy")
					{
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_For == input.forr1 && City1 == City.toLong()].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  r in Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  r in Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_For == input.forr1 && City1 == City.toLong()].count() + Floor_Flats_Apartments_Subform[Project_Name == Add_Project[City == City.toLong()].ID].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms != "null" && input.City != "null")
				{
					//%><p>423</p><%
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  rec in Add_Your_Property[Number_of_Bed_Rooms == bed1 && City1 == City.toLong()] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Add_Your_Property[Number_of_Bed_Rooms == bed1 && City1 == City.toLong()].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  r in Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(r.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  r in Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(r.ID);
							proplength = proplength + 1;
						}
					}
					if(proplength == 0)
					{
						inde = Add_Your_Property[Number_of_Bed_Rooms == bed1 && City1 == City.toLong()].count() + Floor_Flats_Apartments_Subform[Project_Name == Add_Project[City == City.toLong()].ID && Number_of_Bed_Rooms == bed1].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
					}
				}
				else if(input.PropertyType != "null" && input.forr != "null" && input.bedrooms != "null" && input.City == "null")
				{
					//%><p>423</p><%
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(input.forr == "Buy")
					{
						if(input.PropertyType == "Flat/Apartment" || input.PropertyType == "Shop")
						{
							if(proplength == 0)
							{
								inde = Add_Your_Property[Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1 && Property_For == input.forr1].count();
								if(inde >= 10)
								{
									indCount = thisapp.indexCountCalculation(inde,1);
									inde = thisapp.indexCalculation(inde);
								}
								else if(inde == 0)
								{
									inde = 10;
									indCount = 0;
								}
								else
								{
									indCount = 1;
								}
								rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
								rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
								for each  r in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from rangeFrom to rangeTo
								{
									plotIds.add(r.ID);
									proplength = proplength + 1;
								}
							}
							else if(plotIds.size() != 11)
							{
								for each  r in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from 1 to 11 - proplength
								{
									plotIds.add(r.ID);
									proplength = proplength + 1;
								}
							}
						}
						if(input.PropertyType == "House/Villa" || input.PropertyType == "Land")
						{
							if(proplength == 0)
							{
								inde = Add_Your_Property[Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1 && Property_For == input.forr1].count();
								if(inde >= 10)
								{
									indCount = thisapp.indexCountCalculation(inde,1);
									inde = thisapp.indexCalculation(inde);
								}
								else if(inde == 0)
								{
									inde = 10;
									indCount = 0;
								}
								else
								{
									indCount = 1;
								}
								rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
								rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
								for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from rangeFrom to rangeTo
								{
									plotIds.add(rr.ID);
									proplength = proplength + 1;
								}
							}
							else if(plotIds.size() != 11)
							{
								for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Block_Name.Block_Type1 == input.PropertyType] sort by Added_Time desc range from 1 to 11 - proplength
								{
									plotIds.add(rr.ID);
									proplength = proplength + 1;
								}
							}
						}
					}
				}
				else if(input.PropertyType != "null" && input.forr == "null" && input.bedrooms != "null" && input.City != "null")
				{
					//%><p>423</p><%
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  rec in Add_Your_Property[Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1 && City1 == City.toLong()] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(input.PropertyType == "Flat/Apartment" || input.PropertyType == "Shop")
					{
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_Type1 == input.PropertyType && City1 == City.toLong() && Number_of_Bed_Rooms == bed1].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  r in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  r in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
					}
					if(input.PropertyType == "House/Villa" || input.PropertyType == "Land")
					{
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_Type1 == input.PropertyType && City1 == City.toLong() && Number_of_Bed_Rooms == bed1].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  rr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  rr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms != "null" && input.City != "null")
				{
					//%><p>423</p><%
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Number_of_Bed_Rooms == bed1 && City1 == City.toLong()] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(input.forr == "Buy")
					{
						if(proplength == 0)
						{
							inde = Add_Your_Property[Number_of_Bed_Rooms == bed1 && City1 == City.toLong() && Property_For == input.forr1].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  r in Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  r in Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(r.ID);
								proplength = proplength + 1;
							}
						}
						if(proplength == 0)
						{
							inde = Add_Your_Property[Property_For == input.forr1 && Number_of_Bed_Rooms == bed1 && City1 == City.toLong()].count() + Floor_Flats_Apartments_Subform[Project_Name == Add_Project[City == City.toLong()].ID && Number_of_Bed_Rooms == bed1].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								plotIds.add(rr.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType != "null" && input.forr != "null" && input.bedrooms == "null" && input.City != "null")
				{
					//%><p>414</p><%
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Property_Type1 == input.PropertyType && City1 == City.toLong()] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(input.forr == "Buy")
					{
						if(input.PropertyType == "Flat/Apartment" || input.PropertyType == "Shop")
						{
							if(proplength == 0)
							{
								inde = Add_Your_Property[Property_Type1 == input.PropertyType && City1 == City.toLong() && Property_For == input.forr1].count();
								if(inde >= 10)
								{
									indCount = thisapp.indexCountCalculation(inde,1);
									inde = thisapp.indexCalculation(inde);
								}
								else if(inde == 0)
								{
									inde = 10;
									indCount = 0;
								}
								else
								{
									indCount = 1;
								}
								rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
								rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
								for each  r in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from rangeFrom to rangeTo
								{
									plotIds.add(r.ID);
									proplength = proplength + 1;
								}
							}
							else if(plotIds.size() != 11)
							{
								for each  r in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from 1 to 11 - proplength
								{
									plotIds.add(r.ID);
									proplength = proplength + 1;
								}
							}
						}
						if(input.PropertyType == "House/Villa" || input.PropertyType == "Land")
						{
							if(proplength == 0)
							{
								inde = Add_Your_Property[Property_Type1 == input.PropertyType && City1 == City.toLong() && Property_For == input.forr1].count();
								if(inde >= 10)
								{
									indCount = thisapp.indexCountCalculation(inde,1);
									inde = thisapp.indexCalculation(inde);
								}
								else if(inde == 0)
								{
									inde = 10;
									indCount = 0;
								}
								else
								{
									indCount = 1;
								}
								rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
								rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
								for each  rr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from rangeFrom to rangeTo
								{
									plotIds.add(rr.ID);
									proplength = proplength + 1;
								}
							}
							else if(plotIds.size() != 11)
							{
								for each  rr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from 1 to 11 - proplength
								{
									plotIds.add(rr.ID);
									proplength = proplength + 1;
								}
							}
						}
					}
				}
				else if(input.PropertyType != "null" && input.forr != "null" && input.bedrooms != "null" && input.City != "null")
				{
					//%><p>423</p><%
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  rec in Add_Your_Property[Property_For == input.forr1 && Property_Type1 == input.PropertyType && Number_of_Bed_Rooms == bed1 && City1 == City.toLong()] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(rec.ID);
						proplength = proplength + 1;
					}
					if(input.forr == "Buy")
					{
						if(input.PropertyType == "Flat/Apartment" || input.PropertyType == "Shop")
						{
							if(proplength == 0)
							{
								inde = Add_Your_Property[Property_For == input.forr1 && Property_Type1 == input.PropertyType && City1 == City.toLong() && Number_of_Bed_Rooms == bed1].count();
								if(inde >= 10)
								{
									indCount = thisapp.indexCountCalculation(inde,1);
									inde = thisapp.indexCalculation(inde);
								}
								else if(inde == 0)
								{
									inde = 10;
									indCount = 0;
								}
								else
								{
									indCount = 1;
								}
								rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
								rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
								for each  r in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
								{
									plotIds.add(r.ID);
									proplength = proplength + 1;
								}
							}
							else if(plotIds.size() != 11)
							{
								for each  r in Floor_Flats_Apartments_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
								{
									plotIds.add(r.ID);
									proplength = proplength + 1;
								}
							}
						}
						if(input.PropertyType == "House/Villa" || input.PropertyType == "Land")
						{
							if(proplength == 0)
							{
								inde = Add_Your_Property[Property_For == input.forr1 && Property_Type1 == input.PropertyType && City1 == City.toLong() && Number_of_Bed_Rooms == bed1].count();
								if(inde >= 10)
								{
									indCount = thisapp.indexCountCalculation(inde,1);
									inde = thisapp.indexCalculation(inde);
								}
								else if(inde == 0)
								{
									inde = 10;
									indCount = 0;
								}
								else
								{
									indCount = 1;
								}
								rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
								rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
								for each  rr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
								{
									plotIds.add(rr.ID);
									proplength = proplength + 1;
								}
							}
							else if(plotIds.size() != 11)
							{
								for each  rr in Land_House_Villa_Subform[Block_Name.Block_Type1 == input.PropertyType && Project_Name in Add_Project[City == City.toLong()].ID.getAll() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
								{
									plotIds.add(rr.ID);
									proplength = proplength + 1;
								}
							}
						}
					}
				}
				plotIDAndLenghtMap = {"proplength":proplength,"plotIds":plotIds.toString()};
				return plotIDAndLenghtMap;
			}
 			map builderAllProperties1(string PropertyType, string forr, string bedrooms, string City, string posted_by, string forr1, int index)
			{
				plotIds = List:Int();
				proplength = 0;
				if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms == "null" && input.City == "null")
				{
					for each  recor in Floor_Flats_Apartments_Subform[ID != 0] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[ID != 0].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[ID != 0] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[ID != 0].count() + Land_House_Villa_Subform[ID != 0].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer"] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[ID != 0] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer"] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms == "null" && input.City != "null")
				{
					for each  recor in Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()]].count() + Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()]].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong()] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong()] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong()] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms != "null" && input.City == "null")
				{
					//%><p>347</p><%
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					for each  recor in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1].count() + Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms == "null" && input.City == "null")
				{
					//%><p>347</p><%
					for each  recor in Floor_Flats_Apartments_Subform[ID != 0] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[ID != 0].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[ID != 0] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[ID != 0].count() + Land_House_Villa_Subform[ID != 0].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_For == forr1] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_For == forr1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[ID != 0] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Property_For == forr1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms != "null" && input.City == "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					//%><p>278</p><%
					for each  recor in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1].count() + Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Number_of_Bed_Rooms == bed1 && Property_For == forr1] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Number_of_Bed_Rooms == bed1 && Property_For == forr1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && Number_of_Bed_Rooms == bed1 && Property_For == forr1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms == "null" && input.City != "null")
				{
					//%><p>278</p><%
					for each  recor in Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[Project_Name in Add_Project[City == City.toLong()]].count() + Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()]].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Property_For == forr1] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Property_For == forr1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Property_For == forr1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr == "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					//%><p>278</p><%
					for each  recor in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll()].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()]].count() + Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()]].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Number_of_Bed_Rooms == bed1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				else if(input.PropertyType == "null" && input.forr != "null" && input.bedrooms != "null" && input.City != "null")
				{
					bedd = bedrooms.removeAllAlpha();
					bed = bedd.trim();
					bed1 = bed.toLong();
					//%><p>278</p><%
					for each  recor in Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Flats_Apartments_Master desc range from (index - 1) * 10 + 1 to index * 10 + 1
					{
						plotIds.add(recor.ID);
						proplength = proplength + 1;
					}
					if(proplength == 0)
					{
						inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll()].count();
						if(inde >= 10)
						{
							indCount = thisapp.indexCountCalculation(inde,1);
							inde = thisapp.indexCalculation(inde);
						}
						else if(inde == 0)
						{
							inde = 10;
							indCount = 0;
						}
						else
						{
							indCount = 1;
						}
						rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
						rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from rangeFrom to rangeTo
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(proplength == 0)
						{
							inde = Floor_Flats_Apartments_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()]].count() + Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()]].count();
							if(inde >= 10)
							{
								indCount = thisapp.indexCountCalculation(inde,1);
								inde = thisapp.indexCalculation(inde);
							}
							else if(inde == 0)
							{
								inde = 10;
								indCount = 0;
							}
							else
							{
								indCount = 1;
							}
							rangeFrom = (index - indCount.toLong() - 1) * 10 + 11 - inde.toLong();
							rangeTo = (index - indCount.toLong()) * 10 + 11 - inde.toLong();
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Property_For == forr1] sort by Added_Time desc range from rangeFrom to rangeTo
							{
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
						else if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Property_For == forr1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
					else if(plotIds.size() != 11)
					{
						for each  rr in Land_House_Villa_Subform[Number_of_Bed_Rooms == bed1 && Project_Name in Add_Project[City == City.toLong()].ID.getAll()] sort by Added_Time desc range from 1 to 11 - proplength
						{
							plotIds.add(rr.ID);
							proplength = proplength + 1;
						}
						if(plotIds.size() != 11)
						{
							for each  propertyRec in Add_Your_Property[Member.Member_Type == "Builder/Developer" && City1 == City.toLong() && Number_of_Bed_Rooms == bed1 && Property_For == forr1] sort by Added_Time desc range from 1 to 11 - proplength
							{
								info propertyRec.Member;
								plotIds.add(propertyRec.ID);
								proplength = proplength + 1;
							}
						}
					}
				}
				plotIDAndLenghtMap = {"proplength":proplength,"plotIds":plotIds};
				return plotIDAndLenghtMap;
			}
 			void projectSoldOut(int projectID)
			{
				for each  land_house in Land_House_Villa_Subform[Project_Name == projectID]
				{
					land_house.Status="Sold";
				}
				for each  flat_shops in Floor_Flats_Apartments_Subform[Project_Name == projectID]
				{
					flat_shops.Status="Sold";
				}
			}
 			void showEnquiries(int id)
			{
				openUrl(zoho.appuri + "#Report:Contact_Seller_Report?Viewed_Property_Rec_Id=" + id + "&zc_Header=false&zc_Footer=false&zc_SecHeader=false&zc_AddRec=false&zc_EditRec=false&zc_DelRec=false&zc_DuplRec=false&zc_EditBulkRec=false&zc_Filter=false&zc_Search=false&zc_Paging=false&zc_RecLimit=false&zc_SumRow=false&zc_ColMenu=false&zc_Summary=false&zc_RecSelect=false&zc_AltRowClr=false&zc_SaveRec=false","popup window","height=500px,width=800px");
			}
 			void showSelectAssignee(int ids, string assignAgentTO)
			{
				openUrl(zoho.appuri + "#Form:Select_Project_Agent?rec_IDs=" + ids + "&Assign_agent_in=" + assignAgentTO + "&zc_Header=false&zc_Footer=false&zc_SecHeader=false","popup window");
			}
	}



	workflow
	{
		form
		{
			Contact_Seller_Actions as "Contact Seller"
			{
				type =  form
				form = Contact_Seller_Button
				button = Contact_Seller
				on click
				{
				}
			}
			Assign_agent_script as "Assign agent script"
			{
				type =  form
				form = Select_Project_Agent
				button = Assign
				on click
				{
					actions  (Assign_agent_in == "Builder Project")
					{
					on click
					(
						for each  flatsRec in Floor_Flats_Apartments_Subform[Project_Name == input.rec_IDs.toLong()]
										{
											flatsRec.Assign_Agent=input.Agent;
										}
										for each  houseRec in Land_House_Villa_Subform[Project_Name == input.rec_IDs.toLong()]
										{
											houseRec.Assign_Agent=input.Agent;
										}
					)
					}
					actions  (Assign_agent_in == "Builder Flats/Apartments")
					{
					on click
					(
						for each  id in input.rec_IDs
										{
											flatsRec = Floor_Flats_Apartments_Subform[ID == id.toLong()];
											flatsRec.Assign_Agent=input.Agent;
										}
					)
					}
					actions  (Assign_agent_in == "Builder Land/House/Villa")
					{
					on click
					(
						for each  id in input.rec_IDs
										{
											houseRec = Land_House_Villa_Subform[ID == id.toLong()];
											houseRec.Assign_Agent=input.Agent;
										}
					)
					}
				}
			}
			Unassociated_Task as "Unassociated Task"
			{
				type =  form
				form = Search_Property_Form
				record event = on add

	field rules
	{
					actions 
					{
						show Bedroom;
					}
	}

			}
			Create_record_scripts12 as "Create record scripts"
			{
				type =  form
				form = Add_Your_Property
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											clear Member;
										disable Member;
										listl = 0;
										listl = Add_User[Email == zoho.loginuserid].ID;
										if(listl == null)
										{
											alert "Please register yourself first.";
											openUrl("#Form:Add_User","same window");
										}
										else
										{
											input.Member:ui.add(Add_User[Email == zoho.loginuserid].ID);
											input.Member = Add_User[Email == zoho.loginuserid].ID;
										}
										hide Parking_Space;
										hide Status;
										hide Sold_By;
										input.Date_field = zoho.currentdate;
										disable Date_field;
										hide Number_of_Bed_Rooms;
										hide Number_of_Bathrooms;
										hide Land_Length;
										hide Land_Breadth;
										hide Floor_Number;
										hide Maintainence_Charge;
										hide Furnishing;
						)
					}
	}

			}
			Create_record_scripts13 as "Create record scripts"
			{
				type =  form
				form = Add_Your_Property
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(input.Property_Type1 == "Shop")
										{
											input.Number_of_Bed_Rooms = null;
											input.Number_of_Bathrooms = null;
											input.Land_Length = null;
											input.Land_Breadth = null;
											input.Furnishing = null;
										}
										else if(input.Property_Type1 == "House/Villa")
										{
											input.Parking_Space = null;
											input.Maintainence_Charge = null;
											input.Land_Length = null;
											input.Land_Breadth = null;
										}
										else if(input.Property_Type1 == "Flat/Apartment")
										{
											input.Land_Length = null;
											input.Land_Breadth = null;
										}
										else if(input.Property_Type1 == "Land")
										{
											input.Property_For = "Sale";
											input.Parking_Space = null;
											input.Property_Condition = "New Property";
											input.Maintainence_Charge = null;
											input.Number_of_Bed_Rooms = null;
											input.Number_of_Bathrooms = null;
											input.Floor_Number = null;
											input.Furnishing = null;
										}
										if(input.Property_For == "Sale" && input.Rate_Per_Square_Feet == null)
										{
											alert "Please Enter the Rate Per Square Feet";
											cancel submit;
										}
										else if(input.Property_For == "Rent" && input.Rent_Per_Month == null)
										{
											alert "Please Enter the Rent Per Month";
											cancel submit;
										}
										if(input.Property_Condition == null)
										{
											alert "Please select Property Condition";
											cancel submit;
										}
						)
					}
	}

			}
			Edit_record_scripts7 as "Edit record scripts"
			{
				type =  form
				form = Add_Your_Property
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Sold_By;
						)
					}
	}

			}
			Edit_record_scripts8 as "Edit record scripts"
			{
				type =  form
				form = Add_Your_Property
				record event = on edit

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(input.Property_Type1 == "Shop")
										{
											input.Number_of_Bed_Rooms = null;
											input.Number_of_Bathrooms = null;
											input.Land_Length = null;
											input.Land_Breadth = null;
											input.Furnishing = null;
										}
										else if(input.Property_Type1 == "House/Villa")
										{
											input.Parking_Space = null;
											input.Maintainence_Charge = null;
											input.Land_Length = null;
											input.Land_Breadth = null;
										}
										else if(input.Property_Type1 == "Flat/Apartment")
										{
											input.Land_Length = null;
											input.Land_Breadth = null;
										}
										else if(input.Property_Type1 == "Land")
										{
											input.Property_For = "Sale";
											input.Property_For = null;
											input.Parking_Space = null;
											input.Property_Condition = null;
											input.Maintainence_Charge = null;
											input.Number_of_Bed_Rooms = null;
											input.Number_of_Bathrooms = null;
											input.Floor_Number = null;
											input.Furnishing = null;
										}
						)
					}
	}

			}
			Field_scripts6 as "Field scripts"
			{
				type =  form
				form = Add_Your_Property
				record event = on add or edit

	on user input of Property_For
	{
					actions 
					{
						custom deluge script
						(
											if(input.Property_For == "Rent")
										{
											hide Rate_Per_Square_Feet;
											show Rent_Per_Month;
											input.Rate_Per_Square_Feet = null;
										}
										else if(input.Property_For == "Sale")
										{
											input.Rent_Per_Month = null;
											show Rate_Per_Square_Feet;
											hide Rent_Per_Month;
										}
										else
										{
											hide Rate_Per_Square_Feet;
											hide Rent_Per_Month;
										}
						)
					}
	}

			}
			Field_scripts7 as "Field scripts"
			{
				type =  form
				form = Add_Your_Property
				record event = on add or edit

	on user input of Property_Type1
	{
					actions 
					{
						custom deluge script
						(
											if(input.Property_Type1 == "Shop")
										{
											show Property_For;
											show Property_Condition;
											show Parking_Space;
											hide Number_of_Bed_Rooms;
											hide Number_of_Bathrooms;
											hide Land_Length;
											hide Land_Breadth;
											show Floor_Number;
											show Maintainence_Charge;
											hide Furnishing;
										}
										else if(input.Property_Type1 == "House/Villa")
										{
											show Property_For;
											show Property_Condition;
											hide Parking_Space;
											hide Maintainence_Charge;
											hide Land_Length;
											hide Land_Breadth;
											show Furnishing;
											show Number_of_Bed_Rooms;
											show Number_of_Bathrooms;
										}
										else if(input.Property_Type1 == "Flat/Apartment")
										{
											show Property_For;
											show Property_Condition;
											show Parking_Space;
											show Furnishing;
											hide Land_Length;
											hide Land_Breadth;
											show Number_of_Bed_Rooms;
											show Number_of_Bathrooms;
											show Floor_Number;
											show Maintainence_Charge;
										}
										else if(input.Property_Type1 == "Land")
										{
											input.Property_For = "Sale";
											hide Property_For;
											hide Parking_Space;
											hide Property_Condition;
											hide Maintainence_Charge;
											hide Number_of_Bed_Rooms;
											hide Number_of_Bathrooms;
											hide Floor_Number;
											hide Furnishing;
											show Land_Length;
											show Land_Breadth;
										}
						)
					}
	}

			}
			Create_record_scripts14 as "Create record scripts"
			{
				type =  form
				form = Add_Project
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											listl = 0;
										listl = Add_User[Email == zoho.loginuserid].ID;
										hide Member;
										disable Member;
										if(listl == null)
										{
											alert "Please register yourself first.";
											openUrl("#Form:Add_User","same window");
										}
										else
										{
											clear Member;
											input.Member:ui.add(Add_User[Email == zoho.loginuserid].ID);
											input.Member = Add_User[Email == zoho.loginuserid].ID;
										}
										hide Flats_Apartments_Master_ID;
										hide Block_Details_Master_ID;
										clear Blocks_Details.Block_Type1;
										hide Assign_Agent;
						)
					}
	}

			}
			Edit_record_scripts9 as "Edit record scripts"
			{
				type =  form
				form = Add_Project
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											disable Member;
										hide Flats_Apartments_Master_ID;
										hide Block_Details_Master_ID;
										hide Assign_Agent;
						)
					}
	}

			}
			Edit_record_scripts10 as "Edit record scripts"
			{
				type =  form
				form = Add_Project
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											delete from Project_Blocks_Subform[Project is null];
						)
					}
	}

			}
			Delete_record_scripts5 as "Delete record scripts"
			{
				type =  form
				form = Add_Project
				record event = on delete

	on success
	{
					actions 
					{
						custom deluge script
						(
											for each  rec in Blocks_Details
										{
											delete from Project_Blocks_Subform[ID == rec.ID];
										}
										delete from Project_Blocks_Subform[Project is null];
										delete from Floor_Details_Subform[Project_Name is null];
										delete from Land_House_Villa_Subform[Project_Name is null];
										delete from Floor_Flats_Apartments_Subform[Project_Name is null];
										delete from Add_Block_Detail[Project_Name is null];
										delete from Add_Flats_Apartments_Shop_Details[Project_Name is null];
						)
					}
	}

			}
			Field_scripts8 as "Field scripts"
			{
				type =  form
				form = Add_Project
				record event = on add or edit

	on user input of Project_Includes1
	{
					actions 
					{
						custom deluge script
						(
											Blocks_Details.Block_Type1:ui.add(input.Project_Includes1);
						)
					}
	}

			}
			Field_scripts9 as "Field scripts"
			{
				type =  form
				form = Add_Project
				record event = on add or edit

	on add row of Blocks_Details
	{
					actions 
					{
						custom deluge script
						(
											row.Block_Type1:ui.add(input.Project_Includes1);
						)
					}
	}

			}
			Create_record_scripts15 as "Create record scripts"
			{
				type =  form
				form = Add_Block_Detail
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Floor_Details;
										hide Land_House_Villa_Details;
										hide Input_Flats_Apartments_Shop_Details;
										hide Floor_Details.Project_Name;
										hide Floor_Details.Block_Name;
										hide Land_House_Villa_Details.Project_Name;
										hide Land_House_Villa_Details.Block_Name;
										hide Land_House_Villa_Details.Status;
										hide Land_House_Villa_Details.Date_field;
										col = List:Int();
										coll = List:Int();
										listl = 0;
										listl = Add_User[Email == zoho.loginuserid].ID;
										if(listl == null)
										{
											alert "Please register yourself first.";
											openUrl("#Form:Add_User","same window");
										}
						)
					}
	}

			}
			Create_record_scripts16 as "Create record scripts"
			{
				type =  form
				form = Add_Block_Detail
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "House/Villa" || Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Land")
										{
											if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "House/Villa")
											{
												for each  rec in Land_House_Villa_Details
												{
													rec.Date_field=zoho.currentdate;
													rec.Land_Breadth=null;
													rec.Land_Length=null;
													if(rec.Number_of_Bed_Rooms == null || rec.Number_of_Bathrooms == null || rec.Furnishing == null || rec.Number_of_Floors == null || rec.Built_Area == null || rec.Land_House_Villa_Number == null || rec.Image == null || rec.Total_Area == null || rec.Rate_per_square_feets == null)
													{
														alert "Some fields cannot be left empty.";
														cancel submit;
													}
												}
											}
											else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Land")
											{
												for each  rec in Land_House_Villa_Details
												{
													rec.Date_field=zoho.currentdate;
													rec.Number_of_Bed_Rooms=null;
													rec.Number_of_Bathrooms=null;
													rec.Furnishing=null;
													rec.Number_of_Floors=null;
													rec.Built_Area=null;
													if(rec.Land_Breadth == null || rec.Land_Length == null || rec.Land_House_Villa_Number == null || rec.Image == null || rec.Total_Area == null || rec.Rate_per_square_feets == null)
													{
														alert "Some fields cannot be left empty.";
														cancel submit;
													}
												}
											}
										}
										else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Flat/Apartment" || Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Shop")
										{
											for each  recc in Floor_Details
											{
												if(recc.Floor_Number == null || recc.Number_of_Flats_Apartments_Shops == null)
												{
													alert "Some fields cannot be left empty.";
													cancel submit;
												}
											}
										}
						)
					}
	}

			}
			Create_record_scripts17 as "Create record scripts"
			{
				type =  form
				form = Add_Block_Detail
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											if(input.Input_Flats_Apartments_Shop_Details)
										{
											openUrl("#Form:Add_Flats_Apartments_Shop_Details","Same window");
										}
						)
					}
	}

			}
			Edit_record_scripts11 as "Edit record scripts"
			{
				type =  form
				form = Add_Block_Detail
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Input_Flats_Apartments_Shop_Details;
										hide Floor_Details.Project_Name;
										hide Floor_Details.Block_Name;
										hide Land_House_Villa_Details.Project_Name;
										hide Land_House_Villa_Details.Block_Name;
										disable Project_Name;
										disable Block_Name;
										if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Flat/Apartment" || Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Shop")
										{
											show Floor_Details;
											hide Land_House_Villa_Details;
											show Input_Flats_Apartments_Shop_Details;
										}
										else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Land")
										{
											hide Land_House_Villa_Details.Block_Name;
											hide Land_House_Villa_Details.Status;
											hide Input_Flats_Apartments_Shop_Details;
											show Land_House_Villa_Details;
											hide Floor_Details;
											hide Land_House_Villa_Details.Number_of_Floors;
											hide Land_House_Villa_Details.Furnishing;
											hide Land_House_Villa_Details.Number_of_Bathrooms;
											hide Land_House_Villa_Details.Number_of_Bed_Rooms;
											hide Land_House_Villa_Details.Built_Area;
											show Land_House_Villa_Details.Land_Length;
											show Land_House_Villa_Details.Land_Breadth;
										}
										else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "House/Villa")
										{
											hide Land_House_Villa_Details.Block_Name;
											hide Land_House_Villa_Details.Status;
											hide Input_Flats_Apartments_Shop_Details;
											show Land_House_Villa_Details;
											hide Floor_Details;
											show Land_House_Villa_Details.Number_of_Floors;
											show Land_House_Villa_Details.Furnishing;
											show Land_House_Villa_Details.Number_of_Bathrooms;
											show Land_House_Villa_Details.Number_of_Bed_Rooms;
											show Land_House_Villa_Details.Built_Area;
											hide Land_House_Villa_Details.Land_Length;
											hide Land_House_Villa_Details.Land_Breadth;
										}
										else
										{
											hide Land_House_Villa_Details;
											hide Floor_Details;
											hide Input_Flats_Apartments_Shop_Details;
										}
						)
					}
	}

			}
			Edit_record_scripts12 as "Edit record scripts"
			{
				type =  form
				form = Add_Block_Detail
				record event = on edit

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "House/Villa" || Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Land")
										{
											if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "House/Villa")
											{
												for each  rec in Land_House_Villa_Details
												{
													rec.Land_Breadth=null;
													rec.Land_Length=null;
													if(rec.Number_of_Bed_Rooms == null || rec.Number_of_Bathrooms == null || rec.Furnishing == null || rec.Number_of_Floors == null || rec.Built_Area == null || rec.Land_House_Villa_Number == null || rec.Image == null || rec.Total_Area == null || rec.Rate_per_square_feets == null)
													{
														alert "Some fields cannot be left empty.";
														cancel submit;
													}
												}
											}
											else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Land")
											{
												for each  rec in Land_House_Villa_Details
												{
													rec.Number_of_Bed_Rooms=null;
													rec.Number_of_Bathrooms=null;
													rec.Furnishing=null;
													rec.Number_of_Floors=null;
													rec.Built_Area=null;
													if(rec.Land_Breadth == null || rec.Land_Length == null || rec.Land_House_Villa_Number == null || rec.Image == null || rec.Total_Area == null || rec.Rate_per_square_feets == null)
													{
														alert "Some fields cannot be left empty.";
														cancel submit;
													}
												}
											}
										}
										else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Flat/Apartment" || Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Shop")
										{
											for each  recc in Floor_Details
											{
												if(recc.Floor_Number == null || recc.Number_of_Flats_Apartments_Shops == null)
												{
													alert "Some fields cannot be left empty.";
													cancel submit;
												}
											}
										}
						)
					}
	}

			}
			Edit_record_scripts13 as "Edit record scripts"
			{
				type =  form
				form = Add_Block_Detail
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											delete from Floor_Details_Subform[Block_Details_Master_Lookup is null];
										delete from Add_Flats_Apartments_Shop_Details[Floor_Number is null];
										delete from Floor_Flats_Apartments_Subform[Floor_Number is null];
										delete from Land_House_Villa_Subform[Block_Details_Master_Lookup is null];
										openUrl("#Form:Add_Block_Detail","same window");
						)
					}
	}

			}
			Delete_record_scripts6 as "Delete record scripts"
			{
				type =  form
				form = Add_Block_Detail
				record event = on delete

	on success
	{
					actions 
					{
						custom deluge script
						(
											for each  rec in Floor_Details
										{
											delete from Floor_Details_Subform[ID == rec.ID];
										}
										for each  recc in Land_House_Villa_Details
										{
											delete from Land_House_Villa_Subform[ID == recc.ID];
										}
										delete from Add_Flats_Apartments_Shop_Details[Floor_Number is null];
										delete from Floor_Flats_Apartments_Subform[Floor_Number is null];
						)
					}
	}

			}
			Field_scripts10 as "Field scripts"
			{
				type =  form
				form = Add_Block_Detail
				record event = on add or edit

	on user input of Block_Name
	{
					actions 
					{
						custom deluge script
						(
											if(Add_Block_Detail[Project_Name == input.Project_Name && Block_Name == input.Block_Name].ID != null)
										{
											col = Add_Block_Detail[Project_Name == input.Project_Name && Block_Name == input.Block_Name].ID;
											openUrl("#Form:Add_Block_Detail?recLinkID=" + col + "&viewLinkName=Project_Blocks","same window");
										}
										else if(Add_Block_Detail[Project_Name == input.Project_Name && Block_Name == input.Block_Name].ID == null)
										{
											if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Flat/Apartment" || Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Shop")
											{
												input.Show_Block_Type_Details = "<span><b><font color='#66ccff' size='3'>This Block Contains " + Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 + " type of Property, please input floor details here and more details about each floor in Flats/Apartment Master Form.</font></b></span>";
												show Floor_Details;
												hide Land_House_Villa_Details;
												show Input_Flats_Apartments_Shop_Details;
												input.Floor_Details.Project_Name = input.Project_Name;
												input.Floor_Details.Block_Name = input.Block_Name;
											}
											else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Land")
											{
												input.Show_Block_Type_Details = "<span><b><font color='#66ccff' size='3'>This Block Contains Land type of Property.</font></b></span>";
												hide Input_Flats_Apartments_Shop_Details;
												show Land_House_Villa_Details;
												hide Floor_Details;
												hide Land_House_Villa_Details.Number_of_Floors;
												hide Land_House_Villa_Details.Furnishing;
												hide Land_House_Villa_Details.Number_of_Bathrooms;
												hide Land_House_Villa_Details.Number_of_Bed_Rooms;
												hide Land_House_Villa_Details.Built_Area;
												show Land_House_Villa_Details.Land_Length;
												show Land_House_Villa_Details.Land_Breadth;
												input.Land_House_Villa_Details.Project_Name = input.Project_Name;
												input.Land_House_Villa_Details.Block_Name = input.Block_Name;
												hide Land_House_Villa_Details.Date_field;
											}
											else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "House/Villa")
											{
												input.Show_Block_Type_Details = "<span><b><font color='#66ccff' size='3'>This Block Contains House/Villa type of Property.</font></b></span>";
												hide Input_Flats_Apartments_Shop_Details;
												show Land_House_Villa_Details;
												hide Floor_Details;
												show Land_House_Villa_Details.Number_of_Floors;
												show Land_House_Villa_Details.Furnishing;
												show Land_House_Villa_Details.Number_of_Bathrooms;
												show Land_House_Villa_Details.Number_of_Bed_Rooms;
												show Land_House_Villa_Details.Built_Area;
												hide Land_House_Villa_Details.Land_Length;
												hide Land_House_Villa_Details.Land_Breadth;
												input.Land_House_Villa_Details.Project_Name = input.Project_Name;
												input.Land_House_Villa_Details.Block_Name = input.Block_Name;
												hide Land_House_Villa_Details.Date_field;
											}
											else
											{
												hide Land_House_Villa_Details;
												hide Floor_Details;
												hide Input_Flats_Apartments_Shop_Details;
											}
										}
						)
					}
	}

			}
			Field_scripts11 as "Field scripts"
			{
				type =  form
				form = Add_Block_Detail
				record event = on add or edit

	on user input of Project_Name
	{
					actions 
					{
						custom deluge script
						(
											input.Block_Name:ui.add(Project_Blocks_Subform[Project == Add_Project[ID == input.Project_Name].ID && Block_Type1 == "Shop" || Block_Type1 == "Flat/Apartment"].ID.getAll());
						)
					}
	}

			}
			Field_scripts12 as "Field scripts"
			{
				type =  form
				form = Add_Block_Detail
				record event = on add or edit

	on add row of Floor_Details
	{
					actions 
					{
						custom deluge script
						(
											row.Project_Name=input.Project_Name;
										row.Block_Name=input.Block_Name;
						)
					}
	}

			}
			Field_scripts13 as "Field scripts"
			{
				type =  form
				form = Add_Block_Detail
				record event = on add or edit

	on add row of Land_House_Villa_Details
	{
					actions 
					{
						custom deluge script
						(
											row.Project_Name=input.Project_Name;
										row.Block_Name=input.Block_Name;
						)
					}
	}

			}
			Create_record_scripts18 as "Create record scripts"
			{
				type =  form
				form = Add_Flats_Apartments_Shop_Details
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											clear Floor_Number;
										hide Flats_Apartments_Shop_Details;
										hide Flats_Apartments_Shop_Details.Project_Name;
										hide Flats_Apartments_Shop_Details.Block_Name;
										hide Flats_Apartments_Shop_Details.Floor_Number;
										hide Flats_Apartments_Shop_Details.Status;
										hide Flats_Apartments_Shop_Details.Sold_By;
										hide Assign_Agent;
										hide Flats_Apartments_Shop_Details.Assign_Agent;
										listl = 0;
										listl = Add_User[Email == zoho.loginuserid].ID;
										if(listl == null)
										{
											alert "Please register yourself first.";
											openUrl("#Form:Add_User","same window");
										}
						)
					}
	}

			}
			Create_record_scripts19 as "Create record scripts"
			{
				type =  form
				form = Add_Flats_Apartments_Shop_Details
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Flat/Apartment")
										{
											for each  rec in Flats_Apartments_Shop_Details
											{
												if(rec.Number_of_Bed_Rooms == null || rec.Number_of_BathRooms == null || rec.Furnishing == null)
												{
													alert "Some fields cannot be left empty.";
													cancel submit;
												}
											}
										}
										else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Shop")
										{
											for each  rec in Flats_Apartments_Shop_Details
											{
												rec.Number_of_Bed_Rooms=null;
												rec.Number_of_BathRooms=null;
												rec.Furnishing=null;
											}
										}
						)
					}
	}

			}
			Edit_record_scripts14 as "Edit record scripts"
			{
				type =  form
				form = Add_Flats_Apartments_Shop_Details
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Flats_Apartments_Shop_Details.Project_Name;
										hide Flats_Apartments_Shop_Details.Block_Name;
										hide Flats_Apartments_Shop_Details.Floor_Number;
										hide Flats_Apartments_Shop_Details.Status;
										hide Flats_Apartments_Shop_Details.Sold_By;
										hide Assign_Agent;
										hide Flats_Apartments_Shop_Details.Assign_Agent;
										disable Floor_Number;
										disable Block_Name;
										disable Project_Name;
										if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Flat/Apartment")
										{
											input.Show_Block_Type_Details = "<span><b><font color='#66ccff' size='3'>This Block Contains Flat/Apartment type of Property.</font></b></span>";
											show Flats_Apartments_Shop_Details;
											show Flats_Apartments_Shop_Details.Number_of_Bed_Rooms;
											show Flats_Apartments_Shop_Details.Number_of_BathRooms;
											show Flats_Apartments_Shop_Details.Furnishing;
										}
										else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Shop")
										{
											input.Show_Block_Type_Details = "<span><b><font color='#66ccff' size='3'>This Block Contains Shop type of Property.</font></b></span>";
											show Flats_Apartments_Shop_Details;
											hide Flats_Apartments_Shop_Details.Number_of_Bed_Rooms;
											hide Flats_Apartments_Shop_Details.Number_of_BathRooms;
											hide Flats_Apartments_Shop_Details.Furnishing;
										}
										else
										{
											hide Flats_Apartments_Shop_Details;
										}
						)
					}
	}

			}
			Edit_record_scripts15 as "Edit record scripts"
			{
				type =  form
				form = Add_Flats_Apartments_Shop_Details
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											delete from Floor_Flats_Apartments_Subform[Flats_Apartments_Master is null];
										openUrl("#Form:Add_Flats_Apartments_Shop_Details","same window");
						)
					}
	}

			}
			Delete_record_scripts7 as "Delete record scripts"
			{
				type =  form
				form = Add_Flats_Apartments_Shop_Details
				record event = on delete

	on success
	{
					actions 
					{
						custom deluge script
						(
											for each  rec in Flats_Apartments_Shop_Details
										{
											delete from Floor_Flats_Apartments_Subform[ID == rec.ID];
										}
						)
					}
	}

			}
			Field_scripts14 as "Field scripts"
			{
				type =  form
				form = Add_Flats_Apartments_Shop_Details
				record event = on add or edit

	on user input of Floor_Number
	{
					actions 
					{
						custom deluge script
						(
											if(Add_Flats_Apartments_Shop_Details[Project_Name == input.Project_Name && Block_Name == input.Block_Name && Floor_Number == input.Floor_Number].ID != null)
										{
											col = Add_Flats_Apartments_Shop_Details[Project_Name == input.Project_Name && Block_Name == input.Block_Name && Floor_Number == input.Floor_Number].ID;
											openUrl("#Form:Add_Flats_Apartments_Shop_Details?recLinkID=" + col + "&viewLinkName=Project_Flats_Apartments_Shop","same window");
										}
										else
										{
											if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Flat/Apartment")
											{
												input.Show_Block_Type_Details = "<span><b><font color='#66ccff' size='3'>This Block Contains Flat/Apartment type of Property.</font></b></span>";
												show Flats_Apartments_Shop_Details;
												show Flats_Apartments_Shop_Details.Number_of_Bed_Rooms;
												show Flats_Apartments_Shop_Details.Number_of_BathRooms;
												show Flats_Apartments_Shop_Details.Furnishing;
												input.Flats_Apartments_Shop_Details.Floor_Number = input.Floor_Number;
											}
											else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Shop")
											{
												input.Show_Block_Type_Details = "<span><b><font color='#66ccff' size='3'>This Block Contains Shop type of Property.</font></b></span>";
												show Flats_Apartments_Shop_Details;
												hide Flats_Apartments_Shop_Details.Number_of_Bed_Rooms;
												hide Flats_Apartments_Shop_Details.Number_of_BathRooms;
												hide Flats_Apartments_Shop_Details.Furnishing;
												input.Flats_Apartments_Shop_Details.Floor_Number = input.Floor_Number;
											}
											else
											{
												hide Flats_Apartments_Shop_Details;
											}
										}
						)
					}
	}

			}
			Field_scripts15 as "Field scripts"
			{
				type =  form
				form = Add_Flats_Apartments_Shop_Details
				record event = on add or edit

	on user input of Block_Name
	{
					actions 
					{
						custom deluge script
						(
											listl = List();
										col = Add_Block_Detail[Project_Name == input.Project_Name && Block_Name == input.Block_Name];
										for each  item in col.Floor_Details
										{
											listl.add(item.ID);
										}
										if(listl.isEmpty())
										{
											alert "Please input floor details about " + Project_Blocks_Subform[ID == input.Block_Name].Block_Name + " in Block Details Master.";
										}
										else
										{
											input.Floor_Number:ui.add(listl);
										}
										input.Flats_Apartments_Shop_Details.Block_Name = input.Block_Name;
						)
					}
	}

			}
			Field_scripts16 as "Field scripts"
			{
				type =  form
				form = Add_Flats_Apartments_Shop_Details
				record event = on add or edit

	on user input of Project_Name
	{
					actions 
					{
						custom deluge script
						(
											input.Block_Name:ui.add(Project_Blocks_Subform[Project == Add_Project[ID == input.Project_Name].ID && Block_Type1 == "Shop" || Block_Type1 == "Flat/Apartment"].ID.getAll());
										input.Flats_Apartments_Shop_Details.Project_Name = input.Project_Name;
						)
					}
	}

			}
			Field_scripts17 as "Field scripts"
			{
				type =  form
				form = Add_Flats_Apartments_Shop_Details
				record event = on add or edit

	on add row of Flats_Apartments_Shop_Details
	{
					actions 
					{
						custom deluge script
						(
											row.Project_Name=input.Project_Name;
										row.Block_Name=input.Block_Name;
										row.Floor_Number=input.Floor_Number;
										row.Date_field=zoho.currentdate;
						)
					}
	}

			}
			Create_record_scripts20 as "Create record scripts"
			{
				type =  form
				form = Add_User
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											rec = Add_User[Email == zoho.adminuserid].count();
										if(rec == 0)
										{
											input.Member_Type = "Builder/Developer";
											input.Email = zoho.loginuserid;
											disable Email;
											disable Member_Type;
										}
										else
										{
											clear Member_Type;
											input.Member_Type:ui.add("Individual/Owner");
											input.Member_Type:ui.add("Agent/Broker");
											enable Email;
										}
										hide Configuration_Index;
										if(Add_User[ID != 0].count() == 0)
										{
											alert "Please Enter your details before accessing the application.";
										}
						)
					}
	}

			}
			Create_record_scripts21 as "Create record scripts"
			{
				type =  form
				form = Add_User
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											if(input.Email != zoho.adminuserid)
										{
											var = thisapp.permissions.assignUserInProfile(input.Email,"Agent");
											sendmail
											[
												from :zoho.adminuserid
												to :input.Email
												subject :"Real Estate Management System is now shared with you."
												message :"Dear " + input.Name1.first_name + ",<br><br><br><a href=https://creator.zoho.com" + zoho.appuri + ">Real Estate Management System</a> is shared with you.<br>You can enter your properties here to publish it for selling or renting.<br> <br><br> You can access it by clicking the below link.<br><br> <a href=https://creator.zoho.com" + zoho.appuri + ">Click Here</a> <br><br>  Thank You "
											]
										}
										if(input.Configuration_Index != null)
										{
											index = input.Configuration_Index + 1;
											openUrl("#View:Configuration?index=" + index,"parent window");
										}
						)
					}
	}

			}
			Edit_record_scripts16 as "Edit record scripts"
			{
				type =  form
				form = Add_User
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Configuration_Index;
						)
					}
	}

			}
			Edit_record_scripts17 as "Edit record scripts"
			{
				type =  form
				form = Add_User
				record event = on edit

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(old.Email != input.Email)
										{
											if(input.Email != zoho.adminuserid)
											{
												thisapp.permissions.deleteUser(old.Email);
												var = thisapp.permissions.assignUserInProfile(input.Email,"Agent");
												sendmail
												[
													from :zoho.adminuserid
													to :input.Email
													subject :"Real Estate Management System is now shared with you."
													message :"Dear " + input.Name1.first_name + ",<br><br><br><a href=https://creator.zoho.com" + zoho.appuri + ">Real Estate Management System</a> is shared with you.<br>You can enter your properties here to publish it for selling or renting.<br> <br><br> You can access it by clicking the below link.<br><br> <a href=https://creator.zoho.com" + zoho.appuri + ">Click Here</a> <br><br>  Thank You "
												]
											}
										}
						)
					}
	}

			}
			Delete_record_scripts8 as "Delete record scripts"
			{
				type =  form
				form = Add_User
				record event = on delete

	on success
	{
					actions 
					{
						custom deluge script
						(
											thisapp.permissions.deleteUser(input.Email);
						)
					}
	}

			}
			Create_record_scripts22 as "Create record scripts"
			{
				type =  form
				form = Floor_Flats_Apartments_Subform
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Date_field = zoho.currentdate;
										hide Flats_Apartments_Master;
						)
					}
	}

			}
			Create_record_scripts23 as "Create record scripts"
			{
				type =  form
				form = Floor_Flats_Apartments_Subform
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											input.Flats_Apartments_Master = Add_Flats_Apartments_Shop_Details[Project_Name == input.Project_Name && Block_Name == input.Block_Name && Floor_Number == input.Floor_Number].ID;
						)
					}
	}

			}
			Create_record_scripts24 as "Create record scripts"
			{
				type =  form
				form = Land_House_Villa_Subform
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Date_field = zoho.currentdate;
						)
					}
	}

			}
			Create_record_scripts25 as "Create record scripts"
			{
				type =  form
				form = Search_Property_Form
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											/* input.show_search = "";
																																																												if (((input.Posted_By  !=  "-Select-")  ||  (input.Posted_By  !=  null))  ||  (input.Posted_By  !=  "null"))
																																																												{
																																																												    NewSearchResultPublishUrl = zoho.appuri + "view-embed/New_Search_Result";
																																																												    openUrl(NewSearchResultPublishUrl + "/PropertyType=" + input.PropertyType1 + "&forr=" + input.For_field + "&bedrooms=" + input.Bedroom + "&posted_by=" + input.Posted_By + "&City=" + input.City, "iframe", "frame12");
																																																												}
																																																												 */
						)
					}
	}

			}
			Field_scripts18 as "Field scripts"
			{
				type =  form
				form = Search_Property_Form
				record event = on add or edit

	on user input of PropertyType1
	{
					actions 
					{
						custom deluge script
						(
											if(input.PropertyType1 == "Shop" || input.PropertyType1 == "Land")
										{
											input.Bedroom = null;
											hide Bedroom;
											if(input.PropertyType1 == "Land")
											{
												input.For_field = "Buy";
												disable For_field;
											}
											else
											{
												enable For_field;
											}
										}
										else if(input.PropertyType1 == "Flat/Apartment" || input.PropertyType1 == "House/Villa")
										{
											enable For_field;
											show Bedroom;
										}
										else
										{
											enable For_field;
											show Bedroom;
										}
										/* if (((input.PropertyType1  ==  "Shop")  ||  (input.PropertyType1  ==  "Land"))  &&  (input.Bedroom  !=  null))
																																																												{
																																																												    NewSearchResultPublishUrl = zoho.appuri + "view-embed/New_Search_Result";
																																																												    openUrl(NewSearchResultPublishUrl + "/PropertyType=" + input.PropertyType1 + "&&forr=" + input.For_field + "&&bedrooms=" + input.Bedroom + "&&posted_by=" + input.Posted_By + "&&City=" + input.City, "iframe", "frame12");
																																																												} */
										NewSearchResultPublishUrl = zoho.appuri + "view-embed/New_Search_Result";
										openUrl(NewSearchResultPublishUrl + "/PropertyType=" + input.PropertyType1 + "&&forr=" + input.For_field + "&&bedrooms=" + input.Bedroom + "&&posted_by=" + input.Posted_By + "&&City=" + input.City,"iframe","frame12");
						)
					}
	}

			}
			Field_scripts19 as "Field scripts"
			{
				type =  form
				form = Search_Property_Form
				record event = on add or edit

	on user input of City
	{
					actions 
					{
						custom deluge script
						(
											NewSearchResultPublishUrl = zoho.appuri + "view-embed/New_Search_Result";
										openUrl(NewSearchResultPublishUrl + "/PropertyType=" + input.PropertyType1 + "&&forr=" + input.For_field + "&&bedrooms=" + input.Bedroom + "&&posted_by=" + input.Posted_By + "&&City=" + input.City,"iframe","frame12");
						)
					}
	}

			}
			Field_scripts20 as "Field scripts"
			{
				type =  form
				form = Search_Property_Form
				record event = on add or edit

	on user input of Bedroom
	{
					actions 
					{
						custom deluge script
						(
											NewSearchResultPublishUrl = zoho.appuri + "view-embed/New_Search_Result";
										openUrl(NewSearchResultPublishUrl + "/PropertyType=" + input.PropertyType1 + "&&forr=" + input.For_field + "&&bedrooms=" + input.Bedroom + "&&posted_by=" + input.Posted_By + "&&City=" + input.City,"iframe","frame12");
						)
					}
	}

			}
			Field_scripts21 as "Field scripts"
			{
				type =  form
				form = Search_Property_Form
				record event = on add or edit

	on user input of Posted_By
	{
					actions 
					{
						custom deluge script
						(
											if(input.Posted_By != "-Select-" || input.Posted_By != null || input.Posted_By != "null")
										{
											NewSearchResultPublishUrl = zoho.appuri + "view-embed/New_Search_Result";
											openUrl(NewSearchResultPublishUrl + "/PropertyType=" + input.PropertyType1 + "&forr=" + input.For_field + "&bedrooms=" + input.Bedroom + "&posted_by=" + input.Posted_By + "&City=" + input.City,"iframe","frame12");
										}
						)
					}
	}

			}
			Field_scripts22 as "Field scripts"
			{
				type =  form
				form = Search_Property_Form
				record event = on add or edit

	on user input of For_field
	{
					actions 
					{
						custom deluge script
						(
											NewSearchResultPublishUrl = zoho.appuri + "view-embed/New_Search_Result";
										openUrl(NewSearchResultPublishUrl + "/PropertyType=" + input.PropertyType1 + "&&forr=" + input.For_field + "&&bedrooms=" + input.Bedroom + "&&posted_by=" + input.Posted_By + "&&City=" + input.City,"iframe","frame12");
						)
					}
	}

			}
			Create_record_scripts26 as "Create record scripts"
			{
				type =  form
				form = Contact_Seller
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Viewed_Property_Rec_Id;
										hide Viewed_Property_Posted_By1;
										hide Property_Type1;
						)
					}
	}

			}
			Create_record_scripts27 as "Create record scripts"
			{
				type =  form
				form = Contact_Seller
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											member = Add_User[ID == input.Viewed_Property_Posted_By1];
										if(member.Member_Type == "Agent/Broker" || member.Member_Type == "Individual/Owner")
										{
											property = Add_Your_Property[ID == input.Viewed_Property_Rec_Id];
											location = property.Location1 + ", " + property.City1.City;
											if(property.Property_Type1 == "Shop")
											{
												sendmail
												[
													from :zoho.adminuserid
													to :member.Email
													subject :input.Name1 + " wants to connect with you regarding to your property."
													message :"Hello " + member.Name1.first_name + ", <br><br> " + input.Name1 + " has viewed a property posted by you and requested you to contact.<br><br> Viewers details are given below:<br><br>Name: " + input.Name1 + "<br>Email: " + input.Email + "<br>Mobile: " + input.Mobile + "<br><br> Information about viewed property :<br><br> Posted By: " + member.Name1.first_name + "<br>Property Type: " + input.Property_Type1 + "<br> Location: " + location + "<br>Posted On: " + property.Date_field + "<br>Shop Condition: " + property.Property_Condition + "<br>Property For: " + property.Property_For + "<br>Total Area: " + property.Total_Area_in_square_feets + "<br>Rate/Sq.Ft: " + property.Rate_Per_Square_Feet
												]
											}
											else if(property.Property_Type1 == "Land")
											{
												sendmail
												[
													from :zoho.adminuserid
													to :member.Email
													subject :input.Name1 + " wants to connect with you regarding to your property."
													message :"Hello " + member.Name1.first_name + ", <br><br> " + input.Name1 + " has viewed a property posted by you and requested you to contact.<br><br> Viewers details are given below:<br><br>Name: " + input.Name1 + "<br>Email: " + input.Email + "<br>Mobile: " + input.Mobile + "<br><br> Information about viewed property :<br><br> Posted By: " + member.Name1.first_name + "<br>Property Type: " + input.Property_Type1 + "<br>Location: " + location + "<br>Posted On: " + property.Date_field + "<br>Total Area: " + property.Total_Area_in_square_feets + "<br>Rate/Sq.Ft: " + property.Rate_Per_Square_Feet + "<br>Land Length: " + property.Land_Length + "Land Breadth: " + property.Land_Breadth
												]
											}
											else if(property.Property_Type1 == "House/Villa")
											{
												sendmail
												[
													from :zoho.adminuserid
													to :member.Email
													subject :input.Name1 + " wants to connect with you regarding to your property."
													message :"Hello " + member.Name1.first_name + ", <br><br> " + input.Name1 + " has viewed a property posted by you and requested you to contact.<br><br> Viewers details are given below:<br><br>Name: " + input.Name1 + "<br>Email: " + input.Email + "<br>Mobile: " + input.Mobile + "<br><br> Information about viewed property :<br><br> Posted By: " + member.Name1.first_name + "<br>Property Type: " + input.Property_Type1 + "<br>Location: " + location + "<br>Posted On: " + property.Date_field + "<br>House Condition: " + property.Property_Condition + "<br>Bedrooms: " + property.Number_of_Bed_Rooms + "<br>Bathrooms: " + property.Number_of_Bathrooms + "<br>Furnishing: " + property.Furnishing + "<br>Total Area: " + property.Total_Area_in_square_feets + "<br>Rate/Sq.Ft: " + property.Rate_Per_Square_Feet
												]
											}
											else if(property.Property_Type1 == "Flat/Apartment")
											{
												sendmail
												[
													from :zoho.adminuserid
													to :member.Email
													subject :input.Name1 + " wants to connect with you regarding to your property."
													message :"Hello " + member.Name1.first_name + ", <br><br> " + input.Name1 + " has viewed a property posted by you and requested you to contact.<br><br> Viewers details are given below:<br><br>Name: " + input.Name1 + "<br>Email: " + input.Email + "<br>Mobile: " + input.Mobile + "<br><br> Information about viewed property :<br><br> Posted By: " + member.Name1.first_name + "<br>Property Type: " + input.Property_Type1 + "<br>Location: " + location + "<br>Posted On: " + property.Date_field + "<br>Flat Condition: " + property.Property_Condition + "<br>Bedrooms: " + property.Number_of_Bed_Rooms + "<br>Bathrooms: " + property.Number_of_Bathrooms + "<br>Furnishing: " + property.Furnishing + "<br>Total Area:" + property.Total_Area_in_square_feets + "<br>Rate/Sq.Ft: " + property.Rate_Per_Square_Feet
												]
											}
										}
										else if(member.Member_Type == "Builder/Developer")
										{
											if(input.Property_Type1 == "Shop")
											{
												individualShop = Floor_Flats_Apartments_Subform[ID == input.Viewed_Property_Rec_Id];
												proj = Add_Project[ID == individualShop.Project_Name];
												cit = proj.City;
												cii = Cities[ID == cit].City;
												location = cii + ", " + individualShop.Project_Name.Location1;
												sendmail
												[
													from :zoho.adminuserid
													to :member.Email
													subject :input.Name1 + " wants to connect with you regarding to your property."
													message :"Hello " + member.Name1.first_name + ", <br><br> " + input.Name1 + " has viewed a property posted by you and requested you to contact.<br><br> Viewers details are given below:<br><br>Name: " + input.Name1 + "<br>Email: " + input.Email + "<br>Mobile: " + input.Mobile + "<br><br> Information about viewed property :<br><br> Posted By: " + member.Name1.first_name + "<br>Property Type: " + input.Property_Type1 + "<br>Location: " + location + "<br>Posted On: " + individualShop.Date_field + "<br>Shop Number: " + individualShop.Flats_Apartments_Shop_Number + "<br>Total Area: " + individualShop.Total_Area_in_square_feets + "<br>Rate/Sq.Ft: " + individualShop.Rate_per_square_feets + "<br>Parking Space: " + individualShop.Parking_Space
												]
											}
											else if(input.Property_Type1 == "Land")
											{
												individualLand = Land_House_Villa_Subform[ID == input.Viewed_Property_Rec_Id];
												proj = Add_Project[ID == individualLand.Project_Name];
												cit = proj.City;
												cii = Cities[ID == cit].City;
												location = cii + ", " + individualLand.Project_Name.Location1;
												sendmail
												[
													from :zoho.adminuserid
													to :member.Email
													subject :input.Name1 + " wants to connect with you regarding to your property."
													message :"Hello " + member.Name1.first_name + ", <br><br> " + input.Name1 + " has viewed a property posted by you and requested you to contact.<br><br> Viewers details are given below:<br><br>Name: " + input.Name1 + "<br>Email: " + input.Email + "<br>Mobile: " + input.Mobile + "<br><br> Information about viewed property :<br><br> Posted By: " + member.Name1.first_name + "<br>Property Type: " + input.Property_Type1 + "<br>Location: " + location + "<br>Posted On: " + individualLand.Date_field + "<br>Land Number: " + individualLand.Land_House_Villa_Number + "<br>Total Area: " + individualLand.Total_Area + "<br>Rate/Sq.Ft: " + individualLand.Rate_per_square_feets + "<br>Land Length: " + individualLand.Land_Length + "Land Breadth: " + individualLand.Land_Breadth
												]
											}
											else if(input.Property_Type1 == "House/Villa")
											{
												individualHouse = Land_House_Villa_Subform[ID == input.Viewed_Property_Rec_Id];
												proj = Add_Project[ID == individualHouse.Project_Name];
												cit = proj.City;
												cii = Cities[ID == cit].City;
												location = cii + ", " + individualHouse.Project_Name.Location1;
												sendmail
												[
													from :zoho.adminuserid
													to :member.Email
													subject :input.Name1 + " wants to connect with you regarding to your property."
													message :"Hello " + member.Name1.first_name + ", <br><br> " + input.Name1 + " has viewed a property posted by you and requested you to contact.<br><br> Viewers details are given below:<br><br>Name: " + input.Name1 + "<br>Email: " + input.Email + "<br>Mobile: " + input.Mobile + "<br><br> Information about viewed property :<br><br> Posted By: " + member.Name1.first_name + "<br>Property Type: " + input.Property_Type1 + "<br>Location: " + location + "<br>Posted On: " + individualHouse.Date_field + "<br>House Number: " + individualHouse.Land_House_Villa_Number + "<br>Bedrooms: " + individualHouse.Number_of_Bed_Rooms + "<br>Bathrooms: " + individualHouse.Number_of_Bathrooms + "<br>Furnishing: " + individualHouse.Furnishing + "<br>Total Area: " + individualHouse.Total_Area + "<br>Built Up Area: " + individualHouse.Built_Area + "<br>Floors: " + individualHouse.Number_of_Floors + "<br>Rate/Sq.Ft: " + individualHouse.Rate_per_square_feets
												]
											}
											else if(input.Property_Type1 == "Flat/Apartment")
											{
												individualFlat = Floor_Flats_Apartments_Subform[ID == input.Viewed_Property_Rec_Id];
												proj = Add_Project[ID == individualFlat.Project_Name];
												cit = proj.City;
												cii = Cities[ID == cit].City;
												location = cii + ", " + individualFlat.Project_Name.Location1;
												sendmail
												[
													from :zoho.adminuserid
													to :member.Email
													subject :input.Name1 + " wants to connect with you regarding to your property."
													message :"Hello " + member.Name1.first_name + ", <br><br> " + input.Name1 + " has viewed a property posted by you and requested you to contact.<br><br> Viewers details are given below:<br><br>Name: " + input.Name1 + "<br>Email: " + input.Email + "<br>Mobile: " + input.Mobile + "<br><br> Information about viewed property :<br><br> Posted By: " + member.Name1.first_name + "<br>Property Type: " + input.Property_Type1 + "<br>Location: " + location + "<br>Posted On: " + individualFlat.Date_field + "<br>Flat Number: " + individualFlat.Flats_Apartments_Shop_Number + "<br>Bedrooms: " + individualFlat.Number_of_Bed_Rooms + "<br>Bathrooms: " + individualFlat.Number_of_BathRooms + "<br>Furnishing: " + individualFlat.Furnishing + "<br>Floor Number: " + individualFlat.Floor_Number.Floor_Number + "<br>Total Area: " + individualFlat.Total_Area_in_square_feets + "<br>Maintenance Charge: " + individualFlat.Maintainence_Charge + "<br>Rate/Sq.Ft: " + individualFlat.Rate_per_square_feets + "<br>Parking Space: " + individualFlat.Parking_Space
												]
											}
										}
										openUrl("#Script:page.close","Same window");
						)
					}
	}

			}
			Create_record_scripts28 as "Create record scripts"
			{
				type =  form
				form = Contact_Seller
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:page.close","Same window");
						)
					}
	}

			}
			Edit_record_scripts18 as "Edit record scripts"
			{
				type =  form
				form = Contact_Seller
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											disable Viewed_Property_Rec_Id;
										disable Property_Type1;
										disable Viewed_Property_Posted_By1;
						)
					}
	}

			}
			Create_record_scripts29 as "Create record scripts"
			{
				type =  form
				form = Contact_Seller_Button
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Viewed_Property_Rec_Id;
										hide Viewed_Property_Posted_By1;
										hide Property_Type1;
						)
					}
	}

			}
			Mobile_Search_Property_Sc1 as "Mobile Search Property Script"
			{
				type =  form
				form = Search_Property_Mobile
				record event = on add

	on user input of PropertyType1
	{
					actions 
					{
						custom deluge script
						(
											if(input.PropertyType1 == "Shop" || input.PropertyType1 == "Land")
										{
											if(input.PropertyType1 == "Land")
											{
												input.For_field = "Buy";
												disable For_field;
											}
											else
											{
												enable For_field;
											}
										}
										else if(input.PropertyType1 == "Flat/Apartment" || input.PropertyType1 == "House/Villa")
										{
											enable For_field;
										}
										else
										{
											enable For_field;
										}
						)
					}
	}

			}
			Create_record_scripts30 as "Create record scripts"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Floor_Details;
										hide Land_House_Villa_Details;
										hide Input_Flats_Apartments_Shop_Details;
										hide Floor_Details.Project_Name;
										hide Floor_Details.Block_Name;
										hide Land_House_Villa_Details.Project_Name;
										hide Land_House_Villa_Details.Block_Name;
										hide Land_House_Villa_Details.Status;
										hide Land_House_Villa_Details.Date_field;
										hide Land_House_Villa_Details.Sold_By;
										hide Assign_Agent;
										hide Land_House_Villa_Details.Assign_Agent;
										listl = 0;
										listl = Add_User[Email == zoho.loginuserid].ID;
										if(listl == null)
										{
											alert "Please register yourself first.";
											openUrl("#Form:Add_User","same window");
										}
						)
					}
	}

			}
			Create_record_scripts31 as "Create record scripts"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "House/Villa" || Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Land")
										{
											if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "House/Villa")
											{
												for each  rec in Land_House_Villa_Details
												{
													rec.Date_field=zoho.currentdate;
													rec.Land_Breadth=null;
													rec.Land_Length=null;
													if(rec.Number_of_Bed_Rooms == null || rec.Number_of_Bathrooms == null || rec.Furnishing == null || rec.Number_of_Floors == null || rec.Built_Area == null || rec.Land_House_Villa_Number == null || rec.Image == null || rec.Total_Area == null || rec.Rate_per_square_feets == null)
													{
														alert "Some fields cannot be left empty.";
														cancel submit;
													}
												}
											}
											else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Land")
											{
												for each  rec in Land_House_Villa_Details
												{
													rec.Date_field=zoho.currentdate;
													rec.Number_of_Bed_Rooms=null;
													rec.Number_of_Bathrooms=null;
													rec.Furnishing=null;
													rec.Number_of_Floors=null;
													rec.Built_Area=null;
													if(rec.Land_Breadth == null || rec.Land_Length == null || rec.Land_House_Villa_Number == null || rec.Image == null || rec.Total_Area == null || rec.Rate_per_square_feets == null)
													{
														alert "Some fields cannot be left empty.";
														cancel submit;
													}
												}
											}
										}
										else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Flat/Apartment" || Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Shop")
										{
											for each  recc in Floor_Details
											{
												if(recc.Floor_Number == null || recc.Number_of_Flats_Apartments_Shops == null)
												{
													alert "Some fields cannot be left empty.";
													cancel submit;
												}
											}
										}
						)
					}
	}

			}
			Create_record_scripts32 as "Create record scripts"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											if(input.Input_Flats_Apartments_Shop_Details)
										{
											openUrl("#Form:Add_Flats_Apartments_Shop_Details","Same window");
										}
						)
					}
	}

			}
			Edit_record_scripts19 as "Edit record scripts"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Input_Flats_Apartments_Shop_Details;
										hide Floor_Details.Project_Name;
										hide Floor_Details.Block_Name;
										hide Land_House_Villa_Details.Project_Name;
										hide Land_House_Villa_Details.Sold_By;
										hide Land_House_Villa_Details.Block_Name;
										hide Assign_Agent;
										hide Land_House_Villa_Details.Assign_Agent;
										disable Project_Name;
										disable Block_Name;
										if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Flat/Apartment" || Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Shop")
										{
											show Floor_Details;
											hide Land_House_Villa_Details;
											show Input_Flats_Apartments_Shop_Details;
										}
										else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Land")
										{
											hide Land_House_Villa_Details.Block_Name;
											hide Land_House_Villa_Details.Status;
											hide Input_Flats_Apartments_Shop_Details;
											show Land_House_Villa_Details;
											hide Floor_Details;
											hide Land_House_Villa_Details.Number_of_Floors;
											hide Land_House_Villa_Details.Furnishing;
											hide Land_House_Villa_Details.Number_of_Bathrooms;
											hide Land_House_Villa_Details.Number_of_Bed_Rooms;
											hide Land_House_Villa_Details.Built_Area;
											show Land_House_Villa_Details.Land_Length;
											show Land_House_Villa_Details.Land_Breadth;
										}
										else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "House/Villa")
										{
											hide Land_House_Villa_Details.Block_Name;
											hide Land_House_Villa_Details.Status;
											hide Input_Flats_Apartments_Shop_Details;
											show Land_House_Villa_Details;
											hide Floor_Details;
											show Land_House_Villa_Details.Number_of_Floors;
											show Land_House_Villa_Details.Furnishing;
											show Land_House_Villa_Details.Number_of_Bathrooms;
											show Land_House_Villa_Details.Number_of_Bed_Rooms;
											show Land_House_Villa_Details.Built_Area;
											hide Land_House_Villa_Details.Land_Length;
											hide Land_House_Villa_Details.Land_Breadth;
										}
										else
										{
											hide Land_House_Villa_Details;
											hide Floor_Details;
											hide Input_Flats_Apartments_Shop_Details;
										}
						)
					}
	}

			}
			Edit_record_scripts20 as "Edit record scripts"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on edit

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "House/Villa" || Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Land")
										{
											if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "House/Villa")
											{
												for each  rec in Land_House_Villa_Details
												{
													rec.Land_Breadth=null;
													rec.Land_Length=null;
													if(rec.Number_of_Bed_Rooms == null || rec.Number_of_Bathrooms == null || rec.Furnishing == null || rec.Number_of_Floors == null || rec.Built_Area == null || rec.Land_House_Villa_Number == null || rec.Image == null || rec.Total_Area == null || rec.Rate_per_square_feets == null)
													{
														alert "Some fields cannot be left empty.";
														cancel submit;
													}
												}
											}
											else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Land")
											{
												for each  rec in Land_House_Villa_Details
												{
													rec.Number_of_Bed_Rooms=null;
													rec.Number_of_Bathrooms=null;
													rec.Furnishing=null;
													rec.Number_of_Floors=null;
													rec.Built_Area=null;
													if(rec.Land_Breadth == null || rec.Land_Length == null || rec.Land_House_Villa_Number == null || rec.Image == null || rec.Total_Area == null || rec.Rate_per_square_feets == null)
													{
														alert "Some fields cannot be left empty.";
														cancel submit;
													}
												}
											}
										}
										else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Flat/Apartment" || Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Shop")
										{
											for each  recc in Floor_Details
											{
												if(recc.Floor_Number == null || recc.Number_of_Flats_Apartments_Shops == null)
												{
													alert "Some fields cannot be left empty.";
													cancel submit;
												}
											}
										}
						)
					}
	}

			}
			Edit_record_scripts21 as "Edit record scripts"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											delete from Floor_Details_Subform[Block_Details_Master_Lookup is null];
										delete from Land_House_Villa_Subform[Block_Details_Master_Lookup is null];
										delete from Add_Flats_Apartments_Shop_Details[Floor_Number is null];
										delete from Floor_Flats_Apartments_Subform[Floor_Number is null];
										openUrl("#Form:Add_Block_Detail","same window");
						)
					}
	}

			}
			Delete_record_scripts9 as "Delete record scripts"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on delete

	on success
	{
					actions 
					{
						custom deluge script
						(
											delete from Floor_Details_Subform[Block_Details_Master_Lookup is null];
										delete from Land_House_Villa_Subform[Block_Details_Master_Lookup is null];
										delete from Add_Flats_Apartments_Shop_Details[Floor_Number is null];
										delete from Floor_Flats_Apartments_Subform[Floor_Number is null];
										openUrl("#Form:Add_Block_Detail","same window");
						)
					}
	}

			}
			Field_scripts23 as "Field scripts"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on add or edit

	on user input of Block_Name
	{
					actions 
					{
						custom deluge script
						(
											if(Add_Block_Detail[Project_Name == input.Project_Name && Block_Name == input.Block_Name].ID != null)
										{
											col = Add_Block_Detail[Project_Name == input.Project_Name && Block_Name == input.Block_Name].ID;
											openUrl("#Form:Add_Block_Detail?recLinkID=" + col + "&viewLinkName=Project_Blocks","same window");
										}
										else if(Add_Block_Detail[Project_Name == input.Project_Name && Block_Name == input.Block_Name].ID == null)
										{
											if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Flat/Apartment" || Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Shop")
											{
												input.Show_Block_Type_Details = "<span><b><font color='#66ccff' size='3'>This Block Contains " + Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 + " type of Property, please input floor details here and more details about each floor in Flats/Apartment Master Form.</font></b></span>";
												show Floor_Details;
												hide Land_House_Villa_Details;
												show Input_Flats_Apartments_Shop_Details;
												input.Floor_Details.Project_Name = input.Project_Name;
												input.Floor_Details.Block_Name = input.Block_Name;
											}
											else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "Land")
											{
												input.Show_Block_Type_Details = "<span><b><font color='#66ccff' size='3'>This Block Contains Land type of Property.</font></b></span>";
												hide Input_Flats_Apartments_Shop_Details;
												show Land_House_Villa_Details;
												hide Floor_Details;
												hide Land_House_Villa_Details.Number_of_Floors;
												hide Land_House_Villa_Details.Furnishing;
												hide Land_House_Villa_Details.Number_of_Bathrooms;
												hide Land_House_Villa_Details.Number_of_Bed_Rooms;
												hide Land_House_Villa_Details.Built_Area;
												show Land_House_Villa_Details.Land_Length;
												show Land_House_Villa_Details.Land_Breadth;
												input.Land_House_Villa_Details.Project_Name = input.Project_Name;
												input.Land_House_Villa_Details.Block_Name = input.Block_Name;
												hide Land_House_Villa_Details.Date_field;
											}
											else if(Project_Blocks_Subform[Project == input.Project_Name && ID == input.Block_Name].Block_Type1 == "House/Villa")
											{
												input.Show_Block_Type_Details = "<span><b><font color='#66ccff' size='3'>This Block Contains House/Villa type of Property.</font></b></span>";
												hide Input_Flats_Apartments_Shop_Details;
												show Land_House_Villa_Details;
												hide Floor_Details;
												show Land_House_Villa_Details.Number_of_Floors;
												show Land_House_Villa_Details.Furnishing;
												show Land_House_Villa_Details.Number_of_Bathrooms;
												show Land_House_Villa_Details.Number_of_Bed_Rooms;
												show Land_House_Villa_Details.Built_Area;
												hide Land_House_Villa_Details.Land_Length;
												hide Land_House_Villa_Details.Land_Breadth;
												input.Land_House_Villa_Details.Project_Name = input.Project_Name;
												input.Land_House_Villa_Details.Block_Name = input.Block_Name;
												hide Land_House_Villa_Details.Date_field;
											}
											else
											{
												hide Land_House_Villa_Details;
												hide Floor_Details;
												hide Input_Flats_Apartments_Shop_Details;
											}
										}
						)
					}
	}

			}
			Field_scripts24 as "Field scripts"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on add or edit

	on user input of Project_Name
	{
					actions 
					{
						custom deluge script
						(
											input.Block_Name:ui.add(Project_Blocks_Subform[Project == Add_Project[ID == input.Project_Name].ID && Block_Type1 == "House/Villa" || Block_Type1 == "Land"].ID.getAll());
						)
					}
	}

			}
			Field_scripts25 as "Field scripts"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on add or edit

	on add row of Floor_Details
	{
					actions 
					{
						custom deluge script
						(
											row.Project_Name=input.Project_Name;
										row.Block_Name=input.Block_Name;
						)
					}
	}

			}
			Field_scripts26 as "Field scripts"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on add or edit

	on add row of Land_House_Villa_Details
	{
					actions 
					{
						custom deluge script
						(
											row.Project_Name=input.Project_Name;
										row.Block_Name=input.Block_Name;
						)
					}
	}

			}
			Create_record_scripts33 as "Create record scripts"
			{
				type =  form
				form = Property_Sale_Details
				record event = on add

	field rules
	{
					actions 
					{
						hide Flats_Apartments_Number,Builder_Land_House_Villa_ID,Other_Property_ID,Property_from;
					}
	}

			}
			Create_record_scripts34 as "Create record scripts"
			{
				type =  form
				form = Property_Sale_Details
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Sold_by = Add_User[Email == zoho.loginuserid].ID;
						)
					}
	}

			}
			Create_record_scripts35 as "Create record scripts"
			{
				type =  form
				form = Property_Sale_Details
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											if(Property_from == "Other's Properties")
										{
											propertyRec = Add_Your_Property[ID == input.Other_Property_ID];
											propertyRec.Sold_By=input.Sold_by;
											propertyRec.Status="Inactive";
										}
										else if(Property_from == "Builder Flats/Apartments")
										{
											propertyRec = Floor_Flats_Apartments_Subform[ID == input.Flats_Apartments_Number];
											propertyRec.Sold_By=input.Sold_by;
											propertyRec.Status="Inactive";
										}
										else if(Property_from == "Builder Land/House/Villa")
										{
											propertyRec = Land_House_Villa_Subform[ID == input.Builder_Land_House_Villa_ID];
											propertyRec.Sold_By=input.Sold_by;
											propertyRec.Status="Inactive";
										}
										openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			On_load_scripts1 as "On load scripts"
			{
				type =  form
				form = Select_Project_Agent
				record event = on add

	field rules
	{
					actions 
					{
						hide Assign_agent_in,rec_ID,rec_IDs;
					}
	}

			}
			On_load_scripts2 as "On load scripts"
			{
				type =  form
				form = Select_Project_Agent
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											if(Assign_agent_in == "Builder Flats/Apartments")
										{
											ids = Floor_Flats_Apartments_Subform[Flats_Apartments_Master == input.rec_ID.toLong()].ID.getAll();
											input.rec_IDs:ui.add(ids);
											input.rec_IDs = ids;
										}
										else if(Assign_agent_in == "Builder Land/House/Villa")
										{
											ids = Land_House_Villa_Subform[Block_Details_Master_Lookup == input.rec_ID.toLong()].ID.getAll();
											input.rec_IDs:ui.add(ids);
											input.rec_IDs = ids;
										}
						)
					}
	}

			}
			Project_Name_Looking_Up1 as "Project Name Looking Up"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on add or edit

	on validate
	{
					actions 
					{
						custom deluge script
						(
											for each  rec in Land_House_Villa_Details
										{
											rec.Project_Name=input.Project_Name;
										}
						)
					}
	}

			}
			Project_Name_Looking_Up2 as "Project Name Looking Up"
			{
				type =  form
				form = Add_Land_House_Villa_Details
				record event = on add or edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											for each  rec in Land_House_Villa_Details
										{
											rec.Project_Name=input.Project_Name;
										}
						)
					}
	}

			}
		}
		functions
		{
			Contact_Builder as "Contact Builder"
			{
				type =  functions
				form = Add_Your_Property
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Contact_Seller?zc_LoadIn=dialog&zc_Header=false&Viewed_Property_Rec_Id=" + input.ID + "&Viewed_Property_Posted_By1=" + input.Member + "&Property_Type1=" + input.Property_Type1,"same window");
					)
					}
				}
			}
			Change_Property_Status_to as "Change Property Status to Sold"
			{
				type =  functions
				form = Add_Your_Property
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Property_Sale_Details?Property_from=Other's Properties&Other_Property_ID=" + input.ID,"popup window");
										//input.Status = "Inactive";
					)
					}
				}
			}
			Project_Sold_out_Script as "Project Sold-out Script"
			{
				type =  functions
				form = Add_Project
				on start
				{
					actions 
					{
					projectSoldOut(ID);
					}
				}
			}
			Flat_Shop_sold_script as "Flat/Shop sold script"
			{
				type =  functions
				form = Floor_Flats_Apartments_Subform
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Property_Sale_Details?Property_from=Builder Flats/Apartments&Flats_Apartments_Number=" + input.ID,"popup window");
					)
					}
				}
			}
			Flat_Shop_sold_script1 as "Flat/Shop sold script"
			{
				type =  functions
				form = Floor_Flats_Apartments_Subform
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Property_Sale_Details?Property_from=Builder Flats/Apartments&Flats_Apartments_Number=" + input.ID,"popup window");
					)
					}
				}
			}
			Land_House_sold_script as "Land/House sold script"
			{
				type =  functions
				form = Land_House_Villa_Subform
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Property_Sale_Details?Property_from=Builder Land/House/Villa&Builder_Land_House_Villa_ID=" + input.ID,"popup window");
					)
					}
				}
			}
			Land_House_sold_script1 as "Land/House sold script"
			{
				type =  functions
				form = Land_House_Villa_Subform
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Property_Sale_Details?Property_from=Builder Land/House/Villa&Builder_Land_House_Villa_ID=" + input.ID,"popup window");
					)
					}
				}
			}
			Open_Enquiries_script as "Open Enquiries script"
			{
				type =  functions
				form = Add_Your_Property
				on start
				{
					actions 
					{
					showEnquiries(ID);
					}
				}
			}
			Open_Enquiries_script1 as "Open Enquiries script"
			{
				type =  functions
				form = Add_Your_Property
				on start
				{
					actions 
					{
					showEnquiries(ID);
					}
				}
			}
			Assign_agent_to_project_s as "Assign agent to project script"
			{
				type =  functions
				form = Add_Project
				on start
				{
					actions 
					{
					on click
					(
						openUrl(zoho.appuri + "#Form:Select_Project_Agent?rec_IDs=" + input.ID + "&Assign_agent_in=Builder Project&zc_Header=false&zc_Footer=false&zc_SecHeader=false","popup window");
					)
					}
				}
			}
			Assign_agent_for_blocks_s as "Assign agent for blocks script"
			{
				type =  functions
				form = Add_Flats_Apartments_Shop_Details
				on start
				{
				}
			}
			Assign_agent_to_block_scr as "Assign agent to block script"
			{
				type =  functions
				form = Add_Flats_Apartments_Shop_Details
				on start
				{
					actions 
					{
					on click
					(
						openUrl(zoho.appuri + "#Form:Select_Project_Agent?rec_ID=" + input.ID + "&Assign_agent_in=Builder Flats/Apartments&zc_Header=false&zc_Footer=false&zc_SecHeader=false","popup window");
					)
					}
				}
			}
			Assign_agent_to_house_scr as "Assign agent to house script"
			{
				type =  functions
				form = Add_Land_House_Villa_Details
				on start
				{
					actions 
					{
					on click
					(
						openUrl(zoho.appuri + "#Form:Select_Project_Agent?rec_ID=" + input.ID + "&Assign_agent_in=Builder Land/House/Villa&zc_Header=false&zc_Footer=false&zc_SecHeader=false","popup window");
					)
					}
				}
			}
			Flat_Shop_sold_script2 as "Flat/Shop sold script"
			{
				type =  functions
				form = Floor_Flats_Apartments_Subform
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Property_Sale_Details?Property_from=Builder Flats/Apartments&Flats_Apartments_Number=" + input.ID,"popup window");
					)
					}
				}
			}
			Land_House_sold_script2 as "Land/House sold script"
			{
				type =  functions
				form = Land_House_Villa_Subform
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Property_Sale_Details?Property_from=Builder Land/House/Villa&Builder_Land_House_Villa_ID=" + input.ID,"popup window");
					)
					}
				}
			}
			Open_Enquiries_script2 as "Open Enquiries script"
			{
				type =  functions
				form = Land_House_Villa_Subform
				on start
				{
					actions 
					{
					showEnquiries(ID);
					}
				}
			}
			Open_Enquiries_script3 as "Open Enquiries script"
			{
				type =  functions
				form = Floor_Flats_Apartments_Subform
				on start
				{
					actions 
					{
					showEnquiries(ID);
					}
				}
			}
			Contact_Builder_Custom_Ac as "Contact Builder Custom Action script"
			{
				type =  functions
				form = Floor_Flats_Apartments_Subform
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Contact_Seller?zc_LoadIn=dialog&zc_Header=false&Viewed_Property_Rec_Id=" + input.ID + "&Viewed_Property_Posted_By1=" + input.Project_Name.Member + "&Property_Type1=" + input.Block_Name.Block_Type1,"same window");
					)
					}
				}
			}
			Contact_Builder_Custom_Ac1 as "Contact Builder Custom Action script"
			{
				type =  functions
				form = Floor_Flats_Apartments_Subform
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Contact_Seller?zc_LoadIn=dialog&zc_Header=false&Viewed_Property_Rec_Id=" + input.ID + "&Viewed_Property_Posted_By1=" + input.Project_Name.Member + "&Property_Type1=" + input.Block_Name.Block_Type1,"same window");
					)
					}
				}
			}
			Contact_Builder_Custom_Ac2 as "Contact Builder Custom Action script"
			{
				type =  functions
				form = Land_House_Villa_Subform
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Contact_Seller?zc_LoadIn=dialog&zc_Header=false&Viewed_Property_Rec_Id=" + input.ID + "&Viewed_Property_Posted_By1=" + input.Project_Name.Member + "&Property_Type1=" + input.Block_Name.Block_Type1,"same window");
					)
					}
				}
			}
			Contact_Builder_Custom_Ac3 as "Contact Builder Custom Action script"
			{
				type =  functions
				form = Land_House_Villa_Subform
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Contact_Seller?zc_LoadIn=dialog&zc_Header=false&Viewed_Property_Rec_Id=" + input.ID + "&Viewed_Property_Posted_By1=" + input.Project_Name.Member + "&Property_Type1=" + input.Block_Name.Block_Type1,"same window");
					)
					}
				}
			}
		}
	}
	share_settings
	{
			"Agent"
			{
				name = "Agent"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false}
				description = "Agent Profile\n"
				ModulePermissions
				{
					Project_Blocks_Subform
					{
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Block_Name{visibility:true,readonly:false}
							Block_Type1{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
						}
					}
					Floor_Details_Subform
					{
						FieldPermissions
						{
							Block_Details_Master_Lookup{visibility:true,readonly:false}
							Block_Name{visibility:true,readonly:false}
							Number_of_Flats_Apartments_Shops{visibility:true,readonly:false}
							Floor_Number{visibility:true,readonly:false}
							Project_Name{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
						}
					}
					Search_Property_Mobile
					{
						FieldPermissions
						{
							Section{visibility:true,readonly:false}
							PropertyType1{visibility:true,readonly:false}
							For_field{visibility:true,readonly:false}
							show_search{visibility:true,readonly:false}
						}
					}
					Contact_Seller
					{
						FieldPermissions
						{
							Viewed_Property_Rec_Id{visibility:true,readonly:false}
							Property_Type1{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							Viewed_Property_Posted_By1{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Mobile{visibility:true,readonly:false}
							Name1{visibility:true,readonly:false}
						}
					}
					Floor_Flats_Apartments_Subform
					{
						ReportPermissions
						{
							My_Assigned_Flats_Apartments_Shops={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Rate_per_square_feets{visibility:true,readonly:false}
							Total_Area_in_square_feets{visibility:true,readonly:false}
							Number_of_BathRooms{visibility:true,readonly:false}
							Project_Name{visibility:true,readonly:false}
							Image{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Sold_By{visibility:true,readonly:false}
							Furnishing{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Number_of_Bed_Rooms{visibility:true,readonly:false}
							Block_Name{visibility:true,readonly:false}
							Maintainence_Charge{visibility:true,readonly:false}
							Assign_Agent{visibility:true,readonly:false}
							Flats_Apartments_Master{visibility:true,readonly:false}
							Floor_Number{visibility:true,readonly:false}
							Parking_Space{visibility:true,readonly:false}
							Flats_Apartments_Shop_Number{visibility:true,readonly:false}
						}
					}
					Add_Flats_Apartments_Shop_Details
					{
						FieldPermissions
						{
							Block_Name{visibility:true,readonly:false}
							Show_Block_Type_Details{visibility:true,readonly:false}
							Flats_Apartments_Shop_Details{visibility:true,readonly:false}
							Assign_Agent{visibility:true,readonly:false}
							Floor_Number{visibility:true,readonly:false}
							Project_Name{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
						}
					}
					Search_Property_Form
					{
						FieldPermissions
						{
							Posted_By{visibility:true,readonly:false}
							PropertyType1{visibility:true,readonly:false}
							Bedroom{visibility:true,readonly:false}
							City{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							For_field{visibility:true,readonly:false}
							show_search{visibility:true,readonly:false}
						}
					}
					Add_User
					{
						FieldPermissions
						{
							Email{visibility:true,readonly:false}
							Member_Type{visibility:true,readonly:false}
							Mobile_Number{visibility:true,readonly:false}
							Configuration_Index{visibility:true,readonly:false}
							Address1{visibility:true,readonly:false}
							Image{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Name1{visibility:true,readonly:false}
						}
					}
					Add_Land_House_Villa_Details
					{
						FieldPermissions
						{
							Input_Flats_Apartments_Shop_Details{visibility:true,readonly:false}
							Block_Name{visibility:true,readonly:false}
							Section3{visibility:true,readonly:false}
							Show_Block_Type_Details{visibility:true,readonly:false}
							Section1{visibility:true,readonly:false}
							Section2{visibility:true,readonly:false}
							Assign_Agent{visibility:true,readonly:false}
							Project_Name{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Floor_Details{visibility:true,readonly:false}
							Land_House_Villa_Details{visibility:true,readonly:false}
						}
					}
					Add_Project
					{
						FieldPermissions
						{
							Project_Includes1{visibility:true,readonly:false}
							Flats_Apartments_Master_ID{visibility:true,readonly:false}
							Project_Area{visibility:true,readonly:false}
							Block_Details_Master_ID{visibility:true,readonly:false}
							Location1{visibility:true,readonly:false}
							Project_Name{visibility:true,readonly:false}
							City{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							About{visibility:true,readonly:false}
							Blocks_Details{visibility:true,readonly:false}
							Assign_Agent{visibility:true,readonly:false}
							Member{visibility:true,readonly:false}
							Amenities{visibility:true,readonly:false}
						}
					}
					Land_House_Villa_Subform
					{
						ReportPermissions
						{
							My_Assigned_Lands_Houses_Villas={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Rate_per_square_feets{visibility:true,readonly:false}
							Land_House_Villa_Number{visibility:true,readonly:false}
							Land_Length{visibility:true,readonly:false}
							Number_of_Bathrooms{visibility:true,readonly:false}
							Total_Area{visibility:true,readonly:false}
							Land_Breadth{visibility:true,readonly:false}
							Project_Name{visibility:true,readonly:false}
							Image{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Sold_By{visibility:true,readonly:false}
							Furnishing{visibility:true,readonly:false}
							Built_Area{visibility:true,readonly:false}
							Block_Details_Master_Lookup{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Number_of_Bed_Rooms{visibility:true,readonly:false}
							Block_Name{visibility:true,readonly:false}
							Number_of_Floors{visibility:true,readonly:false}
							Assign_Agent{visibility:true,readonly:false}
						}
					}
					Property_Sale_Details
					{
						FieldPermissions
						{
							Sold_at{visibility:true,readonly:false}
							Builder_Land_House_Villa_ID{visibility:true,readonly:false}
							Property_from{visibility:true,readonly:false}
							Agent_Commision{visibility:true,readonly:false}
							Other_Property_ID{visibility:true,readonly:false}
							Commission_Percent{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Sold_by{visibility:true,readonly:false}
							Flats_Apartments_Number{visibility:true,readonly:false}
						}
					}
					Add_Block_Detail
					{
						FieldPermissions
						{
							Input_Flats_Apartments_Shop_Details{visibility:true,readonly:false}
							Block_Name{visibility:true,readonly:false}
							Show_Block_Type_Details{visibility:true,readonly:false}
							Section1{visibility:true,readonly:false}
							Section2{visibility:true,readonly:false}
							Project_Name{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Floor_Details{visibility:true,readonly:false}
							Land_House_Villa_Details{visibility:true,readonly:false}
						}
					}
					Select_Project_Agent
					{
						FieldPermissions
						{
							Agent{visibility:true,readonly:false}
							rec_ID{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Assign_agent_in{visibility:true,readonly:false}
							rec_IDs{visibility:true,readonly:false}
						}
					}
					Add_Your_Property
					{
						enabled= Create,Tab 
						ReportPermissions
						{
							Your_Added_Properties={"View","Edit","Delete"}
						}
						FieldPermissions
						{
							Land_Length{visibility:true,readonly:false}
							Total_Area_in_square_feets{visibility:true,readonly:false}
							Land_Breadth{visibility:true,readonly:false}
							Image{visibility:true,readonly:false}
							Sold_By{visibility:true,readonly:false}
							Furnishing{visibility:true,readonly:false}
							Property_For{visibility:true,readonly:false}
							Maintainence_Charge{visibility:true,readonly:false}
							Floor_Number{visibility:true,readonly:false}
							Nearest_Landmark{visibility:true,readonly:false}
							Member{visibility:true,readonly:false}
							Parking_Space{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Number_of_Bathrooms{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							City1{visibility:true,readonly:false}
							Location1{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
							Rate_Per_Square_Feet{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Property_Type1{visibility:true,readonly:false}
							Number_of_Bed_Rooms{visibility:true,readonly:false}
							Property_Condition{visibility:true,readonly:false}
							Rent_Per_Month{visibility:true,readonly:false}
						}
					}
					Contact_Seller_Button
					{
						FieldPermissions
						{
							Viewed_Property_Rec_Id{visibility:true,readonly:false}
							Property_Type1{visibility:true,readonly:false}
							Viewed_Property_Posted_By1{visibility:true,readonly:false}
							Section{visibility:true,readonly:false}
						}
					}
					Cities
					{
						FieldPermissions
						{
							City{visibility:true,readonly:false}
						}
					}
				}
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true}
				description = "This profile will have all the permissions.\n"
			}
			"User"
			{
				name = "User"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:true}
				description = "This profile only have add and view permission.\n"
			}
			"Customer"
			{
				name = "Customer"
				type = Customer_Portal
				permissions = {Chat:false, Predefined:true}
				description = "This is the default profile having only add and view permission.\n"
			}
			"Member"
			{
				name = "Member"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:true}
				description = "This profile will not have administrative permissions.\n"
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users.\n\n\n"
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 6
		new theme color = 7
		icons = true
    	icon type = 1
    	icon name = "zc-ab-education-11"
    	icon theme = "yellow"
		icons style = solid
	}

	phone
	{
		section  Search_Property
		{
			displayname= "Search Property"
			icon = "ui-1-zoom"
			page Search
			{
				hide = true
			}
			page Property_Type_Selection_Mobile_Builder
			{
				hide = true
			}
			page Property_Type_Selection_Mobile_Others
			{
				hide = true
			}
			page Mobile_Search
			{
			}
		}
		section  Add_Your_Property1
		{
			displayname= "Add Your Property"
			icon = "users-2-a-add"
			custom All_Flats_for_Sale_by_Others
			{
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Member
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Contact Builder"
    								)
    				)
    				action
    				(
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock3
						(
			 				layout type = 19
		     				title = "Overview"
							fields
							(
								Image
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Number_of_Bed_Rooms as "Number of Bed Rooms"
							)
						)
						datablock4
						(
			 				layout type = -2
		     				title = "Property Details"
							fields
							(
								Date_field as "Date"
								Property_Condition as "Property Condition"
								City1 as "City"
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Nearest_Landmark as "Nearest Landmark"
								Furnishing
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Number_of_Bathrooms as "Number of Bathrooms"
								Floor_Number as "Floor Number"
								Maintainence_Charge as "Maintainence Charge"
								Parking_Space as "Parking Space"
								Comments
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom All_Flats_for_Rent_by_Others
			{
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Member
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Rent_Per_Month as "Rent Per Month"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Property_For as "Property For"
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Number_of_Bathrooms as "Number of Bathrooms"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Maintainence_Charge as "Maintainence Charge"
								Nearest_Landmark as "Nearest Landmark"
								Furnishing
								Floor_Number as "Floor Number"
								Member
								Property_Condition as "Property Condition"
								Land_Length as "Land Length"
								Land_Breadth as "Land Breadth"
								Status
								Sold_By as "Sold By"
								Rent_Per_Month as "Rent Per Month"
								Image
								City1 as "City"
								Comments
								Date_field as "Added Date"
								Property_Type1 as "Property Type"
								Parking_Space as "Parking Space"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom All_House_Villas_for_Rent_by_Others
			{
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Member
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Rent_Per_Month as "Rent Per Month"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Contact Builder"
    								)
    				)
    				action
    				(
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Property_For as "Property For"
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Number_of_Bathrooms as "Number of Bathrooms"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Maintainence_Charge as "Maintainence"
								Nearest_Landmark as "Nearest Landmark"
								Furnishing
								Floor_Number as "Floor Number"
								Member
								Property_Condition as "Property Condition"
								Land_Length as "Land Length"
								Land_Breadth as "Land Breadth"
								Status
								Sold_By as "Sold By"
								Rent_Per_Month as "Rent Per Month"
								Image
								City1 as "City"
								Comments
								Date_field as "Date"
								Property_Type1 as "Property Type"
								Parking_Space as "Parking Space"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom All_Shops_for_Rent_by_Others
			{
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Member
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Rent_Per_Month as "Rent Per Month"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Contact Builder"
    								)
    				)
    				action
    				(
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 19
		     				title = "Overview"
							fields
							(
								Image
								Rent_Per_Month as "Rent Per Month"
								Total_Area_in_square_feets as "Total Area (in square feets)"
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Property Details"
							fields
							(
								Member
								Date_field as "Added Date"
								Property_Condition as "Property Condition"
								City1 as "City"
								Nearest_Landmark as "Nearest Landmark"
								Furnishing
								Floor_Number as "Floor Number"
								Maintainence_Charge as "Maintainence Charge"
								Parking_Space as "Parking Space"
								Comments
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom All_Lands_for_Sale_by_Others
			{
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Member
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Property_For as "Property For"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Contact Builder"
    								)
    				)
    				action
    				(
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Property_For as "Property For"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Rent_Per_Month as "Rent Per Month"
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Property Details"
							fields
							(
								Date_field as "Added Date"
								Property_Condition as "Property Condition"
								City1 as "City"
								Nearest_Landmark as "Nearest Landmark"
								Land_Breadth as "Land Breadth"
								Land_Length as "Land Length"
								Comments
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom All_House_Villas_for_Sale_by_Others
			{
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Member
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Contact Builder"
    								)
    				)
    				action
    				(
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Property_For as "Property For"
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Number_of_Bathrooms as "Number of Bathrooms"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Maintainence_Charge as "Maintainence"
								Nearest_Landmark as "Nearest Landmark"
								Furnishing
								Floor_Number as "Floor Number"
								Member
								Property_Condition as "Property Condition"
								Land_Length as "Land Length"
								Land_Breadth as "Land Breadth"
								Status
								Sold_By as "Sold By"
								Rent_Per_Month as "Rent Per Month"
								Image
								City1 as "City"
								Comments
								Date_field as "Date"
								Property_Type1 as "Property Type"
								Parking_Space as "Parking Space"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom All_Shops_for_Sale_by_Others
			{
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Member
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Contact Builder"
    								)
    				)
    				action
    				(
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 19
		     				title = "Overview"
							fields
							(
								Image
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Total_Area_in_square_feets as "Total Area (in square feets)"
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Property Details"
							fields
							(
								Member
								Date_field as "Added Date"
								Property_Condition as "Property Condition"
								City1 as "City"
								Nearest_Landmark as "Nearest Landmark"
								Furnishing
								Floor_Number as "Floor Number"
								Maintainence_Charge as "Maintainence Charge"
								Parking_Space as "Parking Space"
								Comments
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom All_Flats_by_Others
			{
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Rent_Per_Month as "Rent Per Month"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Contact Builder"
    								)
    				)
    				action
    				(
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Property_For as "Property For"
								Member.Email as "Email"
								Member.Mobile_Number as "Mobile Number"
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Property Details"
							fields
							(
								Date_field as "Added Date"
								Property_Condition as "Property Condition"
								City1 as "City"
								Nearest_Landmark as "Nearest Landmark"
								Furnishing
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Number_of_Bathrooms as "Number of Bathrooms"
								Floor_Number as "Floor Number"
								Maintainence_Charge as "Maintainence Charge"
								Parking_Space as "Parking Space"
								Comments
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom All_House_Villas_by_Others
			{
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Member
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Rent_Per_Month as "Rent Per Month"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Contact Builder"
    								)
    				)
    				action
    				(
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Property_For as "Property For"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Rent_Per_Month as "Rent Per Month"
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Property Details"
							fields
							(
								Property_Condition as "Property Condition"
								Nearest_Landmark as "Nearest Landmark"
								City1 as "City"
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Furnishing
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Number_of_Bathrooms as "Number of Bathrooms"
								Floor_Number as "Floor Number"
								Maintainence_Charge as "Maintainence Charge"
								Parking_Space as "Parking Space"
								Comments
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom All_Shops_by_Others
			{
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Member as "Added By"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Rent_Per_Month as "Rent Per Month"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Contact Builder"
    								)
    				)
    				action
    				(
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Property_For as "Property For"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Rent_Per_Month as "Rent Per Month"
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Property Details"
							fields
							(
								Member as "Added By"
								Date_field as "Added Date"
								Floor_Number as "Floor Number"
								Property_Condition as "Property Condition"
								Nearest_Landmark as "Nearest Landmark"
								City1 as "City"
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Maintainence_Charge as "Maintainence Charge"
								Parking_Space as "Parking Space"
								Comments
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			form  Add_Your_Property
			{
				layout = left
				icon = "ui-2-square-add-11"
			}
			custom All_Properties_by_Others
			{
				icon = "ui-1-database"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Property_Type1 as "Property Type"
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Property_For as "Property For"
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Number_of_Bathrooms as "Number of Bathrooms"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Maintainence_Charge as "Maintainence Charge"
								Nearest_Landmark as "Nearest Landmark"
								Furnishing
								Floor_Number as "Floor Number"
								Member
								Property_Condition as "Property Condition"
								Land_Length as "Land Length"
								Land_Breadth as "Land Breadth"
								Status
								Sold_By as "Sold By"
								Rent_Per_Month as "Rent Per Month"
								Image
								City1 as "City"
								Comments
								Date_field as "Date"
								Property_Type1 as "Property Type"
								Parking_Space as "Parking Space"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom Your_Added_Properties
			{
				icon = "ui-2-grid-49"
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 19
		     				title = "Overview"
							fields
							(
								Image
								Property_For as "Property For"
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Property_For as "Property For"
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Number_of_Bathrooms as "Number of Bathrooms"
								Rate_Per_Square_Feet as "Rate (Per Square Feet)"
								Maintainence_Charge as "Maintainence Charge"
								Nearest_Landmark as "Nearest Landmark"
								Furnishing
								Floor_Number as "Floor Number"
								Member
								Property_Condition as "Property Condition"
								Land_Length as "Land Length"
								Land_Breadth as "Land Breadth"
								Status
								Sold_By as "Sold By"
								Rent_Per_Month as "Rent Per Month"
								Image
								City1 as "City"
								Comments
								Date_field as "Date"
								Property_Type1 as "Property Type"
								Parking_Space as "Parking Space"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Project_Details
		{
			displayname= "Project Details"
			icon = "ui-2-menu-bold"
			form  Add_Project
			{
				layout = left
				icon = "ui-2-square-add-11"
			}
			form  Add_Block_Detail
			{
				layout = left
				icon = "ui-2-square-add-11"
			}
			form  Add_Flats_Apartments_Shop_Details
			{
				layout = left
				icon = "ui-1-bold-add"
			}
			form  Add_Land_House_Villa_Details
			{
				layout = left
			}
			list All_Projects
			{
				icon = "ui-1-database"
			}
			list Project_Blocks
			{
				icon = "ui-1-database"
			}
			list Project_Flats_Apartments_Shop
			{
				icon = "business-building"
			}
			list Project_Lands_Houses_Villas
			{
			}
		}
		section  Users
		{
			icon = "users-multiple-11"
			form  Add_User
			{
				layout = left
				icon = "users-2-a-add"
			}
			list All_Users
			{
				icon = "users-multiple-11"
			}
		}
		section  Subforms
		{
			hide = true
			icon = "ui-2-menu-bold"
			form  Project_Blocks_Subform
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			form  Floor_Details_Subform
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Floor_Flats_Apartments_Subform
			{
				layout = left
				icon = "ui-1-bold-add"
				hide = true
			}
			form  Land_House_Villa_Subform
			{
				layout = left
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Cities
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			list Cities_Report
			{
				icon = "ui-1-database"
				hide = true
			}
			form  Search_Property_Form
			{
				layout = left
				icon = "ui-1-bold-add"
				hide = true
			}
			page New_Search_Result
			{
				hide = true
			}
			form  Contact_Seller
			{
				layout = left
				icon = "ui-2-square-add-11"
				hide = true
			}
			list Contact_Seller_Report
			{
				icon = "ui-1-database"
				hide = true
			}
			list Project_Blocks_Subform_Report
			{
				icon = "ui-1-database"
				hide = true
			}
			list Floor_Details_Subform_Report
			{
				icon = "ui-2-grid-49"
				hide = true
			}
			custom Floor_Flats_Apartments_Subform_Report
			{
				icon = "ui-1-database"
				hide = true
			}
			custom Land_House_Villa_Subform_Report
			{
				icon = "ui-2-grid-49"
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Land_House_Villa_Number as "Land/House/Villa Number"
								Project_Name as "Project Name"
								Rate_per_square_feets as "Rate (per square feets)"
								Total_Area as "Total Area"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"Sold"
										"View Enquiries"
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
										View Record   	   
										"Sold"
										"View Enquiries"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 7
		     				title = "Overview"
							fields
							(
								Image
								Land_House_Villa_Number as "Land/House/Villa Number"
								Project_Name.Project_Includes1 as "Project Includes"
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Property Details"
							fields
							(
								Project_Name as "Project Name"
								Block_Name as "Block Name"
								Rate_per_square_feets as "Rate (per square feets)"
								Number_of_Floors as "Number of Floors"
								Total_Area as "Total Area"
								Built_Area as "Built Area"
								Land_Breadth as "Land Breadth"
								Land_Length as "Land Length"
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Number_of_Bathrooms as "Number of Bathrooms"
								Furnishing
								Date_field as "Added Date"
								Assign_Agent as "Agent"
								Sold_By as "Sold By"
				"Sold"
				"View Enquiries"
							)
						)
						datablock3
						(
			 				layout type = -2
		     				title = "Project Details"
							fields
							(
								Project_Name.Project_Includes1 as "Project Includes"
								Project_Name.Project_Area as "Project Area(Sq.Ft.)"
								Project_Name.Amenities as "Amenities"
								Project_Name.About as "About"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Cantact_Seller
		{
			displayname= "Cantact Seller"
			hide = true
			icon = "ui-2-menu-bold"
			form  Contact_Seller_Button
			{
				layout = left
				icon = "ui-1-bold-add"
				hide = true
			}
			page Cantact_Seller_PopUp
			{
				hide = true
			}
		}
		section  Floor_Flats_Apartments_Subform
		{
			displayname= "Builder/Developer Properties"
			custom All_Flats_by_Builder_Developer
			{
				icon = "ui-3-playlist"
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
								Project_Name.Project_Includes1 as "Project Includes"
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Rate_per_square_feets as "Rate (per square feets)"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 15
		     				title = "Overview"
							fields
							(
								Image
								Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
							)
						)
						datablock4
						(
			 				layout type = -2
		     				title = "Property Details"
							fields
							(
								Project_Name as "Project Name"
								Block_Name as "Block Name"
								Floor_Number as "Floor Number"
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Date_field as "Date"
								Number_of_BathRooms as "Number of BathRooms"
								Furnishing
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Rate_per_square_feets as "Rate (per square feets)"
								Maintainence_Charge as "Maintainence Charge"
								Parking_Space as "Parking Space"
							)
						)
						datablock5
						(
			 				layout type = -2
		     				title = "Project Details"
							fields
							(
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Project_Name.Project_Includes1 as "Project Includes"
								Project_Name.City as "City"
								Project_Name.Project_Area as "Project Area(Sq.Ft.)"
								Project_Name.Amenities as "Amenities"
								Project_Name.About as "About"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom All_Shops_by_Builder_Developer
			{
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
								Project_Name as "Project Name"
								Floor_Number as "Floor Number"
								Rate_per_square_feets as "Rate (per square feets)"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 7
		     				title = "Overview"
							fields
							(
								Image
								Flats_Apartments_Shop_Number as "Flats/Apartments/Shop Number"
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Property Details"
							fields
							(
								Project_Name as "Project Name"
								Block_Name as "Block Name"
								Floor_Number as "Floor Number"
								Maintainence_Charge as "Maintainence Charge"
								Parking_Space as "Parking Space"
								Rate_per_square_feets as "Rate (per square feets)"
								Total_Area_in_square_feets as "Total Area (in square feets)"
								Date_field as "Added Date"
							)
						)
						datablock3
						(
			 				layout type = -2
		     				title = "Project Details"
							fields
							(
								Project_Name.City as "City"
								Project_Name.Project_Includes1 as "Project Includes"
								Project_Name.Amenities as "Amenities"
								Project_Name.Project_Area as "Project Area(Sq.Ft.)"
								Project_Name.About as "About"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom All_House_Villa_by_Builder_Developer
			{
				icon = "ui-3-playlist"
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Land_House_Villa_Number as "Land/House/Villa Number"
								Project_Name.Project_Includes1 as "Project Includes"
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Rate_per_square_feets as "Rate (per square feets)"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 15
		     				title = "Overview"
							fields
							(
								Image
								Land_House_Villa_Number as "Land/House/Villa Number"
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Property Details"
							fields
							(
								Project_Name as "Project Name"
								Block_Name as "Block Name"
								Number_of_Bed_Rooms as "Number of Bed Rooms"
								Number_of_Bathrooms as "Number of Bathrooms"
								Date_field as "Date"
								Furnishing
								Number_of_Floors as "Number of Floors"
								Total_Area as "Total Area"
								Built_Area as "Built Area"
								Rate_per_square_feets as "Rate (per square feets)"
							)
						)
						datablock3
						(
			 				layout type = -2
		     				title = "Project Details"
							fields
							(
								Project_Name.City as "City"
								Project_Name.Project_Includes1 as "Project Includes"
								Project_Name.Project_Area as "Project Area(Sq.Ft.)"
								Project_Name.Amenities as "Amenities"
								Project_Name.About as "About"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom All_Lands_by_Builder_Developer
			{
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 27
		     				title = "Overview"
							fields
							(
								Image
								Land_House_Villa_Number as "Land/House/Villa Number"
								Project_Name as "Project Name"
								Total_Area as "Total Area"
								Rate_per_square_feets as "Rate (per square feets)"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
    								)
									on right swipe
									(
										"Contact Builder"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 15
		     				title = "Overview"
							fields
							(
								Image
								Land_House_Villa_Number as "Land/House/Villa Number"
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Property Details"
							fields
							(
								Project_Name as "Project Name"
								Block_Name as "Block Name"
								Land_Breadth as "Land Breadth"
								Land_Length as "Land Length"
								Rate_per_square_feets as "Rate (per square feets)"
							)
						)
						datablock3
						(
			 				layout type = -2
		     				title = "Project Details"
							fields
							(
								Project_Name.City as "City"
								Project_Name.Project_Includes1 as "Project Includes"
								Project_Name.Project_Area as "Project Area(Sq.Ft.)"
								Project_Name.Amenities as "Amenities"
								Project_Name.About as "About"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom My_Assigned_Flats_Apartments_Shops
			{
				hide = true
			}
			custom My_Assigned_Lands_Houses_Villas
			{
				hide = true
			}
		}
		section  Search_Property_Mobile
		{
			displayname= "Search Property Mobile"
			form  Search_Property_Mobile
			{
				layout = left
			}
		}
		section  Add_Land_House_Villa_Details
		{
			displayname= "Add Land/House/Villa Details"
		}
		section  Property_Sale_Details
		{
			displayname= "Property Sale Details"
			form  Property_Sale_Details
			{
				layout = auto
				icon = "shopping-tag-sale"
				hide = true
			}
			list All_Property_Sale_Details
			{
				icon = "users-2-contacts-44"
				hide = true
			}
		}
		section  Copy_of_Property_Sale_Details
		{
			displayname= "Copy of Property Sale Details"
		}
		section  Property_Sale_Details
		{
			displayname= "Property Sale Details"
		}
		section  Select_Agent
		{
			displayname= "Select Agent"
		}
		section  Copy_of_Select_Agent
		{
			displayname= "Copy of Select Agent"
			form  Select_Project_Agent
			{
				layout = left
				hide = true
			}
		}
		customize
		{
			colour = blue
        	layout = slidingpane
		 	icons style = outline
		}
	}
	translation
{
"{\"de\":{\"ReportField.All_House_Villa_by_Builder_Developer.Furnishing\":\"Möblierung\",\"FormButton.Add_Block_Detail.submit\":\" einreichen \",\"ReportField.All_Shops_by_Builder_Developer.Parking_Space\":\"Parkplatz\",\"ReportField.All_Shops_for_Rent_by_Others.Image\":\"Bild\",\"ReportField.All_Property_Sale_Details.Sold_by\":\"Verkauft durch\",\"ReportField.Your_Added_Properties.Rent_Per_Month\":\"Miete pro Monat\",\"FormField.Project_Blocks_Subform.Added_Time\":\" Zeit hinzugefügt \",\"FormField.Search_Property_Form.City\":\" Stadt \",\"CompositeSubFields.Add_User.Address1.country2\":\" Land \",\"FormField.Search_Property_Form.Section\":\"Sektion\",\"ReportField.All_Lands_for_Sale_by_Others.Rate_Per_Square_Feet\":\"Rate (pro Quadratfuß)\",\"FormField.Floor_Flats_Apartments_Subform.Section\":\"Sektion\",\"ReportField.All_Shops_for_Sale_by_Others.Maintainence_Charge\":\"Wartungsgebühr\",\"FormField.Floor_Flats_Apartments_Subform.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"FormField.Floor_Flats_Apartments_Subform.Added_Time\":\" Zeit hinzugefügt \",\"ReportField.All_Shops_for_Sale_by_Others.Date_field\":\"Datum hinzugefügt\",\"FormField.Add_Project.Modified_Time\":\" Geänderte Zeit \",\"ReportField.All_House_Villa_by_Builder_Developer.Block_Name\":\"Blockname\",\"FormField.Add_Project.About\":\" Über \",\"ReportField.All_Shops_for_Sale_by_Others.Furnishing\":\"Möblierung\",\"FormField.Contact_Seller_Button.Record_Status\":\" Aufnahmestatus \",\"ReportField.All_Shops_by_Others.Date_field\":\"Datum hinzugefügt\",\"ReportField.All_Property_Sale_Details.Sold_at\":\"Währung\",\"Report.All_Projects\":\" Alle Projekte \",\"FormButton.Add_Project.submit\":\" einreichen \",\"FormButton.Add_User.reset\":\" Zurücksetzen \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Rate_per_square_feets\":\"Rate (pro Quadratfuß)\",\"ReportField.All_Projects.About\":\" Über \",\"ReportField.All_Shops_by_Builder_Developer.Rate_per_square_feets\":\"Rate (pro Quadratfuß)\",\"FormField.Contact_Seller.Modified_User\":\" Geänderter Benutzer \",\"Form.Add_Project\":\"1. Projekt hinzufügen\",\"ReportField.All_Flats_for_Sale_by_Others.Rate_Per_Square_Feet\":\"Rate (pro Quadratfuß)\",\"FormField.Land_House_Villa_Subform.Modified_Time\":\" Geänderte Zeit \",\"ReportField.Project_Blocks_Subform_Report.Block_Type1\":\" Blocktyp \",\"ReportField.All_Shops_for_Sale_by_Others.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"FormField.Property_Sale_Details.Section\":\"Sektion\",\"ReportField.All_House_Villas_by_Others.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"FormField.Land_House_Villa_Subform.Section\":\"Sektion\",\"FormField.Add_Your_Property.state_province2\":\" Staat / Provinz \",\"FormField.Select_Project_Agent.rec_ID\":\"Rec-ID\",\"Form.Floor_Flats_Apartments_Subform\":\" Floor Flats / Apartments Unterform \",\"ReportField.All_Flats_by_Others.Image\":\"Bild\",\"FormField.Contact_Seller.prefix\":\" Präfix \",\"FormField.Add_User.Added_User\":\" Benutzer hinzugefügt \",\"FormField.Add_Your_Property.Added_Time\":\" Zeit hinzugefügt \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Maintainence_Charge\":\"Wartungsgebühr\",\"FormField.Add_User.country2\":\" Land \",\"FormField.Add_Your_Property.Section\":\" Sektion \",\"Section.Projects\":\" Projekt Details \",\"CompositeSubFields.Add_User.Address1.address_line_12\":\" Anschrift Zeile 1 \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Sold_By\":\"Verkauft durch\",\"CompositeSubFields.Contact_Seller.Name1.last_name\":\" Familienname, Nachname \",\"FormField.Floor_Details_Subform.ID\":\" ICH WÜRDE \",\"FormField.Floor_Flats_Apartments_Subform.Record_Status\":\" Aufnahmestatus \",\"FormField.Project_Blocks_Subform.Block_Type1\":\" Blocktyp \",\"FormField.Add_User.longitude2\":\" Längengrad \",\"ReportField.All_Shops_for_Rent_by_Others.Member\":\"Name\",\"ReportField.All_Lands_for_Sale_by_Others.Image\":\"Bild\",\"FormField.Add_User.Mobile_Number\":\" Handynummer \",\"ReportField.All_Projects.Blocks_Details.Block_Type1\":\" Blockiert Details.Block_Typ1 \",\"ReportField.All_Flats_by_Others.Parking_Space\":\"Parkplatz\",\"ReportField.Project_Blocks.Block_Name\":\"Blocktyp\",\"FormField.Add_User.Email\":\" Email \",\"CompositeSubFields.Add_User.Address1.address_line_22\":\" Adresszeile 2 \",\"FormButton.Add_Your_Property.reset\":\" Zurücksetzen \",\"ReportField.All_Flats_for_Sale_by_Others.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"ReportField.All_Flats_for_Rent_by_Others.Image\":\"Bild\",\"FormField.Add_User.Modified_Time\":\" Geänderte Zeit \",\"FormField.Add_Your_Property.Sold_By\":\" Verkauft durch \",\"FormField.Contact_Seller.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"ReportField.All_Flats_by_Builder_Developer.Rate_per_square_feets\":\"Rate (pro Quadratfuß)\",\"ReportField.All_Properties_by_Others.Number_of_Bathrooms\":\"Anzahl der Badezimmer\",\"ReportField.All_House_Villas_by_Others.Floor_Number\":\"Stockwerk Nummer\",\"ReportField.All_House_Villas_for_Rent_by_Others.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"ReportField.Your_Added_Properties.Land_Breadth\":\"Land Breite\",\"ReportField.All_Shops_by_Others.Floor_Number\":\"Stockwerk Nummer\",\"ReportField.All_Properties_by_Others.Rate_Per_Square_Feet\":\"Rate (pro Quadratfuß)\",\"FormField.Add_User.postal_Code2\":\" Postleitzahl \",\"ReportField.All_Shops_for_Sale_by_Others.Parking_Space\":\"Parkplatz\",\"ReportField.Your_Added_Properties.address_line_12\":\"Ort\",\"ReportField.All_Lands_by_Builder_Developer.Image\":\"Bild\",\"FormField.Floor_Flats_Apartments_Subform.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"FormField.Add_Project.Member\":\" Mitglied \",\"FormField.Add_Block_Detail.Land_House_Villa_Details\":\" Land / Haus / Villa Details \",\"Report.All_Shops_by_Builder_Developer\":\"Alle Geschäfte\",\"FormButton.Project_Blocks_Subform.reset\":\" Zurücksetzen \",\"ReportField.Floor_Details_Subform_Report.Block_Details_Master_Lookup\":\" Blockdetails Master-Suche \",\"FormField.Add_Project.Location1\":\"Ort\",\"ReportField.All_Shops_for_Rent_by_Others.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"ReportField.All_Projects.City\":\"Stadt\",\"FormField.Land_House_Villa_Subform.ID\":\" ICH WÜRDE \",\"FormField.Project_Blocks_Subform.Added_User\":\" Benutzer hinzugefügt \",\"FormField.Cities.Record_Status\":\" Aufnahmestatus \",\"FormField.Land_House_Villa_Subform.Rate_per_square_feets\":\" Rate (pro Quadratfuß) \",\"FormField.Add_Block_Detail.Section1\":\" Sektion \",\"FormField.Add_Block_Detail.Section2\":\"Sektion\",\"PicklistOption.Add_User.country2.1\":\" Wahl 1 \",\"PicklistOption.Add_User.country2.2\":\" Wahl 2 \",\"ReportField.All_Flats_by_Others.Date_field\":\"Datum hinzugefügt\",\"ReportField.All_Shops_for_Rent_by_Others.Rent_Per_Month\":\"Miete pro Monat\",\"FormField.Search_Property_Form.Posted_By\":\" Geschrieben von \",\"ReportField.Land_House_Villa_Subform_Report.Project_Name\":\"Über\",\"FormButton.Cities.update\":\" Aktualisieren \",\"ReportField.All_House_Villa_by_Builder_Developer.Rate_per_square_feets\":\"Rate (pro Quadratfuß)\",\"FormField.Add_Your_Property.address_line_22\":\" Adresszeile 2 \",\"FormField.Add_Flats_Apartments_Shop_Details.Section\":\" Sektion \",\"FormField.Add_User.first_name\":\" Vorname \",\"FormField.Floor_Flats_Apartments_Subform.Image\":\" Bild \",\"FormField.Floor_Flats_Apartments_Subform.Flats_Apartments_Master\":\" Wohnungen / Wohnungen Master Lookup \",\"ReportField.All_House_Villa_by_Builder_Developer.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"ReportField.Project_Flats_Apartments_Shop.Block_Name\":\" Blockname \",\"Form.Project_Blocks_Subform\":\" Unterformular für Projektblöcke \",\"CompositeSubFields.Add_User.Address1.district_city2\":\" Stadtteil \",\"FormField.Add_Your_Property.address_line_12\":\" Anschrift Zeile 1 \",\"ReportField.All_Properties_by_Others.Image\":\"Bild\",\"ReportField.All_Lands_by_Builder_Developer.Project_Name\":\"Über\",\"FormField.Add_Project.Flats_Apartments_Master_ID\":\" Wohnungen / Wohnungen Master - ID \",\"FormField.Select_Project_Agent.rec_IDs\":\"Rec-IDs\",\"Report.Land_House_Villa_Subform_Report\":\" Land / Haus / Villa Unterformular Bericht \",\"ReportField.Your_Added_Properties.Rate_Per_Square_Feet\":\"Rate (pro Quadratfuß)\",\"ReportField.All_Flats_for_Rent_by_Others.Date_field\":\"Datum hinzugefügt\",\"ReportField.All_Flats_by_Others.Property_For\":\"Eigentum für\",\"Form.Search_Property_Mobile\":\"Immobilien suchen Mobil\",\"ReportField.All_Flats_for_Sale_by_Others.City1\":\"Stadt\",\"ReportField.All_House_Villas_for_Rent_by_Others.Image\":\"Bild\",\"Report.All_Lands_by_Builder_Developer\":\"Alle Länder\",\"ReportField.All_Shops_by_Others.Rate_Per_Square_Feet\":\"Rate (pro Quadratfuß)\",\"FormField.Add_Block_Detail.Floor_Details\":\" Stock Details \",\"FormButton.Floor_Flats_Apartments_Subform.update\":\" Aktualisieren \",\"ReportField.All_Property_Sale_Details.Agent_Commision\":\"Agent-Kommission\",\"ReportField.Contact_Seller_Report.Added_Time\":\"Erkundigt bei\",\"FormButton.Add_User.submit\":\" einreichen \",\"ReportField.All_Flats_for_Sale_by_Others.Floor_Number\":\"Stockwerk Nummer\",\"FormField.Project_Blocks_Subform.ID\":\" ICH WÜRDE \",\"FormField.Add_Project.Added_Time\":\" Zeit hinzugefügt \",\"FormField.Add_Your_Property.Member\":\" Mitglied \",\"ReportField.All_Shops_for_Rent_by_Others.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"ReportField.All_House_Villas_by_Others.Nearest_Landmark\":\"nächster Orientierungspunkt\",\"ReportField.All_House_Villas_by_Others.Comments\":\"Bemerkungen\",\"ReportField.All_Projects.Blocks_Details.Block_Name\":\"Blockiert Details\",\"FormField.Add_Your_Property.Status\":\"Status\",\"ReportField.All_House_Villa_by_Builder_Developer.Date_field\":\"Datum\",\"Report.All_Flats_by_Others\":\"Alle Wohnungen von Anderen\",\"ReportField.All_Properties_by_Others.Nearest_Landmark\":\"nächster Orientierungspunkt\",\"ReportField.Your_Added_Properties.Maintainence_Charge\":\"Wartungsgebühr\",\"ReportField.All_Shops_for_Rent_by_Others.Furnishing\":\"Möblierung\",\"FormField.Add_Your_Property.Rent_Per_Month\":\" Miete pro Monat \",\"ReportField.All_Flats_by_Others.Furnishing\":\"Möblierung\",\"FormField.Add_User.Configuration_Index\":\" Konfigurationsindex \",\"PicklistOption.Property_Sale_Details.Property_from.1\":\"Andere\",\"ReportField.All_Shops_by_Others.City1\":\"Stadt\",\"ReportField.All_House_Villas_by_Others.Member\":\"Mitglied\",\"PicklistOption.Property_Sale_Details.Property_from.3\":\"Wahl 3\",\"PicklistOption.Property_Sale_Details.Property_from.2\":\"Bu\",\"FormButton.Add_Flats_Apartments_Shop_Details.cancel\":\" Stornieren \",\"ReportField.All_Flats_for_Sale_by_Others.Comments\":\"Bemerkungen\",\"FormButton.Floor_Flats_Apartments_Subform.submit\":\" einreichen \",\"FormField.Add_Your_Property.longitude2\":\" Längengrad \",\"ReportField.Project_Flats_Apartments_Shop.Assign_Agent\":\"Aktueller Agent\",\"FormField.Search_Property_Form.Added_User\":\" Benutzer hinzugefügt \",\"ReportField.All_Lands_by_Builder_Developer.Rate_per_square_feets\":\"Rate (pro Quadratfuß)\",\"ReportField.All_Properties_by_Others.Member\":\"Mitglied\",\"ReportField.All_Properties_by_Others.Property_Condition\":\"Zustand der Immobilie\",\"CompositeSubFields.Contact_Seller.Name1.first_name\":\" Vorname \",\"ReportField.All_Lands_for_Sale_by_Others.Number_of_Bathrooms\":\"Anzahl der Badezimmer\",\"FormField.Add_User.Modified_User\":\" Geänderter Benutzer \",\"ReportField.All_Flats_for_Rent_by_Others.Member\":\"Hinzugefügt von\",\"ReportField.All_Flats_for_Rent_by_Others.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"ReportField.All_House_Villa_by_Builder_Developer.Project_Name\":\"Über\",\"ReportField.All_Shops_by_Others.Comments\":\"Bemerkungen\",\"FormField.Add_Land_House_Villa_Details.Section3\":\"Sektion\",\"CompositeSubFields.Add_User.Address1.postal_Code2\":\" Postleitzahl \",\"ReportField.All_Flats_by_Others.Maintainence_Charge\":\"Wartungsgebühr\",\"FormField.Add_Block_Detail.Project_Name\":\" Projektname \",\"ReportField.All_House_Villa_by_Builder_Developer.Image\":\"Bild\",\"FormField.Add_Your_Property.Rate_Per_Square_Feet\":\" Rate (pro Quadratfuß) \",\"FormField.Land_House_Villa_Subform.Total_Area\":\" Gesamtfläche \",\"Form.Contact_Seller\":\" Verkäufer kontaktieren \",\"FormField.Contact_Seller_Button.Viewed_Property_Posted_By1\":\" Angesehene Eigenschaft Posted By \",\"FormButton.Land_House_Villa_Subform.cancel\":\" Stornieren \",\"ReportField.All_Projects.Member\":\" Mitglied \",\"ReportField.All_House_Villas_for_Sale_by_Others.Rate_Per_Square_Feet\":\"Rate (pro Quadratfuß)\",\"FormField.Search_Property_Form.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"PicklistOption.Floor_Flats_Apartments_Subform.Status.1\":\"Aktiv\",\"FormField.Floor_Details_Subform.Block_Name\":\" Blockname \",\"PicklistOption.Floor_Flats_Apartments_Subform.Status.2\":\"Inaktiv\",\"ReportField.All_Shops_by_Builder_Developer.Date_field\":\"Datum hinzugefügt\",\"FormField.Add_Flats_Apartments_Shop_Details.Record_Status\":\" Aufnahmestatus \",\"FormField.Add_Block_Detail.Added_Time\":\" Zeit hinzugefügt \",\"FormField.Contact_Seller_Button.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"ReportField.Land_House_Villa_Subform_Report.Total_Area\":\"Gesamtfläche\",\"FormField.Add_Block_Detail.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"ReportField.All_Shops_for_Rent_by_Others.Date_field\":\"Datum hinzugefügt\",\"FormField.Add_Project.Record_Status\":\" Aufnahmestatus \",\"ReportField.All_Shops_for_Sale_by_Others.Comments\":\"Bemerkungen\",\"FormField.Search_Property_Form.Modified_Time\":\" Geänderte Zeit \",\"Section.Cantact_Seller\":\" Verkäufer verkünden \",\"FormField.Floor_Flats_Apartments_Subform.Status\":\"Status\",\"Form.Search_Property_Form\":\" Eigenschaftsformular suchen \",\"FormField.Add_User.suffix\":\" Suffix \",\"Form.Add_Your_Property\":\" Fügen Sie Ihr Eigentum hinzu \",\"FormField.Floor_Flats_Apartments_Subform.Maintainence_Charge\":\" Wartungsgebühr \",\"PicklistOption.Search_Property_Form.PropertyType1.3\":\" Land \",\"PicklistOption.Search_Property_Form.PropertyType1.4\":\" Wohnung \",\"FormField.Floor_Flats_Apartments_Subform.Number_of_Bed_Rooms\":\" Anzahl der Schlafzimmer \",\"PicklistOption.Search_Property_Form.PropertyType1.1\":\" Geschäft \",\"PicklistOption.Search_Property_Form.PropertyType1.2\":\" Haus / Villa \",\"ReportField.All_Flats_for_Sale_by_Others.Parking_Space\":\"Parkplatz\",\"FormField.Add_Your_Property.Land_Length\":\" Land Länge \",\"ReportField.Project_Lands_Houses_Villas.Assign_Agent\":\"Aktueller Agent\",\"Form.Add_Block_Detail\":\"2. Fügen Sie Projektblockdetails hinzu\",\"ReportField.All_House_Villas_by_Others.Number_of_Bathrooms\":\"Anzahl der Badezimmer\",\"CompositeSubFields.Add_Your_Property.Location1.address_line_22\":\" Adresszeile 2 \",\"FormButton.Add_Project.update\":\" Aktualisieren \",\"FormButton.Contact_Seller.update\":\" Aktualisieren \",\"FormField.Add_Your_Property.ID\":\" ICH WÜRDE \",\"ReportField.Your_Added_Properties.Member\":\"Mitglied\",\"ReportField.All_Lands_for_Sale_by_Others.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"ReportField.All_Flats_by_Others.Number_of_Bathrooms\":\"Anzahl der Badezimmer\",\"FormField.Cities.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"FormField.Contact_Seller.Viewed_Property_Rec_Id\":\" Angesehene Eigenschaft Rec-Id \",\"FormField.Add_Your_Property.Image\":\" Bild \",\"FormField.Contact_Seller.Email\":\" Email \",\"ReportField.All_Projects.Project_Name\":\"Projektname\",\"FormField.Land_House_Villa_Subform.Land_Length\":\" Land Länge \",\"ReportField.Project_Flats_Apartments_Shop.Project_Name\":\" Projektname \",\"FormField.Project_Blocks_Subform.Project\":\" Projekt \",\"ReportField.Land_House_Villa_Subform_Report.Land_House_Villa_Number\":\" Landnummer \",\"ReportField.All_House_Villas_for_Rent_by_Others.Rent_Per_Month\":\"Miete pro Monat\",\"CompositeSubFields.Add_Your_Property.Location1.address_line_12\":\" Anschrift Zeile 1 \",\"PicklistOption.Search_Property_Form.For_field.2\":\" Miete \",\"PicklistOption.Search_Property_Form.For_field.1\":\" Kaufen \",\"Page.New_Search_Result\":\" Suchergebnis \",\"FormButton.Cities.submit\":\" einreichen \",\"FormField.Land_House_Villa_Subform.Furnishing\":\" Möblierung \",\"FormField.Add_Project.Blocks_Details\":\" Blockiert Details \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Flats_Apartments_Master\":\" Wohnungen / Wohnungen Master Lookup \",\"ReportField.All_House_Villa_by_Builder_Developer.Number_of_Floors\":\"Anzahl der Etagen\",\"FormButton.Add_Land_House_Villa_Details.submit\":\"einreichen\",\"ReportField.All_Shops_by_Builder_Developer.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"CompositeSubFields.Add_User.Name1.prefix\":\" Präfix \",\"FormField.Project_Blocks_Subform.Modified_Time\":\" Geänderte Zeit \",\"CompositeSubFields.Contact_Seller.Name1.prefix\":\" Präfix \",\"ReportField.Your_Added_Properties.Number_of_Bathrooms\":\"Anzahl der Badezimmer\",\"FormField.Land_House_Villa_Subform.Added_User\":\" Benutzer hinzugefügt \",\"Page.Search\":\" Suche \",\"FormField.Contact_Seller.Property_Type1\":\" Art der Immobilie \",\"PicklistOption.Floor_Flats_Apartments_Subform.Furnishing.2\":\" Teilmöbliert \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Floor_Number\":\"Stockwerk Nummer\",\"PicklistOption.Floor_Flats_Apartments_Subform.Furnishing.1\":\" Unmöbliert \",\"PicklistOption.Floor_Flats_Apartments_Subform.Furnishing.3\":\" Voll möbliert \",\"FormField.Contact_Seller_Button.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"FormField.Floor_Flats_Apartments_Subform.Flats_Apartments_Shop_Number\":\" Wohnungen / Geschäft / Geschäftsnummer \",\"Section.Other_Property\":\" Fügen Sie Ihr Eigentum hinzu \",\"ReportField.All_Properties_by_Others.Floor_Number\":\"Stockwerk Nummer\",\"Report.Floor_Flats_Apartments_Subform_Report\":\" Floor Flats / Apartments Unterformular Bericht \",\"FormField.Land_House_Villa_Subform.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"Form.Select_Project_Agent\":\"Wählen Sie Projekt-Agent\",\"ReportField.All_Flats_for_Sale_by_Others.Nearest_Landmark\":\"nächster Orientierungspunkt\",\"ReportField.Land_House_Villa_Subform_Report.Block_Name\":\"Blockname\",\"Report.All_Flats_for_Rent_by_Others\":\"Alle Wohnungen zu vermieten von anderen\",\"PicklistOption.Search_Property_Form.Posted_By.3\":\" Erbauer / Entwickler \",\"PicklistOption.Search_Property_Form.Posted_By.2\":\" Agent / Makler \",\"PicklistOption.Search_Property_Form.Posted_By.1\":\" Individuum / Besitzer \",\"FormButton.Project_Blocks_Subform.cancel\":\" Stornieren \",\"ReportField.All_Flats_for_Rent_by_Others.Maintainence_Charge\":\"Wartungsgebühr\",\"FormField.Add_User.state_province2\":\" Staat / Provinz \",\"FormField.Contact_Seller_Button.Viewed_Property_Rec_Id\":\" Angesehene Eigenschaft Rec-Id \",\"ReportField.All_Properties_by_Others.Property_Type1\":\"Art der Immobilie\",\"ReportField.Land_House_Villa_Subform_Report.Number_of_Bathrooms\":\"Anzahl der Badezimmer\",\"ReportField.My_Assigned_Lands_Houses_Villas.Project_Name\":\"Projektname\",\"ReportField.All_Shops_for_Rent_by_Others.Parking_Space\":\"Parkplatz\",\"FormButton.Add_Flats_Apartments_Shop_Details.reset\":\" Zurücksetzen \",\"Report.All_Shops_by_Others\":\"Alle Geschäfte von Anderen\",\"FormField.Add_Block_Detail.Added_User\":\" Benutzer hinzugefügt \",\"PicklistOption.Land_House_Villa_Subform.Status.2\":\"Inaktiv\",\"PicklistOption.Land_House_Villa_Subform.Status.1\":\"Aktiv\",\"FormField.Add_Your_Property.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"FormField.Floor_Details_Subform.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"ReportField.All_Flats_for_Rent_by_Others.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"PicklistOption.Add_Your_Property.country2.2\":\" Wahl 2 \",\"PicklistOption.Add_Your_Property.country2.1\":\" Wahl 1 \",\"Report.All_Shops_for_Sale_by_Others\":\"Alle Shops zum Verkauf von Anderen\",\"ReportField.All_Flats_by_Others.Comments\":\"Bemerkungen\",\"FormButton.Project_Blocks_Subform.update\":\" Aktualisieren \",\"FormField.Add_Your_Property.Property_Type1\":\" Art der Immobilie \",\"ReportField.My_Assigned_Flats_Apartments_Shops.Image\":\"Bild\",\"Report.All_Users\":\" Alle Nutzer \",\"ReportField.All_Users.Email\":\" Email \",\"CompositeSubFields.Add_User.Name1.last_name\":\" Familienname, Nachname \",\"FormField.Search_Property_Form.For_field\":\" Eigentum für? \",\"ReportField.All_Properties_by_Others.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"FormField.Add_Your_Property.district_city2\":\" Stadtteil \",\"FormField.Add_Your_Property.postal_Code2\":\" Postleitzahl \",\"ReportField.Floor_Details_Subform_Report.Floor_Number\":\" Stockwerk Nummer \",\"FormField.Search_Property_Form.Modified_User\":\" Geänderter Benutzer \",\"FormField.Contact_Seller.suffix\":\" Suffix \",\"FormField.Property_Sale_Details.Commission_Percent\":\"Prozent\",\"ReportField.Your_Added_Properties.Sold_By\":\" Verkauft durch \",\"FormField.Floor_Flats_Apartments_Subform.Block_Name\":\" Blockname \",\"FormField.Add_Your_Property.Floor_Number\":\" Stockwerk Nummer \",\"ReportField.All_Flats_for_Rent_by_Others.Furnishing\":\"Möblierung\",\"FormField.Add_Project.Modified_User\":\" Geänderter Benutzer \",\"FormField.Add_User.address_line_22\":\" Adresszeile 2 \",\"Report.Your_Added_Properties\":\" Ihre hinzugefügten Eigenschaften \",\"FormField.Search_Property_Form.PropertyType1\":\" Art der Immobilie \",\"ReportField.All_Flats_for_Rent_by_Others.Number_of_Bathrooms\":\"Anzahl der Badezimmer\",\"FormField.Add_User.Section\":\" Sektion \",\"FormField.Contact_Seller.last_name\":\" Familienname, Nachname \",\"ReportField.All_House_Villas_by_Others.Rate_Per_Square_Feet\":\"Rate (pro Quadratfuß)\",\"ReportField.Floor_Flats_Apartments_Subform_Report.Block_Name\":\"Blockname\",\"FormField.Floor_Details_Subform.Floor_Number\":\" Stockwerk Nummer \",\"ReportField.Your_Added_Properties.Image\":\"Bild\",\"FormButton.Cities.reset\":\" Zurücksetzen \",\"FormField.Contact_Seller.Record_Status\":\" Aufnahmestatus \",\"FormField.Land_House_Villa_Subform.Built_Area\":\" Gebaute Fläche \",\"FormField.Add_Your_Property.Total_Area_in_square_feets\":\" Gesamtfläche (in Quadratfuß) \",\"FormField.Land_House_Villa_Subform.Number_of_Floors\":\" Anzahl der Etagen \",\"FormButton.Select_Project_Agent.Assign\":\"Zuordnen\",\"FormButton.Add_User.cancel\":\" Stornieren \",\"FormField.Contact_Seller.Modified_Time\":\" Geänderte Zeit \",\"FormField.Property_Sale_Details.Property_from\":\"Immobilien von\",\"ReportField.All_Flats_for_Rent_by_Others.address_line_12\":\"Ort\",\"FormField.Add_Block_Detail.Section\":\" Sektion \",\"FormField.Add_Your_Property.country2\":\" Land \",\"FormField.Contact_Seller_Button.Section\":\" Sektion \",\"FormField.Add_Flats_Apartments_Shop_Details.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"ReportField.Contact_Seller_Report.first_name\":\"Name\",\"FormField.Contact_Seller.Viewed_Property_Posted_By1\":\" Angesehene Eigenschaft Posted By \",\"FormField.Add_Your_Property.Added_User\":\" Benutzer hinzugefügt \",\"PicklistOption.Add_Your_Property.Property_For.2\":\" Verkauf \",\"ReportField.All_Flats_for_Rent_by_Others.City1\":\"Stadt\",\"PicklistOption.Add_Your_Property.Property_For.1\":\" Miete \",\"ReportField.All_Properties_by_Others.Rent_Per_Month\":\"Miete pro Monat\",\"FormField.Add_User.Added_Time\":\" Zeit hinzugefügt \",\"FormField.Land_House_Villa_Subform.Added_Time\":\" Zeit hinzugefügt \",\"CompositeSubFields.Add_Your_Property.Location1.state_province2\":\" Staat / Provinz \",\"ReportField.All_Flats_for_Rent_by_Others.Rate_Per_Square_Feet\":\"Rate (pro Quadratfuß)\",\"Form.Add_Flats_Apartments_Shop_Details\":\" Fügen Sie Wohnungen / Wohnungen / Geschäft Details hinzu \",\"ReportField.Your_Added_Properties.Property_For\":\"Eigentum für\",\"ReportField.Land_House_Villa_Subform_Report.Sold_By\":\"Verkauft durch\",\"ReportField.All_Flats_by_Builder_Developer.Floor_Number\":\"Stockwerk Nummer\",\"ReportField.All_Shops_by_Builder_Developer.Project_Name\":\"Projektbereich (Sq.Ft.)\",\"FormField.Floor_Flats_Apartments_Subform.Parking_Space\":\" Parkplatz \",\"ReportField.Your_Added_Properties.Comments\":\"Bemerkungen\",\"Report.Project_Blocks_Subform_Report\":\" Projektblock-Unterformularbericht \",\"ReportField.Project_Blocks_Subform_Report.Project\":\" Projektname \",\"ReportField.All_House_Villas_by_Others.Rent_Per_Month\":\"Miete pro Monat\",\"ReportField.All_Shops_for_Rent_by_Others.Comments\":\"Bemerkungen\",\"ReportField.All_Shops_by_Others.Member\":\"Hinzugefügt von\",\"ReportField.All_House_Villas_by_Others.City1\":\"Stadt\",\"FormField.Land_House_Villa_Subform.Date_field\":\" Datum \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Flats_Apartments_Shop_Number\":\" Wohnungen / Wohnungen Nummer \",\"ReportField.Land_House_Villa_Subform_Report.Assign_Agent\":\"Agent\",\"ReportField.All_Flats_by_Builder_Developer.Maintainence_Charge\":\"Wartungsgebühr\",\"FormField.Add_Block_Detail.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"FormField.Add_User.address_line_12\":\" Anschrift Zeile 1 \",\"ReportField.Floor_Details_Subform_Report.Number_of_Flats_Apartments_Shops\":\" Anzahl der Wohnungen \",\"FormField.Add_Flats_Apartments_Shop_Details.Modified_Time\":\" Geänderte Zeit \",\"FormField.Project_Blocks_Subform.Block_Name\":\" Blockname \",\"FormButton.Land_House_Villa_Subform.submit\":\" einreichen \",\"ReportField.Your_Added_Properties.Property_Condition\":\" Zustand der Immobilie \",\"ReportField.All_Shops_for_Rent_by_Others.Rate_Per_Square_Feet\":\"Rate (pro Quadratfuß)\",\"ReportField.All_Flats_by_Others.Rent_Per_Month\":\"Miete pro Monat\",\"ReportField.Floor_Flats_Apartments_Subform_Report.Number_of_BathRooms\":\"Anzahl der BathRooms\",\"ReportField.All_Flats_by_Builder_Developer.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"ReportField.Land_House_Villa_Subform_Report.Land_Length\":\"Land Länge\",\"FormButton.Search_Property_Mobile.Reset\":\"Zurücksetzen\",\"FormField.Search_Property_Form.Record_Status\":\" Aufnahmestatus \",\"ReportField.All_Users.Member_Type\":\" Mitgliedstyp \",\"ReportField.All_Shops_by_Builder_Developer.Floor_Number\":\"Stockwerk Nummer\",\"ReportField.All_Flats_for_Rent_by_Others.Parking_Space\":\"Parkplatz\",\"FormField.Add_Block_Detail.Modified_User\":\" Geänderter Benutzer \",\"ReportField.All_Flats_by_Others.Rate_Per_Square_Feet\":\"Rate (pro Quadratfuß)\",\"FormField.Project_Blocks_Subform.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Date_field\":\"Datum\",\"FormButton.Project_Blocks_Subform.submit\":\" einreichen \",\"Languages List.zh-TW\":\" Chinesische Tradition \",\"Languages List.ja\":\" japanisch \",\"ReportField.All_Projects.Amenities\":\"Ausstattung\",\"FormButton.Add_User.update\":\" Aktualisieren \",\"ReportField.Your_Added_Properties.Status\":\" Status \",\"FormField.Add_Flats_Apartments_Shop_Details.Floor_Number\":\" Stockwerk Nummer \",\"Languages List.ku\":\" kurdisch \",\"ReportField.All_Flats_by_Builder_Developer.Date_field\":\"Datum hinzugefügt\",\"Languages List.km\":\" Khmer \",\"Languages List.ko\":\" Koreanisch \",\"FormField.Contact_Seller.Section\":\" Sektion \",\"ReportField.All_Lands_for_Sale_by_Others.Land_Length\":\"Land Länge\",\"Languages List.kn\":\" Kannada \",\"Languages List.ka\":\" georgisch \",\"ReportField.All_Properties_by_Others.Land_Length\":\"Land Länge\",\"ReportField.All_Shops_for_Sale_by_Others.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"FormButton.Contact_Seller.Call_Me_Back\":\" Ruf mich zurück \",\"Languages List.hu\":\" ungarisch \",\"ReportField.My_Assigned_Flats_Apartments_Shops.Rate_per_square_feets\":\"Rate (pro Quadratfuß)\",\"Languages List.hy\":\" Armenisch \",\"FormField.Add_User.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"FormField.Add_Project.Project_Includes1\":\" Projekt umfasst \",\"FormField.Contact_Seller_Button.Added_User\":\" Benutzer hinzugefügt \",\"Languages List.hr\":\" kroatisch \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"Form.Floor_Details_Subform\":\" Floor Details Unterformular \",\"PicklistOption.Add_Project.Project_Includes1.4\":\" Wohnung \",\"ReportField.Contact_Seller_Report.Viewed_Property_Posted_By1\":\" Angesehene Eigenschaft Posted By \",\"ReportField.Floor_Details_Subform_Report.Project_Name\":\" Projektname \",\"PicklistOption.Add_Project.Project_Includes1.3\":\" Land \",\"ReportField.All_Flats_by_Builder_Developer.Furnishing\":\"Möblierung\",\"Languages List.hi\":\" Hindi \",\"FormField.Add_Your_Property.Location1\":\"Ort\",\"FormField.Add_Your_Property.Property_Condition\":\" Zustand der Immobilie \",\"ReportField.All_House_Villas_by_Others.Maintainence_Charge\":\"Wartungsgebühr\",\"PicklistOption.Add_Project.Project_Includes1.2\":\" Haus / Villa \",\"PicklistOption.Add_Project.Project_Includes1.1\":\" Geschäft \",\"FormButton.Add_Flats_Apartments_Shop_Details.submit\":\" einreichen \",\"Languages List.iw\":\" hebräisch \",\"PicklistOption.Contact_Seller.Property_Type1.1\":\" Geschäft \",\"PicklistOption.Contact_Seller.Property_Type1.2\":\" Haus / Villa \",\"FormButton.Floor_Flats_Apartments_Subform.reset\":\" Zurücksetzen \",\"FormField.Add_Your_Property.Furnishing\":\" Möblierung \",\"FormButton.Cities.cancel\":\" Stornieren \",\"PicklistOption.Contact_Seller.Property_Type1.3\":\" Land \",\"PicklistOption.Contact_Seller.Property_Type1.4\":\" Wohnung \",\"FormField.Add_Project.Section\":\" Sektion \",\"Languages List.is\":\" isländisch \",\"ReportField.All_Shops_by_Others.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"Languages List.it\":\" Italienisch \",\"CompositeSubFields.Add_Your_Property.Location1.country2\":\" Land \",\"FormButton.Add_Your_Property.submit\":\" einreichen \",\"FormField.Add_Flats_Apartments_Shop_Details.Project_Name\":\" Projektname \",\"FormField.Property_Sale_Details.Agent_Commision\":\"Agent-Kommission\",\"FormField.Add_Project.Project_Name\":\" Projektname \",\"FormField.Add_Your_Property.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"ReportField.All_Properties_by_Others.Land_Breadth\":\"Land Breite\",\"PicklistOption.Add_Your_Property.Status.1\":\"Aktiv\",\"PicklistOption.Add_Your_Property.Status.2\":\"Inakt\",\"FormField.Add_User.Name1\":\" Name \",\"FormField.Add_User.Member_Type\":\" Mitgliedstyp \",\"ReportField.Project_Blocks.Floor_Details.Floor_Number\":\"Stock Details\",\"Languages List.nl\":\" Niederländisch \",\"FormField.Add_Flats_Apartments_Shop_Details.Added_Time\":\" Zeit hinzugefügt \",\"ReportField.Land_House_Villa_Subform_Report.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"Languages List.no\":\" norwegisch \",\"FormField.Cities.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"FormField.Project_Blocks_Subform.Record_Status\":\" Aufnahmestatus \",\"ReportField.All_Projects.Project_Area\":\"Projektbereich (Sq.Ft.)\",\"ReportField.All_Lands_for_Sale_by_Others.Property_For\":\"Eigentum für\",\"Report.Project_Flats_Apartments_Shop\":\" Alle Wohnungen / Wohnungen / Geschäft Details \",\"PicklistOption.Project_Blocks_Subform.Block_Type1.1\":\" Geschäft \",\"ReportField.All_Flats_for_Sale_by_Others.Maintainence_Charge\":\"Wartungsgebühr\",\"PicklistOption.Project_Blocks_Subform.Block_Type1.2\":\" Haus / Villa \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"FormField.Add_Project.ID\":\" ICH WÜRDE \",\"FormField.Floor_Flats_Apartments_Subform.Furnishing\":\" Möblierung \",\"PicklistOption.Project_Blocks_Subform.Block_Type1.3\":\" Land \",\"ReportField.All_Properties_by_Others.Property_For\":\"Eigentum für\",\"FormField.Add_Your_Property.Modified_User\":\" Geänderter Benutzer \",\"PicklistOption.Project_Blocks_Subform.Block_Type1.4\":\" Wohnung \",\"FormField.Floor_Flats_Apartments_Subform.ID\":\" ICH WÜRDE \",\"FormField.Add_User.latitude2\":\" Breite \",\"FormField.Land_House_Villa_Subform.Status\":\"Status\",\"FormField.Contact_Seller.first_name\":\" Vorname \",\"Languages List.lt\":\" litauisch \",\"FormField.Add_Project.Amenities\":\" Ausstattung \",\"Languages List.lv\":\" lettisch \",\"ReportField.Land_House_Villa_Subform_Report.Status\":\" Status \",\"ReportField.Your_Added_Properties.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"Languages List.lo\":\" Laothian \",\"Languages List.la\":\" Latein \",\"ReportField.All_Shops_for_Sale_by_Others.Image\":\"Bild\",\"FormField.Add_Your_Property.Number_of_Bathrooms\":\" Anzahl der Badezimmer \",\"Languages List.ms\":\" malaiisch \",\"ReportField.My_Assigned_Lands_Houses_Villas.Image\":\"Bild\",\"Languages List.mr\":\" Marathi \",\"FormField.Add_Your_Property.Parking_Space\":\" Parkplatz \",\"Languages List.mt\":\" maltesisch \",\"Languages List.mk\":\" mazedonisch \",\"ReportField.All_Flats_by_Builder_Developer.Block_Name\":\"Blockname\",\"PicklistOption.Add_Your_Property.Furnishing.3\":\" Voll möbliert \",\"CompositeSubFields.Add_Your_Property.Location1.postal_Code2\":\" Postleitzahl \",\"PicklistOption.Add_Your_Property.Furnishing.2\":\" Teilmöbliert \",\"FormField.Add_Flats_Apartments_Shop_Details.Modified_User\":\" Geänderter Benutzer \",\"PicklistOption.Add_Your_Property.Furnishing.1\":\" Unmöbliert \",\"FormField.Add_Your_Property.Date_field\":\" Datum \",\"ReportField.All_House_Villas_by_Others.Parking_Space\":\"Parkplatz\",\"Section.Search_Property\":\" Immobilien suchen \",\"CompositeSubFields.Contact_Seller.Name1.suffix\":\" Suffix \",\"FormField.Property_Sale_Details.Sold_at\":\"Verkauft bei\",\"ReportField.All_Properties_by_Others.Comments\":\"Bemerkungen\",\"Languages List.bg\":\" bulgarisch \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Project_Name\":\"Über\",\"ReportField.Cities_Report.ID\":\" ICH WÜRDE \",\"Languages List.bn\":\" Bengali \",\"CompositeSubFields.Add_User.Name1.suffix\":\" Suffix \",\"FormButton.Add_Project.cancel\":\" Stornieren \",\"ReportField.All_House_Villas_for_Rent_by_Others.Member\":\"Mitglied\",\"Languages List.be\":\" Belarussisch \",\"FormField.Floor_Flats_Apartments_Subform.Floor_Number\":\" Stockwerk Nummer \",\"FormField.Search_Property_Form.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"FormField.Add_Block_Detail.Block_Name\":\" Blockname \",\"Languages List.az\":\" Aserbaidschanisch \",\"PicklistOption.Add_User.prefix.3\":\" Frau. \",\"PicklistOption.Add_User.prefix.1\":\" Herr. \",\"Languages List.cs\":\" Tschechisch \",\"PicklistOption.Add_User.prefix.2\":\" Frau. \",\"ReportField.Land_House_Villa_Subform_Report.Number_of_Floors\":\" Anzahl der Etagen \",\"ReportField.All_Properties_by_Others.Date_field\":\"Datum\",\"Languages List.ca\":\" katalanisch \",\"Section.Users\":\" Benutzer \",\"FormField.Land_House_Villa_Subform.Number_of_Bathrooms\":\" Anzahl der Badezimmer \",\"ReportField.All_Lands_for_Sale_by_Others.Member\":\"Mitglied\",\"FormField.Floor_Details_Subform.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"Page.Mobile_Search\":\" Mobiles Dashboard \",\"ReportField.Your_Added_Properties.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"FormField.Contact_Seller_Button.Added_Time\":\" Zeit hinzugefügt \",\"CompositeSubFields.Add_User.Name1.first_name\":\" Vorname \",\"FormField.Add_Your_Property.Property_For\":\" Eigentum für \",\"FormField.Add_Your_Property.Land_Breadth\":\" Land Breite \",\"FormButton.Contact_Seller_Button.Contact_Seller\":\" Verkäufer kontaktieren \",\"FormField.Floor_Flats_Apartments_Subform.Rate_per_square_feets\":\" Rate (pro Quadratfuß) \",\"PicklistOption.Contact_Seller.prefix.2\":\" Frau. \",\"PicklistOption.Contact_Seller.prefix.3\":\" Frau. \",\"ReportField.All_Shops_for_Rent_by_Others.Maintainence_Charge\":\"Wartungsgebühr\",\"PicklistOption.Contact_Seller.prefix.1\":\" Herr. \",\"ReportField.All_Properties_by_Others.Status\":\" Status \",\"ReportField.All_Shops_by_Others.Property_For\":\"Eigentum für\",\"FormField.Contact_Seller_Button.Property_Type1\":\" Art der Immobilie \",\"Languages List.ar\":\" Arabisch \",\"Languages List.af\":\" Afrikaans \",\"FormField.Add_Project.City\":\" Stadt \",\"ReportField.All_Projects.Assign_Agent\":\"Aktueller Agent\",\"ReportField.Contact_Seller_Report.Mobile\":\" Handy, Mobiltelefon \",\"ReportField.All_Lands_for_Sale_by_Others.Land_Breadth\":\"Land Breite\",\"PicklistOption.Add_Your_Property.Property_Type1.3\":\" Geschäft \",\"FormButton.Contact_Seller.cancel\":\" Stornieren \",\"PicklistOption.Add_Your_Property.Property_Type1.2\":\" Haus / Villa \",\"PicklistOption.Add_Your_Property.Property_Type1.1\":\" Wohnung \",\"FormButton.Add_Project.reset\":\" Zurücksetzen \",\"FormField.Cities.Modified_Time\":\" Geänderte Zeit \",\"PicklistOption.Add_Your_Property.Property_Type1.4\":\" Land \",\"FormField.Land_House_Villa_Subform.Land_Breadth\":\" Land Breite \",\"ReportField.All_Users.Image\":\" Bild \",\"FormField.Project_Blocks_Subform.Modified_User\":\" Geänderter Benutzer \",\"PicklistOption.Add_User.Member_Type.2\":\" Agent / Makler \",\"PicklistOption.Add_User.Member_Type.3\":\" Erbauer / Entwickler \",\"Report.All_Shops_for_Rent_by_Others\":\"Alle Geschäfte zur Miete von anderen\",\"PicklistOption.Add_User.Member_Type.1\":\" Individuum / Besitzer \",\"ReportField.All_Lands_by_Builder_Developer.Total_Area\":\"Gesamtfläche\",\"FormField.Add_Flats_Apartments_Shop_Details.Added_User\":\" Benutzer hinzugefügt \",\"Languages List.fr\":\" Französisch \",\"PicklistOption.Select_Project_Agent.Assign_agent_in.1\":\"Projekt\",\"PicklistOption.Select_Project_Agent.Assign_agent_in.2\":\"Gla\",\"PicklistOption.Select_Project_Agent.Assign_agent_in.3\":\"Wahl 3\",\"FormField.Add_Your_Property.latitude2\":\" Breite \",\"Languages List.fi\":\" Finnese \",\"FormField.Floor_Details_Subform.Block_Details_Master_Lookup\":\" Blockdetails Master-Suche \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Furnishing\":\"Möblierung\",\"Report.All_Lands_for_Sale_by_Others\":\"Alle Länder zum Verkauf durch andere\",\"FormField.Add_Project.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"ReportField.All_Properties_by_Others.Furnishing\":\"Möblierung\",\"Languages List.fa\":\" persisch \",\"Languages List.gu\":\" Gujarati \",\"FormField.Add_Flats_Apartments_Shop_Details.ID\":\" ICH WÜRDE \",\"FormField.Floor_Flats_Apartments_Subform.Project_Name\":\" Projektname \",\"ReportField.Contact_Seller_Report.Viewed_Property_Rec_Id\":\"Immobilien-ID\",\"Languages List.gl\":\" galizisch \",\"FormButton.Floor_Details_Subform.update\":\" Aktualisieren \",\"ReportField.All_House_Villas_for_Sale_by_Others.Property_For\":\"Eigentum für\",\"Languages List.ga\":\" irisch \",\"ReportField.All_Lands_for_Sale_by_Others.City1\":\"Stadt\",\"FormField.Cities.Added_User\":\" Benutzer hinzugefügt \",\"ReportField.All_Flats_by_Others.City1\":\"Stadt\",\"FormField.Contact_Seller.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"Report.All_Flats_for_Sale_by_Others\":\"Alle Wohnungen zum Verkauf von Anderen\",\"Report.All_Properties_by_Others\":\" Alle Eigenschaften von Anderen \",\"ReportField.All_House_Villas_by_Others.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"FormButton.Floor_Details_Subform.reset\":\" Zurücksetzen \",\"Languages List.da\":\" dänisch \",\"FormField.Land_House_Villa_Subform.Image\":\"Bild\",\"Languages List.de\":\" Deutsche \",\"Languages List.cy\":\" Walisisch \",\"ReportField.Your_Added_Properties.Date_field\":\"Datum\",\"ReportField.Land_House_Villa_Subform_Report.Image\":\"Bild\",\"FormButton.Floor_Details_Subform.submit\":\" einreichen \",\"Languages List.es\":\" Spanisch \",\"FormField.Land_House_Villa_Subform.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"ReportField.All_Flats_by_Others.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"Languages List.eu\":\" baskisch \",\"Languages List.et\":\" estnisch \",\"FormField.Add_Block_Detail.ID\":\" ICH WÜRDE \",\"ReportField.Your_Added_Properties.Property_Type1\":\"Art der Immobilie\",\"FormField.Cities.City\":\" Stadt \",\"Languages List.el\":\" griechisch \",\"Languages List.eo\":\" Esperanto \",\"ReportField.All_Flats_for_Rent_by_Others.Floor_Number\":\"Stockwerk Nummer\",\"Languages List.en\":\" Englisch \",\"ReportField.My_Assigned_Lands_Houses_Villas.Total_Area\":\"Gesamtfläche\",\"FormButton.Search_Property_Mobile.Submit\":\"einreichen\",\"FormButton.Add_Your_Property.update\":\" Aktualisieren \",\"FormField.Add_Block_Detail.Input_Flats_Apartments_Shop_Details\":\" Wählen Sie, wenn Sie weitere Informationen wie Wohnungen / Wohnungen / Shop Details jeder Etage in diesem Block jetzt eingeben möchten \",\"FormField.Land_House_Villa_Subform.Record_Status\":\" Aufnahmestatus \",\"FormField.Floor_Flats_Apartments_Subform.Total_Area_in_square_feets\":\" Gesamtfläche (in Quadratfuß) \",\"FormField.Cities.ID\":\" ICH WÜRDE \",\"ReportField.All_Lands_for_Sale_by_Others.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"FormField.Floor_Details_Subform.Modified_User\":\" Geänderter Benutzer \",\"ReportField.Your_Added_Properties.Nearest_Landmark\":\"nächster Orientierungspunkt\",\"ReportField.All_Lands_by_Builder_Developer.Land_Breadth\":\"Land Breite\",\"FormField.Floor_Details_Subform.Section\":\"Sektion\",\"Report.Cities_Report\":\" Städte Bericht \",\"FormField.Contact_Seller.Added_Time\":\" Zeit hinzugefügt \",\"ReportField.All_Lands_for_Sale_by_Others.Date_field\":\"Datum hinzugefügt\",\"ReportField.Floor_Flats_Apartments_Subform_Report.Assign_Agent\":\"Agent\",\"ReportField.Your_Added_Properties.Land_Length\":\"Land Länge\",\"FormField.Project_Blocks_Subform.Section\":\"Sektion\",\"FormField.Add_Flats_Apartments_Shop_Details.Flats_Apartments_Shop_Details\":\" Wohnungen / Geschäft Details \",\"FormField.Add_User.ID\":\" ICH WÜRDE \",\"PicklistOption.Contact_Seller_Button.Property_Type1.3\":\" Wahl 3 \",\"PicklistOption.Contact_Seller_Button.Property_Type1.2\":\" Wahl 2 \",\"FormField.Add_User.Image\":\" Bild \",\"PicklistOption.Contact_Seller_Button.Property_Type1.1\":\" Wahl 1 \",\"FormField.Land_House_Villa_Subform.Land_House_Villa_Number\":\" Land / Haus / Villa Nummer \",\"FormField.Floor_Details_Subform.Added_User\":\" Benutzer hinzugefügt \",\"ReportField.All_Shops_for_Rent_by_Others.Nearest_Landmark\":\"nächster Orientierungspunkt\",\"FormField.Add_User.district_city2\":\" Stadtteil \",\"FormField.Add_Your_Property.Number_of_Bed_Rooms\":\" Anzahl der Schlafzimmer \",\"Section.Subforms\":\" Teilformulare \",\"FormField.Add_Project.Block_Details_Master_ID\":\" Blockdetails Master - ID \",\"Report.Floor_Details_Subform_Report\":\" Floor Details Unterformular Bericht \",\"Languages List.yi\":\" Jiddisch \",\"Report.All_Flats_by_Builder_Developer\":\"Alle Wohnungen\",\"FormField.Contact_Seller_Button.Modified_Time\":\" Geänderte Zeit \",\"FormField.Select_Project_Agent.Assign_agent_in\":\"Zuweisen von Agent zu\",\"ReportField.All_House_Villas_by_Others.Property_For\":\"Eigentum für\",\"ReportField.All_Properties_by_Others.Maintainence_Charge\":\"Wartungsgebühr\",\"FormField.Add_Your_Property.Maintainence_Charge\":\" Wartungsgebühr \",\"PicklistOption.Select_Project_Agent.rec_IDs.1\":\"Wahl 1\",\"Form.Contact_Seller_Button\":\" Verkäufer kontaktieren \",\"ReportField.All_House_Villas_by_Others.Image\":\"Bild\",\"ReportField.Floor_Flats_Apartments_Subform_Report.Image\":\"Bild\",\"Languages List.zh\":\" Chinesisch \",\"ReportField.All_Lands_for_Sale_by_Others.Nearest_Landmark\":\"nächster Orientierungspunkt\",\"FormField.Cities.Modified_User\":\" Geänderter Benutzer \",\"ReportField.All_Lands_for_Sale_by_Others.Comments\":\"Bemerkungen\",\"FormField.Project_Blocks_Subform.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"FormField.Add_Project.Added_User\":\" Benutzer hinzugefügt \",\"FormField.Contact_Seller_Button.ID\":\" ICH WÜRDE \",\"ReportField.All_House_Villas_for_Sale_by_Others.Member\":\"Mitglied\",\"ReportField.All_Flats_for_Sale_by_Others.Number_of_Bathrooms\":\"Anzahl der Badezimmer\",\"ReportField.All_Flats_by_Others.Nearest_Landmark\":\"nächster Orientierungspunkt\",\"ReportField.Project_Blocks_Subform_Report.Block_Name\":\" Blockname \",\"FormField.Search_Property_Form.ID\":\" ICH WÜRDE \",\"FormField.Add_Project.Project_Area\":\" Projektbereich (Sq.Ft.) \",\"ReportField.All_Lands_for_Sale_by_Others.Rent_Per_Month\":\"Miete pro Monat\",\"ReportField.All_Shops_for_Sale_by_Others.Rate_Per_Square_Feet\":\"Rate (pro Quadratfuß)\",\"ReportField.All_Flats_by_Builder_Developer.Image\":\"Bild\",\"ReportField.All_House_Villas_for_Sale_by_Others.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"ReportField.Your_Added_Properties.Floor_Number\":\"Stockwerk Nummer\",\"ReportField.Floor_Flats_Apartments_Subform_Report.Status\":\" Status \",\"FormButton.Add_Block_Detail.update\":\" Aktualisieren \",\"FormField.Contact_Seller.ID\":\" ICH WÜRDE \",\"FormField.Land_House_Villa_Subform.Block_Name\":\" Blockname \",\"FormField.Contact_Seller.Mobile\":\" Handy, Mobiltelefon \",\"ReportField.Your_Added_Properties.Furnishing\":\"Möblierung\",\"ReportField.Land_House_Villa_Subform_Report.Land_Breadth\":\"Land Breite\",\"FormField.Add_User.Record_Status\":\" Aufnahmestatus \",\"FormField.Add_Your_Property.Nearest_Landmark\":\" nächster Orientierungspunkt \",\"FormField.Add_User.last_name\":\" Familienname, Nachname \",\"FormField.Add_User.prefix\":\" Präfix \",\"ReportField.All_Properties_by_Others.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"FormField.Search_Property_Form.Added_Time\":\" Zeit hinzugefügt \",\"ReportField.Floor_Details_Subform_Report.Block_Name\":\" Blockname \",\"ReportField.All_Shops_by_Others.Parking_Space\":\"Parkplatz\",\"FormField.Floor_Flats_Apartments_Subform.Number_of_BathRooms\":\" Anzahl der BathRooms \",\"ReportField.All_Flats_for_Sale_by_Others.Property_Condition\":\"Zustand der Immobilie\",\"FormButton.Add_Block_Detail.cancel\":\" Stornieren \",\"FormField.Cities.Added_Time\":\" Zeit hinzugefügt \",\"FormField.Land_House_Villa_Subform.Project_Name\":\" Projektname \",\"PicklistOption.Add_Your_Property.Parking_Space.3\":\" 2 Zweiräder \",\"PicklistOption.Add_Your_Property.Parking_Space.2\":\" 1 Zweirad \",\"PicklistOption.Add_Your_Property.Parking_Space.1\":\" Kein Parkplatz \",\"FormField.Floor_Details_Subform.Project_Name\":\" Projektname \",\"Form.Cities\":\" Städte \",\"ReportField.All_Lands_by_Builder_Developer.Block_Name\":\"Blockname\",\"ReportField.All_Shops_by_Others.Rent_Per_Month\":\"Miete pro Monat\",\"FormField.Floor_Flats_Apartments_Subform.Modified_Time\":\" Geänderte Zeit \",\"Report.All_Property_Sale_Details\":\"Alle Eigentumsverkaufsdetails\",\"FormButton.Select_Project_Agent.Reset\":\"Zurücksetzen\",\"ReportField.All_Flats_by_Builder_Developer.Project_Name\":\"Projektname\",\"ReportField.Your_Added_Properties.City1\":\"Stadt\",\"FormField.Add_Project.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"ReportField.Project_Flats_Apartments_Shop.Floor_Number\":\" Stockwerk Nummer \",\"FormField.Add_Your_Property.City1\":\" Stadt \",\"PicklistOption.Add_Your_Property.Property_Condition.1\":\" Neue Eigenschaft \",\"PicklistOption.Add_Your_Property.Property_Condition.2\":\" Wiederverkauf \",\"FormField.Floor_Details_Subform.Modified_Time\":\" Geänderte Zeit \",\"FormField.Floor_Details_Subform.Record_Status\":\" Aufnahmestatus \",\"FormField.Add_Block_Detail.Modified_Time\":\" Geänderte Zeit \",\"ReportField.All_Flats_by_Builder_Developer.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"ReportField.All_Flats_for_Sale_by_Others.Furnishing\":\"Möblierung\",\"Languages List.ro\":\" rumänisch \",\"PicklistOption.Land_House_Villa_Subform.Furnishing.1\":\" Unmöbliert \",\"PicklistOption.Land_House_Villa_Subform.Furnishing.2\":\" Teilmöbliert \",\"Languages List.ru\":\" Russisch \",\"PicklistOption.Land_House_Villa_Subform.Furnishing.3\":\" Voll möbliert \",\"ReportField.All_Shops_for_Sale_by_Others.Floor_Number\":\"Stockwerk Nummer\",\"ReportField.All_Properties_by_Others.Sold_By\":\" Verkauft durch \",\"FormField.Search_Property_Form.Bedroom\":\" Schlafzimmer \",\"FormField.Contact_Seller.Added_User\":\" Benutzer hinzugefügt \",\"ReportField.All_Property_Sale_Details.Other_Property_ID\":\"Andere Eigenschaften-ID\",\"Languages List.ta\":\" Tamilisch \",\"Languages List.te\":\" Telugu \",\"Languages List.th\":\" Thai \",\"FormField.Add_Block_Detail.Record_Status\":\" Aufnahmestatus \",\"ReportField.Project_Blocks.Project_Name\":\"Projektname\",\"PicklistOption.Add_Your_Property.Parking_Space.5\":\" 2 Vierräder \",\"PicklistOption.Add_Your_Property.Parking_Space.4\":\" 1 Vierrad \",\"Languages List.sq\":\" albanisch \",\"FormField.Floor_Flats_Apartments_Subform.Added_User\":\" Benutzer hinzugefügt \",\"Languages List.sw\":\" Swahili \",\"Languages List.sv\":\" Schwedisch \",\"FormField.Floor_Details_Subform.Added_Time\":\" Zeit hinzugefügt \",\"FormField.Contact_Seller.Name1\":\" Name \",\"Languages List.sk\":\" slowakisch \",\"ReportField.All_Property_Sale_Details.Commission_Percent\":\"Provision in Prozent\",\"Languages List.sl\":\" Slowenisch \",\"PicklistOption.Add_Project.Amenities.10\":\" Platz für Brettspiel \",\"FormField.Add_Your_Property.Record_Status\":\" Aufnahmestatus \",\"FormButton.Add_Flats_Apartments_Shop_Details.update\":\" Aktualisieren \",\"PicklistOption.Add_Project.Amenities.14\":\" funktionsreiches Clubhaus \",\"ReportField.Land_House_Villa_Subform_Report.Date_field\":\"Datum hinzugefügt\",\"PicklistOption.Add_Project.Amenities.13\":\" Luxuriös \",\"PicklistOption.Add_Project.Amenities.12\":\" Halbkorb Ball Court und Jogging Track \",\"CompositeSubFields.Add_Your_Property.Location1.district_city2\":\" Stadtteil \",\"PicklistOption.Add_Project.Amenities.11\":\" Rasentennis \",\"Report.Contact_Seller_Report\":\" Verkäufer kontaktieren \",\"PicklistOption.Floor_Flats_Apartments_Subform.Parking_Space.2\":\" 1 Zweirad \",\"PicklistOption.Floor_Flats_Apartments_Subform.Parking_Space.1\":\" Kein Parkplatz \",\"PicklistOption.Floor_Flats_Apartments_Subform.Parking_Space.4\":\" 1 Vierrad \",\"FormButton.Land_House_Villa_Subform.reset\":\" Zurücksetzen \",\"PicklistOption.Floor_Flats_Apartments_Subform.Parking_Space.3\":\" 2 Zweiräder \",\"ReportField.Contact_Seller_Report.Property_Type1\":\" Art der Immobilie \",\"FormField.Add_Your_Property.Modified_Time\":\" Geänderte Zeit \",\"PicklistOption.Floor_Flats_Apartments_Subform.Parking_Space.5\":\" 2 Vierräder \",\"Form.Land_House_Villa_Subform\":\" Land / Haus / Villa Unterform \",\"Languages List.pt\":\" Portugiesisch \",\"FormField.Contact_Seller_Button.Modified_User\":\" Geänderter Benutzer \",\"Report.Project_Blocks\":\"Projektblöcke\",\"Languages List.pl\":\" Polieren \",\"ReportField.All_House_Villa_by_Builder_Developer.Number_of_Bathrooms\":\"Anzahl der Badezimmer\",\"FormField.Add_Flats_Apartments_Shop_Details.Block_Name\":\" Blockname \",\"FormField.Land_House_Villa_Subform.Modified_User\":\" Geänderter Benutzer \",\"ReportField.All_Shops_for_Sale_by_Others.Member\":\"Mitglied\",\"ReportField.All_Flats_for_Rent_by_Others.Property_For\":\"Eigentum für\",\"ReportField.All_Shops_by_Others.Nearest_Landmark\":\"nächster Orientierungspunkt\",\"FormButton.Add_Your_Property.cancel\":\" Stornieren \",\"ReportField.All_Shops_by_Others.Number_of_Bed_Rooms\":\"Anzahl der Schlafzimmer\",\"ReportField.All_Shops_by_Others.Maintainence_Charge\":\"Wartungsgebühr\",\"ReportField.All_Flats_for_Rent_by_Others.Rent_Per_Month\":\"Miete pro Monat\",\"App.real-estate-management\":\"Immobilienverwaltung \",\"FormButton.Add_Block_Detail.reset\":\" Zurücksetzen \",\"ReportField.All_House_Villas_for_Sale_by_Others.Image\":\"Bild\",\"ReportField.All_Shops_by_Others.Image\":\"Bild\",\"ReportField.Floor_Flats_Apartments_Subform_Report.Parking_Space\":\"Parkplatz\",\"ReportField.All_Shops_by_Builder_Developer.Image\":\"Bild\",\"ReportField.All_Shops_by_Builder_Developer.Maintainence_Charge\":\"Wartungsgebühr\",\"FormField.Add_Your_Property.Comments\":\" Bemerkungen \",\"ReportField.All_Flats_by_Builder_Developer.Number_of_BathRooms\":\"Anzahl der BathRooms\",\"CompositeSubFields.Add_User.Address1.state_province2\":\" Staat / Provinz \",\"ReportField.Your_Added_Properties.Parking_Space\":\"Parkplatz\",\"ReportField.All_Projects.Project_Includes1\":\" Projekt umfasst \",\"ReportField.All_Flats_by_Builder_Developer.Parking_Space\":\"Parkplatz\",\"PicklistOption.Add_Project.Amenities.1\":\" Große Empfangslounge \",\"PicklistOption.Add_Project.Amenities.3\":\" Voll ausgestattetes Fitnessstudio und Health Studio \",\"PicklistOption.Add_Project.Amenities.2\":\" Luxuriöses, funktionsreiches Clubhaus \",\"ReportField.Project_Flats_Apartments_Shop.Flats_Apartments_Shop_Details.Flats_Apartments_Shop_Number\":\" Wohnungen / Geschäft Details \",\"FormButton.Contact_Seller.reset\":\" Zurücksetzen \",\"FormButton.Floor_Flats_Apartments_Subform.cancel\":\" Stornieren \",\"ReportField.All_Flats_for_Sale_by_Others.Image\":\"Bild\",\"FormButton.Land_House_Villa_Subform.update\":\" Aktualisieren \",\"ReportField.All_Flats_for_Rent_by_Others.Nearest_Landmark\":\"nächster Orientierungspunkt\",\"PicklistOption.Add_Project.Amenities.5\":\" Ältestenecke \",\"PicklistOption.Add_Project.Amenities.4\":\" Schwimmbad \",\"ReportField.My_Assigned_Flats_Apartments_Shops.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"PicklistOption.Add_Project.Amenities.7\":\" Kinderarena mit Kinderkrippe \",\"PicklistOption.Add_Project.Amenities.6\":\" Tanz / Aerobic / Yoga Studio \",\"PicklistOption.Add_Project.Amenities.9\":\" Billardraum für Snooker / Billard \",\"PicklistOption.Add_Project.Amenities.8\":\" Indoor Sportarena \",\"ReportField.Land_House_Villa_Subform_Report.Furnishing\":\" Möblierung \",\"ReportField.All_Property_Sale_Details.Property_from\":\"Immobilien von\",\"ReportField.All_Properties_by_Others.Parking_Space\":\" Parkplatz \",\"Languages List.tr\":\" Türkisch \",\"FormField.Add_User.Modified_User_IP_Address\":\" Geänderte Benutzer-IP-Adresse \",\"ReportField.All_Flats_for_Sale_by_Others.Total_Area_in_square_feets\":\"Gesamtfläche (in Quadratfuß)\",\"ReportField.All_Flats_by_Others.Floor_Number\":\"Stockwerk Nummer\",\"ReportField.Cities_Report.City\":\" Stadt \",\"Form.Add_User\":\" Benutzer hinzufügen \",\"FormField.Floor_Details_Subform.Number_of_Flats_Apartments_Shops\":\" Anzahl der Wohnungen / Apartments / Geschäfte \",\"Languages List.tl\":\" Filipino \",\"FormField.Add_Flats_Apartments_Shop_Details.Added_User_IP_Address\":\" Benutzer-IP-Adresse hinzugefügt \",\"FormField.Floor_Flats_Apartments_Subform.Date_field\":\" Datum \",\"ReportField.Land_House_Villa_Subform_Report.Rate_per_square_feets\":\"Rate (pro Quadratfuß)\",\"ReportField.All_Properties_by_Others.City1\":\"Stadt\",\"ReportField.All_Shops_for_Sale_by_Others.Number_of_Bathrooms\":\"Anzahl der Badezimmer\",\"ReportField.All_Lands_by_Builder_Developer.Land_Length\":\"Land Länge\",\"Languages List.vi\":\" Vietnamesisch \",\"ReportField.All_Shops_for_Rent_by_Others.Floor_Number\":\"Stockwerk Nummer\",\"FormButton.Floor_Details_Subform.cancel\":\" Stornieren \",\"Languages List.ur\":\" Urdu \",\"FormField.Add_User.Address1\":\" Adresse \",\"FormField.Floor_Flats_Apartments_Subform.Modified_User\":\" Geänderter Benutzer \",\"PicklistOption.Search_Property_Form.Bedroom.1\":\" 1 BHK \",\"PicklistOption.Search_Property_Form.Bedroom.2\":\" 2 BHK \",\"PicklistOption.Search_Property_Form.Bedroom.3\":\" 3 BHK \",\"FormField.Land_House_Villa_Subform.Number_of_Bed_Rooms\":\" Anzahl der Schlafzimmer \",\"ReportField.Contact_Seller_Report.Email\":\" Email \",\"ReportField.Land_House_Villa_Subform_Report.Built_Area\":\"Gebaute Fläche\",\"ReportField.All_Flats_for_Rent_by_Others.Property_Condition\":\"Zustand der Immobilie\"},\"fr\":{\"ReportField.All_House_Villa_by_Builder_Developer.Furnishing\":\"Ameublement\",\"FormButton.Add_Block_Detail.submit\":\" Soumettre \",\"ReportField.All_Shops_by_Builder_Developer.Parking_Space\":\"Place de parking\",\"ReportField.All_Shops_for_Rent_by_Others.Image\":\"Image\",\"ReportField.All_Property_Sale_Details.Sold_by\":\"Vendu par\",\"ReportField.Your_Added_Properties.Rent_Per_Month\":\"Loyer par mois\",\"FormField.Project_Blocks_Subform.Added_Time\":\" Temps ajouté \",\"FormField.Search_Property_Form.City\":\" Ville \",\"CompositeSubFields.Add_User.Address1.country2\":\" Pays \",\"FormField.Search_Property_Form.Section\":\"Section\",\"ReportField.All_Lands_for_Sale_by_Others.Rate_Per_Square_Feet\":\"Taux (par pieds carrés)\",\"FormField.Floor_Flats_Apartments_Subform.Section\":\"Section\",\"ReportField.All_Shops_for_Sale_by_Others.Maintainence_Charge\":\"Charge de maintenance\",\"FormField.Floor_Flats_Apartments_Subform.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"FormField.Floor_Flats_Apartments_Subform.Added_Time\":\" Temps ajouté \",\"ReportField.All_Shops_for_Sale_by_Others.Date_field\":\"Date d'ajout\",\"FormField.Add_Project.Modified_Time\":\" Heure modifiée \",\"ReportField.All_House_Villa_by_Builder_Developer.Block_Name\":\"Nom du bloc\",\"FormField.Add_Project.About\":\" Sur \",\"ReportField.All_Shops_for_Sale_by_Others.Furnishing\":\"Ameublement\",\"FormField.Contact_Seller_Button.Record_Status\":\" Statut d'enregistrement \",\"ReportField.All_Shops_by_Others.Date_field\":\"Date d'ajout\",\"ReportField.All_Property_Sale_Details.Sold_at\":\"Vendu à\",\"Report.All_Projects\":\" Tous les projets \",\"FormButton.Add_Project.submit\":\" Soumettre \",\"FormButton.Add_User.reset\":\" Réinitialiser \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Rate_per_square_feets\":\"Taux (par pieds carrés)\",\"ReportField.All_Projects.About\":\" Sur \",\"ReportField.All_Shops_by_Builder_Developer.Rate_per_square_feets\":\"Taux (par pieds carrés)\",\"FormField.Contact_Seller.Modified_User\":\" Utilisateur modifié \",\"Form.Add_Project\":\"1. Ajouter un projet\",\"ReportField.All_Flats_for_Sale_by_Others.Rate_Per_Square_Feet\":\"Taux (par pieds carrés)\",\"FormField.Land_House_Villa_Subform.Modified_Time\":\" Heure modifiée \",\"ReportField.Project_Blocks_Subform_Report.Block_Type1\":\" Type de bloc \",\"ReportField.All_Shops_for_Sale_by_Others.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"FormField.Property_Sale_Details.Section\":\"Section\",\"ReportField.All_House_Villas_by_Others.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"FormField.Land_House_Villa_Subform.Section\":\"Section\",\"FormField.Add_Your_Property.state_province2\":\" Etat / Province \",\"FormField.Select_Project_Agent.rec_ID\":\"rec-ID\",\"Form.Floor_Flats_Apartments_Subform\":\" Appartements Sous-Sol \",\"ReportField.All_Flats_by_Others.Image\":\"Image\",\"FormField.Contact_Seller.prefix\":\" Préfixe \",\"FormField.Add_User.Added_User\":\" Utilisateur ajouté \",\"FormField.Add_Your_Property.Added_Time\":\" Temps ajouté \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Maintainence_Charge\":\"Charge de maintenance\",\"FormField.Add_User.country2\":\" Pays \",\"FormField.Add_Your_Property.Section\":\" Section \",\"Section.Projects\":\" détails du projet \",\"CompositeSubFields.Add_User.Address1.address_line_12\":\" Adresse 1 \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Sold_By\":\"Vendu par\",\"CompositeSubFields.Contact_Seller.Name1.last_name\":\" Nom de famille \",\"FormField.Floor_Details_Subform.ID\":\" ID \",\"FormField.Floor_Flats_Apartments_Subform.Record_Status\":\" Statut d'enregistrement \",\"FormField.Project_Blocks_Subform.Block_Type1\":\" Type de bloc \",\"ReportField.My_Assigned_Lands_Houses_Villas.Rate_per_square_feets\":\"Taux (par pieds carrés)\",\"FormField.Add_User.longitude2\":\" longitude \",\"ReportField.All_Shops_for_Rent_by_Others.Member\":\"prénom\",\"ReportField.All_Lands_for_Sale_by_Others.Image\":\"Image\",\"FormField.Add_User.Mobile_Number\":\" Numéro de portable \",\"ReportField.All_Projects.Blocks_Details.Block_Type1\":\" Blocs Détails.Bloc_Type1 \",\"ReportField.All_Flats_by_Others.Parking_Space\":\"Place de parking\",\"ReportField.Project_Blocks.Block_Name\":\"Type de bloc\",\"FormField.Add_User.Email\":\" Email \",\"CompositeSubFields.Add_User.Address1.address_line_22\":\" Adresse Ligne 2 \",\"FormButton.Add_Your_Property.reset\":\" Réinitialiser \",\"ReportField.All_Flats_for_Sale_by_Others.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"ReportField.All_Flats_for_Rent_by_Others.Image\":\"Image\",\"FormField.Add_User.Modified_Time\":\" Heure modifiée \",\"FormField.Add_Your_Property.Sold_By\":\" Vendu par \",\"FormField.Contact_Seller.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"ReportField.All_Flats_by_Builder_Developer.Rate_per_square_feets\":\"Taux (par pieds carrés)\",\"ReportField.All_Properties_by_Others.Number_of_Bathrooms\":\"Nombre de salles de bain\",\"ReportField.All_Flats_for_Sale_by_Others.Member\":\"Membre\",\"ReportField.All_House_Villas_by_Others.Floor_Number\":\"Numéro d'étage\",\"ReportField.All_House_Villas_for_Rent_by_Others.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"ReportField.Your_Added_Properties.Land_Breadth\":\"Largeur des terres\",\"ReportField.All_Shops_by_Others.Floor_Number\":\"Numéro d'étage\",\"ReportField.All_Properties_by_Others.Rate_Per_Square_Feet\":\"Taux (par pieds carrés)\",\"FormField.Add_User.postal_Code2\":\" code postal \",\"ReportField.All_Shops_for_Sale_by_Others.Parking_Space\":\"Place de parking\",\"ReportField.Your_Added_Properties.address_line_12\":\"Emplacement\",\"ReportField.All_Lands_by_Builder_Developer.Image\":\"Image\",\"FormField.Floor_Flats_Apartments_Subform.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"FormField.Add_Project.Member\":\" Membre \",\"FormField.Add_Block_Detail.Land_House_Villa_Details\":\" Terrain / Maison / Villa Détails \",\"Report.All_Shops_by_Builder_Developer\":\"Toutes les boutiques\",\"FormButton.Project_Blocks_Subform.reset\":\" Réinitialiser \",\"ReportField.Floor_Details_Subform_Report.Block_Details_Master_Lookup\":\" Bloquer les détails Master Lookup \",\"FormField.Add_Project.Location1\":\"Emplacement\",\"ReportField.All_Shops_for_Rent_by_Others.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"ReportField.All_Projects.City\":\"Ville\",\"FormField.Land_House_Villa_Subform.ID\":\" ID \",\"FormField.Project_Blocks_Subform.Added_User\":\" Utilisateur ajouté \",\"FormField.Cities.Record_Status\":\" Statut d'enregistrement \",\"FormField.Land_House_Villa_Subform.Rate_per_square_feets\":\" Taux (par pieds carrés) \",\"FormField.Add_Block_Detail.Section1\":\" Section \",\"FormField.Add_Block_Detail.Section2\":\"Section\",\"PicklistOption.Add_User.country2.1\":\" Choix 1 \",\"PicklistOption.Add_User.country2.2\":\" Choix 2 \",\"ReportField.All_Flats_by_Others.Date_field\":\"Date d'ajout\",\"ReportField.All_Shops_for_Rent_by_Others.Rent_Per_Month\":\"Loyer par mois\",\"FormField.Search_Property_Form.Posted_By\":\" Posté par \",\"ReportField.Land_House_Villa_Subform_Report.Project_Name\":\"Sur\",\"FormButton.Cities.update\":\" Mettre à jour \",\"ReportField.All_House_Villa_by_Builder_Developer.Rate_per_square_feets\":\"Taux (par pieds carrés)\",\"FormField.Add_Your_Property.address_line_22\":\" Adresse Ligne 2 \",\"FormField.Add_Flats_Apartments_Shop_Details.Section\":\" Section \",\"FormField.Add_User.first_name\":\" Prénom \",\"FormField.Floor_Flats_Apartments_Subform.Image\":\" Image \",\"FormField.Floor_Flats_Apartments_Subform.Flats_Apartments_Master\":\" Appartements / Appartements Master Lookup \",\"ReportField.All_House_Villa_by_Builder_Developer.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"ReportField.Project_Flats_Apartments_Shop.Block_Name\":\" Nom du bloc \",\"Form.Project_Blocks_Subform\":\" Sous-formulaire Blocs de projet \",\"CompositeSubFields.Add_User.Address1.district_city2\":\" District de la ville \",\"FormField.Add_Your_Property.address_line_12\":\" Adresse 1 \",\"ReportField.All_Properties_by_Others.Image\":\"Image\",\"ReportField.All_Lands_by_Builder_Developer.Project_Name\":\"Sur\",\"FormField.Add_Project.Flats_Apartments_Master_ID\":\" Appartements / Appartements Master - ID \",\"FormField.Select_Project_Agent.rec_IDs\":\"rec-ID\",\"Report.Land_House_Villa_Subform_Report\":\" Land / House / Villa Rapport de sous-formulaire \",\"ReportField.Your_Added_Properties.Rate_Per_Square_Feet\":\"Taux (par pieds carrés)\",\"ReportField.All_Flats_for_Rent_by_Others.Date_field\":\"Date d'ajout\",\"ReportField.All_Flats_by_Others.Property_For\":\"Propriété pour\",\"Form.Search_Property_Mobile\":\"Rechercher une propriété mobile\",\"ReportField.All_Flats_for_Sale_by_Others.City1\":\"Ville\",\"ReportField.All_House_Villas_for_Rent_by_Others.Image\":\"Image\",\"Report.All_Lands_by_Builder_Developer\":\"Toutes les terres\",\"ReportField.All_Shops_by_Others.Rate_Per_Square_Feet\":\"Taux (par pieds carrés)\",\"FormField.Add_Block_Detail.Floor_Details\":\" Détails du plancher \",\"FormButton.Floor_Flats_Apartments_Subform.update\":\" Mettre à jour \",\"ReportField.All_Property_Sale_Details.Agent_Commision\":\"Devise\",\"ReportField.Contact_Seller_Report.Added_Time\":\"Enquéte à\",\"FormButton.Add_User.submit\":\" Soumettre \",\"ReportField.All_Flats_for_Sale_by_Others.Floor_Number\":\"Numéro d'étage\",\"FormField.Project_Blocks_Subform.ID\":\" ID \",\"FormField.Add_Project.Added_Time\":\" Temps ajouté \",\"FormField.Add_Your_Property.Member\":\" Membre \",\"ReportField.All_Shops_for_Rent_by_Others.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"ReportField.All_House_Villas_by_Others.Nearest_Landmark\":\"Haut-lieu touristique le plus proche\",\"ReportField.All_House_Villas_by_Others.Comments\":\"commentaires\",\"ReportField.All_Projects.Blocks_Details.Block_Name\":\"Détails des blocs\",\"FormField.Add_Your_Property.Status\":\"Statut\",\"ReportField.All_House_Villa_by_Builder_Developer.Date_field\":\"Rendez-vous amoureux\",\"Report.All_Flats_by_Others\":\"Tous les appartements par d'autres\",\"ReportField.All_Properties_by_Others.Nearest_Landmark\":\"Haut-lieu touristique le plus proche\",\"ReportField.Your_Added_Properties.Maintainence_Charge\":\"Charge de maintenance\",\"ReportField.All_Shops_for_Rent_by_Others.Furnishing\":\"Ameublement\",\"FormField.Add_Your_Property.Rent_Per_Month\":\" Loyer par mois \",\"ReportField.All_Flats_by_Others.Furnishing\":\"Ameublement\",\"FormField.Add_User.Configuration_Index\":\" Index de configuration \",\"PicklistOption.Property_Sale_Details.Property_from.1\":\"Autres\",\"ReportField.All_Shops_by_Others.City1\":\"Ville\",\"ReportField.All_House_Villas_by_Others.Member\":\"Membre\",\"PicklistOption.Property_Sale_Details.Property_from.3\":\"Choix 3\",\"PicklistOption.Property_Sale_Details.Property_from.2\":\"Bu\",\"FormButton.Add_Flats_Apartments_Shop_Details.cancel\":\" Annuler \",\"ReportField.All_Flats_for_Sale_by_Others.Comments\":\"commentaires\",\"FormButton.Floor_Flats_Apartments_Subform.submit\":\" Soumettre \",\"FormField.Add_Your_Property.longitude2\":\" longitude \",\"ReportField.Project_Flats_Apartments_Shop.Assign_Agent\":\"Agent actuel\",\"FormField.Search_Property_Form.Added_User\":\" Utilisateur ajouté \",\"ReportField.All_Lands_by_Builder_Developer.Rate_per_square_feets\":\"Taux (par pieds carrés)\",\"ReportField.All_Properties_by_Others.Member\":\"Membre\",\"ReportField.All_Properties_by_Others.Property_Condition\":\"Etat de la propriété\",\"CompositeSubFields.Contact_Seller.Name1.first_name\":\" Prénom \",\"ReportField.All_Lands_for_Sale_by_Others.Number_of_Bathrooms\":\"Nombre de salles de bain\",\"FormField.Add_User.Modified_User\":\" Utilisateur modifié \",\"ReportField.All_Flats_for_Rent_by_Others.Member\":\"Ajouté par\",\"ReportField.All_Flats_for_Rent_by_Others.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"ReportField.All_House_Villa_by_Builder_Developer.Project_Name\":\"Sur\",\"ReportField.All_Shops_by_Others.Comments\":\"commentaires\",\"FormField.Add_Land_House_Villa_Details.Section3\":\"Section\",\"CompositeSubFields.Add_User.Address1.postal_Code2\":\" code postal \",\"ReportField.All_Flats_by_Others.Maintainence_Charge\":\"Charge de maintenance\",\"FormField.Add_Block_Detail.Project_Name\":\" nom du projet \",\"ReportField.All_House_Villa_by_Builder_Developer.Built_Area\":\"Zone construite\",\"ReportField.All_House_Villa_by_Builder_Developer.Image\":\"Image\",\"FormField.Add_Your_Property.Rate_Per_Square_Feet\":\" Taux (par pieds carrés) \",\"FormField.Land_House_Villa_Subform.Total_Area\":\" Superficie totale \",\"Form.Contact_Seller\":\" Contactez le vendeur \",\"FormField.Contact_Seller_Button.Viewed_Property_Posted_By1\":\" Propriété sélectionnée Publié par \",\"FormButton.Land_House_Villa_Subform.cancel\":\" Annuler \",\"ReportField.All_Projects.Member\":\" Membre \",\"ReportField.All_House_Villas_for_Sale_by_Others.Rate_Per_Square_Feet\":\"Taux (par pieds carrés)\",\"FormField.Search_Property_Form.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"PicklistOption.Floor_Flats_Apartments_Subform.Status.1\":\"actif\",\"FormField.Floor_Details_Subform.Block_Name\":\" Nom du bloc \",\"PicklistOption.Floor_Flats_Apartments_Subform.Status.2\":\"Inactif\",\"ReportField.All_Shops_by_Builder_Developer.Date_field\":\"Date d'ajout\",\"FormField.Add_Flats_Apartments_Shop_Details.Record_Status\":\" Statut d'enregistrement \",\"FormField.Add_Block_Detail.Added_Time\":\" Temps ajouté \",\"FormField.Contact_Seller_Button.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"ReportField.Land_House_Villa_Subform_Report.Total_Area\":\"Superficie totale\",\"FormField.Add_Block_Detail.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"ReportField.All_Shops_for_Rent_by_Others.Date_field\":\"Date d'ajout\",\"FormField.Add_Project.Record_Status\":\" Statut d'enregistrement \",\"ReportField.All_Shops_for_Sale_by_Others.Comments\":\"commentaires\",\"FormField.Search_Property_Form.Modified_Time\":\" Heure modifiée \",\"Section.Cantact_Seller\":\" Cantate Vendeur \",\"FormField.Floor_Flats_Apartments_Subform.Status\":\"Statut\",\"Form.Search_Property_Form\":\" Rechercher un formulaire de propriété \",\"FormField.Add_User.suffix\":\" Suffixe \",\"Form.Add_Your_Property\":\" Ajouter votre propriété \",\"FormField.Floor_Flats_Apartments_Subform.Maintainence_Charge\":\" Charge de maintenance \",\"PicklistOption.Search_Property_Form.PropertyType1.3\":\" Terre \",\"PicklistOption.Search_Property_Form.PropertyType1.4\":\" Appartement \",\"FormField.Floor_Flats_Apartments_Subform.Number_of_Bed_Rooms\":\" Nombre de chambres à coucher \",\"PicklistOption.Search_Property_Form.PropertyType1.1\":\" Boutique \",\"PicklistOption.Search_Property_Form.PropertyType1.2\":\" Maison / Villa \",\"ReportField.All_Flats_for_Sale_by_Others.Parking_Space\":\"Place de parking\",\"FormField.Add_Your_Property.Land_Length\":\" Longueur du terrain \",\"ReportField.Project_Lands_Houses_Villas.Assign_Agent\":\"Agent actuel\",\"Form.Add_Block_Detail\":\"2. Ajouter des détails sur les blocs de projet\",\"ReportField.All_House_Villas_by_Others.Number_of_Bathrooms\":\"Nombre de salles de bain\",\"ReportField.All_Shops_for_Sale_by_Others.City1\":\"Ville\",\"CompositeSubFields.Add_Your_Property.Location1.address_line_22\":\" Adresse Ligne 2 \",\"FormButton.Add_Project.update\":\" Mettre à jour \",\"FormButton.Contact_Seller.update\":\" Mettre à jour \",\"FormField.Add_Your_Property.ID\":\" ID \",\"ReportField.Your_Added_Properties.Member\":\"Membre\",\"ReportField.All_Lands_for_Sale_by_Others.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"ReportField.All_Flats_by_Others.Number_of_Bathrooms\":\"Nombre de salles de bain\",\"FormField.Cities.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"FormField.Contact_Seller.Viewed_Property_Rec_Id\":\" Propriété Rec-Id \",\"FormField.Add_Your_Property.Image\":\" Image \",\"FormField.Contact_Seller.Email\":\" Email \",\"ReportField.All_Projects.Project_Name\":\"nom du projet\",\"FormField.Land_House_Villa_Subform.Land_Length\":\" Longueur du terrain \",\"ReportField.Project_Flats_Apartments_Shop.Project_Name\":\" nom du projet \",\"FormField.Project_Blocks_Subform.Project\":\" Projet \",\"ReportField.Land_House_Villa_Subform_Report.Land_House_Villa_Number\":\" Numéro de terre \",\"ReportField.All_House_Villas_for_Rent_by_Others.Rent_Per_Month\":\"Loyer par mois\",\"CompositeSubFields.Add_Your_Property.Location1.address_line_12\":\" Adresse 1 \",\"PicklistOption.Search_Property_Form.For_field.2\":\" Location \",\"PicklistOption.Search_Property_Form.For_field.1\":\" Acheter \",\"Page.New_Search_Result\":\" Résultat de la recherche \",\"FormButton.Cities.submit\":\" Soumettre \",\"FormField.Land_House_Villa_Subform.Furnishing\":\" Ameublement \",\"FormField.Add_Project.Blocks_Details\":\" Détails des blocs \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Flats_Apartments_Master\":\" Appartements / Appartements Master Lookup \",\"ReportField.All_House_Villa_by_Builder_Developer.Number_of_Floors\":\"Nombre d'étages\",\"FormButton.Add_Land_House_Villa_Details.submit\":\"Soumettre\",\"ReportField.All_Shops_by_Builder_Developer.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"CompositeSubFields.Add_User.Name1.prefix\":\" Préfixe \",\"FormField.Project_Blocks_Subform.Modified_Time\":\" Heure modifiée \",\"CompositeSubFields.Contact_Seller.Name1.prefix\":\" Préfixe \",\"ReportField.Your_Added_Properties.Number_of_Bathrooms\":\"Nombre de salles de bain\",\"FormField.Land_House_Villa_Subform.Added_User\":\" Utilisateur ajouté \",\"Page.Search\":\" Chercher \",\"FormField.Contact_Seller.Property_Type1\":\" Type de propriété \",\"PicklistOption.Floor_Flats_Apartments_Subform.Furnishing.2\":\" Sémi équipé \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Floor_Number\":\"Numéro d'étage\",\"PicklistOption.Floor_Flats_Apartments_Subform.Furnishing.1\":\" Non meublé \",\"PicklistOption.Floor_Flats_Apartments_Subform.Furnishing.3\":\" Entièrement meublé \",\"FormField.Contact_Seller_Button.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"FormField.Floor_Flats_Apartments_Subform.Flats_Apartments_Shop_Number\":\" Appartements / Appartements / Numéro de la boutique \",\"Section.Other_Property\":\" Ajouter votre propriété \",\"ReportField.All_Properties_by_Others.Floor_Number\":\"Numéro d'étage\",\"Report.Floor_Flats_Apartments_Subform_Report\":\" Rapport sur le sous-sol des appartements / appartements \",\"FormField.Land_House_Villa_Subform.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"Form.Select_Project_Agent\":\"Sélectionnez l'agent de projet\",\"ReportField.All_Flats_for_Sale_by_Others.Nearest_Landmark\":\"Haut-lieu touristique le plus proche\",\"ReportField.Land_House_Villa_Subform_Report.Block_Name\":\"Nom du bloc\",\"Report.All_Flats_for_Rent_by_Others\":\"Tous les appartements à louer par d'autres\",\"PicklistOption.Search_Property_Form.Posted_By.3\":\" Constructeur / Développeur \",\"PicklistOption.Search_Property_Form.Posted_By.2\":\" Agent / courtier \",\"FormButton.Add_Land_House_Villa_Details.cancel\":\"Annuler\",\"PicklistOption.Search_Property_Form.Posted_By.1\":\" Particulier / propriétaire \",\"FormButton.Project_Blocks_Subform.cancel\":\" Annuler \",\"ReportField.All_Flats_for_Rent_by_Others.Maintainence_Charge\":\"Charge de maintenance\",\"FormField.Add_User.state_province2\":\" Etat / Province \",\"FormField.Contact_Seller_Button.Viewed_Property_Rec_Id\":\" Propriété Rec-Id \",\"ReportField.All_Flats_for_Rent_by_Others.Comments\":\"commentaires\",\"ReportField.All_Properties_by_Others.Property_Type1\":\"Type de propriété\",\"ReportField.Land_House_Villa_Subform_Report.Number_of_Bathrooms\":\"Nombre de salles de bain\",\"ReportField.My_Assigned_Lands_Houses_Villas.Project_Name\":\"nom du projet\",\"ReportField.All_Shops_for_Rent_by_Others.Parking_Space\":\"Place de parking\",\"FormButton.Add_Flats_Apartments_Shop_Details.reset\":\" Réinitialiser \",\"Report.All_Shops_by_Others\":\"Tous les magasins par d'autres\",\"FormField.Add_Block_Detail.Added_User\":\" Utilisateur ajouté \",\"PicklistOption.Land_House_Villa_Subform.Status.2\":\"Inactif\",\"PicklistOption.Land_House_Villa_Subform.Status.1\":\"actif\",\"FormField.Add_Your_Property.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"FormField.Floor_Details_Subform.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"ReportField.All_Flats_for_Rent_by_Others.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"PicklistOption.Add_Your_Property.country2.2\":\" Choix 2 \",\"PicklistOption.Add_Your_Property.country2.1\":\" Choix 1 \",\"Report.All_Shops_for_Sale_by_Others\":\"Tous les magasins à vendre par d'autres\",\"ReportField.All_Flats_by_Others.Comments\":\"commentaires\",\"FormButton.Project_Blocks_Subform.update\":\" Mettre à jour \",\"FormField.Add_Your_Property.Property_Type1\":\" Type de propriété \",\"ReportField.My_Assigned_Flats_Apartments_Shops.Image\":\"Image\",\"Report.All_Users\":\" Tous les utilisateurs \",\"ReportField.All_Users.Email\":\" Email \",\"CompositeSubFields.Add_User.Name1.last_name\":\" Nom de famille \",\"FormField.Search_Property_Form.For_field\":\" Propriété pour? \",\"ReportField.All_Properties_by_Others.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"FormButton.Property_Sale_Details.reset\":\"Réinitialiser\",\"FormField.Add_Your_Property.district_city2\":\" District de la ville \",\"FormField.Add_Your_Property.postal_Code2\":\" code postal \",\"ReportField.Floor_Details_Subform_Report.Floor_Number\":\" Numéro d'étage \",\"FormField.Search_Property_Form.Modified_User\":\" Utilisateur modifié \",\"FormField.Contact_Seller.suffix\":\" Suffixe \",\"FormField.Property_Sale_Details.Commission_Percent\":\"Pourcentage de commission\",\"ReportField.Your_Added_Properties.Sold_By\":\" Vendu par \",\"FormField.Floor_Flats_Apartments_Subform.Block_Name\":\" Nom du bloc \",\"FormField.Add_Your_Property.Floor_Number\":\" Numéro d'étage \",\"ReportField.All_Flats_for_Rent_by_Others.Furnishing\":\"Ameublement\",\"FormField.Add_Project.Modified_User\":\" Utilisateur modifié \",\"FormField.Add_User.address_line_22\":\" Adresse Ligne 2 \",\"Report.Your_Added_Properties\":\" Vos propriétés ajoutées \",\"FormField.Search_Property_Form.PropertyType1\":\" Type de propriété \",\"ReportField.All_Flats_for_Rent_by_Others.Number_of_Bathrooms\":\"Nombre de salles de bain\",\"FormField.Add_User.Section\":\" Section \",\"FormField.Contact_Seller.last_name\":\" Nom de famille \",\"ReportField.All_House_Villas_by_Others.Rate_Per_Square_Feet\":\"Taux (par pieds carrés)\",\"FormButton.Property_Sale_Details.update\":\"Mettre à jour\",\"ReportField.Floor_Flats_Apartments_Subform_Report.Block_Name\":\"Nom du bloc\",\"FormField.Floor_Details_Subform.Floor_Number\":\" Numéro d'étage \",\"ReportField.Your_Added_Properties.Image\":\"Image\",\"FormButton.Cities.reset\":\" Réinitialiser \",\"FormField.Contact_Seller.Record_Status\":\" Statut d'enregistrement \",\"FormField.Land_House_Villa_Subform.Built_Area\":\" Zone construite \",\"FormField.Add_Your_Property.Total_Area_in_square_feets\":\" Superficie totale (en pieds carrés) \",\"FormField.Land_House_Villa_Subform.Number_of_Floors\":\" Nombre d'étages \",\"FormButton.Select_Project_Agent.Assign\":\"Soumettre\",\"ReportField.All_Flats_by_Others.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"FormButton.Add_User.cancel\":\" Annuler \",\"FormField.Contact_Seller.Modified_Time\":\" Heure modifiée \",\"FormField.Property_Sale_Details.Property_from\":\"Propriété de\",\"ReportField.All_Flats_for_Rent_by_Others.address_line_12\":\"Emplacement\",\"FormField.Add_Block_Detail.Section\":\" Section \",\"FormField.Add_Your_Property.country2\":\" Pays \",\"FormField.Contact_Seller_Button.Section\":\" Section \",\"FormField.Add_Flats_Apartments_Shop_Details.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"ReportField.Contact_Seller_Report.first_name\":\"prénom\",\"FormField.Contact_Seller.Viewed_Property_Posted_By1\":\" Propriété sélectionnée Publié par \",\"FormField.Add_Your_Property.Added_User\":\" Utilisateur ajouté \",\"PicklistOption.Add_Your_Property.Property_For.2\":\" Vente \",\"ReportField.All_Flats_for_Rent_by_Others.City1\":\"Ville\",\"PicklistOption.Add_Your_Property.Property_For.1\":\" Location \",\"ReportField.All_Properties_by_Others.Rent_Per_Month\":\"Loyer par mois\",\"FormField.Add_User.Added_Time\":\" Temps ajouté \",\"FormField.Land_House_Villa_Subform.Added_Time\":\" Temps ajouté \",\"CompositeSubFields.Add_Your_Property.Location1.state_province2\":\" Etat / Province \",\"ReportField.All_Flats_for_Rent_by_Others.Rate_Per_Square_Feet\":\"Taux (par pieds carrés)\",\"Form.Add_Flats_Apartments_Shop_Details\":\" Ajouter Appartements / Appartements / Détails de la boutique \",\"ReportField.Your_Added_Properties.Property_For\":\"Propriété pour\",\"ReportField.All_Shops_for_Sale_by_Others.Nearest_Landmark\":\"Haut-lieu touristique le plus proche\",\"ReportField.Land_House_Villa_Subform_Report.Sold_By\":\"Vendu par\",\"ReportField.All_Flats_by_Builder_Developer.Floor_Number\":\"Numéro d'étage\",\"ReportField.All_Shops_by_Builder_Developer.Project_Name\":\"Zone du projet (Sq.Ft.)\",\"FormField.Floor_Flats_Apartments_Subform.Parking_Space\":\" Place de parking \",\"ReportField.Your_Added_Properties.Comments\":\"commentaires\",\"Report.Project_Blocks_Subform_Report\":\" Rapport de sous-formulaire de blocs de projet \",\"ReportField.All_Shops_for_Rent_by_Others.Number_of_Bathrooms\":\"Nombre de salles de bain\",\"ReportField.Project_Blocks_Subform_Report.Project\":\" nom du projet \",\"ReportField.All_House_Villas_by_Others.Rent_Per_Month\":\"Loyer par mois\",\"ReportField.All_Shops_for_Rent_by_Others.Comments\":\"commentaires\",\"ReportField.All_Shops_by_Others.Member\":\"Ajouté par\",\"ReportField.All_House_Villas_by_Others.City1\":\"Ville\",\"FormField.Land_House_Villa_Subform.Date_field\":\" Rendez-vous amoureux \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Flats_Apartments_Shop_Number\":\" Appartements / Appartements \",\"ReportField.Land_House_Villa_Subform_Report.Assign_Agent\":\"Agent\",\"ReportField.All_Flats_by_Builder_Developer.Maintainence_Charge\":\"Charge de maintenance\",\"FormField.Add_Block_Detail.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"FormField.Add_User.address_line_12\":\" Adresse 1 \",\"ReportField.Floor_Details_Subform_Report.Number_of_Flats_Apartments_Shops\":\" Nombre d'appartements \",\"FormButton.Add_Land_House_Villa_Details.reset\":\"Réinitialiser\",\"FormField.Add_Flats_Apartments_Shop_Details.Modified_Time\":\" Heure modifiée \",\"FormField.Project_Blocks_Subform.Block_Name\":\" Nom du bloc \",\"FormButton.Land_House_Villa_Subform.submit\":\" Soumettre \",\"ReportField.Your_Added_Properties.Property_Condition\":\"Etat de la propriété\",\"ReportField.All_Shops_for_Rent_by_Others.Rate_Per_Square_Feet\":\"Taux (par pieds carrés)\",\"ReportField.All_Flats_by_Others.Rent_Per_Month\":\"Loyer par mois\",\"ReportField.Floor_Flats_Apartments_Subform_Report.Number_of_BathRooms\":\"Nombre de salles de bain\",\"ReportField.All_Flats_by_Builder_Developer.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"ReportField.Land_House_Villa_Subform_Report.Land_Length\":\"Longueur du terrain\",\"FormButton.Search_Property_Mobile.Reset\":\"Réinitialiser\",\"FormField.Search_Property_Form.Record_Status\":\" Statut d'enregistrement \",\"ReportField.All_Users.Member_Type\":\" Type de membre \",\"ReportField.All_Shops_by_Builder_Developer.Floor_Number\":\"Numéro d'étage\",\"ReportField.All_Flats_for_Rent_by_Others.Parking_Space\":\"Place de parking\",\"FormField.Add_Block_Detail.Modified_User\":\" Utilisateur modifié \",\"ReportField.All_Flats_by_Others.Rate_Per_Square_Feet\":\"Taux (par pieds carrés)\",\"FormField.Project_Blocks_Subform.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Date_field\":\"Rendez-vous amoureux\",\"FormButton.Project_Blocks_Subform.submit\":\" Soumettre \",\"Languages List.zh-TW\":\" Chinois traditionnel \",\"Languages List.ja\":\" Japonais \",\"ReportField.All_Projects.Amenities\":\"Équipements\",\"FormButton.Add_User.update\":\" Mettre à jour \",\"ReportField.Your_Added_Properties.Status\":\" Statut \",\"FormField.Add_Flats_Apartments_Shop_Details.Floor_Number\":\" Numéro d'étage \",\"Languages List.ku\":\" kurde \",\"ReportField.All_Flats_by_Builder_Developer.Date_field\":\"Rendez-vous amoureux\",\"Languages List.km\":\" Khmer \",\"Languages List.ko\":\" coréen \",\"FormField.Contact_Seller.Section\":\" Section \",\"ReportField.All_Lands_for_Sale_by_Others.Land_Length\":\"Longueur du terrain\",\"Languages List.kn\":\" Kannada \",\"Languages List.ka\":\" géorgien \",\"ReportField.All_Properties_by_Others.Land_Length\":\"Longueur du terrain\",\"ReportField.All_Shops_for_Sale_by_Others.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"FormButton.Contact_Seller.Call_Me_Back\":\" Rappelle-moi \",\"Languages List.hu\":\" hongrois \",\"ReportField.My_Assigned_Flats_Apartments_Shops.Rate_per_square_feets\":\"Taux (par pieds carrés)\",\"Languages List.hy\":\" arménien \",\"FormField.Add_User.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"FormField.Add_Project.Project_Includes1\":\" Le projet comprend \",\"FormField.Contact_Seller_Button.Added_User\":\" Utilisateur ajouté \",\"Languages List.hr\":\" croate \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"Form.Floor_Details_Subform\":\" Détails du sol Sous-formulaire \",\"PicklistOption.Add_Project.Project_Includes1.4\":\" Appartement \",\"ReportField.Contact_Seller_Report.Viewed_Property_Posted_By1\":\" Propriété sélectionnée Publié par \",\"ReportField.Floor_Details_Subform_Report.Project_Name\":\" nom du projet \",\"PicklistOption.Add_Project.Project_Includes1.3\":\" Terre \",\"ReportField.All_Flats_by_Builder_Developer.Furnishing\":\"Ameublement\",\"Languages List.hi\":\" hindi \",\"FormField.Add_Your_Property.Location1\":\"Emplacement\",\"FormField.Add_Your_Property.Property_Condition\":\" Etat de la propriété \",\"ReportField.All_House_Villas_by_Others.Maintainence_Charge\":\"Charge de maintenance\",\"PicklistOption.Add_Project.Project_Includes1.2\":\" Maison / Villa \",\"PicklistOption.Add_Project.Project_Includes1.1\":\" Boutique \",\"FormButton.Add_Flats_Apartments_Shop_Details.submit\":\" Soumettre \",\"ReportField.All_Properties_by_Others.address_line_12\":\"Emplacement\",\"Languages List.iw\":\" hébreu \",\"PicklistOption.Contact_Seller.Property_Type1.1\":\" Boutique \",\"PicklistOption.Contact_Seller.Property_Type1.2\":\" Maison / Villa \",\"FormButton.Floor_Flats_Apartments_Subform.reset\":\" Réinitialiser \",\"FormField.Add_Your_Property.Furnishing\":\" Ameublement \",\"FormButton.Cities.cancel\":\" Annuler \",\"PicklistOption.Contact_Seller.Property_Type1.3\":\" Terre \",\"PicklistOption.Contact_Seller.Property_Type1.4\":\" Appartement \",\"FormField.Add_Project.Section\":\" Section \",\"Languages List.is\":\" islandais \",\"ReportField.All_Shops_by_Others.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"Languages List.it\":\" italien \",\"CompositeSubFields.Add_Your_Property.Location1.country2\":\" Pays \",\"FormButton.Add_Your_Property.submit\":\" Soumettre \",\"FormField.Add_Flats_Apartments_Shop_Details.Project_Name\":\" nom du projet \",\"FormField.Property_Sale_Details.Agent_Commision\":\"Agent Commision\",\"FormField.Add_Project.Project_Name\":\" nom du projet \",\"FormField.Add_Your_Property.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"ReportField.All_Properties_by_Others.Land_Breadth\":\"Largeur des terres\",\"PicklistOption.Add_Your_Property.Status.1\":\"actif\",\"PicklistOption.Add_Your_Property.Status.2\":\"Inact\",\"FormField.Add_User.Name1\":\" prénom \",\"FormField.Add_User.Member_Type\":\" Type de membre \",\"ReportField.Project_Blocks.Floor_Details.Floor_Number\":\"Détails du plancher\",\"Languages List.nl\":\" néerlandais \",\"FormField.Add_Flats_Apartments_Shop_Details.Added_Time\":\" Temps ajouté \",\"ReportField.Land_House_Villa_Subform_Report.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"Languages List.no\":\" norvégien \",\"FormField.Cities.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"FormField.Project_Blocks_Subform.Record_Status\":\" Statut d'enregistrement \",\"ReportField.All_Projects.Project_Area\":\"Zone du projet (Sq.Ft.)\",\"ReportField.All_Lands_for_Sale_by_Others.Property_For\":\"Propriété pour\",\"Report.Project_Flats_Apartments_Shop\":\" Tous les appartements / Appartements / Détails de la boutique \",\"PicklistOption.Project_Blocks_Subform.Block_Type1.1\":\" Boutique \",\"ReportField.All_Flats_for_Sale_by_Others.Maintainence_Charge\":\"Charge de maintenance\",\"PicklistOption.Project_Blocks_Subform.Block_Type1.2\":\" Maison / Villa \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"FormField.Add_Project.ID\":\" ID \",\"FormField.Floor_Flats_Apartments_Subform.Furnishing\":\" Ameublement \",\"PicklistOption.Project_Blocks_Subform.Block_Type1.3\":\" Terre \",\"ReportField.All_Properties_by_Others.Property_For\":\"Propriété pour\",\"FormField.Add_Your_Property.Modified_User\":\" Utilisateur modifié \",\"PicklistOption.Project_Blocks_Subform.Block_Type1.4\":\" Appartement \",\"FormField.Floor_Flats_Apartments_Subform.ID\":\" ID \",\"Form.Property_Sale_Details\":\"Détails de la vente de propriété\",\"FormField.Add_User.latitude2\":\" latitude \",\"FormField.Land_House_Villa_Subform.Status\":\"Statut\",\"FormField.Contact_Seller.first_name\":\" Prénom \",\"Languages List.lt\":\" lituanien \",\"FormField.Add_Project.Amenities\":\" Équipements \",\"Languages List.lv\":\" letton \",\"ReportField.Land_House_Villa_Subform_Report.Status\":\"Statut\",\"ReportField.Your_Added_Properties.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"Languages List.lo\":\" Laothian \",\"Languages List.la\":\" Latin \",\"ReportField.All_House_Villas_for_Rent_by_Others.Property_For\":\"Propriété pour\",\"ReportField.All_Shops_for_Sale_by_Others.Image\":\"Image\",\"FormField.Add_Your_Property.Number_of_Bathrooms\":\" Nombre de salles de bain \",\"Languages List.ms\":\" malais \",\"ReportField.My_Assigned_Lands_Houses_Villas.Image\":\"Image\",\"Languages List.mr\":\" Marathi \",\"FormField.Add_Your_Property.Parking_Space\":\" Place de parking \",\"Languages List.mt\":\" maltais \",\"Languages List.mk\":\" Macédonien \",\"ReportField.All_Flats_by_Builder_Developer.Block_Name\":\"Nom du bloc\",\"PicklistOption.Add_Your_Property.Furnishing.3\":\" Entièrement meublé \",\"CompositeSubFields.Add_Your_Property.Location1.postal_Code2\":\" code postal \",\"PicklistOption.Add_Your_Property.Furnishing.2\":\" Sémi équipé \",\"FormField.Add_Flats_Apartments_Shop_Details.Modified_User\":\" Utilisateur modifié \",\"PicklistOption.Add_Your_Property.Furnishing.1\":\" Non meublé \",\"FormField.Add_Your_Property.Date_field\":\" Rendez-vous amoureux \",\"ReportField.All_House_Villas_by_Others.Parking_Space\":\"Place de parking\",\"Section.Search_Property\":\" Rechercher une propriété \",\"CompositeSubFields.Contact_Seller.Name1.suffix\":\" Suffixe \",\"FormField.Property_Sale_Details.Sold_at\":\"Vendu à\",\"ReportField.All_Properties_by_Others.Comments\":\"commentaires\",\"Languages List.bg\":\" bulgare \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Project_Name\":\"Sur\",\"ReportField.Cities_Report.ID\":\" ID \",\"Languages List.bn\":\" bengali \",\"CompositeSubFields.Add_User.Name1.suffix\":\" Suffixe \",\"ReportField.All_Shops_for_Rent_by_Others.City1\":\"Ville\",\"FormButton.Add_Project.cancel\":\" Annuler \",\"ReportField.All_House_Villas_for_Rent_by_Others.Member\":\"Membre\",\"Languages List.be\":\" Biélorusse \",\"FormField.Floor_Flats_Apartments_Subform.Floor_Number\":\" Numéro d'étage \",\"FormField.Search_Property_Form.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"FormField.Add_Block_Detail.Block_Name\":\" Nom du bloc \",\"Languages List.az\":\" azerbaïdjanais \",\"PicklistOption.Add_User.prefix.3\":\" Mme. \",\"PicklistOption.Add_User.prefix.1\":\" M. \",\"Languages List.cs\":\" tchèque \",\"PicklistOption.Add_User.prefix.2\":\" Madame. \",\"ReportField.Land_House_Villa_Subform_Report.Number_of_Floors\":\" Nombre d'étages \",\"ReportField.All_Properties_by_Others.Date_field\":\"Rendez-vous amoureux\",\"Languages List.ca\":\" catalan \",\"Section.Users\":\" Utilisateurs \",\"FormField.Land_House_Villa_Subform.Number_of_Bathrooms\":\" Nombre de salles de bain \",\"ReportField.All_Lands_for_Sale_by_Others.Member\":\"Membre\",\"FormField.Floor_Details_Subform.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"Page.Mobile_Search\":\" Tableau de bord mobile \",\"ReportField.Your_Added_Properties.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"FormField.Contact_Seller_Button.Added_Time\":\" Temps ajouté \",\"ReportField.All_Flats_for_Rent_by_Others.Property_Type1\":\"Type de propriété\",\"CompositeSubFields.Add_User.Name1.first_name\":\" Prénom \",\"FormField.Add_Your_Property.Property_For\":\" Propriété pour \",\"FormField.Add_Your_Property.Land_Breadth\":\" Largeur des terres \",\"FormButton.Contact_Seller_Button.Contact_Seller\":\" Contactez le vendeur \",\"FormField.Floor_Flats_Apartments_Subform.Rate_per_square_feets\":\" Taux (par pieds carrés) \",\"PicklistOption.Contact_Seller.prefix.2\":\" Madame. \",\"PicklistOption.Contact_Seller.prefix.3\":\" Mme. \",\"ReportField.All_Shops_for_Rent_by_Others.Maintainence_Charge\":\"Charge de maintenance\",\"PicklistOption.Contact_Seller.prefix.1\":\" M. \",\"ReportField.All_Properties_by_Others.Status\":\" Statut \",\"ReportField.All_Shops_by_Others.Property_For\":\"Propriété pour\",\"FormField.Contact_Seller_Button.Property_Type1\":\" Type de propriété \",\"Languages List.ar\":\" arabe \",\"Languages List.af\":\" afrikaans \",\"FormField.Add_Project.City\":\" Ville \",\"ReportField.All_Projects.Assign_Agent\":\"Agent actuel\",\"ReportField.Contact_Seller_Report.Mobile\":\" Mobile \",\"ReportField.All_Lands_for_Sale_by_Others.Land_Breadth\":\"Largeur des terres\",\"PicklistOption.Add_Your_Property.Property_Type1.3\":\" Boutique \",\"FormButton.Contact_Seller.cancel\":\" Annuler \",\"PicklistOption.Add_Your_Property.Property_Type1.2\":\" Maison / Villa \",\"PicklistOption.Add_Your_Property.Property_Type1.1\":\" Appartement \",\"FormButton.Add_Project.reset\":\" Réinitialiser \",\"FormField.Cities.Modified_Time\":\" Heure modifiée \",\"PicklistOption.Add_Your_Property.Property_Type1.4\":\" Terre \",\"FormField.Land_House_Villa_Subform.Land_Breadth\":\" Largeur des terres \",\"ReportField.All_Users.Image\":\" Image \",\"FormField.Project_Blocks_Subform.Modified_User\":\" Utilisateur modifié \",\"PicklistOption.Add_User.Member_Type.2\":\" Agent / courtier \",\"PicklistOption.Add_User.Member_Type.3\":\" Constructeur / Développeur \",\"Report.All_Shops_for_Rent_by_Others\":\"Tous les magasins à louer par d'autres\",\"PicklistOption.Add_User.Member_Type.1\":\" Particulier / propriétaire \",\"ReportField.All_Lands_by_Builder_Developer.Total_Area\":\"Superficie totale\",\"FormField.Add_Flats_Apartments_Shop_Details.Added_User\":\" Utilisateur ajouté \",\"Languages List.fr\":\" français \",\"PicklistOption.Select_Project_Agent.Assign_agent_in.1\":\"Projet\",\"PicklistOption.Select_Project_Agent.Assign_agent_in.2\":\"Gla\",\"PicklistOption.Select_Project_Agent.Assign_agent_in.3\":\"Choix 3\",\"FormField.Add_Your_Property.latitude2\":\" latitude \",\"Languages List.fi\":\" Finnois \",\"FormField.Floor_Details_Subform.Block_Details_Master_Lookup\":\" Bloquer les détails Master Lookup \",\"ReportField.Floor_Flats_Apartments_Subform_Report.Furnishing\":\"Ameublement\",\"Report.All_Lands_for_Sale_by_Others\":\"Toutes les terres à vendre par d'autres\",\"FormButton.Property_Sale_Details.cancel\":\"Annuler\",\"FormField.Add_Project.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"ReportField.All_Properties_by_Others.Furnishing\":\"Ameublement\",\"Languages List.fa\":\" persan \",\"Languages List.gu\":\" Gujarati \",\"FormField.Add_Flats_Apartments_Shop_Details.ID\":\" ID \",\"FormField.Floor_Flats_Apartments_Subform.Project_Name\":\" nom du projet \",\"ReportField.Contact_Seller_Report.Viewed_Property_Rec_Id\":\"ID de propriété\",\"Languages List.gl\":\" Galicien \",\"FormButton.Floor_Details_Subform.update\":\" Mettre à jour \",\"ReportField.All_House_Villas_for_Sale_by_Others.Property_For\":\"Propriété pour\",\"Languages List.ga\":\" irlandais \",\"ReportField.All_Lands_for_Sale_by_Others.City1\":\"Ville\",\"FormField.Cities.Added_User\":\" Utilisateur ajouté \",\"ReportField.All_Flats_by_Others.City1\":\"Ville\",\"FormField.Contact_Seller.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"Report.All_Flats_for_Sale_by_Others\":\"Tous les appartements à vendre par d'autres\",\"Report.All_Properties_by_Others\":\" Toutes les propriétés par d'autres \",\"ReportField.All_House_Villas_by_Others.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"FormButton.Floor_Details_Subform.reset\":\" Réinitialiser \",\"Languages List.da\":\" danois \",\"FormField.Land_House_Villa_Subform.Image\":\"Image\",\"Languages List.de\":\" allemand \",\"Languages List.cy\":\" gallois \",\"ReportField.Your_Added_Properties.Date_field\":\"Rendez-vous amoureux\",\"ReportField.Land_House_Villa_Subform_Report.Image\":\"Image\",\"FormButton.Floor_Details_Subform.submit\":\" Soumettre \",\"Languages List.es\":\" Espanol \",\"FormField.Land_House_Villa_Subform.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"ReportField.All_Flats_by_Others.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"Languages List.eu\":\" basque \",\"Languages List.et\":\" estonien \",\"FormField.Add_Block_Detail.ID\":\" ID \",\"ReportField.Your_Added_Properties.Property_Type1\":\"Type de propriété\",\"FormField.Cities.City\":\" Ville \",\"Languages List.el\":\" grec \",\"ReportField.All_Shops_by_Others.Property_Condition\":\"Etat de la propriété\",\"Languages List.eo\":\" espéranto \",\"ReportField.All_Flats_for_Rent_by_Others.Floor_Number\":\"Numéro d'étage\",\"Languages List.en\":\" Anglais \",\"ReportField.My_Assigned_Lands_Houses_Villas.Total_Area\":\"Superficie totale\",\"FormButton.Search_Property_Mobile.Submit\":\"Soumettre\",\"FormButton.Add_Your_Property.update\":\" Mettre à jour \",\"FormField.Add_Block_Detail.Input_Flats_Apartments_Shop_Details\":\" Sélectionnez Si vous voulez entrer plus de détails comme Appartements / Appartements / Détails de la boutique de chaque étage dans ce bloc maintenant \",\"FormField.Land_House_Villa_Subform.Record_Status\":\" Statut d'enregistrement \",\"FormField.Floor_Flats_Apartments_Subform.Total_Area_in_square_feets\":\" Superficie totale (en pieds carrés) \",\"FormField.Cities.ID\":\" ID \",\"ReportField.All_Lands_for_Sale_by_Others.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"FormField.Floor_Details_Subform.Modified_User\":\" Utilisateur modifié \",\"ReportField.Your_Added_Properties.Nearest_Landmark\":\"Haut-lieu touristique le plus proche\",\"ReportField.All_Lands_by_Builder_Developer.Land_Breadth\":\"Largeur des terres\",\"FormField.Floor_Details_Subform.Section\":\"Section\",\"Report.Cities_Report\":\" Rapport des villes \",\"FormField.Contact_Seller.Added_Time\":\" Temps ajouté \",\"ReportField.All_Lands_for_Sale_by_Others.Date_field\":\"Date d'ajout\",\"ReportField.Floor_Flats_Apartments_Subform_Report.Assign_Agent\":\"Agent\",\"ReportField.Your_Added_Properties.Land_Length\":\"Longueur du terrain\",\"FormField.Project_Blocks_Subform.Section\":\"Section\",\"FormField.Add_Flats_Apartments_Shop_Details.Flats_Apartments_Shop_Details\":\" Appartements / Appartements / Boutique Détails \",\"FormField.Add_User.ID\":\" ID \",\"PicklistOption.Contact_Seller_Button.Property_Type1.3\":\" Choix 3 \",\"PicklistOption.Contact_Seller_Button.Property_Type1.2\":\" Choix 2 \",\"FormField.Add_User.Image\":\" Image \",\"PicklistOption.Contact_Seller_Button.Property_Type1.1\":\" Choix 1 \",\"FormField.Land_House_Villa_Subform.Land_House_Villa_Number\":\" Numéro de terrain / maison / villa \",\"FormField.Floor_Details_Subform.Added_User\":\" Utilisateur ajouté \",\"ReportField.All_Shops_for_Rent_by_Others.Nearest_Landmark\":\"Haut-lieu touristique le plus proche\",\"FormField.Add_User.district_city2\":\" District de la ville \",\"FormField.Add_Your_Property.Number_of_Bed_Rooms\":\" Nombre de chambres à coucher \",\"Section.Subforms\":\" Sous-formulaires \",\"FormField.Add_Project.Block_Details_Master_ID\":\" Bloc Détails Master - ID \",\"Report.Floor_Details_Subform_Report\":\" Rapport de sous-formulaire de détails du sol \",\"Languages List.yi\":\" yiddish \",\"Report.All_Flats_by_Builder_Developer\":\"Tous les appartements\",\"FormField.Contact_Seller_Button.Modified_Time\":\" Heure modifiée \",\"FormField.Select_Project_Agent.Assign_agent_in\":\"Affecter un agent à\",\"ReportField.All_Lands_for_Sale_by_Others.Maintainence_Charge\":\"Charge de maintenance\",\"ReportField.All_House_Villas_by_Others.Property_For\":\"Propriété pour\",\"ReportField.All_Properties_by_Others.Maintainence_Charge\":\"Charge de maintenance\",\"FormField.Add_Your_Property.Maintainence_Charge\":\" Charge de maintenance \",\"PicklistOption.Select_Project_Agent.rec_IDs.1\":\"1\",\"Form.Contact_Seller_Button\":\" Contacter le bouton du vendeur \",\"ReportField.All_House_Villas_by_Others.Image\":\"Image\",\"FormButton.Property_Sale_Details.submit\":\"Soumettre\",\"ReportField.Floor_Flats_Apartments_Subform_Report.Image\":\"Image\",\"Languages List.zh\":\" chinois \",\"ReportField.All_Lands_for_Sale_by_Others.Nearest_Landmark\":\"Haut-lieu touristique le plus proche\",\"FormField.Cities.Modified_User\":\" Utilisateur modifié \",\"ReportField.All_Lands_for_Sale_by_Others.Comments\":\"commentaires\",\"FormField.Project_Blocks_Subform.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"FormField.Add_Project.Added_User\":\" Utilisateur ajouté \",\"FormField.Contact_Seller_Button.ID\":\" ID \",\"ReportField.All_Flats_for_Sale_by_Others.Number_of_Bathrooms\":\"Nombre de salles de bain\",\"ReportField.All_Flats_by_Others.Nearest_Landmark\":\"Haut-lieu touristique le plus proche\",\"ReportField.Project_Blocks_Subform_Report.Block_Name\":\" Nom du bloc \",\"FormField.Search_Property_Form.ID\":\" ID \",\"FormField.Add_Project.Project_Area\":\" Zone du projet (Sq.Ft.) \",\"ReportField.All_Lands_for_Sale_by_Others.Rent_Per_Month\":\"Loyer par mois\",\"ReportField.My_Assigned_Flats_Apartments_Shops.Project_Name\":\"nom du projet\",\"ReportField.All_Shops_for_Sale_by_Others.Rate_Per_Square_Feet\":\"Taux (par pieds carrés)\",\"ReportField.All_Shops_by_Others.Number_of_Bathrooms\":\"Nombre de salles de bain\",\"ReportField.All_Flats_by_Builder_Developer.Image\":\"Image\",\"ReportField.All_House_Villas_for_Sale_by_Others.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"ReportField.Your_Added_Properties.Floor_Number\":\"Numéro d'étage\",\"ReportField.Floor_Flats_Apartments_Subform_Report.Status\":\" Statut \",\"FormButton.Add_Block_Detail.update\":\" Mettre à jour \",\"FormField.Contact_Seller.ID\":\" ID \",\"FormField.Land_House_Villa_Subform.Block_Name\":\" Nom du bloc \",\"ReportField.All_Lands_for_Sale_by_Others.Property_Condition\":\"Etat de la propriété\",\"FormField.Contact_Seller.Mobile\":\" Mobile \",\"ReportField.Your_Added_Properties.Furnishing\":\"Ameublement\",\"ReportField.Land_House_Villa_Subform_Report.Land_Breadth\":\"Largeur des terres\",\"FormField.Add_User.Record_Status\":\" Statut d'enregistrement \",\"FormField.Add_Your_Property.Nearest_Landmark\":\" Haut-lieu touristique le plus proche \",\"FormField.Add_User.last_name\":\" Nom de famille \",\"FormField.Add_User.prefix\":\" Préfixe \",\"ReportField.All_Properties_by_Others.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"FormField.Search_Property_Form.Added_Time\":\" Temps ajouté \",\"ReportField.Floor_Details_Subform_Report.Block_Name\":\" Nom du bloc \",\"ReportField.All_Shops_by_Others.Parking_Space\":\"Place de parking\",\"FormField.Floor_Flats_Apartments_Subform.Number_of_BathRooms\":\" Nombre de salles de bain \",\"ReportField.All_Flats_for_Sale_by_Others.Property_Condition\":\"Etat de la propriété\",\"FormButton.Add_Block_Detail.cancel\":\" Annuler \",\"FormField.Cities.Added_Time\":\" Temps ajouté \",\"FormField.Land_House_Villa_Subform.Project_Name\":\" nom du projet \",\"PicklistOption.Add_Your_Property.Parking_Space.3\":\" 2 Deux-roues \",\"PicklistOption.Add_Your_Property.Parking_Space.2\":\" 1 Deux-roues \",\"PicklistOption.Add_Your_Property.Parking_Space.1\":\" Pas d'espace de stationnement \",\"FormField.Floor_Details_Subform.Project_Name\":\" nom du projet \",\"Form.Cities\":\" Villes \",\"ReportField.All_Lands_by_Builder_Developer.Block_Name\":\"Nom du bloc\",\"ReportField.All_Shops_by_Others.Rent_Per_Month\":\"Loyer par mois\",\"FormField.Floor_Flats_Apartments_Subform.Modified_Time\":\" Heure modifiée \",\"Report.All_Property_Sale_Details\":\"Tous les détails de vente de propriété\",\"FormButton.Select_Project_Agent.Reset\":\"Réinitialiser\",\"ReportField.All_Flats_by_Builder_Developer.Project_Name\":\"nom du projet\",\"ReportField.Your_Added_Properties.City1\":\"Ville\",\"FormField.Add_Project.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"ReportField.Project_Flats_Apartments_Shop.Floor_Number\":\" Numéro d'étage \",\"FormField.Add_Your_Property.City1\":\" Ville \",\"PicklistOption.Add_Your_Property.Property_Condition.1\":\" Nouvelle propriété \",\"PicklistOption.Add_Your_Property.Property_Condition.2\":\" Revente \",\"FormField.Floor_Details_Subform.Modified_Time\":\" Heure modifiée \",\"FormField.Floor_Details_Subform.Record_Status\":\" Statut d'enregistrement \",\"FormField.Add_Block_Detail.Modified_Time\":\" Heure modifiée \",\"ReportField.All_Flats_by_Builder_Developer.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"ReportField.All_Flats_for_Sale_by_Others.Furnishing\":\"Ameublement\",\"Languages List.ro\":\" roumain \",\"PicklistOption.Land_House_Villa_Subform.Furnishing.1\":\" Non meublé \",\"PicklistOption.Land_House_Villa_Subform.Furnishing.2\":\" Sémi équipé \",\"Languages List.ru\":\" russe \",\"PicklistOption.Land_House_Villa_Subform.Furnishing.3\":\" Entièrement meublé \",\"ReportField.All_Shops_for_Sale_by_Others.Floor_Number\":\"Numéro d'étage\",\"ReportField.All_Properties_by_Others.Sold_By\":\" Vendu par \",\"FormField.Search_Property_Form.Bedroom\":\" Chambre \",\"FormField.Contact_Seller.Added_User\":\" Utilisateur ajouté \",\"ReportField.All_Property_Sale_Details.Other_Property_ID\":\"Autre ID de propriété\",\"Languages List.ta\":\" Tamil \",\"Languages List.te\":\" Telugu \",\"Languages List.th\":\" thaïlandais \",\"FormField.Add_Block_Detail.Record_Status\":\" Statut d'enregistrement \",\"ReportField.Project_Blocks.Project_Name\":\"nom du projet\",\"PicklistOption.Add_Your_Property.Parking_Space.5\":\" 2 quatre roues \",\"PicklistOption.Add_Your_Property.Parking_Space.4\":\" 1 Four-Wheeler \",\"Languages List.sq\":\" albanais \",\"FormField.Floor_Flats_Apartments_Subform.Added_User\":\" Utilisateur ajouté \",\"Languages List.sw\":\" Swahili \",\"Languages List.sv\":\" suédois \",\"FormField.Floor_Details_Subform.Added_Time\":\" Temps ajouté \",\"FormField.Contact_Seller.Name1\":\" prénom \",\"Languages List.sk\":\" slovaque \",\"ReportField.All_Property_Sale_Details.Commission_Percent\":\"Pourcentage de commission\",\"Languages List.sl\":\" slovène \",\"PicklistOption.Add_Project.Amenities.10\":\" Salle pour jeu de société \",\"FormField.Add_Your_Property.Record_Status\":\" Statut d'enregistrement \",\"FormButton.Add_Flats_Apartments_Shop_Details.update\":\" Mettre à jour \",\"PicklistOption.Add_Project.Amenities.14\":\" Clubhouse riche en fonctionnalités \",\"ReportField.Land_House_Villa_Subform_Report.Date_field\":\"Date d'ajout\",\"PicklistOption.Add_Project.Amenities.13\":\" Luxueux \",\"PicklistOption.Add_Project.Amenities.12\":\" Half Ball Ball Court et piste de jogging \",\"CompositeSubFields.Add_Your_Property.Location1.district_city2\":\" District de la ville \",\"PicklistOption.Add_Project.Amenities.11\":\" Tennis sur gazon \",\"Report.Contact_Seller_Report\":\" Contacter le vendeur \",\"PicklistOption.Floor_Flats_Apartments_Subform.Parking_Space.2\":\" 1 Deux-roues \",\"PicklistOption.Floor_Flats_Apartments_Subform.Parking_Space.1\":\" Pas d'espace de stationnement \",\"PicklistOption.Floor_Flats_Apartments_Subform.Parking_Space.4\":\" 1 Four-Wheeler \",\"FormButton.Land_House_Villa_Subform.reset\":\" Réinitialiser \",\"PicklistOption.Floor_Flats_Apartments_Subform.Parking_Space.3\":\" 2 Deux-roues \",\"ReportField.Contact_Seller_Report.Property_Type1\":\" Type de propriété \",\"FormField.Add_Your_Property.Modified_Time\":\" Heure modifiée \",\"PicklistOption.Floor_Flats_Apartments_Subform.Parking_Space.5\":\" 2 quatre roues \",\"ReportField.All_House_Villa_by_Builder_Developer.Total_Area\":\"Superficie totale\",\"Form.Land_House_Villa_Subform\":\" Terrain / Maison / Villa Subform \",\"Languages List.pt\":\" Portugais \",\"FormField.Contact_Seller_Button.Modified_User\":\" Utilisateur modifié \",\"Report.Project_Blocks\":\"Blocs de projet\",\"Languages List.pl\":\" polonais \",\"ReportField.All_House_Villa_by_Builder_Developer.Number_of_Bathrooms\":\"Nombre de salles de bain\",\"FormField.Add_Flats_Apartments_Shop_Details.Block_Name\":\" Nom du bloc \",\"FormField.Land_House_Villa_Subform.Modified_User\":\" Utilisateur modifié \",\"ReportField.All_Shops_for_Sale_by_Others.Member\":\"Membre\",\"ReportField.All_Flats_for_Rent_by_Others.Property_For\":\"Propriété pour\",\"ReportField.All_Shops_by_Others.Nearest_Landmark\":\"Haut-lieu touristique le plus proche\",\"FormButton.Add_Your_Property.cancel\":\" Annuler \",\"ReportField.All_Shops_by_Others.Number_of_Bed_Rooms\":\"Nombre de chambres à coucher\",\"ReportField.All_Shops_by_Others.Maintainence_Charge\":\"Charge de maintenance\",\"ReportField.All_Flats_for_Rent_by_Others.Rent_Per_Month\":\"Loyer par mois\",\"App.real-estate-management\":\"Gestion immobilière \",\"FormButton.Add_Block_Detail.reset\":\" Réinitialiser \",\"ReportField.All_House_Villas_for_Sale_by_Others.Image\":\"Image\",\"ReportField.All_Shops_by_Others.Image\":\"Image\",\"ReportField.All_Flats_for_Sale_by_Others.Date_field\":\"Rendez-vous amoureux\",\"ReportField.Floor_Flats_Apartments_Subform_Report.Parking_Space\":\"Place de parking\",\"ReportField.All_Shops_by_Builder_Developer.Image\":\"Image\",\"ReportField.All_Shops_by_Builder_Developer.Maintainence_Charge\":\"Charge de maintenance\",\"FormField.Add_Your_Property.Comments\":\" commentaires \",\"ReportField.All_Flats_by_Builder_Developer.Number_of_BathRooms\":\"Nombre de salles de bain\",\"CompositeSubFields.Add_User.Address1.state_province2\":\" Etat / Province \",\"ReportField.Your_Added_Properties.Parking_Space\":\"Place de parking\",\"ReportField.All_Projects.Project_Includes1\":\" Le projet comprend \",\"ReportField.All_Flats_by_Builder_Developer.Parking_Space\":\"Place de parking\",\"PicklistOption.Add_Project.Amenities.1\":\" Grand salon de réception \",\"PicklistOption.Add_Project.Amenities.3\":\" Gym entièrement équipé et studio de santé \",\"PicklistOption.Add_Project.Amenities.2\":\" Luxueux, Clubhouse riche en fonctionnalités \",\"ReportField.Project_Flats_Apartments_Shop.Flats_Apartments_Shop_Details.Flats_Apartments_Shop_Number\":\" Appartements / Appartements / Boutique Détails \",\"FormButton.Contact_Seller.reset\":\" Réinitialiser \",\"FormButton.Floor_Flats_Apartments_Subform.cancel\":\" Annuler \",\"ReportField.All_House_Villas_by_Others.Furnishing\":\"Ameublement\",\"ReportField.All_Flats_for_Sale_by_Others.Image\":\"Image\",\"FormButton.Land_House_Villa_Subform.update\":\" Mettre à jour \",\"ReportField.All_Flats_for_Rent_by_Others.Nearest_Landmark\":\"Haut-lieu touristique le plus proche\",\"PicklistOption.Add_Project.Amenities.5\":\" Coin des anciens \",\"PicklistOption.Add_Project.Amenities.4\":\" Piscine \",\"ReportField.My_Assigned_Flats_Apartments_Shops.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"PicklistOption.Add_Project.Amenities.7\":\" Kids Arena avec Crèche \",\"PicklistOption.Add_Project.Amenities.6\":\" Danse / Aérobic / Yoga Studio \",\"PicklistOption.Add_Project.Amenities.9\":\" Salle de billard pour billard / billard \",\"PicklistOption.Add_Project.Amenities.8\":\" Arène sportive intérieure \",\"ReportField.Land_House_Villa_Subform_Report.Furnishing\":\" Ameublement \",\"ReportField.All_Property_Sale_Details.Property_from\":\"Propriété de\",\"ReportField.All_Properties_by_Others.Parking_Space\":\"Place de parking\",\"Languages List.tr\":\" turc \",\"FormField.Add_User.Modified_User_IP_Address\":\" Adresse IP de l'utilisateur modifié \",\"ReportField.All_Flats_for_Sale_by_Others.Total_Area_in_square_feets\":\"Superficie totale (en pieds carrés)\",\"ReportField.All_Flats_by_Others.Floor_Number\":\"Numéro d'étage\",\"ReportField.Cities_Report.City\":\" Ville \",\"Form.Add_User\":\" Ajouter un utilisateur \",\"FormField.Floor_Details_Subform.Number_of_Flats_Apartments_Shops\":\" Nombre d'appartements / Appartements / Magasins \",\"Languages List.tl\":\" Philippin \",\"FormField.Add_Flats_Apartments_Shop_Details.Added_User_IP_Address\":\" Adresse IP de l'utilisateur ajouté \",\"FormField.Floor_Flats_Apartments_Subform.Date_field\":\" Rendez-vous amoureux \",\"ReportField.Land_House_Villa_Subform_Report.Rate_per_square_feets\":\"Taux (par pieds carrés)\",\"ReportField.All_Properties_by_Others.City1\":\"Ville\",\"ReportField.All_Shops_for_Sale_by_Others.Number_of_Bathrooms\":\"Nombre de salles de bain\",\"ReportField.All_Lands_by_Builder_Developer.Land_Length\":\"Longueur du terrain\",\"Languages List.vi\":\" vietnamien \",\"ReportField.All_Shops_for_Rent_by_Others.Floor_Number\":\"Numéro d'étage\",\"FormButton.Floor_Details_Subform.cancel\":\" Annuler \",\"Languages List.ur\":\" Urdu \",\"FormField.Add_User.Address1\":\" Adresse \",\"FormField.Floor_Flats_Apartments_Subform.Modified_User\":\" Utilisateur modifié \",\"PicklistOption.Search_Property_Form.Bedroom.1\":\" 1 BHK \",\"PicklistOption.Search_Property_Form.Bedroom.2\":\" 2 BHK \",\"PicklistOption.Search_Property_Form.Bedroom.3\":\" 3 BHK \",\"FormField.Land_House_Villa_Subform.Number_of_Bed_Rooms\":\" Nombre de chambres à coucher \",\"ReportField.Contact_Seller_Report.Email\":\" Email \",\"ReportField.Land_House_Villa_Subform_Report.Built_Area\":\"Zone construite\",\"ReportField.All_Flats_for_Rent_by_Others.Property_Condition\":\"Etat de la propriété\"}}"
}
}