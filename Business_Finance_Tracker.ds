/*
 * Author       : app.zohocreator
 * Generated on : 06-May-2020 23:58:21
 * Version      : 1.0
 */
 application "Business Finance Tracker"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "IST"
 	time format = "24-hr"
	section Account_Details
	{
		displayname= "Account Details"
		icon = "users-2-contacts-44"
		form Add_Account_Details
		{
			displayname = "Add Account Details"
			success message = "Account Detail Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Account_Name
			(
    			type = text
				displayname = "Account Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Account_Code
			(
    			type = text
				displayname = "Account Code"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Account_Type
			(
				type = picklist
				displayname = "Account Type"
				values  = Account_Types.ID
    			displayformat = [Account_Type]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Transaction_Type
			(
				type = radiobuttons
				displayname = "Transaction Type"
				values = {"Payable", "Receivable ", "Payable & Receivable"}
				initial value = "Payable & Receivable"
				layout = 3
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Currency
			(
				type = picklist
				values  = Add_Currency.ID
    			displayformat = [Currency]
				allow new entries = true
				[
					displayname = "Add Currency"
				]
				sortorder = ascending
    			description
    			[
    				type = help_text
    			 	message = "Select currency this account based on."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Open_Balance
			(
				type = decimal
				displayname = "Open Balance"
				maxchar = 16
    			description
    			[
    				type = help_text
    			 	message = "Enter amount in account based currency (you are selected)."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Open_Balance_In_Base_Currency
			(
				type = decimal
				displayname = "Open Balance In Base Currency"
				maxchar = 18
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Account_Status
			(
				type = radiobuttons
				displayname = "Account Status"
				values = {"Active", "Archive"}
				initial value = "Active"
				layout = 2
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-contacts-44"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Account_Types
	{
		displayname= "Account Types"
		icon = "shopping-cart-simple"
		form Account_Types
		{
			displayname = "Account Types"
			success message = "Account Type Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Account_Type
			(
    			type = text
				displayname = "Account Type"
    			description
    			[
    				type = help_text
    			 	message = "Eg: Bank Account, Petty cash, Wallet, Liability..."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-cart-simple"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Dashboard
	{
		icon = "ui-1-dashboard-half"
				 page Dashboard 
	 	 { 
 	 	 displayname = "Dashboard" 

 	 	 icon = "" 
	 	 Content="<zml \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"displayType\":\"card\",\"design\":\"fluid\",\"style\":\"padding-right:0px;padding-top:0px;padding-bottom:0px;padding-left:0px;\"}}'\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"20%\"\n   \t>\n\t<dspZml id='zml_snippet2'>\n\t<![CDATA[htmlpage zml_snippet2()\ndisplayname = &quot;zml_snippet&quot;\ncontent\n&lt;%{\n\tcomp_det = Add_Company_Details[ID != 0];\n\tif(comp_det.count() == 0)\n\t{\n\t\topenUrl(zoho.appuri + &quot;#Form:Add_Company_Details&quot;,&quot;same window&quot;);\n\t}\n\telse\n\t{\n\t\t%&gt;\n&lt;panel&gt;\n  &lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n    &lt;pc width=&apos;100%&apos; bgColor=&apos;#FFFFFF&apos; padding=&apos;20px&apos; hAlign=&apos;center&apos; vAlign=&apos;middle&apos;&gt;\n      &lt;pr height=&apos;auto&apos; width=&apos;auto&apos;&gt;\n        &lt;pc&gt;\n          &lt;pr&gt;\n            &lt;pc&gt;\n\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;This Fiscal Year&apos; size=&apos;2&apos; color=&apos;#333333&apos; textAlign=&apos;center&apos; bold=&apos;true&apos;&gt; &lt;\/text&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n          &lt;pr&gt;\n            &lt;pc paddingTop=&apos;5px&apos;&gt;\n&lt;%\n\t\tthis_fiscal_year = Make_Your_Fiscal_Year[Fiscal_Year_Status == &quot;Current&quot;];\n\t\tif(this_fiscal_year.count() == 0)\n\t\t{\n\t\t\topenUrl(zoho.appuri + &quot;#Form:Make_Your_Fiscal_Year&quot;,&quot;same window&quot;);\n\t\t}\n\t\t%&gt;\n&lt;text type=&apos;Text&apos; value=&apos;&lt;%=this_fiscal_year.Fiscal_Year%&gt;&apos; size=&apos;3&apos; color=&apos;#959090&apos; textAlign=&apos;center&apos; displayType=&apos;actual&apos; decimalSeperator=&apos;.&apos; numberScale=&apos;none&apos;&gt; &lt;\/text&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n        &lt;\/pc&gt;\n      &lt;\/pr&gt;\n    &lt;\/pc&gt;\n  &lt;\/pr&gt;\n  &lt;pr height=&apos;1px&apos; width=&apos;fill&apos;&gt;\n\t  &lt;pc width=&apos;100%&apos; bgColor=&apos;#CDCBCB&apos;&gt;\n\t  &lt;\/pc&gt;\n  &lt;\/pr&gt;\n &lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n    &lt;pc width=&apos;100%&apos; bgColor=&apos;#FFFFFF&apos; paddingTop=&apos;30px&apos; padding=&apos;10px&apos; hAlign=&apos;center&apos; vAlign=&apos;middle&apos;&gt;\n      &lt;pr height=&apos;auto&apos; width=&apos;auto&apos;&gt;\n        &lt;pc&gt;\n\t\t  &lt;pr&gt;\n            &lt;pc&gt;\n              &lt;text type=&apos;Text&apos; value=&apos;Cash Balance&apos; size=&apos;3&apos; color=&apos;#333333&apos; textAlign=&apos;center&apos;&gt; &lt;\/text&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n\t\t  &lt;pr&gt;\n            &lt;pc padding=&apos;5px&apos;&gt;\n              &lt;text type=&apos;Form Data&apos; value=&apos;thisapp.Add_Account_Details.Open_Balance_In_Base_Currency.sum&apos; size=&apos;5&apos; color=&apos;#2196F3&apos; bold=&apos;true&apos; marginTop=&apos;2px&apos; textAlign=&apos;center&apos; displayType=&apos;actual&apos; decimalPlaces=&apos;2&apos; decimalSeperator=&apos;.&apos; numberScale=&apos;M&apos;&gt; &lt;\/text&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n        &lt;\/pc&gt;\n      &lt;\/pr&gt;\n    &lt;\/pc&gt;\n  &lt;\/pr&gt;\n &lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n    &lt;pc width=&apos;100%&apos; bgColor=&apos;#FFFFFF&apos; padding=&apos;10px&apos; hAlign=&apos;center&apos; vAlign=&apos;middle&apos;&gt;\n      &lt;pr height=&apos;auto&apos; width=&apos;auto&apos;&gt;\n        &lt;pc&gt;\n          &lt;pr&gt;\n            &lt;pc&gt;\n              &lt;text type=&apos;Text&apos; value=&apos;Incoming&apos; size=&apos;3&apos; color=&apos;#333333&apos; textAlign=&apos;center&apos;&gt; &lt;\/text&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n\t\t  &lt;pr&gt;\n            &lt;pc padding=&apos;5px&apos;&gt;\n              &lt;text type=&apos;Form Data&apos; value=&apos;thisapp.Cash_flow_Form.Incoming_Amount.sum&apos; criteria=&apos;(((Fiscal_Year.Fiscal_Year_Status == &amp;quot;Current&amp;quot;)))&apos; size=&apos;5&apos; color=&apos;#2196F3&apos; bold=&apos;true&apos; textAlign=&apos;center&apos; displayType=&apos;actual&apos; decimalPlaces=&apos;2&apos; decimalSeperator=&apos;.&apos; numberScale=&apos;M&apos;&gt; &lt;\/text&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n        &lt;\/pc&gt;\n      &lt;\/pr&gt;\n    &lt;\/pc&gt;\n  &lt;\/pr&gt;\n  &lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n    &lt;pc width=&apos;100%&apos; bgColor=&apos;#FFFFFF&apos; padding=&apos;10px&apos; hAlign=&apos;center&apos; vAlign=&apos;middle&apos;&gt;\n      &lt;pr height=&apos;auto&apos; width=&apos;auto&apos;&gt;\n        &lt;pc&gt;\n          &lt;pr&gt;\n            &lt;pc&gt;\n              &lt;text type=&apos;Text&apos; value=&apos;Outgoing&apos; size=&apos;3&apos; color=&apos;#333333&apos; textAlign=&apos;center&apos;&gt; &lt;\/text&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n\t\t  &lt;pr&gt;\n            &lt;pc padding=&apos;5px&apos;&gt;\n              &lt;text type=&apos;Form Data&apos; value=&apos;thisapp.Cash_flow_Form.Outgoing_Amount.sum&apos; criteria=&apos;(((Fiscal_Year.Fiscal_Year_Status == &amp;quot;Current&amp;quot;)))&apos; size=&apos;5&apos; color=&apos;#2196F3&apos; bold=&apos;true&apos; textAlign=&apos;center&apos; displayType=&apos;actual&apos; decimalPlaces=&apos;2&apos; decimalSeperator=&apos;.&apos; numberScale=&apos;M&apos;&gt; &lt;\/text&gt;\n            &lt;\/pc&gt;\n          &lt;\/pr&gt;\n        &lt;\/pc&gt;\n      &lt;\/pr&gt;\n    &lt;\/pc&gt;\n  &lt;\/pr&gt;\n&lt;\/panel&gt;\n&lt;%\n\t}\n\n}%&gt;]]>\n<\/dspZml>\n<\/column><column\n   \t\t width=\"60%\"\n   \t>\n\t<chart    \t\t type = 'Column'\n   \t\t appLinkName = 'thisapp'\n   \t\t formLinkName = 'Cash_flow_Form'\n   \t\t xtitle = 'Audition Date'\n   \t\t xfield = 'Audition_Date'\n   \t\t yfields = 'value:Closing_Balance,value:Profit_Lose'\n   \t\t bgColor = '#FFFFFF'\n   \t\t theme = 'theme2'\n   \t\t legendPos = 'center.top'\n   \t\t titleSize = '4'\n   \t\t title = 'Cashflow'\n\n\/>\n<\/column><column\n   \t\t width=\"20%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t padding = '5px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<button    \t\t text = 'Add Income'\n   \t\t size = '3'\n   \t\t color = '#ffffff'\n   \t\t bgColor = '#0072F4'\n   \t\t type = 'flat'\n   \t\t action = 'OpenForm'\n   \t\t componentLinkName = 'Add_Income'\n   \t\t target = 'popup'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t padding = '5px'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<button    \t\t text = 'Add Expense'\n   \t\t size = '3'\n   \t\t color = '#ffffff'\n   \t\t bgColor = '#0072F4'\n   \t\t type = 'flat'\n   \t\t action = 'OpenForm'\n   \t\t componentLinkName = 'Add_Expense'\n   \t\t target = 'popup'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t padding = '5px'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc    \t\t vAlign = 'middle'\n\n>\n\t<button    \t\t text = 'Add Contact'\n   \t\t size = '3'\n   \t\t color = '#ffffff'\n   \t\t bgColor = '#0072F4'\n   \t\t type = 'flat'\n   \t\t action = 'OpenForm'\n   \t\t componentLinkName = 'New_Contact'\n   \t\t target = 'popup'\n\n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"25%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n\n>\n\t<pr    \t\t height = '50px'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Total Receivable'\n   \t\t size = '2'\n   \t\t color = '#595959'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc><pc    \t\t width = '100%'\n   \t\t hAlign = 'left'\n\n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Sales.Net_Total_In_Base_Currency.sum'\n   \t\t criteria = '(((Status == &quot;Invoice&quot;)))'\n   \t\t size = '4'\n   \t\t color = '#4C7DE8'\n   \t\t bold = 'true'\n   \t\t marginLeft = '20px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n   \t\t decimalPlaces = '2'\n   \t\t decimalSeperator = '.'\n   \t\t numberScale = 'none'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr    \t\t height = '1px'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#CDCBCB'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr    \t\t height = '100px'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '50%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t hAlign = 'center'\n\n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Current'\n   \t\t size = '2'\n   \t\t color = '#5F3F2F'\n   \t\t marginTop = '30px'\n   \t\t textAlign = 'left'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr    \t\t height = 'auto'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t hAlign = 'center'\n\n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Income.Amount_In_Base_Currency.sum'\n   \t\t size = '4'\n   \t\t color = '#41BF64'\n   \t\t bold = 'true'\n   \t\t marginTop = '10px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n   \t\t decimalPlaces = '2'\n   \t\t decimalSeperator = '.'\n   \t\t numberScale = 'none'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc><pc    \t\t width = '50%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t hAlign = 'center'\n\n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Overdue'\n   \t\t size = '2'\n   \t\t color = '#5F3F2F'\n   \t\t marginTop = '30px'\n   \t\t textAlign = 'left'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr    \t\t height = 'auto'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t hAlign = 'center'\n\n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Sales.Remaining_Balance_In_base_Currency.sum'\n   \t\t criteria = '(((Status == &quot;Invoice&quot;)))'\n   \t\t size = '4'\n   \t\t color = '#FF614E'\n   \t\t bold = 'true'\n   \t\t marginTop = '10px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n   \t\t decimalPlaces = '2'\n   \t\t decimalSeperator = '.'\n   \t\t numberScale = 'none'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n\n>\n\t<pr    \t\t height = '50px'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Total Payable'\n   \t\t size = '2'\n   \t\t color = '#595959'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc><pc    \t\t width = '100%'\n   \t\t hAlign = 'left'\n\n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Bill1.Net_Total.sum'\n   \t\t size = '4'\n   \t\t color = '#4C7DE8'\n   \t\t bold = 'true'\n   \t\t marginLeft = '20px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr    \t\t height = '1px'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#CDCBCB'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr    \t\t height = '100px'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '50%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t hAlign = 'center'\n\n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Current'\n   \t\t size = '2'\n   \t\t color = '#5F3F2F'\n   \t\t marginTop = '30px'\n   \t\t textAlign = 'left'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr    \t\t height = 'auto'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t hAlign = 'center'\n\n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Expense.Amount.sum'\n   \t\t size = '4'\n   \t\t color = '#41BF64'\n   \t\t bold = 'true'\n   \t\t marginTop = '10px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n   \t\t decimalPlaces = '2'\n   \t\t decimalSeperator = '.'\n   \t\t numberScale = 'none'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc><pc    \t\t width = '50%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t hAlign = 'left'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t hAlign = 'center'\n\n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Overdue'\n   \t\t size = '2'\n   \t\t color = '#5F3F2F'\n   \t\t marginTop = '30px'\n   \t\t textAlign = 'left'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr    \t\t height = 'auto'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t hAlign = 'center'\n\n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Bill1.Amount_To_Pay.sum'\n   \t\t size = '4'\n   \t\t color = '#FF614E'\n   \t\t bold = 'true'\n   \t\t marginTop = '10px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row>\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<chart    \t\t type = 'Donut'\n   \t\t appLinkName = 'thisapp'\n   \t\t formLinkName = 'Money_Transactions_Form'\n   \t\t xfield = 'Transaction_Type'\n   \t\t ytitle = 'Amount'\n   \t\t yfields = 'sum:Amount_In_Base_Currency'\n   \t\t DelugeCriteria = '(((Amount_Transaction_Date in this month)))'\n   \t\t bgColor = '#FFFFFF'\n   \t\t theme = 'theme1'\n   \t\t legendPos = 'right.center'\n   \t\t titleSize = '4'\n   \t\t title = 'Current Month'\n\n\/>\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<chart    \t\t type = 'Donut'\n   \t\t appLinkName = 'thisapp'\n   \t\t formLinkName = 'Money_Transactions_Form'\n   \t\t xtitle = 'Transaction Type'\n   \t\t xfield = 'Transaction_Type'\n   \t\t ytitle = 'Amount'\n   \t\t yfields = 'sum:Amount_In_Base_Currency'\n   \t\t DelugeCriteria = '(((Amount_Transaction_Date in this week)))'\n   \t\t bgColor = '#FFFFFF'\n   \t\t theme = 'theme1'\n   \t\t legendPos = 'right.center'\n   \t\t titleSize = '4'\n   \t\t title = 'Current Week'\n\n\/>\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<dspZml id='zml_snippet3'>\n\t<![CDATA[htmlpage zml_snippet3()\ndisplayname = &quot;zml_snippet&quot;\ncontent\n&lt;%{\n\t%&gt;\n&lt;panel&gt;\n\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t&lt;pc width=&apos;100%&apos; bgColor=&apos;#FFFFFF&apos; paddingBottom=&apos;10px&apos; padding=&apos;20px&apos; hAlign=&apos;left&apos; vAlign=&apos;middle&apos;&gt;\n\t\t\t&lt;pr height=&apos;20px&apos; &gt;\n\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Quick Links&apos; size=&apos;3&apos;  color=&apos;#333333&apos; textAlign=&apos;left&apos; bold=&apos;true&apos;&gt; &lt;\/text&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t&lt;\/pc&gt;\n\t&lt;\/pr&gt;\n\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t&lt;pc width=&apos;100%&apos; paddingLeft=&apos;20px&apos; padding=&apos;10px&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;10%&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t\t\t&lt;image color=&apos;#0072F4&apos; bgColor=&apos;#FFFFFF&apos; imageType=&apos;icon&apos; value=&apos;zc-li-solid shopping-tag-sale&apos; iconsize=&apos;1&apos; unicodeValue=&apos;eaa5&apos; \/&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t&lt;pc width=&apos;90%&apos; hAlign=&apos;left&apos; paddingLeft=&apos;10px&apos;&gt;\n\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Sales Details&apos; size=&apos;3&apos; color=&apos;#0072F4&apos; textAlign=&apos;left&apos; action=&apos;Page&apos; componentLinkName=&apos;Sales_Details&apos; target=&apos;same-window&apos;&gt; &lt;\/text&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t&lt;\/pc&gt;\n\t&lt;\/pr&gt;\n\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t&lt;pc width=&apos;100%&apos; paddingLeft=&apos;20px&apos; padding=&apos;10px&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;10%&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t\t\t&lt;image color=&apos;#0072F4&apos; bgColor=&apos;#FFFFFF&apos; imageType=&apos;icon&apos; value=&apos;zc-li-solid design-webpage&apos; iconsize=&apos;1&apos; unicodeValue=&apos;ee33&apos; \/&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t&lt;pc width=&apos;90%&apos; hAlign=&apos;left&apos; paddingLeft=&apos;10px&apos;&gt;\n\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Project Details&apos; size=&apos;3&apos; color=&apos;#0072F4&apos; textAlign=&apos;left&apos; action=&apos;Page&apos; componentLinkName=&apos;Project_Details&apos; target=&apos;same-window&apos;&gt; &lt;\/text&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t&lt;\/pc&gt;\n\t&lt;\/pr&gt;\n\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t&lt;pc width=&apos;100%&apos; paddingLeft=&apos;20px&apos; padding=&apos;10px&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;10%&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t\t\t&lt;image color=&apos;#0072F4&apos; bgColor=&apos;#FFFFFF&apos; imageType=&apos;icon&apos; value=&apos;zc-li-solid ui-3-playlist&apos; iconsize=&apos;1&apos;  unicodeValue=&apos;ee0d&apos; \/&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t&lt;pc width=&apos;90%&apos; hAlign=&apos;left&apos; paddingLeft=&apos;10px&apos;&gt;\n\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Accounts Summary&apos; size=&apos;3&apos; color=&apos;#0072F4&apos; textAlign=&apos;left&apos; action=&apos;Page&apos; componentLinkName=&apos;Sales_Details&apos; target=&apos;same-window&apos;&gt; &lt;\/text&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t&lt;\/pc&gt;\n\t&lt;\/pr&gt;\n\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t&lt;pc width=&apos;100%&apos; paddingLeft=&apos;20px&apos; padding=&apos;10px&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;10%&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t\t\t&lt;image color=&apos;#0072F4&apos; bgColor=&apos;#FFFFFF&apos; imageType=&apos;icon&apos; value=&apos;zc-li-solid shopping-stock&apos; iconsize=&apos;1&apos; unicodeValue=&apos;eaa1&apos; \/&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t&lt;pc width=&apos;90%&apos; hAlign=&apos;left&apos; paddingLeft=&apos;10px&apos;&gt;\n\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Product Details&apos; size=&apos;3&apos; color=&apos;#0072F4&apos; textAlign=&apos;left&apos; action=&apos;Page&apos; componentLinkName=&apos;Sales_Details&apos; target=&apos;same-window&apos;&gt; &lt;\/text&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t&lt;\/pc&gt;\n\t&lt;\/pr&gt;\n\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t&lt;pc width=&apos;100%&apos; paddingLeft=&apos;20px&apos; padding=&apos;10px&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;10%&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t\t\t&lt;image color=&apos;#0072F4&apos; bgColor=&apos;#FFFFFF&apos; imageType=&apos;icon&apos; value=&apos;zc-li-solid business-handout&apos; iconsize=&apos;1&apos;  unicodeValue=&apos;ea3a&apos; \/&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t&lt;pc width=&apos;90%&apos; hAlign=&apos;left&apos; paddingLeft=&apos;10px&apos;&gt;\n\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Monthly Income&apos; size=&apos;3&apos; color=&apos;#0072F4&apos; textAlign=&apos;left&apos; action=&apos;Report&apos; componentLinkName=&apos;Monthly_Income&apos; target=&apos;same-window&apos;&gt; &lt;\/text&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t&lt;\/pc&gt;\n\t&lt;\/pr&gt;\n\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t&lt;pc width=&apos;100%&apos; paddingLeft=&apos;20px&apos; padding=&apos;10px&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;10%&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t\t\t&lt;image color=&apos;#0072F4&apos; bgColor=&apos;#FFFFFF&apos; imageType=&apos;icon&apos; value=&apos;zc-li-solid shopping-credit-card-in&apos; iconsize=&apos;1&apos;  unicodeValue=&apos;ea8c&apos; \/&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t&lt;pc width=&apos;90%&apos; hAlign=&apos;left&apos; paddingLeft=&apos;10px&apos;&gt;\n\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Monthly Expense&apos; size=&apos;3&apos; color=&apos;#0072F4&apos; textAlign=&apos;left&apos; action=&apos;Report&apos; componentLinkName=&apos;Monthly_Expense&apos; target=&apos;same-window&apos;&gt; &lt;\/text&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t&lt;\/pc&gt;\n\t&lt;\/pr&gt;\n\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t&lt;pc width=&apos;100%&apos; paddingLeft=&apos;20px&apos; padding=&apos;10px&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;10%&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t\t\t&lt;image color=&apos;#0072F4&apos; bgColor=&apos;#FFFFFF&apos; imageType=&apos;icon&apos; value=&apos;zc-li-solid ui-3-chart-bars&apos; iconsize=&apos;1&apos; unicodeValue=&apos;edef&apos; \/&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t&lt;pc width=&apos;90%&apos; hAlign=&apos;left&apos; paddingLeft=&apos;10px&apos;&gt;\n\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Income Vs Expense&apos; size=&apos;3&apos; color=&apos;#0072F4&apos; textAlign=&apos;left&apos; action=&apos;Report&apos; componentLinkName=&apos;Income_vs_Expense&apos; target=&apos;same-window&apos;&gt; &lt;\/text&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t&lt;\/pc&gt;\n\t&lt;\/pr&gt;\n\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t&lt;pc width=&apos;100%&apos; paddingLeft=&apos;20px&apos; padding=&apos;10px&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t&lt;pr height=&apos;auto&apos; width=&apos;fill&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;10%&apos; hAlign=&apos;left&apos;&gt;\n\t\t\t\t\t&lt;image color=&apos;#0072F4&apos; bgColor=&apos;#FFFFFF&apos; imageType=&apos;icon&apos; value=&apos;zc-li-solid health-pulse-chart&apos; iconsize=&apos;1&apos; unicodeValue=&apos;e8d4&apos; \/&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t&lt;pc width=&apos;90%&apos; hAlign=&apos;left&apos; paddingLeft=&apos;10px&apos;&gt;\n\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Cash Flow&apos; size=&apos;3&apos; color=&apos;#0072F4&apos; textAlign=&apos;left&apos; action=&apos;Report&apos; componentLinkName=&apos;Monthly_Cash_Flow&apos; target=&apos;same-window&apos;&gt; &lt;\/text&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t&lt;\/pc&gt;\n\t&lt;\/pr&gt;\n\t\n&lt;\/panel&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dspZml>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Income
	{
		icon = "business-handout"
		form Add_Income
		{
			displayname = "Add Income"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Account
			(
				type = picklist
				values  = Add_Account_Details[Transaction_Type == "Receivable " || Transaction_Type == "Payable & Receivable"].ID
    			displayformat = [Account_Name + " - " + Account_Code]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			plain
			(
    			type = plaintext
				value = "Currency Here"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Income_Amount
			(
				type = decimal
				displayname = "Income Amount"
    			description
    			[
    				type = tooltip
    			 	message = "Enter  amount in Account's currency"
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Amount_In_Base_Currency
			(
				type = decimal
				displayname = "Amount In Base Currency"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Transaction_Date
			(
    			type = datetime
				displayname = "Transaction Date"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Debt
			(
    			type = checkbox
				initial value = false
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Notes
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Incomes_Report
		{
			displayName = "Incomes Report"
			show all rows from Add_Income    
			(
				Income_Amount as "Income Amount"
				(
					width = 173px
				)
				Account
				Notes
				(
					width = 648px
				)
				Transaction_Date as "Transaction Date"
				(
					width = 216px
				)
				Amount_In_Base_Currency as "Amount In Base Currency"
				(
					width = 289px
				)
				Debt
				(
					width = 160px
				)
			)
			group by
			(
				Account ascending
			)
			sort by
			(
				Transaction_Date descending
			)
			options
			(
				icon = "business-laptop-71"
	 		)
			conditional formatting
			(
				"debt"
				{
				condition = (Debt == true)
				fields = [Income_Amount, Amount_In_Base_Currency]
				format = "font-weight:bold;color:#e64d3b;"
				}
				"Debt Field"
				{
				condition = (Debt == true)
				fields = [Debt]
				format = "color:#ffffff;background-color:#e84c3d;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Transaction_Date as "Transaction Date"
							Account
							Income_Amount as "Income Amount"
							Amount_In_Base_Currency as "Amount In Base Currency"
							Notes
							Debt
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Transaction_Date as "Transaction Date"
							Account
							Income_Amount as "Income Amount"
							Amount_In_Base_Currency as "Amount In Base Currency"
							Notes
							Debt
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Income_by_Sales
		{
			displayName = "Incomes By Sales"
			show all rows from Money_Transactions_Form  [Sale.Sales_ID is not null]  
			(
				Month_field as "Month"
				Expense_Amount as "Expense Amount"
				Income_Amount as "Income Amount"
				Amount
				Account
				Amount_In_Base_Currency as "Amount In Base Currency"
				Expense_Bill.Transaction_Currency as "Transaction Currency"
				Sale
				(
					view = Sales_Report
				)
				Amount_Transaction_Date as "Amount Transaction Date"
				Notes
			)
			options
			(
				icon = "shopping-tag"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Sale
							Amount_Transaction_Date as "Amount Transaction Date"
							Expense_Bill.Transaction_Currency as "Transaction Currency"
							Account
							Amount
							Amount_In_Base_Currency as "Amount In Base Currency"
							Notes
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Sale
							Amount
							Amount_In_Base_Currency as "Amount In Base Currency"
							Account
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Sale"
		     			related field =  Sale[Sale.Sales_ID is not null]
						fields
						(
							Sales_ID as "Sales ID"
							Customer
							Invoice_Date as "Invoice Date"
							Transaction_Currency as "Transaction Currency"
							Tax as "Tax(%)"
							Shipping_Charges as "Shipping Charges"
							Adjustments
							Net_Total as "Net Total"
							Paid_Amount as "Paid Amount"
							Remaining_Balance as "Remaining Balance"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Incomes_By_Projects
		{
			displayName = "Incomes By Projects"
			show all rows from Money_Transactions_Form  [Project.Project_Details is not null && Transaction_Type == "Receivable"]  
			(
				Month_field as "Month"
				Expense_Amount as "Expense Amount"
				Income_Amount as "Income Amount"
				Amount
				Amount_In_Base_Currency as "Amount In Base Currency"
				Account
				Amount_Transaction_Date as "Amount Transaction Date"
				Notes
				Expense_Bill.Transaction_Currency as "Transaction Currency"
				Project
			)
			options
			(
				icon = "social-1-logo-creative-market"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							Amount_Transaction_Date as "Amount Transaction Date"
							Expense_Bill.Transaction_Currency as "Transaction Currency"
							Account
							Amount
							Amount_In_Base_Currency as "Amount In Base Currency"
							Notes
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							Amount
							Amount_In_Base_Currency as "Amount In Base Currency"
							Account
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Project"
		     			related field =  Project[Project.Project_Details is not null && Transaction_Type == "Receivable"]
						fields
						(
							Project_Name as "Project Name"
							Customer
							Project_Order_Date as "Project Order Date"
							Project_Start_Date as "Project Start Date"
							Project_Final_Date as "Project Final Date"
							Project_Details as "Project Details"
							Project_Worth as "Project Worth"
							Transaction_Currency as "Transaction Currency"
							Total_Project_Expenses as "Total Project Expenses"
							Paid_Amount as "Paid Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Expense
	{
		icon = "shopping-credit-card-in"
		form Add_Expense
		{
			displayname = "Add Expense"
			success message = "Expense Added Successfully"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Expense_Bill
			(
				type = picklist
				displayname = "Expense Bill"
				values  = Add_Bill1.ID
    			displayformat = [Bill_No]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Add_Project.ID
    			bidirectional = Project_Expenses
    			displayformat = [Project_Name]
				sortorder = ascending
    			description
    			[
    				type = help_text
    			 	message = "If expense is for project Please select that project."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Expense_Date
			(
    			type = date
				displayname = "Expense Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Vendor
			(
				type = picklist
				values  = New_Contact[Contact_Type == "Vendor" || Contact_Type == "both"].ID
    			displayformat = [" " + Name.first_name1 + "  - " + Company_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Amount
			(
				type = decimal
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Expense_Account
			(
				type = picklist
				displayname = "Expense Account"
				values  = Add_Account_Details[Transaction_Type == "payable" || Transaction_Type == "Payable & Receivable"].ID
    			displayformat = [Account_Name + " - " + Account_Code]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Notes
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Expenses
		{
			displayName = "All Expenses"
			show all rows from Add_Expense    
			(
				Expense_Date as "Expense Date"
				(
					width = 141px
				)
				Amount
				(
					width = 200px
				)
				Expense_Account as "Expense Account"
				(
					width = 297px
				)
				Vendor
				(
					width = 297px
				)
				Notes
				(
					width = 352px
				)
				Expense_Bill as "Expense Bill"
			)
			options
			(
				icon = "shopping-credit-card-in"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Expense_Date as "Expense Date"
							Amount
							Expense_Account as "Expense Account"
							Vendor
							Notes
							Expense_Bill as "Expense Bill"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Expense_Date as "Expense Date"
							Vendor
							Amount
							Expense_Account as "Expense Account"
							Notes
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Vendor"
		     			related field =  Vendor
						fields
						(
							Contact_ID as "Contact ID"
							Contact_Type as "Contact Type"
							Name
							Email
							Phone_Number as "Phone Number"
							Address
							Preferred_Contact_Method as "Preferred Contact Method"
							Contact_Status as "Contact Status"
							Contact_As as "Contact As"
							Company_Name as "Company Name"
							Company_Email as "Company Email"
							Type_Of_Business as "Type Of Business"
							Additional_Information as "Additional Information"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Project_Expenses
		{
			displayName = "Project Expenses"
			show all rows from Add_Expense  [Project.Project_Name is not null]  
			(
				Expense_Date as "Expense Date"
				Expense_Account as "Expense Account"
				Amount
				Vendor
				Notes
				Project
			)
			group by
			(
				Project ascending
			)
			options
			(
				icon = "social-1-logo-creative-market"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							Expense_Date as "Expense Date"
							Amount
							Expense_Account as "Expense Account"
							Vendor
							Notes
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Expense_Date as "Expense Date"
							Vendor
							Amount
							Expense_Account as "Expense Account"
							Notes
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Vendor"
		     			related field =  Vendor[Project.Project_Name is not null]
						fields
						(
							Contact_ID as "Contact ID"
							Contact_Type as "Contact Type"
							Name
							Email
							Phone_Number as "Phone Number"
							Address
							Preferred_Contact_Method as "Preferred Contact Method"
							Contact_Status as "Contact Status"
							Contact_As as "Contact As"
							Company_Name as "Company Name"
							Company_Email as "Company Email"
							Type_Of_Business as "Type Of Business"
							Additional_Information as "Additional Information"
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Project"
		     			related field =  Project[Project.Project_Name is not null]
						fields
						(
							Project_Name as "Project Name"
							Customer
							Project_Order_Date as "Project Order Date"
							Project_Start_Date as "Project Start Date"
							Project_Final_Date as "Project Final Date"
							Project_Details as "Project Details"
							Project_Worth as "Project Worth"
							Transaction_Currency as "Transaction Currency"
							Amount_in_Customer_s_Currency as "Amount in Customer's Currency"
							Total_Project_Expenses as "Total Project Expenses"
							Paid_Amount as "Paid Amount"
							Amount_To_Be_Paid as "Amount To Be Paid"
							Amount_Recieved_Account as "Amount Recieved Account"
							Project_Status as "Project Status"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		pivotchart Monthly_Expense
		{ 
			displayname = "Monthly Expense"
			based on Autoview_1540982053870_Add_Expense
					hide = true
							icon = "business-currency-dollar"				show all rows from Add_Expense
				(
 					Expense_Date  as "Expense Date"
 					Vendor 
 					Project 
 					Notes 
 					Amount 
 					Expense_Bill  as "Expense Bill"
 					Expense_Account  as "Expense Account"
				)
		}
	}
	section Products
	{
		icon = "shopping-stock"
		form Add_Product
		{
			displayname = "Add Product"
			success message = "Product Added Successfully"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Add_Project.ID
    			displayformat = [Project_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Type
			(
				type = radiobuttons
				values = {"Sale", "Service", "Both"}
				initial value = "Sale"
				layout = 3
    			description
    			[
    				type = none
    			 	message = "Select"
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Product_Name
			(
    			type = text
				displayname = "Product Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Unit
			(
				type = picklist
				values = {"Quantity", "Kg", "Dozen"}
				others option = true
    			description
    			[
    				type = help_text
    			 	message = "This Item will be measure by this unit"
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			SKU
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Rate
			(
				type = INR
				maxchar = 16
	 			row = 1
	 			column = 1   
				width = medium
			)
			Notes
			(
    			type = textarea
				displayname = "Notes "
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-2-3d-29"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Products
		{
			displayName = "All Products"
			show all rows from Add_Product    
			(
				Type
				Product_Name as "Product Name"
				Unit
				SKU
				Rate
				Notes as "Notes "
				Project
			)
			options
			(
				icon = "design-2-group"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Type
							Product_Name as "Product Name"
							Unit
							SKU
							Rate
							Notes as "Notes "
							Project
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Type
							Product_Name as "Product Name"
							Unit
							SKU
							Rate
							Notes as "Notes "
							Project
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Sales_Details
	{
		displayname= "Sales Details"
		icon = "business-businessman-03"
				 page Sales_Details 
	 	 { 
 	 	 displayname = "Sales Details" 

 	 	 icon = "" 
	 	 Content="<zml \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"displayType\":\"card\",\"design\":\"fluid\",\"style\":\"padding-right:0px;padding-top:0px;padding-bottom:0px;padding-left:0px;\"}}'\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"66%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'Customers'\n   \t\t target = 'new-window'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Customers'\n   \t\t size = '3'\n   \t\t color = '#333333'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<image    \t\t color = '#FFFFFF'\n   \t\t bgColor = '#FF8318'\n   \t\t width = '40px'\n   \t\t height = '40px'\n   \t\t type = 'icon'\n   \t\t value = 'zc-li-solid users-single-01'\n   \t\t size = '2'\n   \t\t marginTop = '5px'\n   \t\t cornerRadius = '20px'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'Customers'\n   \t\t target = 'new-window'\n\n\/>\n<\/pc><pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.New_Contact.ID.count'\n   \t\t criteria = '((((Contact_Type == &quot;Customer&quot;)||(Contact_Type == &quot;both&quot;))))'\n   \t\t size = '8'\n   \t\t color = '#FF8318'\n   \t\t bold = 'true'\n   \t\t marginLeft = '5px'\n   \t\t marginTop = '5px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n   \t\t decimalSeperator = '.'\n   \t\t numberScale = 'none'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'Sales_Report'\n   \t\t target = 'new-window'\n   \t\t parameters = 'Status=Estimation'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'No Of Estimations'\n   \t\t size = '3'\n   \t\t color = '#333333'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<image    \t\t color = '#FFFFFF'\n   \t\t bgColor = '#FF8318'\n   \t\t width = '40px'\n   \t\t height = '40px'\n   \t\t type = 'icon'\n   \t\t value = 'zc-li-solid business-money-time'\n   \t\t size = '2'\n   \t\t marginTop = '5px'\n   \t\t cornerRadius = '20px'\n\n\/>\n<\/pc><pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Sales.ID.count'\n   \t\t criteria = '(((Status == &quot;Estimation&quot;)))'\n   \t\t size = '8'\n   \t\t color = '#FF8318'\n   \t\t bold = 'true'\n   \t\t marginLeft = '5px'\n   \t\t marginTop = '5px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n   \t\t decimalSeperator = '.'\n   \t\t numberScale = 'none'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#E3E9F6'\n   \t\t padding = '15px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Total No Of Sales'\n   \t\t size = '3'\n   \t\t color = '#333333'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Sales.ID.count'\n   \t\t criteria = '(((Status == &quot;Invoice&quot;)))'\n   \t\t size = '5'\n   \t\t color = '#4C7DE8'\n   \t\t bold = 'true'\n   \t\t marginTop = '2px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr    \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '45%'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'Fully_Paid_Invoices'\n   \t\t target = 'new-window'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Paid'\n   \t\t size = '3'\n   \t\t color = '#333333'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Sales.ID.count'\n   \t\t criteria = '((((Payment_Status == &quot;Fully Paid&quot;)&amp;&amp;(Status == &quot;Invoice&quot;))))'\n   \t\t size = '5'\n   \t\t color = '#4C7DE8'\n   \t\t bold = 'true'\n   \t\t marginTop = '2px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc><pc    \t\t width = '45%'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t action = 'OpenReport'\n   \t\t componentLinkName = 'Overdue_Invoices'\n   \t\t target = 'new-window'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Overdue'\n   \t\t size = '3'\n   \t\t color = '#333333'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Sales.ID.count'\n   \t\t criteria = '((((Payment_Status != &quot;Fully Paid&quot;)&amp;&amp;(Status == &quot;Invoice&quot;))))'\n   \t\t size = '5'\n   \t\t color = '#4C7DE8'\n   \t\t bold = 'true'\n   \t\t marginTop = '2px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#E8FAEF'\n   \t\t padding = '15px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Net-sales'\n   \t\t size = '3'\n   \t\t color = '#333333'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Sales.Net_Total.sum'\n   \t\t size = '5'\n   \t\t color = '#09B24D'\n   \t\t bold = 'true'\n   \t\t marginTop = '2px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr    \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '45%'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Current'\n   \t\t size = '3'\n   \t\t color = '#333333'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Sales.Paid_Amount.sum'\n   \t\t size = '5'\n   \t\t color = '#09B24D'\n   \t\t bold = 'true'\n   \t\t marginTop = '2px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n   \t\t decimalPlaces = '2'\n   \t\t decimalSeperator = '.'\n   \t\t numberScale = 'none'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc><pc    \t\t width = '45%'\n   \t\t padding = '20px'\n\n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Overdue'\n   \t\t size = '3'\n   \t\t color = '#333333'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Sales.Remaining_Balance.sum'\n   \t\t size = '5'\n   \t\t color = '#09B24D'\n   \t\t bold = 'true'\n   \t\t marginTop = '2px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row>\n<\/column><column\n   \t\t width=\"34%\"\n   \t>\n\t<dspZml id='zml_snippet'>\n\t<![CDATA[htmlpage zml_snippet()\ncontent\n&lt;%{\n\t%&gt;\n&lt;panel&gt; \n\t&lt;pr height=&apos;fill&apos; width=&apos;fill&apos;&gt;\n    \t&lt;pc width=&apos;100%&apos; bgColor=&apos;#FFFFFF&apos;&gt;\n\t\t\t&lt;pr width=&apos;fill&apos; &gt;\n        \t\t&lt;pc width=&apos;46%&apos; hAlign=&apos;center&apos; textAlign=&apos;left&apos; padding=&apos;10px&apos;&gt;\n          \t\t\t&lt;pr&gt;\n           \t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t  &lt;text type=&apos;Text&apos; value=&apos;Recent Sales&apos; size=&apos;3&apos; color=&apos;#333333&apos; bold=&apos;true&apos; textAlign=&apos;left&apos;&gt; &lt;\/text&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t&lt;\/pc&gt;\n        \t\t&lt;pc width=&apos;46%&apos; hAlign=&apos;center&apos; textAlign=&apos;right&apos; padding=&apos;10px&apos;&gt;\n\t\t\t\t  &lt;pr&gt;\n\t\t\t\t\t&lt;pc &gt;\n\t\t\t\t\t\t&lt;image color=&apos;#FFFFFF&apos; bgColor=&apos;#0072F4&apos; width=&apos;40px&apos; height=&apos;40px&apos; imageType=&apos;icon&apos; value=&apos;zc-li-solid ui-2-fat-add&apos; iconsize=&apos;2&apos; marginTop=&apos;5px&apos; cornerRadius=&apos;20px&apos; action=&apos;Form&apos; componentLinkName=&apos;Add_Sales&apos; target=&apos;popup&apos; unicodeValue=&apos;edac&apos; \/&gt;\n\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t  &lt;\/pr&gt;\n        \t\t&lt;\/pc&gt;\n      \t\t&lt;\/pr&gt;\n\t\t\t&lt;pr width=&apos;fill&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;100%&apos;&gt;\n\t\t\t\t\t&lt;pr width=&apos;fill&apos;&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;25%&apos; hAlign=&apos;center&apos; textAlign=&apos;center&apos; padding=&apos;10px&apos; bgColor=&apos;#e1e3e6&apos;&gt;\n\t\t\t\t\t\t\t&lt;pr&gt;\n\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t  &lt;text type=&apos;Text&apos; value=&apos;Invoice&apos; size=&apos;2&apos; bold=&apos;true&apos;&gt; &lt;\/text&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;25%&apos; hAlign=&apos;center&apos; textAlign=&apos;center&apos; padding=&apos;10px&apos; bgColor=&apos;#e1e3e6&apos;&gt;\n\t\t\t\t\t\t  &lt;pr&gt;\n\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Customer ID&apos; size=&apos;2&apos; bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t  &lt;\/pr&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;25%&apos; hAlign=&apos;center&apos; textAlign=&apos;center&apos;  padding=&apos;10px&apos; bgColor=&apos;#e1e3e6&apos;&gt;\n\t\t\t\t\t\t\t&lt;pr&gt;\n\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t  &lt;text type=&apos;Text&apos; value=&apos;Netsale&apos; size=&apos;2&apos;  bold=&apos;true&apos;&gt; &lt;\/text&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;25%&apos;  hAlign=&apos;center&apos; textAlign=&apos;center&apos;  padding=&apos;10px&apos; bgColor=&apos;#e1e3e6&apos;&gt;\n\t\t\t\t\t\t  &lt;pr&gt;\n\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Date\/Time&apos;  size=&apos;2&apos;  bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t  &lt;\/pr&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t&lt;\/pr&gt;\n&lt;%\n\tsales = Add_Sales[Status == &quot;Invoice&quot;] sort by Added_Time desc range from 0 to 4;\n\tbg_color = &quot;#f8f8fa&quot;;\n\tfor each  sale in sales\n\t{\n\t\tif(bg_color == &quot;#f8f8fa&quot;)\n\t\t{\n\t\t\tbg_color = &quot;#FFFFFF&quot;;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbg_color = &quot;#f8f8fa&quot;;\n\t\t}\n\t\t%&gt;\n&lt;pr width=&apos;fill&apos;&gt;\n\t\t\t\t\t\t\t\t&lt;pc width=&apos;25%&apos; hAlign=&apos;center&apos; textAlign=&apos;center&apos;  bgColor=&apos;&lt;%=bg_color%&gt;&apos; padding=&apos;10px&apos;&gt;\n\t\t\t\t\t\t\t\t\t&lt;pr&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t\t\t  &lt;text type=&apos;Text&apos; value=&apos;&lt;%=sale.Sales_ID%&gt;&apos; size=&apos;2&apos; color=&apos;#333333&apos;&gt; &lt;\/text&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t&lt;pc width=&apos;25%&apos; hAlign=&apos;center&apos; textAlign=&apos;center&apos;  bgColor=&apos;&lt;%=bg_color%&gt;&apos; padding=&apos;10px&apos;&gt;\n\t\t\t\t\t\t\t\t  &lt;pr&gt;\n\t\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;&lt;%=sale.Customer.Contact_ID%&gt;&apos; size=&apos;2&apos; color=&apos;#333333&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t  &lt;\/pr&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t&lt;pc width=&apos;25%&apos; hAlign=&apos;center&apos; textAlign=&apos;center&apos; bgColor=&apos;&lt;%=bg_color%&gt;&apos; padding=&apos;10px&apos;&gt;\n\t\t\t\t\t\t\t\t\t&lt;pr&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t\t\t  &lt;text type=&apos;Text&apos; value=&apos;&lt;%=sale.Net_Total%&gt;&apos; size=&apos;2&apos; color=&apos;#333333&apos;&gt; &lt;\/text&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t&lt;pc width=&apos;25%&apos;  hAlign=&apos;center&apos; textAlign=&apos;center&apos;  bgColor=&apos;&lt;%=bg_color%&gt;&apos; padding=&apos;10px&apos;&gt;\n\t\t\t\t\t\t\t\t  &lt;pr&gt;\n\t\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;&lt;%=sale.Added_Time%&gt;&apos; size=&apos;1&apos; color=&apos;#333333&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t  &lt;\/pr&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t&lt;\/pr&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t\t&lt;pr width=&apos;fill&apos;&gt;\n\t\t\t\t\t\t\t\t&lt;pc width=&apos;100%&apos;  hAlign=&apos;center&apos; textAlign=&apos;center&apos;  padding=&quot;20px&quot;&gt;\n\t\t\t\t\t\t\t\t  &lt;pr&gt;\n\t\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;See all sales&apos; size=&apos;3&apos; color=&apos;#0072F4&apos; action=&apos;Report&apos; componentLinkName=&apos;Sales_Report&apos; target=&apos;new-window&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t  &lt;\/pr&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t&lt;\/pr&gt;\n\t\n\t\t&lt;\/pc&gt;\n\t&lt;\/pr&gt;\n&lt;\/panel&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dspZml>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"66%\"\n   \t>\n\t<chart    \t\t type = 'Line'\n   \t\t appLinkName = 'thisapp'\n   \t\t formLinkName = 'Money_Transactions_Form'\n   \t\t xfield = 'Amount_Transaction_Date'\n   \t\t yfields = 'sum:Amount'\n   \t\t bgColor = '#FFFFFF'\n   \t\t theme = '#7ccb8d'\n   \t\t legendPos = 'center.top'\n   \t\t titleSize = '4'\n   \t\t title = 'This Month Sales'\n\n\/>\n<\/column><column\n   \t\t width=\"34%\"\n   \t>\n\t<chart    \t\t type = 'Semi Donut'\n   \t\t appLinkName = 'thisapp'\n   \t\t formLinkName = 'Add_Sales'\n   \t\t xtitle = 'Payment Status'\n   \t\t xfield = 'Payment_Status'\n   \t\t ytitle = 'Invoices'\n   \t\t yfields = 'count:Sales_ID'\n   \t\t DelugeCriteria = '(((Status == &quot;Invoice&quot;)))'\n   \t\t bgColor = '#FFFFFF'\n   \t\t theme = 'theme2'\n   \t\t legendPos = 'center.top'\n   \t\t titleSize = '4'\n   \t\t title = 'Invoices by Payment Status'\n\n\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
		form Add_Sales
		{
			displayname = "Add Sales"
			success message = "New sale has been added successfully!"
			field alignment = left
			feature property = 32
			Section2
			(
				type = section
				displayname = "Section"
	 			row = 1
	 			column = 0   
				width = medium
			)
			Sales_ID
			(
    			type = autonumber
				displayname = "Sales ID"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Status
			(
				type = radiobuttons
				values = {"Estimation", "Invoice"}
				initial value = "Estimation"
				layout = 2
	 			row = 1
	 			column = 1   
				width = medium
			)
			Section3
			(
				type = section
				displayname = "Section"
	 			row = 2
	 			column = 0   
				width = medium
			)
			Estimation_Date
			(
    			type = date
				displayname = "Estimation Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 1   
				width = medium
			)
			Invoice_Date
			(
    			type = date
				displayname = "Invoice Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Customer
			(
				type = picklist
				values  = New_Contact.ID
    			displayformat = [" " + Name.first_name1 + " - " + Email]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			Expiry_date
			(
    			type = date
				displayname = "Expiry date"
				alloweddays = 0,1,2,3,4,5,6
    			description
    			[
    				type = tooltip
    			 	message = "Estimation will be expired this date if it has not moved as invoice"
    			]
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Transaction_Currency
			(
				type = picklist
				displayname = "Transaction Currency"
				values  = Add_Currency.ID
    			displayformat = [Currency]
				sortorder = ascending
	 			row = 2
	 			column = 2   
				width = medium
			)
			Currency_Details
			(
    			type = plaintext
				value = "Currency Rate here....<br />"
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Item_Details
			(
				type = grid
				displayname = "Item Details"
	    
				S_No
				(
					type = number
					maxchar = 3
					width = small
				)
				must have Product
				(
					type = picklist
					values  = Add_Product.ID
    				displayformat = [Product_Name + " - " + SKU]
					sortorder = ascending
					width = medium
				)
				Unit_Price
				(
					type = decimal
					displayname = "Unit Price"
    				description
    				[
    					type = tooltip
    				 	message = "Price in customer's currency rate"
    				]
					width = small
				)
				must have Quantity
				(
					type = number
					width = small
				)
				Tax
				(
					type = picklist
					values  = Add_Tax_Rates.ID
    				displayformat = [Tax_Rate + "% - " + Tax_Name]
					sortorder = ascending
					width = small
				)
				must have Subtotal
				(
					type = decimal
					width = small
				)
    			description
    			[
    				type = help_text
    			 	message = "Amounts are shows in customer's currency rate."
    			]
	 			row = 3
	 			column = 1   
				width = 300px
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 4
	 			column = 0   
				width = medium
			)
			Total
			(
				type = decimal
				initial value = 0
	 			row = 4
	 			column = 1   
				width = medium
			)
			must have Tax
			(
    			type = percentage
				displayname = "Tax(%)"
				initial value = 0%
    			description
    			[
    				type = help_text
    			 	message = "This field can not be empty"
    			]
	 			row = 4
	 			column = 1   
				width = medium
			)
			must have Shipping_Charges
			(
				type = decimal
				displayname = "Shipping Charges"
				initial value = 0
    			description
    			[
    				type = help_text
    			 	message = "Amount for shipping the goods.\n(This field can not be empty)"
    			]
	 			row = 4
	 			column = 1   
				width = medium
			)
			Adjustments
			(
				type = decimal
				initial value = 0
    			description
    			[
    				type = help_text
    			 	message = "Adjust the total amount of the transaction. Eg. +10 or -10.\n(This field can not be  empty)"
    			]
	 			row = 4
	 			column = 1   
				width = medium
			)
			Net_Total
			(
    			type = formula
				displayname = "Net Total"
				value =  input.Tax / 100 * input.Total + input.Total + input.Shipping_Charges + input.Adjustments
				visibility = true
	 			row = 4
	 			column = 1   
				width = medium
			)
			Section
			(
				type = section
	 			row = 5
	 			column = 0   
				width = medium
			)
			must have Paid_Amount
			(
				type = decimal
				displayname = "Paid Amount"
				initial value = 0
    			description
    			[
    				type = help_text
    			 	message = "Give Amount in Customer currency rate"
    			]
	 			row = 5
	 			column = 1   
				width = medium
			)
			Account
			(
				type = picklist
				values  = Add_Account_Details.ID
    			displayformat = [Account_Name]
				sortorder = ascending
    			description
    			[
    				type = help_text
    			 	message = "This transaction has done by this account."
    			]
	 			row = 5
	 			column = 1   
				width = medium
			)
			Payment_Status
			(
				type = radiobuttons
				displayname = "Payment Status"
				values = {"Unpaid", "Partialy Paid", "Fully Paid"}
				initial value = "Unpaid"
	 			row = 5
	 			column = 1   
				width = medium
			)
			Remaining_Balance
			(
    			type = formula
				displayname = "Remaining Balance"
				value =  input.Tax / 100 * input.Total + input.Total + input.Shipping_Charges + input.Adjustments - input.Paid_Amount
				visibility = true
	 			row = 5
	 			column = 2   
				width = medium
			)
			Section5
			(
				type = section
				displayname = "Hidden"
	 			row = 6
	 			column = 0   
				width = medium
			)
			Net_Total_In_Base_Currency
			(
				type = decimal
				displayname = "Net Total In Base Currency"
	 			row = 6
	 			column = 1   
				width = medium
			)
			Paid_Amount_In_Base_Currency
			(
				type = decimal
				displayname = "Paid Amount In Base Currency"
	 			row = 6
	 			column = 1   
				width = medium
			)
			Remaining_Balance_In_base_Currency
			(
				type = decimal
				displayname = "Remaining Balance In base Currency"
	 			row = 6
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Sales_Report
		{
			displayName = "Sales Report"
			show all rows from Add_Sales    
			(
				Payment_Status as "Payment Status"
				Net_Total as "Net Total"
				Expiry_date as "Expiry date"
				custom action "Move To Invoice"
				(
	  			workflow = Move_To_Invoice_Workflow
				show action in view header = true
				show action in edit record menu = true
				column header = "Move To Invoice"
				condition = (Status == "Estimation")
				)
				Status
				Transaction_Currency as "Transaction Currency"
				Estimation_Date as "Estimation Date"
				Customer
				Net_Total_In_Base_Currency as "Net Total In Base Currency"
				Sales_ID as "Sales ID"
			)
			group by
			(
				Status ascending
			)
			sort by
			(
				Status ascending
			)
			options
			(
				icon = "business-businessman-03"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Status
							Sales_ID as "Sales ID"
							Customer
							Transaction_Currency as "Transaction Currency"
							Net_Total as "Net Total"
							Net_Total_In_Base_Currency as "Net Total In Base Currency"
				"Move To Invoice"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Sales_ID as "Sales ID"
							Estimation_Date as "Estimation Date"
							Expiry_date as "Expiry date"
							Transaction_Currency as "Transaction Currency"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Customer"
		     			related field =  Customer
						fields
						(
							Name
							Phone_Number as "Phone Number"
							Email
							Company_Name as "Company Name"
							Company_Email as "Company Email"
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Item Details"
		     			related field =  Item_Details
						fields
						(
							S_No
							Product
							Unit_Price as "Unit Price"
							Quantity
							Tax
							Subtotal
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Move To Invoice"
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Overdue_Invoices
		{
			displayName = "Overdue Invoices"
			show all rows from Add_Sales  [Status == "Invoice" && Payment_Status == "Unpaid" || Payment_Status == "Partialy Paid"]  
			(
				Tax as "Tax(%)"
				Total
				Shipping_Charges as "Shipping Charges"
				Adjustments
				custom action "Recieve amount"
				(
	  			workflow = Recieve_amount_work_flow
				show action in view header = true
				show action in edit record menu = true
				column header = "Recieve amount"
				)
				Customer.Type_Of_Business as "Type Of Business"
				Account.Description
				Payment_Status as "Payment Status"
				Invoice_Date as "Invoice Date"
				Customer
				Transaction_Currency as "Transaction Currency"
				Sales_ID as "Sales ID"
				Net_Total as "Net Total"
				Paid_Amount as "Paid Amount"
				Paid_Amount_In_Base_Currency as "Paid Amount In Base Currency"
				Net_Total_In_Base_Currency as "Net Total In Base Currency"
				Remaining_Balance as "Remaining Balance"
				Remaining_Balance_In_base_Currency as "Remaining Balance In base Currency"
			)
			group by
			(
				Invoice_Date ascending
			)
			sort by
			(
				Invoice_Date ascending
			)
			options
			(
				icon = "shopping-receipt"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Sales_ID as "Sales ID"
							Customer
							Invoice_Date as "Invoice Date"
							Transaction_Currency as "Transaction Currency"
							Net_Total as "Net Total"
							Paid_Amount as "Paid Amount"
							Remaining_Balance as "Remaining Balance"
				"Recieve amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
		     			title = "Overview"
						fields
						(
							Sales_ID as "Sales ID"
							Customer
							Invoice_Date as "Invoice Date"
							Net_Total as "Net Total"
							Tax as "Tax(%)"
						)
					)
					datablock2
					(
			 			layout type = 4
		     			title = "Customer"
		     			related field =  Customer[Status == "Invoice" && Payment_Status == "Unpaid" || Payment_Status == "Partialy Paid"]
						fields
						(
							Contact_ID as "Contact ID"
							Address
							Email
							Phone_Number as "Phone Number"
							Company_Email as "Company Email"
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Item Details"
		     			related field =  Item_Details[Status == "Invoice" && Payment_Status == "Unpaid" || Payment_Status == "Partialy Paid"]
						fields
						(
							S_No
							Product
							Unit_Price as "Unit Price"
							Quantity
							Tax
							Subtotal
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Title"
						fields
						(
							Transaction_Currency as "Transaction Currency"
							Net_Total as "Net Total"
							Paid_Amount as "Paid Amount"
							Remaining_Balance as "Remaining Balance"
							Net_Total_In_Base_Currency as "Net Total In Base Currency"
							Paid_Amount_In_Base_Currency as "Paid Amount In Base Currency"
							Remaining_Balance_In_base_Currency as "Remaining Balance In base Currency"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Recieve amount"
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Fully_Paid_Invoices
		{
			displayName = "Fully Paid Invoices"
			show all rows from Add_Sales  [Status == "Invoice" && Payment_Status == "Fully Paid"]  
			(
				Transaction_Currency as "Transaction Currency"
				(
					view = All_Currency
				)
				Total
				Tax as "Tax(%)"
				Shipping_Charges as "Shipping Charges"
				Adjustments
				Payment_Status as "Payment Status"
				Paid_Amount as "Paid Amount"
				Net_Total as "Net Total"
				Customer
				(
					view = Customers
				)
				Invoice_Date as "Invoice Date"
				Sales_ID as "Sales ID"
				Item_Details.S_No as "Item Details"
				Net_Total_In_Base_Currency as "Net Total In Base Currency"
				Paid_Amount_In_Base_Currency as "Paid Amount In Base Currency"
				Remaining_Balance_In_base_Currency as "Remaining Balance In base Currency"
			)
			options
			(
				icon = "shopping-receipt-list-42"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Sales_ID as "Sales ID"
							Invoice_Date as "Invoice Date"
							Customer
							Transaction_Currency as "Transaction Currency"
							Net_Total as "Net Total"
							Paid_Amount as "Paid Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Sales_ID as "Sales ID"
							Customer
							Transaction_Currency as "Transaction Currency"
							Item_Details.S_No as "Item Details"
							Total
							Tax as "Tax(%)"
							Shipping_Charges as "Shipping Charges"
							Adjustments
							Net_Total as "Net Total"
							Paid_Amount as "Paid Amount"
							Payment_Status as "Payment Status"
							Net_Total_In_Base_Currency as "Net Total In Base Currency"
							Paid_Amount_In_Base_Currency as "Paid Amount In Base Currency"
							Remaining_Balance_In_base_Currency as "Remaining Balance In base Currency"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Project_Tracker
	{
		displayname= "Project Tracker"
		icon = "design-app"
				 page Project_Details 
	 	 { 
 	 	 displayname = "Project Details" 

 	 	 icon = "" 
	 	 Content="<zml \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"30%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#7CCB8D'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<pr \n>\n\t<pc \n>\n\t<image    \t\t color = '#FFFFFF'\n   \t\t bgColor = '#06943F'\n   \t\t width = '52px'\n   \t\t height = '52px'\n   \t\t type = 'icon'\n   \t\t value = 'zc-li-solid business-money-coins'\n   \t\t size = '4'\n   \t\t cornerRadius = '26px'\n\n\/>\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Project.Total_Project_Expenses.sum'\n   \t\t size = '8'\n   \t\t color = '#FFFFFF'\n   \t\t bold = 'true'\n   \t\t marginTop = '3px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n   \t\t decimalPlaces = '2'\n   \t\t decimalSeperator = '.'\n   \t\t numberScale = 'none'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Expense For Projects'\n   \t\t size = '3'\n   \t\t color = '#FAFAFA'\n   \t\t marginTop = '3px'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#7CCB8D'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<pr \n>\n\t<pc \n>\n\t<image    \t\t color = '#FFFFFF'\n   \t\t bgColor = '#06943F'\n   \t\t width = '52px'\n   \t\t height = '52px'\n   \t\t type = 'icon'\n   \t\t value = 'zc-li-solid business-handout'\n   \t\t size = '4'\n   \t\t cornerRadius = '26px'\n\n\/>\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Project.Paid_Amount.sum'\n   \t\t size = '8'\n   \t\t color = '#FFFFFF'\n   \t\t bold = 'true'\n   \t\t marginTop = '3px'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n   \t\t decimalPlaces = '2'\n   \t\t decimalSeperator = '.'\n   \t\t numberScale = 'none'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Revenue by Projects'\n   \t\t size = '3'\n   \t\t color = '#FAFAFA'\n   \t\t marginTop = '3px'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n\n>\n\t<pr    \t\t height = '50px'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Total No Projects'\n   \t\t size = '3'\n   \t\t color = '#2D2D2D'\n   \t\t marginLeft = '20px'\n   \t\t marginRight = '20px'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc><pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Project.ID.count'\n   \t\t size = '5'\n   \t\t color = '#00D9B1'\n   \t\t bold = 'true'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n   \t\t decimalSeperator = '.'\n   \t\t numberScale = 'none'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr    \t\t height = '1px'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#59DDBB'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = '-'\n   \t\t size = '1'\n   \t\t color = '#59DDBB'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '50%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Project.ID.count'\n   \t\t criteria = '(((Project_Status == &quot;Pending&quot;)))'\n   \t\t size = '5'\n   \t\t color = '#00D9B1'\n   \t\t bold = 'true'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'New Projects'\n   \t\t size = '2'\n   \t\t color = '#2D2D2D'\n   \t\t marginTop = '3px'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc><pc    \t\t width = '50%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Project.ID.count'\n   \t\t criteria = '(((Project_Status == &quot;Working&quot;)))'\n   \t\t size = '5'\n   \t\t color = '#00D9B1'\n   \t\t bold = 'true'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n   \t\t decimalSeperator = '.'\n   \t\t numberScale = 'none'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Working Projects'\n   \t\t size = '2'\n   \t\t color = '#2D2D2D'\n   \t\t marginTop = '3px'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr    \t\t height = '1px'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#59DDBB'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = '-'\n   \t\t size = '1'\n   \t\t color = '#59DDBB'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr    \t\t height = '50px'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Finished Projects'\n   \t\t size = '3'\n   \t\t color = '#2D2D2D'\n   \t\t marginLeft = '20px'\n   \t\t marginRight = '20px'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc><pc \n>\n\t<text    \t\t type = 'Form Data'\n   \t\t value = 'thisapp.Add_Project.ID.count'\n   \t\t criteria = '(((((Project_Status == &quot;Finished&quot;)||(Project_Status == &quot;Sold&quot;))||(Project_Status == &quot;Added as a Product&quot;))))'\n   \t\t size = '5'\n   \t\t color = '#00D9B1'\n   \t\t bold = 'true'\n   \t\t textAlign = 'center'\n   \t\t displayType = 'actual'\n   \t\t decimalSeperator = '.'\n   \t\t numberScale = 'none'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row>\n<\/column><column\n   \t\t width=\"40%\"\n   \t>\n\t<chart    \t\t type = 'Pie'\n   \t\t appLinkName = 'thisapp'\n   \t\t formLinkName = 'Add_Project'\n   \t\t xtitle = 'Status'\n   \t\t xfield = 'Project_Status'\n   \t\t ytitle = 'Projects'\n   \t\t yfields = 'count:Project_Name'\n   \t\t DelugeCriteria = '(((Project_Status != &quot;Pending&quot;)))'\n   \t\t bgColor = '#FFFFFF'\n   \t\t theme = 'theme2'\n   \t\t legendPos = 'center.top'\n   \t\t titleSize = '4'\n   \t\t title = 'Projects By Status'\n\n\/>\n<\/column><column\n   \t\t width=\"30%\"\n   \t>\n\t<dspZml id='zml_snippet'>\n\t<![CDATA[htmlpage zml_snippet()\ndisplayname = &quot;script&quot;\ncontent\n&lt;%{\n\t%&gt;\n&lt;panel&gt; \n\t&lt;pr height=&apos;fill&apos; width=&apos;fill&apos;&gt;\n    \t&lt;pc width=&apos;100%&apos; bgColor=&apos;#FFFFFF&apos;&gt;\n\t\t\t&lt;pr width=&apos;fill&apos; &gt;\n        \t\t&lt;pc width=&apos;46%&apos; hAlign=&apos;center&apos; textAlign=&apos;left&apos; padding=&apos;10px&apos;&gt;\n          \t\t\t&lt;pr&gt;\n           \t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t  &lt;text type=&apos;Text&apos; value=&apos;Top Projects In Revenue&apos; size=&apos;3&apos; color=&apos;#333333&apos; bold=&apos;true&apos; textAlign=&apos;left&apos;&gt; &lt;\/text&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t&lt;\/pc&gt;\n        \t\t&lt;pc width=&apos;46%&apos; hAlign=&apos;center&apos; textAlign=&apos;right&apos; padding=&apos;10px&apos;&gt;\n\t\t\t\t  &lt;pr&gt;\n\t\t\t\t\t&lt;pc &gt;\n\t\t\t\t\t\t&lt;image color=&apos;#FFFFFF&apos; bgColor=&apos;#0072F4&apos; width=&apos;40px&apos; height=&apos;40px&apos; imageType=&apos;icon&apos; value=&apos;zc-li-solid ui-2-fat-add&apos; iconsize=&apos;2&apos; marginTop=&apos;5px&apos; cornerRadius=&apos;20px&apos; action=&apos;Form&apos; componentLinkName=&apos;Add_Project&apos; target=&apos;popup&apos; unicodeValue=&apos;edac&apos; \/&gt;\n\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t  &lt;\/pr&gt;\n        \t\t&lt;\/pc&gt;\n      \t\t&lt;\/pr&gt;\n\t\t\t&lt;pr width=&apos;fill&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;100%&apos;&gt;\n\t\t\t\t\t&lt;pr width=&apos;fill&apos;&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;25%&apos; hAlign=&apos;center&apos; textAlign=&apos;center&apos; padding=&apos;10px&apos; bgColor=&apos;#e1e3e6&apos;&gt;\n\t\t\t\t\t\t\t&lt;pr&gt;\n\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t  &lt;text type=&apos;Text&apos; value=&apos;Project&apos; size=&apos;2&apos; bold=&apos;true&apos;&gt; &lt;\/text&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;25%&apos; hAlign=&apos;center&apos; textAlign=&apos;center&apos; padding=&apos;10px&apos; bgColor=&apos;#e1e3e6&apos;&gt;\n\t\t\t\t\t\t  &lt;pr&gt;\n\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Expense&apos; size=&apos;2&apos; bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t  &lt;\/pr&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;25%&apos; hAlign=&apos;center&apos; textAlign=&apos;center&apos;  padding=&apos;10px&apos; bgColor=&apos;#e1e3e6&apos;&gt;\n\t\t\t\t\t\t\t&lt;pr&gt;\n\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t  &lt;text type=&apos;Text&apos; value=&apos;Worth&apos; size=&apos;2&apos;  bold=&apos;true&apos;&gt; &lt;\/text&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t&lt;pc width=&apos;25%&apos;  hAlign=&apos;center&apos; textAlign=&apos;center&apos;  padding=&apos;10px&apos; bgColor=&apos;#e1e3e6&apos;&gt;\n\t\t\t\t\t\t  &lt;pr&gt;\n\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;Status&apos;  size=&apos;2&apos;  bold=&apos;true&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t  &lt;\/pr&gt;\n\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t&lt;\/pr&gt;\n&lt;%\n\tprojects = Add_Project[Project_Status != &quot;Pending&quot;] sort by Project_Worth desc range from 0 to 4;\n\tbg_color = &quot;#f8f8fa&quot;;\n\tfor each  project in projects\n\t{\n\t\tif(bg_color == &quot;#f8f8fa&quot;)\n\t\t{\n\t\t\tbg_color = &quot;#FFFFFF&quot;;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbg_color = &quot;#f8f8fa&quot;;\n\t\t}\n\t\t%&gt;\n&lt;pr width=&apos;fill&apos;&gt;\n\t\t\t\t\t\t\t\t&lt;pc width=&apos;25%&apos; hAlign=&apos;center&apos; textAlign=&apos;center&apos;  bgColor=&apos;&lt;%=bg_color%&gt;&apos; padding=&apos;10px&apos;&gt;\n\t\t\t\t\t\t\t\t\t&lt;pr&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t\t\t  &lt;text type=&apos;Text&apos; value=&apos;&lt;%=project.Project_Name%&gt;&apos; size=&apos;2&apos; color=&apos;#333333&apos;&gt; &lt;\/text&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t&lt;pc width=&apos;25%&apos; hAlign=&apos;center&apos; textAlign=&apos;center&apos;  bgColor=&apos;&lt;%=bg_color%&gt;&apos; padding=&apos;10px&apos;&gt;\n\t\t\t\t\t\t\t\t  &lt;pr&gt;\n\t\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;&lt;%=project.Total_Project_Expenses%&gt;&apos; size=&apos;2&apos; color=&apos;#333333&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t  &lt;\/pr&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t&lt;pc width=&apos;25%&apos; hAlign=&apos;center&apos; textAlign=&apos;center&apos; bgColor=&apos;&lt;%=bg_color%&gt;&apos; padding=&apos;10px&apos;&gt;\n\t\t\t\t\t\t\t\t\t&lt;pr&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t\t\t  &lt;text type=&apos;Text&apos; value=&apos;&lt;%=project.Project_Worth%&gt;&apos; size=&apos;2&apos; color=&apos;#333333&apos;&gt; &lt;\/text&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t&lt;pc width=&apos;25%&apos;  hAlign=&apos;center&apos; textAlign=&apos;center&apos;  bgColor=&apos;&lt;%=bg_color%&gt;&apos; padding=&apos;10px&apos;&gt;\n\t\t\t\t\t\t\t\t  &lt;pr&gt;\n\t\t\t\t\t\t\t\t\t&lt;pc&gt;\n\t\t\t\t\t\t\t\t\t\t&lt;text type=&apos;Text&apos; value=&apos;&lt;%=project.Project_Status%&gt;&apos; size=&apos;1&apos; color=&apos;#333333&apos;&gt;&lt;\/text&gt;\n\t\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t\t  &lt;\/pr&gt;\n\t\t\t\t\t\t\t\t&lt;\/pc&gt;\n\t\t\t\t\t\t\t&lt;\/pr&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\t\t&lt;pr width=&apos;fill&apos;&gt;\n\t\t\t\t&lt;pc width=&apos;100%&apos;  hAlign=&apos;center&apos; textAlign=&apos;center&apos;  padding=&quot;20px&quot;&gt;\n\t\t\t\t\t&lt;pr&gt;\n\t\t\t\t\t\t&lt;pc&gt;\n&lt;%\n\tif(projects.count() == 0)\n\t{\n\t\t%&gt;\n&lt;text type=&apos;Text&apos; value=&apos;No Projects Here&apos; size=&apos;3&apos; color=&apos;#FF0000&apos; marginTop=&apos;50%&apos;&gt;&lt;\/text&gt;\n&lt;%\n\t}\n\telse\n\t{\n\t\t%&gt;\n&lt;text type=&apos;Text&apos; value=&apos;See all sales&apos; size=&apos;3&apos; color=&apos;#0072F4&apos; action=&apos;Report&apos; componentLinkName=&apos;Sales_Report&apos; target=&apos;new-window&apos;&gt;&lt;\/text&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/pc&gt;\n\t\t\t\t\t&lt;\/pr&gt;\n\t\t\t\t&lt;\/pc&gt;\n\t\t\t&lt;\/pr&gt;\n\t\n\t\t&lt;\/pc&gt;\n\t&lt;\/pr&gt;\n&lt;\/panel&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dspZml>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<chart    \t\t type = 'Column'\n   \t\t appLinkName = 'thisapp'\n   \t\t formLinkName = 'Add_Project'\n   \t\t xtitle = 'Project'\n   \t\t xfield = 'Project_Name'\n   \t\t ytitle = 'Amount'\n   \t\t yfields = 'sum:Project_Worth,sum:Total_Project_Expenses,sum:Paid_Amount'\n   \t\t DelugeCriteria = '(((((Project_Status == &quot;Sold&quot;)||(Project_Status == &quot;Finished&quot;))||(Project_Status == &quot;Added as a Product&quot;))))'\n   \t\t bgColor = '#FFFFFF'\n   \t\t theme = 'theme2'\n   \t\t legendPos = 'center.top'\n   \t\t titleSize = '4'\n   \t\t title = 'Financial Facts of Finished Projects'\n\n\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
		form Add_Project
		{
			displayname = "Add Project"
			success message = "Project Added Successfully"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Project_Name
			(
    			type = text
				displayname = "Project Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Customer
			(
				type = picklist
				values  = New_Contact[Contact_Type == "Customer" || Contact_Type == "both"].ID
    			displayformat = [" " + Name.first_name1 + "  - " + Email]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Project_Order_Date
			(
    			type = date
				displayname = "Project Order Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Project_Start_Date
			(
    			type = date
				displayname = "Project Start Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Project_Final_Date
			(
    			type = date
				displayname = "Project Final Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Project_Details
			(
    			type = textarea
				displayname = "Project Details"
				height = 100px
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Project_Worth
			(
				type = decimal
				displayname = "Project Worth"
    			description
    			[
    				type = help_text
    			 	message = "Give amount in your base currency."
    			]
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Transaction_Currency
			(
				type = picklist
				displayname = "Transaction Currency"
				values  = Add_Currency.ID
    			displayformat = [Currency]
				sortorder = ascending
    			description
    			[
    				type = help_text
    			 	message = "Select Customer's comfortable currency."
    			]
	 			row = 1
	 			column = 2   
				width = medium
			)
			Amount_in_Customer_s_Currency
			(
				type = decimal
				displayname = "Amount in Customer's Currency"
    			description
    			[
    				type = help_text
    			 	message = "Amount in customer's currency."
    			]
	 			row = 1
	 			column = 2   
				width = medium
			)
			Project_Expenses
			(
				type = grid
				displayname = "Project Expenses"
				values  = Add_Expense.ID
    			bidirectional = Project
	 			row = 2
	 			column = 1   
				width = medium
			)
			Amount_Section
			(
				type = section
				displayname = "Amount Section"
	 			row = 3
	 			column = 0   
				width = medium
			)
			Total_Project_Expenses
			(
				type = decimal
				displayname = "Total Project Expenses"
				initial value = 0
    			description
    			[
    				type = help_text
    			 	message = "Amounts are in your comfortable currency(base currency)."
    			]
	 			row = 3
	 			column = 1   
				width = medium
			)
			Expense_Notes
			(
    			type = plaintext
				value = "<font color=\"#ff3333\">Project expense exceeds your project worth.</font><br />"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Paid_Amount
			(
				type = decimal
				displayname = "Paid Amount"
				initial value = 0
    			description
    			[
    				type = help_text
    			 	message = "Customer's comfortable currency."
    			]
	 			row = 3
	 			column = 1   
				width = medium
			)
			Amount_To_Be_Paid
			(
    			type = formula
				displayname = "Amount To Be Paid"
				value =  input.Amount_in_Customer_s_Currency - input.Paid_Amount
				visibility = true
	 			row = 3
	 			column = 1   
				width = medium
			)
			Amount_Recieved_Account
			(
				type = picklist
				displayname = "Amount Recieved Account"
				values  = Add_Account_Details.ID
    			displayformat = [Account_Name + " - " + Account_Code]
				sortorder = ascending
    			description
    			[
    				type = help_text
    			 	message = "Select Transaction currency based Account."
    			]
	 			row = 3
	 			column = 1   
				width = medium
			)
			Project_Status
			(
				type = radiobuttons
				displayname = "Project Status"
				values = {"Pending", "Working", "Finished", "Sold", "Added as a Product"}
				initial value = "Pending"
				others option = true
	 			row = 3
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		summary Pending_Project
		{
			displayName = "Pending Project"
			show all rows from Add_Project  [Project_Status == "Pending"]  
			(
				Total_Project_Expenses as "Total Project Expenses"
				Project_Status as "Project Status"
				custom action "Start Project Work"
				(
	  			workflow = Start_Project_Workflow
				show action in view header = true
				show action in edit record menu = true
				column header = "Start Project Work"
				)
				Project_Final_Date as "Project Final Date"
				Project_Start_Date as "Project Start Date"
				Project_Order_Date as "Project Order Date"
				Customer
				Project_Name as "Project Name"
				Customer.Email
				Customer.Phone_Number as "Phone Number"
				Project_Details as "Project Details"
				Paid_Amount as "Paid Amount"
				Amount_To_Be_Paid as "Amount To Be Paid"
				Project_Worth as "Project Worth"
				Amount_in_Customer_s_Currency as "Amount in Customer's Currency"
				Transaction_Currency as "Transaction Currency"
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "ui-2-hourglass"
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Customer
							Project_Order_Date as "Project Order Date"
							Project_Final_Date as "Project Final Date"
							Project_Worth as "Project Worth"
				"Start Project Work"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								"Start Project Work"
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
		     			title = "Project Details"
						fields
						(
							Project_Name as "Project Name"
							Project_Details as "Project Details"
							Project_Order_Date as "Project Order Date"
							Project_Final_Date as "Project Final Date"
							Project_Worth as "Project Worth"
						)
					)
					datablock2
					(
			 			layout type = 4
		     			title = "Customer"
		     			related field =  Customer[Project_Status == "Pending"]
						fields
						(
							Name
							Address
							Email
							Phone_Number as "Phone Number"
							Company_Email as "Company Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Start Project Work"
    		 			Edit 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary Working_Projects
		{
			displayName = "Working Projects"
			show all rows from Add_Project  [Project_Status == "Working"]  
			(
				Project_Status as "Project Status"
				custom action "Add Expense"
				(
	  			workflow = Add_Expense_Workflow
				show action in view header = true
				show action in edit record menu = true
				column header = "Add Expense"
				)
				custom action "Add Payment"
				(
	  			workflow = Recieve_Payment_Workflow
				show action in view header = true
				show action in edit record menu = true
				column header = "Add Payment"
				)
				Project_Worth as "Project Worth"
				Project_Final_Date as "Project Final Date"
				Project_Order_Date as "Project Order Date"
				Project_Name as "Project Name"
				Project_Details as "Project Details"
				Customer
				Transaction_Currency as "Customer Currency"
				Paid_Amount as "Paid Amount"
				Amount_To_Be_Paid as "Amount To Be Paid"
				Total_Project_Expenses as "Total Project Expenses"
				Amount_in_Customer_s_Currency as "Amount in Customer's Currency"
				custom action "Finish Project"
				(
	  			workflow = Finis_Project_Run_Scripts
				show action in edit record menu = true
				column header = "Finish Project"
				)
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "loader-refresh"
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Customer
							Project_Final_Date as "Project Final Date"
							Project_Worth as "Project Worth"
							Total_Project_Expenses as "Total Project Expenses"
							Paid_Amount as "Paid Amount"
							Amount_To_Be_Paid as "Amount To Be Paid"
				"Add Expense"
				"Add Payment"
				"Finish Project"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Project_Details as "Project Details"
							Project_Order_Date as "Project Order Date"
							Project_Final_Date as "Project Final Date"
							Project_Worth as "Project Worth"
						)
					)
					datablock2
					(
			 			layout type = 4
		     			title = "Customer"
		     			related field =  Customer[Project_Status == "Working"]
						fields
						(
							Contact_ID as "Contact ID"
							Address
							Email
							Phone_Number as "Phone Number"
							Company_Email as "Company Email"
						)
					)
					datablock5
					(
			 			layout type = -1
		     			title = "Project Expenses"
		     			related field =  Add_Expense.Project
						fields
						(
							Expense_Date as "Expense Date"
							Vendor
							Amount
							Expense_Account as "Expense Account"
							Notes
						)
					)
					datablock6
					(
			 			layout type = -2
		     			title = "Payment Details"
						fields
						(
							Total_Project_Expenses as "Total Project Expenses"
							Project_Worth as "Project Worth"
							Transaction_Currency as "Customer Currency"
							Amount_in_Customer_s_Currency as "Amount in Customer's Currency"
							Paid_Amount as "Paid Amount"
							Amount_To_Be_Paid as "Amount To Be Paid"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Add Expense"
			 			"Add Payment"
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Finished_Projects
		{
			displayName = "Finished Projects"
			show all rows from Add_Project  [Project_Status == "Finished" || Project_Status == "Sold" || Project_Status == "Added as a Product"]  
			(
				Project_Name as "Project Name"
				Project_Worth as "Project Worth"
				Project_Details as "Project Details"
				Project_Final_Date as "Project Final Date"
				Project_Order_Date as "Project Order Date"
				Customer
				Total_Project_Expenses as "Total Project Expenses"
				Paid_Amount as "Paid Amount"
				Amount_To_Be_Paid as "Amount To Be Paid"
				custom action "Add Payment "
				(
	  			workflow = Add_Payment_for_finished_
				show action in view header = true
				show action in edit record menu = true
				column header = "Add Payment "
				condition = (Project_Status != "Sold")
				)
				custom action "Change as a product"
				(
	  			workflow = Change_as_a_product_Workf
				show action in view header = true
				show action in edit record menu = true
				column header = "Change as a product"
				condition = (Project_Status != "Added as a Product")
				)
				Project_Status as "Project Status"
			)
			group by
			(
				Project_Status ascending
			)
			options
			(
				icon = "design-todo"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Customer
							Project_Worth as "Project Worth"
							Total_Project_Expenses as "Total Project Expenses"
							Paid_Amount as "Paid Amount"
							Amount_To_Be_Paid as "Amount To Be Paid"
				"Add Payment "
				"Change as a product"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
		     			title = "Overview"
						fields
						(
							Project_Name as "Project Name"
							Project_Details as "Project Details"
							Project_Order_Date as "Project Order Date"
							Project_Final_Date as "Project Final Date"
							Project_Worth as "Project Worth"
						)
					)
					datablock2
					(
			 			layout type = 4
		     			title = "Customer"
		     			related field =  Customer[Project_Status == "Finished" || Project_Status == "Sold" || Project_Status == "Added as a Product"]
						fields
						(
							Name
							Address
							Email
							Phone_Number as "Phone Number"
							Company_Email as "Company Email"
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Project Expenses"
		     			related field =  Project_Expenses[Project_Status == "Finished" || Project_Status == "Sold" || Project_Status == "Added as a Product"]
						fields
						(
							Expense_Date as "Expense Date"
							Vendor
							Amount
							Expense_Account as "Expense Account"
							Notes
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Project Expensive Details"
						fields
						(
							Total_Project_Expenses as "Total Project Expenses"
							Paid_Amount as "Paid Amount"
							Amount_To_Be_Paid as "Amount To Be Paid"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Add Payment "
			 			"Change as a product"
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Purchase_Details
	{
		displayname= "Purchase Details"
		icon = "shopping-delivery-time"
		form Add_Bill1
		{
			displayname = "Add Bill"
			success message = "New sale has been added successfully!"
			field alignment = left
			feature property = 32
			Section2
			(
				type = section
				displayname = "Section"
	 			row = 1
	 			column = 0   
				width = medium
			)
			Bill_No
			(
    			type = autonumber
				displayname = "Bill No"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			Section3
			(
				type = section
				displayname = "Section"
	 			row = 2
	 			column = 0   
				width = medium
			)
			must have Bill_Date
			(
    			type = date
				displayname = "Bill Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Vendor
			(
				type = picklist
				values  = New_Contact[Contact_Type == "Vendor" || Contact_Type == "both"].ID
    			displayformat = [" " + Name.first_name1 + " - " + Email]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Transaction_Currency
			(
				type = picklist
				displayname = "Transaction Currency"
				values  = Add_Currency.ID
    			displayformat = [Currency]
				sortorder = ascending
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Item_Details
			(
				type = grid
				displayname = "Item Details"
	    
				S_No
				(
					type = number
					displayname = "S.No"
					maxchar = 3
					width = small
				)
				must have Product
				(
    				type = text
					width = medium
				)
				Unit_Price
				(
					type = decimal
					displayname = "Unit Price"
    				description
    				[
    					type = tooltip
    				 	message = "Price in transaction currency rate"
    				]
					width = small
				)
				must have Quantity
				(
					type = number
					width = small
				)
				must have Subtotal
				(
					type = decimal
					width = small
				)
    			description
    			[
    				type = help_text
    			 	message = "Amounts are shows in your base currency rate."
    			]
	 			row = 3
	 			column = 1   
				width = 300px
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 4
	 			column = 0   
				width = medium
			)
			Total
			(
				type = decimal
				initial value = 0
	 			row = 4
	 			column = 1   
				width = medium
			)
			must have Tax
			(
    			type = percentage
				displayname = "Tax(%)"
				initial value = 0%
    			description
    			[
    				type = help_text
    			 	message = "This field can not be empty"
    			]
	 			row = 4
	 			column = 1   
				width = medium
			)
			must have Shipping_Charges
			(
				type = decimal
				displayname = "Shipping Charges"
				initial value = 0
    			description
    			[
    				type = help_text
    			 	message = "Amount for shipping the goods.\n(This field can not be empty)"
    			]
	 			row = 4
	 			column = 1   
				width = medium
			)
			Adjustments
			(
				type = decimal
				initial value = 0
    			description
    			[
    				type = help_text
    			 	message = "Adjust the total amount of the transaction. Eg. +10 or -10.\n(This field can not be  empty)"
    			]
	 			row = 4
	 			column = 1   
				width = medium
			)
			Net_Total
			(
    			type = formula
				displayname = "Net Total"
				value =  input.Tax / 100 * input.Total + input.Total + input.Shipping_Charges + input.Adjustments
				visibility = true
	 			row = 4
	 			column = 1   
				width = medium
			)
			Section
			(
				type = section
	 			row = 5
	 			column = 0   
				width = medium
			)
			must have Paid_Amount
			(
				type = decimal
				displayname = "Paid Amount"
				initial value = 0
    			description
    			[
    				type = help_text
    			 	message = "Give Amount in Customer currency rate"
    			]
	 			row = 5
	 			column = 1   
				width = medium
			)
			Account
			(
				type = picklist
				values  = Add_Account_Details.ID
    			displayformat = [Account_Name + " - " + Account_Code]
				sortorder = ascending
	 			row = 5
	 			column = 1   
				width = medium
			)
			Payment_Status
			(
				type = radiobuttons
				displayname = "Payment Status"
				values = {"Unpaid", "Partly Paid", "Fully Paid"}
				initial value = "Unpaid"
	 			row = 5
	 			column = 1   
				width = medium
			)
			Amount_To_Pay
			(
    			type = formula
				displayname = "Amount To Pay"
				value =  input.Tax / 100 * input.Total + input.Total + input.Shipping_Charges + input.Adjustments - input.Paid_Amount
				visibility = true
	 			row = 5
	 			column = 2   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		summary Unpaid_Bills
		{
			displayName = "Unpaid Bills"
			show all rows from Add_Bill1  [Payment_Status == "Unpaid"]  
			(
				Paid_Amount as "Paid Amount"
				Payment_Status as "Payment Status"
				Amount_To_Pay as "Amount To Pay"
				Vendor.Email
				Vendor.Phone_Number as "Phone Number"
				Vendor.Company_Email as "Company Email"
				Transaction_Currency as "Transaction Currency"
				Total
				Bill_No as "Bill No"
				Bill_Date as "Bill Date"
				Tax as "Tax(%)"
				Vendor
				Adjustments
				Shipping_Charges as "Shipping Charges"
				Net_Total as "Net Total"
				custom action "Add Payment"
				(
	  			workflow = Add_payment_Scipt
				show action in view header = true
				show action in edit record menu = true
				column header = "Add Payment"
				)
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "business-money-time"
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Bill_No as "Bill No"
							Vendor
							Bill_Date as "Bill Date"
							Total
							Shipping_Charges as "Shipping Charges"
							Adjustments
							Tax as "Tax(%)"
							Net_Total as "Net Total"
				"Add Payment"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Bill_No as "Bill No"
							Bill_Date as "Bill Date"
						)
					)
					datablock2
					(
			 			layout type = 4
		     			title = "Customer"
		     			related field =  Vendor[Payment_Status == "Unpaid"]
						fields
						(
							Contact_ID as "Contact ID"
							Address
							Email
							Phone_Number as "Phone Number"
							Company_Email as "Company Email"
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Item Details"
		     			related field =  Item_Details[Payment_Status == "Unpaid"]
						fields
						(
							S_No as "S.No"
							Product
							Unit_Price as "Unit Price"
							Quantity
							Subtotal
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Title"
						fields
						(
							Transaction_Currency as "Transaction Currency"
							Total
							Tax as "Tax(%)"
							Adjustments
							Shipping_Charges as "Shipping Charges"
							Net_Total as "Net Total"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Add Payment"
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary Partly_Paid_Bills
		{
			displayName = "Partly Paid Bills"
			show all rows from Add_Bill1  [Payment_Status == "Partly Paid"]  
			(
				Payment_Status as "Payment Status"
				Transaction_Currency as "Transaction Currency"
				Total
				Tax as "Tax(%)"
				Adjustments
				Shipping_Charges as "Shipping Charges"
				Amount_To_Pay as "Amount To Pay"
				custom action "Add Payment"
				(
	  			workflow = Add_Payment_Scripts_fot_p
				show action in view header = true
				show action in edit record menu = true
				column header = "Add Payment"
				)
				Bill_No as "Bill No"
				Vendor.Company_Email as "Company Email"
				Vendor
				Bill_Date as "Bill Date"
				Net_Total as "Net Total"
				Paid_Amount as "Paid Amount"
			)
			options
			(
				display rows = 10
				display records per row = 3
				label width = 20%
				icon = "business-money-coins"
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Vendor.Company_Email as "Company Email"
							Vendor
							Bill_Date as "Bill Date"
							Net_Total as "Net Total"
							Paid_Amount as "Paid Amount"
							Paid_Amount as "Paid Amount"
				"Add Payment"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Bill_No as "Bill No"
							Bill_Date as "Bill Date"
						)
					)
					datablock2
					(
			 			layout type = 4
		     			title = "Customer"
		     			related field =  Vendor[Payment_Status == "Partly Paid"]
						fields
						(
							Contact_ID as "Contact ID"
							Address
							Email
							Phone_Number as "Phone Number"
							Company_Email as "Company Email"
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Item Details"
		     			related field =  Item_Details[Payment_Status == "Partly Paid"]
						fields
						(
							S_No as "S.No"
							Product
							Unit_Price as "Unit Price"
							Quantity
							Subtotal
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Title"
						fields
						(
							Transaction_Currency as "Transaction Currency"
							Total
							Tax as "Tax(%)"
							Adjustments
							Shipping_Charges as "Shipping Charges"
							Net_Total as "Net Total"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
			 			"Add Payment"
    	 			)
    			)
			)
		}
		list Fully_Paid_Bills
		{
			displayName = "Fully Paid Bills"
			show all rows from Add_Bill1  [Payment_Status == "Fully Paid"]  
			(
				Payment_Status as "Payment Status"
				Vendor.Email
				Vendor.Phone_Number as "Phone Number"
				Vendor.Company_Email as "Company Email"
				Transaction_Currency as "Transaction Currency"
				Total
				Bill_No as "Bill No"
				Bill_Date as "Bill Date"
				Tax as "Tax(%)"
				Vendor
				Adjustments
				Shipping_Charges as "Shipping Charges"
				Net_Total as "Net Total"
				Paid_Amount as "Paid Amount"
			)
			options
			(
				icon = "business-money-12"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Bill_No as "Bill No"
							Vendor
							Bill_Date as "Bill Date"
							Net_Total as "Net Total"
							Paid_Amount as "Paid Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Bill_No as "Bill No"
							Bill_Date as "Bill Date"
						)
					)
					datablock2
					(
			 			layout type = 4
		     			title = "Vendor"
		     			related field =  Vendor[Payment_Status == "Fully Paid"]
						fields
						(
							Contact_ID as "Contact ID"
							Address
							Email
							Phone_Number as "Phone Number"
							Company_Email as "Company Email"
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Item Details"
		     			related field =  Item_Details[Payment_Status == "Fully Paid"]
						fields
						(
							S_No as "S.No"
							Product
							Unit_Price as "Unit Price"
							Quantity
							Subtotal
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Title"
						fields
						(
							Transaction_Currency as "Transaction Currency"
							Total
							Tax as "Tax(%)"
							Adjustments
							Shipping_Charges as "Shipping Charges"
							Net_Total as "Net Total"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Contacts
	{
		icon = "users-multiple-11"
		form New_Contact
		{
			displayname = "New Contact"
			success message = "New client added successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Contact_ID
			(
    			type = autonumber
				displayname = "Contact ID"
				start index = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Contact_Type
			(
				type = radiobuttons
				displayname = "Contact Type"
				values = {"Customer", "Vendor", "both"}
				layout = 3
	 			row = 1
	 			column = 1   
				width = medium
			)
			Main_Section
			(
				type = section
				displayname = "Main Section"
	 			row = 2
	 			column = 0   
				width = medium
			)
			Contact_Information
			(
    			type = plaintext
				value = "<font color=\"#008b8b\" size=\"3\" face=\"Arial, Helvetica, sans-serif\">Contact Information</font>"
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix1
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name1
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name1
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix1
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have unique Email
			(
    			type = email
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have unique Phone_Number
			(
    			type = phonenumber
				displayname = "Phone Number"
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_11
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_21
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city1
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province1
     			(
	     			  type = state_province
	     			  displayname = "State Province"
     			) 
     			postal_Code1
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country1
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude1
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude1
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have Preferred_Contact_Method
			(
				type = radiobuttons
				displayname = "Preferred Contact Method"
				values = {"Email", "Phone"}
				initial value = "Email"
				layout = 2
	 			row = 2
	 			column = 1   
				width = medium
			)
			Other_Details
			(
    			type = plaintext
				value = "<font color=\"#008b8b\" size=\"3\" face=\"Arial, Helvetica, sans-serif\">Business Details</font>"
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Contact_Status
			(
				type = radiobuttons
				displayname = "Contact Status"
				values = {"Active", "Inactive"}
				initial value = "Active"
				layout = 2
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Contact_As
			(
				type = radiobuttons
				displayname = "Contact As"
				values = {"Individual", "Company"}
				initial value = "Individual"
				layout = 2
	 			row = 2
	 			column = 2   
				width = medium
			)
			Company_Name
			(
    			type = text
				displayname = "Company Name"
	 			row = 2
	 			column = 2   
				width = medium
			)
			Company_Email
			(
    			type = email
				displayname = "Company Email"
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Type_Of_Business
			(
				type = checkboxes
				displayname = "Type Of Business"
				values = {"Service Provider", "Manufacturer", "Consultant", "Traders and Distributors", "Other"}
	 			row = 2
	 			column = 2   
				width = medium
			)
			must have Currency1
			(
				type = picklist
				displayname = "Currency"
				values  = Add_Currency.ID
    			displayformat = [Currency]
				allow new entries = true
				[
					displayname = "Add Currency"
				]
				sortorder = ascending
    			description
    			[
    				type = help_text
    			 	message = "Select currency to deal with him"
    			]
	 			row = 2
	 			column = 2   
				width = medium
			)
			Additional_Information
			(
    			type = textarea
				displayname = "Additional Information"
				height = 100px
	 			row = 2
	 			column = 2   
				width = medium
			)
	
			customize
			(
				icon = "users-2-child"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Customers
		{
			displayName = "Customers"
			show all rows from New_Contact  [Contact_Type == "Customer" || Contact_Type == "both"]  
			(
				Name  as "Contact Name"
	 			(
	      			displayformat = [first_name1+""+prefix1+""+last_name1+""+suffix1]
	 			)
				Address 
	 			(
	      			displayformat = [address_line_11+""+address_line_21+""+district_city1+""+state_province1+""+postal_Code1+""+country1]
	      			enable = Show_As_Text
	 			)
				Phone_Number as "Phone Number"
				Email
				Preferred_Contact_Method as "Preferred Contact Method"
				Additional_Information as "Additional Information"
				Company_Name as "Company Name"
				Type_Of_Business as "Type Of Business"
				Contact_Status as "Contact Status"
				Contact_As as "Contact As"
				Company_Email as "Company Email"
			)
			options
			(
				icon = "users-multiple-19"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Name as "Contact Name"
							Email
							Phone_Number as "Phone Number"
							Address
							Company_Name as "Company Name"
							Company_Email as "Company Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "General"
						fields
						(
							Contact_As as "Contact As"
							Contact_Status as "Contact Status"
							Company_Name as "Company Name"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Contact Information"
						fields
						(
							Name as "Contact Name"
							Email
							Address
							Phone_Number as "Phone Number"
						)
					)
					datablock3
					(
			 			layout type = -2
		     			title = "Other Details"
						fields
						(
							Contact_Status as "Contact Status"
							Type_Of_Business as "Type Of Business"
							Preferred_Contact_Method as "Preferred Contact Method"
							Additional_Information as "Additional Information"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Vendors
		{
			displayName = "Vendors"
			show all rows from New_Contact  [Contact_Type != "Vendor" && Contact_Type == "both"]  
			(
				Contact_Type as "Contact Type"
				Name 
	 			(
	      			displayformat = [first_name1+""+prefix1+""+last_name1+""+suffix1]
	 			)
				Email
				Phone_Number as "Phone Number"
				Address 
	 			(
	      			displayformat = [address_line_11+""+address_line_21+""+district_city1+""+state_province1+""+postal_Code1+""+country1]
	      			enable = Show_As_Text
	 			)
				Preferred_Contact_Method as "Preferred Contact Method"
				Contact_Status as "Contact Status"
				Contact_As as "Contact As"
				Type_Of_Business as "Type Of Business"
				Additional_Information as "Additional Information"
				Company_Name as "Company Name"
				Company_Email as "Company Email"
			)
			options
			(
				icon = "users-2-woman"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Name
							Email
							Phone_Number as "Phone Number"
							Address
							Company_Name as "Company Name"
							Company_Email as "Company Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Email
							Contact_Type as "Contact Type"
							Phone_Number as "Phone Number"
							Address
							Preferred_Contact_Method as "Preferred Contact Method"
							Contact_Status as "Contact Status"
							Contact_As as "Contact As"
							Company_Name as "Company Name"
							Type_Of_Business as "Type Of Business"
							Additional_Information as "Additional Information"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Currency
	{
		icon = "business-round-yen"
		form Add_Currency
		{
			displayname = "Add Currency"
			success message = "Currency Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Currency_Code
			(
				type = picklist
				displayname = "Currency Code"
				values = {"Choice 1"}
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Currency_Symbol
			(
    			type = text
				displayname = "Currency Symbol"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Currency
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_field
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Today_Currency_Rate
			(
				type = decimal
				displayname = "Today Currency Rate"
				decimalplace = 6
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-mobile-card"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Tax_Rates
	{
		displayname= "Tax Rates"
		icon = "shopping-credit-card-in"
		form Add_Tax_Rates
		{
			displayname = "Add Tax Rates"
			success message = "Tax Rate Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Tax_Name
			(
    			type = text
				displayname = "Tax Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Tax_Rate
			(
    			type = percentage
				displayname = "Tax Rate"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "social-1-logo-yelp"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Add"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Account_Journals
	{
		displayname= "Account Journals"
		icon = "education-books-46"
		list All_Account_Details
		{
			displayName = "All Account Details"
			show all rows from Add_Account_Details    
			(
				Account_Name as "Account Name"
				Account_Code as "Account Code"
				Description
				Account_Type as "Account Type"
				Transaction_Type as "Transaction Type"
				Open_Balance as "Open Balance"
				Currency
				(
					view = All_Currency
				)
				Account_Status as "Account Status"
				custom action "Add Amount"
				(
	  			workflow = Add_amount_scripts
				show action in view header = true
				show action in edit record menu = true
				column header = "Add Amount"
				condition = (Account_Status == "Active")
				)
				custom action "Account summary"
				(
	  			workflow = Account_Summery_Workflow
				show action in edit record menu = true
				column header = "Account summary"
				)
				Open_Balance_In_Base_Currency as "Open Balance In Base Currency"
			)
			group by
			(
				Transaction_Type ascending
			)
			options
			(
				icon = "users-2-contacts-44"
	 		)
			conditional formatting
			(
				"Amount"
				{
				fields = [Open_Balance]
				format = "font-weight:bold;color:#5dc35a;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Account_Type as "Account Type"
							Account_Name as "Account Name"
							Account_Code as "Account Code"
							Currency
							Open_Balance as "Open Balance"
							Open_Balance_In_Base_Currency as "Open Balance In Base Currency"
				"Add Amount"
				"Account summary"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								Edit   	   
								"Add Amount"
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Account_Name as "Account Name"
							Account_Code as "Account Code"
							Account_Type as "Account Type"
							Transaction_Type as "Transaction Type"
							Currency
							Open_Balance as "Open Balance"
							Description
							Account_Status as "Account Status"
							Open_Balance_In_Base_Currency as "Open Balance In Base Currency"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
			 			"Add Amount"
    		 			Edit 
    	 			)
    			)
			)
		}
		list Account_Summary
		{
			displayName = "Account Summary"
			show all rows from Money_Transactions_Form    
			(
				Expense_Bill as "Expense Bill"
				Sale
				Project
				Amount
				Amount_In_Base_Currency as "Amount In Base Currency"
				Account
				Notes
				Transaction_Type as "Transaction Type"
				Amount_Transaction_Date as "Amount Transaction Date"
				Account.Currency
			)
			group by
			(
				Account ascending
			)
			sort by
			(
				Amount_Transaction_Date descending
			)
			options
			(
				icon = "text-align-center"
	 		)
			conditional formatting
			(
				"Receivable format"
				{
				condition = (Transaction_Type == "Receivable")
				fields = [Amount, Amount_In_Base_Currency, Transaction_Type, Amount_Transaction_Date, Account.Currency]
				format = "font-weight:bold;color:#19bc9f;"
				}
				"Payable Format"
				{
				condition = (Transaction_Type == "Payable")
				fields = [Amount, Amount_In_Base_Currency, Transaction_Type, Amount_Transaction_Date, Account.Currency]
				format = "font-weight:bold;color:#e64d3b;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Transaction_Type as "Transaction Type"
							Amount_Transaction_Date as "Amount Transaction Date"
							Account.Currency as "Currency"
							Amount
							Amount_In_Base_Currency as "Amount In Base Currency"
							Notes
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Transaction_Type as "Transaction Type"
							Expense_Bill as "Expense Bill"
							Sale
							Project
							Amount_Transaction_Date as "Amount Transaction Date"
							Amount
							Amount_In_Base_Currency as "Amount In Base Currency"
							Account
							Notes
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Monthly_Cash_Flow
		{
			displayName = "Monthly Cash Flow"
			show all rows from Cash_flow_Form    
			(
				Audition_Date as "Audition Date"
				Closing_Balance as "Closing Balance"
				Outgoing_Amount as "Outgoing  Amount"
				Incoming_Amount as "Incoming Amount"
				Profit_Lose as "Profit/Lose"
				Fiscal_Year as "Fiscal Year"
			)
			group by
			(
				Fiscal_Year ascending
			)
			sort by
			(
				Fiscal_Year ascending
			)
			options
			(
				icon = "weather-fog"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Audition_Date as "Audition Date"
							Closing_Balance as "Closing Balance"
							Outgoing_Amount as "Outgoing  Amount"
							Incoming_Amount as "Incoming Amount"
							Profit_Lose as "Profit/Lose"
							Fiscal_Year as "Fiscal Year"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Audition_Date as "Audition Date"
							Closing_Balance as "Closing Balance"
							Outgoing_Amount as "Outgoing  Amount"
							Incoming_Amount as "Incoming Amount"
							Profit_Lose as "Profit/Lose"
							Fiscal_Year as "Fiscal Year"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		pivotchart Income_vs_Expense
		{ 
			displayname = "Income vs Expense"
			based on Autoview_1538660331151_Money_Transactions_Form
					hide = true
							icon = "business-currency-dollar"				show all rows from Money_Transactions_Form
				(
 					Account 
 					Transaction_Type  as "Transaction Type"
 					Project 
 					Expense_Amount  as "Expense Amount"
 					Amount_Transaction_Date  as "Amount Transaction Date"
 					Month_field  as "Month"
 					Amount_In_Base_Currency  as "Amount In Base Currency"
 					Income_Amount  as "Income Amount"
 					Expense_Bill  as "Expense Bill"
 					Sale 
 					Amount 
 					Notes 
				)
		}
	}
	section Amounts
	{
		icon = "design-2-scale-down"
		form Money_Transactions_Form
		{
			displayname = "Money Transactions Form"
			success message = "Amount Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Transaction_Type
			(
				type = radiobuttons
				displayname = "Transaction Type"
				values = {"Payable", "Receivable"}
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Expense_Bill
			(
				type = picklist
				displayname = "Expense Bill"
				values  = Add_Bill1.ID
    			displayformat = [Bill_No + " - " + Bill_Date]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Sale
			(
				type = picklist
				values  = Add_Sales[Status == "Invoice"].ID
    			displayformat = [Sales_ID + " - " + Invoice_Date]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Add_Project.ID
    			displayformat = [Project_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Amount_Transaction_Date
			(
    			type = date
				displayname = "Amount Transaction Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Month_field
			(
    			type = text
				displayname = "Month"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Amount
			(
				type = decimal
    			description
    			[
    				type = help_text
    			 	message = "Amount has received now."
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Amount_In_Base_Currency
			(
				type = decimal
				displayname = "Amount In Base Currency"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Account
			(
				type = picklist
				values  = Add_Account_Details[Account_Status == "Active"].ID
    			displayformat = [Account_Name + " - " + Account_Code]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Notes
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Payement_Details
			(
    			type = plaintext
				value = "Payment Details Here<br />"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Hidden
			(
				type = section
	 			row = 2
	 			column = 0   
				width = medium
			)
			Expense_Amount
			(
				type = decimal
				displayname = "Expense Amount"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Income_Amount
			(
				type = decimal
				displayname = "Income Amount"
	 			row = 2
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-bitcoin"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Recieve"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Adjustments
	{
		icon = "media-1-edit-contrast-42"
		form Product_Adjustments1
		{
			displayname = "Product Adjustments"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Product
			(
				type = picklist
				values  = Add_Product.ID
    			displayformat = [Product_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Adjustment_type
			(
				type = radiobuttons
				values = {"Quantity", "Rate"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			New_Quantity
			(
				type = number
				displayname = "New Quantity"
	 			row = 1
	 			column = 1   
				width = medium
			)
			New_Rate
			(
				type = decimal
				displayname = "New Rate"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Reason
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-cart-simple-remove"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Taxations
	{
		icon = "business-percentage-39"
		form Tax_Reminder_Form
		{
			displayname = "Tax Reminder Form"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Title
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Tax_Percentage
			(
    			type = percentage
				displayname = "Tax Percentage"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Tax_Calculation_Between
			(
				type = section
				displayname = "Tax Calculation Between"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			must have From_Date_Tax_Calculation
			(
    			type = date
				displayname = "From Date (Tax Calculation)"
				alloweddays = 0,1,2,3,4,5,6
    			description
    			[
    				type = none
    			 	message = "Your turnover Tax will be calculate from this date."
    			]
	 			row = 2
	 			column = 1   
				width = medium
			)
			must have To_date_Tax_Calculation
			(
    			type = date
				displayname = "To date(Tax Calculation)"
				alloweddays = 0,1,2,3,4,5,6
    			description
    			[
    				type = none
    			 	message = "Your Tax will be calculate Between these date."
    			]
	 			row = 2
	 			column = 2   
				width = medium
			)
			Dead_End_And_Reminder
			(
				type = section
				displayname = "Dead End And Reminder"
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			must have Dead_End_Date
			(
    			type = date
				displayname = "Dead End Date"
				alloweddays = 0,1,2,3,4,5,6
    			description
    			[
    				type = help_text
    			 	message = "You should pay tax before this date."
    			]
	 			row = 3
	 			column = 1   
				width = medium
			)
			must have Remind_Date
			(
    			type = date
				displayname = "Remind Date"
				alloweddays = 0,1,2,3,4,5,6
    			description
    			[
    				type = help_text
    			 	message = "Remain message will be sent to you From this date."
    			]
	 			row = 3
	 			column = 2   
				width = medium
			)
			Section
			(
				type = section
	 			row = 4
	 			column = 0   
				width = medium
			)
			Tax_Amount
			(
				type = decimal
				displayname = "Tax Amount"
	 			row = 4
	 			column = 1   
				width = medium
			)
			Add_Account_Details
			(
				type = picklist
				displayname = "Add Account Details"
				values  = Add_Account_Details.ID
    			displayformat = [Account_Name + " - " + Account_Code]
				sortorder = ascending
	 			row = 4
	 			column = 1   
				width = medium
			)
			Date_Of_Paid
			(
    			type = date
				displayname = "Date Of Paid"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 4
	 			column = 1   
				width = medium
			)
			must have Status
			(
				type = radiobuttons
				values = {"Added", "Calculated", "Paid"}
				initial value = "Added"
	 			row = 4
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-receipt"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Pending_Taxes_To_Pay
		{
			displayName = "Pending Taxes To Pay"
			show all rows from Tax_Reminder_Form  [Status == "Added" || Status == "Calculated"]  
			(
				Title
				Remind_Date as "Remind Date"
				Tax_Percentage as "Tax Percentage"
				Dead_End_Date as "Dead End Date"
				From_Date_Tax_Calculation as "From Date (Tax Calculation)"
				To_date_Tax_Calculation as "To date(Tax Calculation)"
				Tax_Amount as "Tax Amount"
				Status
				custom action "Calculate"
				(
	  			workflow = Tax_Calculation_Scripts
				show action in edit record menu = true
				column header = "Calculate"
				condition = (Status == "Added")
				)
				custom action "Pay"
				(
	  			workflow = Tax_paying_Scripts
				show action in edit record menu = true
				column header = "Pay"
				condition = (Status == "Calculated")
				)
			)
			group by
			(
				Status ascending
			)
			options
			(
				icon = "ui-2-hourglass"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Title
							Remind_Date as "Remind Date"
							Tax_Percentage as "Tax Percentage"
							Dead_End_Date as "Dead End Date"
							From_Date_Tax_Calculation as "From Date (Tax Calculation)"
							To_date_Tax_Calculation as "To date(Tax Calculation)"
							Tax_Amount as "Tax Amount"
							Status
				"Calculate"
				"Pay"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Title
							Remind_Date as "Remind Date"
							Tax_Percentage as "Tax Percentage"
							Dead_End_Date as "Dead End Date"
							From_Date_Tax_Calculation as "From Date (Tax Calculation)"
							To_date_Tax_Calculation as "To date(Tax Calculation)"
							Tax_Amount as "Tax Amount"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Paid_Tax_History
		{
			displayName = "Paid Tax History"
			show all rows from Tax_Reminder_Form  [Status == "Paid"]  
			(
				Title
				Tax_Percentage as "Tax Percentage"
				From_Date_Tax_Calculation as "From Date (Tax Calculation)"
				To_date_Tax_Calculation as "To date(Tax Calculation)"
				Remind_Date as "Remind Date"
				Dead_End_Date as "Dead End Date"
				Tax_Amount as "Tax Amount"
				Status
			)
			options
			(
				icon = "shopping-credit-card-in"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Title
							Tax_Percentage as "Tax Percentage"
							From_Date_Tax_Calculation as "From Date (Tax Calculation)"
							To_date_Tax_Calculation as "To date(Tax Calculation)"
							Remind_Date as "Remind Date"
							Dead_End_Date as "Dead End Date"
							Tax_Amount as "Tax Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Title
							Tax_Percentage as "Tax Percentage"
							From_Date_Tax_Calculation as "From Date (Tax Calculation)"
							To_date_Tax_Calculation as "To date(Tax Calculation)"
							Remind_Date as "Remind Date"
							Dead_End_Date as "Dead End Date"
							Tax_Amount as "Tax Amount"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Settings
	{
		icon = "ui-1-settings-gear-65"
		form Add_Company_Details
		{
			displayname = "Add Company Details"
			success message = "Company Detail Added Successfully"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Company_Name
			(
    			type = text
				displayname = "Company Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Mobile_Number
			(
    			type = phonenumber
				displayname = "Mobile Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
				type = number
				displayname = "Phone Number"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Currency
			(
				type = picklist
				values = {"Choice 1"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Website
			(
    			type = url
				enable  linkname
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Company_Logo
			(
    			type = image
				displayname = "Company Logo"
				source  = public_url,file
				target = same window
				enable = link
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-contacts-44"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		properties
		{
			total entries
			{
				allowed count = 1
			}
		}
		}
		summary Company_Details
		{
			displayName = "Company Details"
			show all rows from Add_Company_Details    
			(
				Phone_Number as "Phone Number"
				Website
				Company_Logo as "Company Logo"
				Mobile_Number as "Mobile Number"
				Email
				Company_Name as "Company Name"
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Show_As_Text
	 			)
				Currency
			)
			options
			(
				display rows = 10
				display records per row = 1
				icon = "social-1-logo-creative-market"
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company_Logo as "Company Logo"
							Company_Name as "Company Name"
							Email
							Mobile_Number as "Mobile Number"
							Phone_Number as "Phone Number"
							Address
							Website
							Currency
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    	 			)
							record
							(
								Edit   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Address
							Company_Name as "Company Name"
							Email
							Mobile_Number as "Mobile Number"
							Phone_Number as "Phone Number"
							Website
							Company_Logo as "Company Logo"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Product_Adjustments
		{
			displayName = "Product Adjustments"
			show all rows from Product_Adjustments1    
			(
				Product
				Adjustment_type
				Reason
				New_Quantity as "New Quantity"
				New_Rate as "New Rate"
			)
			group by
			(
				Adjustment_type ascending
			)
			options
			(
				icon = "media-1-edit-contrast-42"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Adjustment_type
							Product
							New_Rate as "New Rate"
							New_Quantity as "New Quantity"
							Reason
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Product
							Adjustment_type
							Reason
							New_Quantity as "New Quantity"
							New_Rate as "New Rate"
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Product"
		     			related field =  Product
						fields
						(
							Project
							Type
							Product_Name as "Product Name"
							Unit
							SKU as "Quantity"
							Rate
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom All_Currency
		{
			displayName = "All Currency"
			show all rows from Add_Currency    
			(
				Date_field as "Date"
				Currency_Symbol as "Currency Symbol"
				Currency_Code as "Currency Code"
				(
					width = 145px
				)
				Today_Currency_Rate as "Today Currency Rate"
				(
					width = 224px
				)
				Currency
			)
			options
			(
				icon = "shopping-bitcoin"
	 		)
			conditional formatting
			(
				"New Formatting"
				{
				fields = [Currency_Code]
				format = "color:#000000;background-color:#1bbc9b;"
				}
				"New Formatting"
				{
				fields = [Currency]
				format = "font-weight:bold;color:#19bc9f;"
				}
				"Currency Rate"
				{
				fields = [Today_Currency_Rate]
				format = "color:#19bc9f;"
				}
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Currency
							Today_Currency_Rate as "Today Currency Rate"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Currency_Code as "Currency Code"
							Today_Currency_Rate as "Today Currency Rate"
							Date_field as "Date"
							Currency
							Currency_Symbol as "Currency Symbol"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Account_Types
		{
			displayName = "All Account Types"
			show all rows from Account_Types    
			(
				Account_Type as "Account Type"
				Description
			)
			options
			(
				icon = "tech-2-pci-card"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Account_Type as "Account Type"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Account_Type as "Account Type"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Taxes
		{
			displayName = "Taxes"
			show all rows from Add_Tax_Rates    
			(
				Tax_Name as "Tax Name"
				Tax_Rate as "Tax Rate"
			)
			options
			(
				icon = "shopping-credit-card-in"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Tax_Name as "Tax Name"
							Tax_Rate as "Tax Rate"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Tax_Name as "Tax Name"
							Tax_Rate as "Tax Rate"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Fiscal_Years_Report
		{
			displayName = "Fiscal Years Report"
			show all rows from Make_Your_Fiscal_Year    
			(
				Fiscal_Year as "Fiscal Year"
				Fiscal_Year_From as "Fiscal Year From"
				Fiscal_Year_To as "Fiscal Year To"
				Fiscal_Year_Status as "Fiscal Year Status"
				Cash_Balance_When_Starting as "Cash Balance When Starting"
				Cash_Balance_When_ending as "Cash Balance When ending"
			)
			group by
			(
				Fiscal_Year_Status ascending
			)
			sort by
			(
				Fiscal_Year_Status ascending
			)
			options
			(
				icon = "business-laptop-71"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Fiscal_Year as "Fiscal Year"
							Fiscal_Year_From as "Fiscal Year From"
							Fiscal_Year_To as "Fiscal Year To"
							Fiscal_Year_Status as "Fiscal Year Status"
							Cash_Balance_When_Starting as "Cash Balance When Starting"
							Cash_Balance_When_ending as "Cash Balance When ending"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Fiscal_Year as "Fiscal Year"
							Fiscal_Year_From as "Fiscal Year From"
							Fiscal_Year_To as "Fiscal Year To"
							Fiscal_Year_Status as "Fiscal Year Status"
							Cash_Balance_When_Starting as "Cash Balance When Starting"
							Cash_Balance_When_ending as "Cash Balance When ending"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Refunt_Return
	{
		displayname= "Refunt/Return"
		icon = "tech-desktop"
		form Refund_Return
		{
			displayname = "Refund/Return"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Type
			(
				type = radiobuttons
				values = {"Recievable", "Payable"}
				layout = 2
	 			row = 1
	 			column = 1   
				width = medium
			)
			Select_Expense_Bill
			(
				type = picklist
				displayname = "Select Expense Bill"
				values  = Add_Bill1.ID
    			displayformat = [Bill_No]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Select_Sales_Invoice
			(
				type = picklist
				displayname = "Select Sales Invoice"
				values  = Add_Sales[Payment_Status != "Unpaid"].ID
    			displayformat = [Sales_ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Transatioin_Currency
			(
				type = picklist
				displayname = "Transatioin Currency"
				values  = Add_Currency.ID
    			displayformat = [Currency]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Amount
			(
				type = decimal
    			description
    			[
    				type = help_text
    			 	message = "Give amount in transaction currency"
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Select_Account
			(
				type = picklist
				displayname = "Select Account"
				values  = Add_Account_Details.ID
    			displayformat = [Account_Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Refunt_Return_Report
		{
			displayName = "Refunt/Return Report"
   			hide = true
			show all rows from Refund_Return    
			(
				Select_Expense_Bill as "Select Expense Bill"
				Type
				Select_Sales_Invoice as "Select Sales Invoice"
				Amount
				Transatioin_Currency as "Transatioin Currency"
				Select_Account as "Select Account"
				Description
			)
			options
			(
				icon = "arrows-1-back-80"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Select_Expense_Bill as "Select Expense Bill"
							Type
							Select_Sales_Invoice as "Select Sales Invoice"
							Amount
							Transatioin_Currency as "Transatioin Currency"
							Select_Account as "Select Account"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Select_Expense_Bill as "Select Expense Bill"
							Type
							Select_Sales_Invoice as "Select Sales Invoice"
							Amount
							Transatioin_Currency as "Transatioin Currency"
							Select_Account as "Select Account"
							Description
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Pay_Tax_Sateless_Form
	{
		displayname= "Pay Tax Sateless Form"
		icon = "social-1-logo-paypal"
		form Pay_Tax_Sateless_Form
		{
			displayname = "Pay Tax Sateless Form"
			store data in zc = false
			success message = ""
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Tax_Name
			(
				type = picklist
				displayname = "Tax Name"
				values  = Tax_Reminder_Form.ID
    			displayformat = [Title + " - " + Dead_End_Date]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Tax_Amount
			(
				type = decimal
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Transaction_Date
			(
    			type = date
				displayname = "Transaction Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Account
			(
				type = picklist
				values  = Add_Account_Details[Transaction_Type == "Payable" || Transaction_Type == "Payable & Receivable"].ID
    			displayformat = [Account_Name + " - " + Account_Code]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "social-1-logo-paypal"
			)
			actions
			{
				Pay
				(
   					type = submit
   					displayname = "Pay"
				)
				Reset
				(
   					type = reset
   					displayname = "Reset"
				)
			}
		}
	}
	section Cash_flow_Form
	{
		displayname= "Cash flow Form"
		icon = "tech-desktop"
		form Cash_flow_Form
		{
			displayname = "Cash flow Form"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Fiscal_Year
			(
				type = picklist
				displayname = "Fiscal Year"
				values  = Make_Your_Fiscal_Year.ID
    			displayformat = [Fiscal_Year]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Audition_Date
			(
    			type = date
				displayname = "Audition Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Closing_Balance
			(
				type = decimal
				displayname = "Closing Balance"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Incoming_Amount
			(
				type = decimal
				displayname = "Incoming Amount"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Outgoing_Amount
			(
				type = decimal
				displayname = "Outgoing  Amount"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Profit_Lose
			(
				type = decimal
				displayname = "Profit/Lose"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "weather-fog"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Make_Your_Fiscal_Year
	{
		displayname= "Make Your Fiscal Year"
		icon = "tech-desktop"
		form Make_Your_Fiscal_Year
		{
			displayname = "Make Your Fiscal Year"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Fiscal_Year_From
			(
    			type = date
				displayname = "Fiscal Year From"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Fiscal_Year_To
			(
    			type = date
				displayname = "Fiscal Year To"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Fiscal_Year
			(
    			type = text
				displayname = "Fiscal Year"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Cash_Balance_When_Starting
			(
				type = decimal
				displayname = "Cash Balance When Starting"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Cash_Balance_When_ending
			(
				type = decimal
				displayname = "Cash Balance When ending"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Fiscal_Year_Status
			(
				type = picklist
				displayname = "Fiscal Year Status"
				values = {"Current", "Completed"}
				initial value = "Current"
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "business-sign"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Add_Income
	{
		displayname= "Add Income"
		icon = "shopping-mobile-card"
		pivotchart Monthly_Income
		{ 
			displayname = "Monthly Income"
			based on Autoview_1540982670688_Add_Income
					hide = true
							icon = "shopping-credit-card-in"				show all rows from Add_Income
				(
 					Account 
 					Amount_In_Base_Currency  as "Amount In Base Currency"
 					Debt 
 					Notes 
 					Income_Amount  as "Income Amount"
 					Transaction_Date  as "Transaction Date"
				)
		}
	}
	functions
	{
 			list countries.currencyList()
			{
				country_Details = Map();
				country_Details = {"Bangladesh":{"BD":"BDT"},"Belgium":{"BE":"EUR"},"Burkina Faso":{"BF":"XOF"},"Bulgaria":{"BG":"BGN"},"Bosnia and Herzegovina":{"BA":"BAM"},"Barbados":{"BB":"BBD"},"Wallis and Futuna":{"WF":"XPF"},"Saint Barthelemy":{"BL":"EUR"},"Bermuda":{"BM":"BMD"},"Brunei":{"BN":"BND"},"Bolivia":{"BO":"BOB"},"Bahrain":{"BH":"BHD"},"Burundi":{"BI":"BIF"},"Benin":{"BJ":"XOF"},"Bhutan":{"BT":"BTN"},"Jamaica":{"JM":"JMD"},"Bouvet Island":{"BV":"NOK"},"Botswana":{"BW":"BWP"},"Samoa":{"WS":"WST"},"Bonaire, Saint Eustatius and Saba ":{"BQ":"USD"},"Brazil":{"BR":"BRL"},"Bahamas":{"BS":"BSD"},"Jersey":{"JE":"GBP"},"Belarus":{"BY":"BYR"},"Belize":{"BZ":"BZD"},"Russia":{"RU":"RUB"},"Rwanda":{"RW":"RWF"},"Serbia":{"RS":"RSD"},"East Timor":{"TL":"USD"},"Reunion":{"RE":"EUR"},"Turkmenistan":{"TM":"TMT"},"Tajikistan":{"TJ":"TJS"},"Romania":{"RO":"RON"},"Tokelau":{"TK":"NZD"},"Guinea-Bissau":{"GW":"XOF"},"Guam":{"GU":"USD"},"Guatemala":{"GT":"GTQ"},"South Georgia and the South Sandwich Islands":{"GS":"GBP"},"Greece":{"GR":"EUR"},"Equatorial Guinea":{"GQ":"XAF"},"Guadeloupe":{"GP":"EUR"},"Japan":{"JP":"JPY"},"Guyana":{"GY":"GYD"},"Guernsey":{"GG":"GBP"},"French Guiana":{"GF":"EUR"},"Georgia":{"GE":"GEL"},"Grenada":{"GD":"XCD"},"United Kingdom":{"GB":"GBP"},"Gabon":{"GA":"XAF"},"El Salvador":{"SV":"USD"},"Guinea":{"GN":"GNF"},"Gambia":{"GM":"GMD"},"Greenland":{"GL":"DKK"},"Gibraltar":{"GI":"GIP"},"Ghana":{"GH":"GHS"},"Oman":{"OM":"OMR"},"Tunisia":{"TN":"TND"},"Jordan":{"JO":"JOD"},"Croatia":{"HR":"HRK"},"Haiti":{"HT":"HTG"},"Hungary":{"HU":"HUF"},"Hong Kong":{"HK":"HKD"},"Honduras":{"HN":"HNL"},"Heard Island and McDonald Islands":{"HM":"AUD"},"Venezuela":{"VE":"VEF"},"Puerto Rico":{"PR":"USD"},"Palestinian Territory":{"PS":"ILS"},"Palau":{"PW":"USD"},"Portugal":{"PT":"EUR"},"Svalbard and Jan Mayen":{"SJ":"NOK"},"Paraguay":{"PY":"PYG"},"Iraq":{"IQ":"IQD"},"Panama":{"PA":"PAB"},"French Polynesia":{"PF":"XPF"},"Papua New Guinea":{"PG":"PGK"},"Peru":{"PE":"PEN"},"Pakistan":{"PK":"PKR"},"Philippines":{"PH":"PHP"},"Pitcairn":{"PN":"NZD"},"Poland":{"PL":"PLN"},"Saint Pierre and Miquelon":{"PM":"EUR"},"Zambia":{"ZM":"ZMK"},"Western Sahara":{"EH":"MAD"},"Estonia":{"EE":"EUR"},"Egypt":{"EG":"EGP"},"South Africa":{"ZA":"ZAR"},"Ecuador":{"EC":"USD"},"Italy":{"IT":"EUR"},"Vietnam":{"VN":"VND"},"Solomon Islands":{"SB":"SBD"},"Ethiopia":{"ET":"ETB"},"Somalia":{"SO":"SOS"},"Zimbabwe":{"ZW":"ZWL"},"Saudi Arabia":{"SA":"SAR"},"Spain":{"ES":"EUR"},"Eritrea":{"ER":"ERN"},"Montenegro":{"ME":"EUR"},"Moldova":{"MD":"MDL"},"Madagascar":{"MG":"MGA"},"Saint Martin":{"MF":"EUR"},"Morocco":{"MA":"MAD"},"Monaco":{"MC":"EUR"},"Uzbekistan":{"UZ":"UZS"},"Myanmar":{"MM":"MMK"},"Mali":{"ML":"XOF"},"Macao":{"MO":"MOP"},"Mongolia":{"MN":"MNT"},"Marshall Islands":{"MH":"USD"},"Macedonia":{"MK":"MKD"},"Mauritius":{"MU":"MUR"},"Malta":{"MT":"EUR"},"Malawi":{"MW":"MWK"},"Maldives":{"MV":"MVR"},"Martinique":{"MQ":"EUR"},"Northern Mariana Islands":{"MP":"USD"},"Montserrat":{"MS":"XCD"},"Mauritania":{"MR":"MRO"},"Isle of Man":{"IM":"GBP"},"Uganda":{"UG":"UGX"},"Tanzania":{"TZ":"TZS"},"Malaysia":{"MY":"MYR"},"Mexico":{"MX":"MXN"},"Israel":{"IL":"ILS"},"France":{"FR":"EUR"},"British Indian Ocean Territory":{"IO":"USD"},"Saint Helena":{"SH":"SHP"},"Finland":{"FI":"EUR"},"Fiji":{"FJ":"FJD"},"Falkland Islands":{"FK":"FKP"},"Micronesia":{"FM":"USD"},"Faroe Islands":{"FO":"DKK"},"Nicaragua":{"NI":"NIO"},"Netherlands":{"NL":"EUR"},"Norway":{"NO":"NOK"},"Namibia":{"NA":"NAD"},"Vanuatu":{"VU":"VUV"},"New Caledonia":{"NC":"XPF"},"Niger":{"NE":"XOF"},"Norfolk Island":{"NF":"AUD"},"Nigeria":{"NG":"NGN"},"New Zealand":{"NZ":"NZD"},"Nepal":{"NP":"NPR"},"Nauru":{"NR":"AUD"},"Niue":{"NU":"NZD"},"Cook Islands":{"CK":"NZD"},"Kosovo":{"XK":"EUR"},"Ivory Coast":{"CI":"XOF"},"Switzerland":{"CH":"CHF"},"Colombia":{"CO":"COP"},"China":{"CN":"CNY"},"Cameroon":{"CM":"XAF"},"Chile":{"CL":"CLP"},"Cocos Islands":{"CC":"AUD"},"Canada":{"CA":"CAD"},"Republic of the Congo":{"CG":"XAF"},"Central African Republic":{"CF":"XAF"},"Democratic Republic of the Congo":{"CD":"CDF"},"Czech Republic":{"CZ":"CZK"},"Cyprus":{"CY":"EUR"},"Christmas Island":{"CX":"AUD"},"Costa Rica":{"CR":"CRC"},"Curacao":{"CW":"ANG"},"Cape Verde":{"CV":"CVE"},"Cuba":{"CU":"CUP"},"Swaziland":{"SZ":"SZL"},"Syria":{"SY":"SYP"},"Sint Maarten":{"SX":"ANG"},"Kyrgyzstan":{"KG":"KGS"},"Kenya":{"KE":"KES"},"South Sudan":{"SS":"SSP"},"Suriname":{"SR":"SRD"},"Kiribati":{"KI":"AUD"},"Cambodia":{"KH":"KHR"},"Saint Kitts and Nevis":{"KN":"XCD"},"Comoros":{"KM":"KMF"},"Sao Tome and Principe":{"ST":"STD"},"Slovakia":{"SK":"EUR"},"South Korea":{"KR":"KRW"},"Slovenia":{"SI":"EUR"},"North Korea":{"KP":"KPW"},"Kuwait":{"KW":"KWD"},"Senegal":{"SN":"XOF"},"San Marino":{"SM":"EUR"},"Sierra Leone":{"SL":"SLL"},"Seychelles":{"SC":"SCR"},"Kazakhstan":{"KZ":"KZT"},"Cayman Islands":{"KY":"KYD"},"Singapore":{"SG":"SGD"},"Sweden":{"SE":"SEK"},"Sudan":{"SD":"SDG"},"Dominican Republic":{"DO":"DOP"},"Dominica":{"DM":"XCD"},"Djibouti":{"DJ":"DJF"},"Denmark":{"DK":"DKK"},"British Virgin Islands":{"VG":"USD"},"Germany":{"DE":"EUR"},"Yemen":{"YE":"YER"},"Algeria":{"DZ":"DZD"},"United States":{"US":"USD"},"Uruguay":{"UY":"UYU"},"Mayotte":{"YT":"EUR"},"United States Minor Outlying Islands":{"UM":"USD"},"Lebanon":{"LB":"LBP"},"Saint Lucia":{"LC":"XCD"},"Laos":{"LA":"LAK"},"Tuvalu":{"TV":"AUD"},"Taiwan":{"TW":"TWD"},"Trinidad and Tobago":{"TT":"TTD"},"Turkey":{"TR":"TRY"},"Sri Lanka":{"LK":"LKR"},"Liechtenstein":{"LI":"CHF"},"Latvia":{"LV":"EUR"},"Tonga":{"TO":"TOP"},"Lithuania":{"LT":"LTL"},"Luxembourg":{"LU":"EUR"},"Liberia":{"LR":"LRD"},"Lesotho":{"LS":"LSL"},"Thailand":{"TH":"THB"},"French Southern Territories":{"TF":"EUR"},"Togo":{"TG":"XOF"},"Chad":{"TD":"XAF"},"Turks and Caicos Islands":{"TC":"USD"},"Libya":{"LY":"LYD"},"Vatican":{"VA":"EUR"},"Saint Vincent and the Grenadines":{"VC":"XCD"},"United Arab Emirates":{"AE":"AED"},"Andorra":{"AD":"EUR"},"Antigua and Barbuda":{"AG":"XCD"},"Afghanistan":{"AF":"AFN"},"Anguilla":{"AI":"XCD"},"U.S. Virgin Islands":{"VI":"USD"},"Iceland":{"IS":"ISK"},"Iran":{"IR":"IRR"},"Armenia":{"AM":"AMD"},"Albania":{"AL":"ALL"},"Angola":{"AO":"AOA"},"Antarctica":{"AQ":""},"American Samoa":{"AS":"USD"},"Argentina":{"AR":"ARS"},"Australia":{"AU":"AUD"},"Austria":{"AT":"EUR"},"Aruba":{"AW":"AWG"},"India":{"IN":"INR"},"Aland Islands":{"AX":"EUR"},"Azerbaijan":{"AZ":"AZN"},"Ireland":{"IE":"EUR"},"Indonesia":{"ID":"IDR"},"Ukraine":{"UA":"UAH"},"Qatar":{"QA":"QAR"},"Mozambique":{"MZ":"MZN"}};
				countries = country_Details.keys();
				currencies = List();
				for each  cntry_name in countries
				{
					cntry_det = country_Details.get(cntry_name);
					contry_code = cntry_det.keys();
					currency = cntry_det.getJSON(contry_code.get(0));
					if(currencies.contains(currency) == false)
					{
						currencies.add(currency);
					}
				}
				return currencies;
			}
 			float api_callings.get_currency_rate(String currency_name)
			{
				my_currency = Add_Company_Details[ID != 0].Currency;
				api_response = getUrl("http://free.currencyconverterapi.com/api/v5/convert?q=" + my_currency + "_" + currency_name + "&compact=y").toMap();
				currency_value = api_response.get(my_currency + "_" + currency_name);
				currency_rate = currency_value.get("val").toDecimal();
				return currency_rate;
			}
 			float form_functions.net_total_basic_currency(float amount, float currency_rate)
			{
				amount_in_basic_currency = amount / currency_rate;
				return amount_in_basic_currency;
			}
 			void custom_actions.addAmount(Add_Account_Details account)
			{
				openUrl(zoho.appuri + "#Form:Add_Income?Account=" + account.ID,"popup window");
			}
 			void custom_actions.recieveInvoiceAmount(int invoice)
			{
				openUrl(zoho.appuri + "#Form:Money_Transactions_Form?Sale=" + invoice,"popup window");
			}
 			void custom_actions.moveToInvoice(int record_id)
			{
				//Redirect the edit mode of the estimation because while moving estimation to invoice we should give chance to change the sales order.
				openUrl(zoho.appuri + "Add_Sales/record-edit/Sales_Report/" + record_id + "?Status=Invoice","same window");
			}
 			void custom_actions.startProject(Add_Project project)
			{
				project.Project_Status="Working";
				project.Project_Start_Date=zoho.currentdate;
			}
 			void custom_actions.addProjectExpense(int Poject_ID)
			{
				openUrl(zoho.appuri + "#Form:Add_Expense?Project=" + Poject_ID,"popup window");
			}
 			void custom_actions.recieveProjectAmount(int project_id)
			{
				openUrl(zoho.appuri + "#Form:Money_Transactions_Form?Project=" + project_id,"popup window");
			}
 			void form_functions.addAmountToAccount(int amount, int account_id)
			{
				account_det = Add_Account_Details[ID == account_id];
				account_det.Open_Balance=account_det.Open_Balance + amount;
			}
 			void custom_actions.FinsihProject(int project_ID)
			{
				this_project = Add_Project[ID == project_ID];
				this_project.Project_Status="Finished";
				info this_project.Project_Name + " was registered as a completed project";
			}
 			void custom_actions.changeAsproduct(int project_ID)
			{
				openUrl(zoho.appuri + "#Form:Add_Product?Project=" + project_ID,"popup window");
			}
 			void custom_actions.addBillPayment(int bill_ID)
			{
				openUrl(zoho.appuri + "#Form:Money Transactions Form?Expense_Bill=" + bill_ID,"popup window");
			}
 			string form_functions.getMonth(date tra_date)
			{
				months = {1:"January",2:"February",3:"Mach",4:"April",5:"May",6:"June",7:"July",8:"Augest",9:"September",10:"October",11:"November",12:"December"};
				month_no = tra_date.getMonth();
				return months.get(month_no);
			}
	}



	workflow
	{
		form
		{
			Run_Scripts_While_click_a as "Run Scripts - While click a button"
			{
				type =  form
				form = Pay_Tax_Sateless_Form
				button = Pay
				on click
				{
					actions 
					{
					on click
					(
						transaction_account = Add_Account_Details[ID == input.Account];
										transaction_account.Open_Balance=transaction_account.Open_Balance - input.Tax_Amount;
										tax = Tax_Reminder_Form[ID == input.Tax_Name];
										tax.Add_Account_Details=input.Account;
										tax.Date_Of_Paid=zoho.currentdate;
										insert into Add_Expense
										[
											Added_User=zoho.loginuser
											Amount=input.Tax_Amount
											Expense_Account=input.Account
											Expense_Date=zoho.currentdate
											Notes="Tax has been paid"
										]
										insert into Money_Transactions_Form
										[
											Added_User=zoho.loginuser
											Transaction_Type="Payable"
											Amount_Transaction_Date=zoho.currentdate
											Account=input.Account
											Amount=input.Tax_Amount
											Notes="Tax Has been Paid"
										]
					)
					}
				}
			}
			Direct_to_Form_Properties as "Direct to - Form Properties"
			{
				type =  presuccess
				form = Add_Company_Details
				on start
				{
					actions 
					{
						openURL("#Form:Add_Account_Details","new window");
					}
				}
			}
			Hiding_Company_Info_While as "Hiding Company Info - While Opening Form"
			{
				type =  form
				form = New_Contact
				record event = on add

	field rules
	{
					actions 
					{
						hide Company_Name,Company_Email;
					}
	}

			}
			Run_Scripts_On_Always as "Run Scripts - On Always"
			{
				type =  form
				form = New_Contact
				record event = on add or edit

	field rules
	{
					actions  (Contact_As == "Company")
					{
						show Company_Name,Company_Email;
					}
	}

			}
			Run_Scripts_While_Editing as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = New_Contact
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											if(input.Contact_As == "Company")
										{
											show Company_Email;
											show Company_Name;
										}
										else
										{
											hide Company_Name;
											hide Company_Email;
										}
						)
					}
	}

			}
			Run_Scripts_While_adding_2 as "Run Scripts - While adding record"
			{
				type =  form
				form = Add_Currency
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Date_field = zoho.currentdate;
										currencyList = thisapp.countries.currencyList();
										added_currencies = Add_Currency[ID != 0].Currency_Code.getAll();
										currencyList.removeAll(added_currencies);
										input.Currency_Code:ui.add(currencyList.sort());
						)
					}
	}

			}
			Run_Scripts_While_adding_4 as "Run Scripts - While adding record"
			{
				type =  form
				form = Add_Currency
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											input.Date_field = zoho.currentdate;
										input.Today_Currency_Rate = thisapp.api_callings.get_currency_rate(input.Currency_Code);
						)
					}
	}

			}
			Run_Scripts_While_adding_5 as "Run Scripts - While adding Record"
			{
				type =  form
				form = Add_Company_Details
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Currency:ui.add(thisapp.countries.currencyList());
						)
					}
	}

			}
			Run_Scripts_While_adding_6 as "Run Scripts - While adding a record"
			{
				type =  form
				form = Add_Account_Details
				record event = on add

	field rules
	{
					actions 
					{
						hide Account_Status,Open_Balance_In_Base_Currency;
					}
	}

			}
			Run_Scripts_While_adding_7 as "Run Scripts - While adding a record"
			{
				type =  form
				form = Add_Account_Details
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											input.Open_Balance_In_Base_Currency = input.Open_Balance / input.Currency.Today_Currency_Rate;
						)
					}
	}

			}
			Run_Scripts_On_Always_Sub2 as "Run Scripts - On Always (Subform)"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											disable Item_Details.Subtotal;
										disable Item_Details.Unit_Price;
										disable Item_Details.S_No;
						)
					}
	}

			}
			Run_Scripts_On_Always_Sub3 as "Run Scripts - On Always (Subform)"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on user input of Item_Details.Product
	{
					actions 
					{
						custom deluge script
						(
											if(row.Product != null)
										{
											product_det = Add_Product[ID == row.Product];
											if(input.Transaction_Currency == null)
											{
												row.Product=null;
												row.Unit_Price=0;
												alert "Select Transaction currency First";
											}
											else
											{
												cur_rate = input.Transaction_Currency.Today_Currency_Rate;
												row.Unit_Price=product_det.Rate * cur_rate;
											}
										}
										row.Subtotal=0;
										row.Quantity=0;
						)
					}
	}

			}
			Run_Scripts_On_Always_Sub4 as "Run Scripts - On Always (Subform)"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on user input of Item_Details.Quantity
	{
					actions 
					{
						custom deluge script
						(
											//auto filling the subtotal of the product price that is multiple with the quantity.
										if(row.Product != null && row.Quantity != null && row.Quantity != 0)
										{
											row.Subtotal=row.Unit_Price * row.Quantity;
											total_amount = 0;
											for each  row_ in Item_Details
											{
												if(row_.Subtotal != null)
												{
													total_amount = total_amount + row_.Subtotal;
												}
											}
											input.Total = total_amount;
										}
										else
										{
											row.Subtotal=null;
											alert "Quantity Field must have the value 1 or more";
										}
						)
					}
	}

			}
			Run_Scripts_On_Always_Sub5 as "Run Scripts - On Always (Subform)"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on add row of Item_Details
	{
					actions 
					{
						custom deluge script
						(
											no_of_rows = input.Item_Details.toList().size();
										row.S_No=no_of_rows;
										all_products = Add_Product[ID != 0].ID.getAll();
										added_products = List();
										for each  row_ in Item_Details
										{
											if(row_.Product != null)
											{
												added_products.add(row_.Product);
											}
										}
										all_products.removeAll(added_products);
										row.Product:ui.add(all_products);
						)
					}
	}

			}
			Run_Scripts_On_Always_Sub6 as "Run Scripts - On Always (Subform)"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on delete row of Item_Details
	{
					actions 
					{
						custom deluge script
						(
											if(row.Subtotal != null)
										{
											input.Total = input.Total - row.Subtotal;
										}
										for each  row_ in Item_Details
										{
											if(row_.S_No > row.S_No)
											{
												row_.S_No=input.Item_Details.toList().indexOf(row_);
											}
										}
						)
					}
	}

			}
			Fields_Scripts_On_Always2 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	field rules
	{
					actions  (Estimation_Date is null)
					{
						disable Expiry_date;
					}
					actions  (Transaction_Currency is not null)
					{
						show Currency_Details;
					}
					actions 
					{
						disable Total;
						hide Payment_Status;
					}
	}

			}
			Fields_Scripts_On_Always3 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on user input of Transaction_Currency
	{
					actions  (Transaction_Currency is not null)
					{
						custom deluge script
						(
											basic_currency = Add_Company_Details[ID != 0].Currency;
										if(basic_currency == input.Transaction_Currency.Currency_Code)
										{
											input.Currency_Details = "As on Today, 1 " + input.Transaction_Currency.Currency_Code + " = 1.00 " + basic_currency;
										}
										else
										{
											input.Currency_Details = "As on Today, 1 " + basic_currency + " = " + input.Transaction_Currency.Today_Currency_Rate + " " + input.Transaction_Currency.Currency_Code;
										}
										total = 0.0;
										for each  row in input.Item_Details
										{
											if(row.Product != null)
											{
												row.Unit_Price=row.Product.Rate * input.Transaction_Currency.Today_Currency_Rate;
												row.Subtotal=row.Unit_Price * row.Quantity;
												total = total + row.Subtotal;
											}
										}
										input.Total = total;
						)
					}
	}

			}
			Fields_Scripts_On_Always4 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on user input of Tax
	{
					actions  (Tax is null || Adjustments is null || Shipping_Charges is null || Paid_Amount is null)
					{
						custom deluge script
						(
											input.Tax = 0;
						)
					}
	}

			}
			Fields_Scripts_On_Always5 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on user input of Shipping_Charges
	{
					actions  (Tax is null || Adjustments is null || Shipping_Charges is null || Paid_Amount is null)
					{
						custom deluge script
						(
											input.Shipping_Charges = input.Net_Total;
										alert input.Net_Total;
						)
					}
	}

			}
			Fields_Scripts_On_Always6 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on user input of Customer
	{
					actions 
					{
						custom deluge script
						(
											if(Customer != null)
										{
											cus_currecy = New_Contact[ID == input.Customer].Currency1;
											input.Transaction_Currency = Add_Currency[ID == cus_currecy].ID;
											show Currency_Details;
										}
										else
										{
											input.Transaction_Currency = null;
											hide Currency_Details;
										}
						)
					}
	}

			}
			Fields_Scripts_On_Always7 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on user input of Expiry_date
	{
					actions  (Estimation_Date is null)
					{
						custom deluge script
						(
											if(input.Estimation_Date >= input.Expiry_date)
										{
											alert " Expiry date is must after Estimate date ";
											input.Expiry_date = null;
										}
						)
					}
					actions 
					{
						custom deluge script
						(
											if(input.Estimation_Date >= input.Expiry_date)
										{
											alert " Expiry date must be after Estimation date ";
											input.Expiry_date = null;
										}
						)
					}
	}

			}
			Fields_Scripts_On_Always8 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on user input of Paid_Amount
	{
					actions  (Tax is null || Adjustments is null || Shipping_Charges is null || Paid_Amount is null)
					{
						custom deluge script
						(
											input.Paid_Amount = 0;
						)
					}
	}

			}
			Fields_Scripts_On_Always9 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on user input of Estimation_Date
	{
					actions  (Estimation_Date is null)
					{
						custom deluge script
						(
											input.Expiry_date = null;
						)
					}
	}

			}
			Fields_Scripts_On_Always10 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Sales
				record event = on add or edit

	on user input of Adjustments
	{
					actions  (Tax is null || Adjustments is null || Shipping_Charges is null || Paid_Amount is null)
					{
						custom deluge script
						(
											input.Adjustments = 0;
						)
					}
	}

			}
			Field_Scripts_On_always1 as "Field Scripts - On always"
			{
				type =  form
				form = Add_Currency
				record event = on add or edit

	field rules
	{
					actions 
					{
						hide Today_Currency_Rate,Date_field;
						disable Currency;
					}
	}

			}
			Field_Scripts_On_always2 as "Field Scripts - On always"
			{
				type =  form
				form = Add_Currency
				record event = on add or edit

	on user input of Currency_Code
	{
					actions 
					{
						custom deluge script
						(
											input.Currency = input.Currency_Code;
						)
					}
	}

			}
			Field_Scripts_On_always3 as "Field Scripts - On always"
			{
				type =  form
				form = Add_Currency
				record event = on add or edit

	on user input of Currency_Symbol
	{
					actions 
					{
						custom deluge script
						(
											if(input.Currency_Symbol != "")
										{
											input.Currency = input.Currency_Code + "(" + input.Currency_Symbol + ")";
										}
										else
										{
											input.Currency = input.Currency_Code;
										}
						)
					}
	}

			}
			Run_Sripts_While_adding_a2 as "Run Sripts - While adding a record"
			{
				type =  form
				form = Add_Sales
				record event = on add

	field rules
	{
					actions  (Status == "Invoice")
					{
						show Invoice_Date;
						show Paid_Amount,Remaining_Balance,Account;
					}
					actions  (Status == "Estimation")
					{
						show Estimation_Date,Expiry_date;
					}
					actions 
					{
						hide Net_Total_In_Base_Currency,Paid_Amount_In_Base_Currency,Remaining_Balance_In_base_Currency;
						disable Remaining_Balance;
					}
	}

			}
			Run_Sripts_While_adding_a3 as "Run Sripts - While adding a record"
			{
				type =  form
				form = Add_Sales
				record event = on add

	on validate
	{
					actions  (Status == "Invoice")
					{
						custom deluge script
						(
											if(input.Invoice_Date == null)
										{
											alert "Invoice Date is mandatory";
											cancel submit;
										}
										else
										{
											if(input.Account == null && input.Paid_Amount > 0)
											{
												alert "Select amount recieved account";
												cancel submit;
											}
										}
						)
					}
					actions  (Status == "Estimation")
					{
						custom deluge script
						(
											if(input.Estimation_Date == null || Expiry_date == null)
										{
											alert "Estimation Date and Expiry_date date are mandatory for the estimation record";
											cancel submit;
										}
						)
					}
	}

			}
			Run_Sripts_While_adding_a4 as "Run Sripts - While adding a record"
			{
				type =  form
				form = Add_Sales
				record event = on add

	on success
	{
					actions  (Status == "Estimation")
					{
						success message "Estimation has added as record. And this estimation has sent to the customer.";
					}
					actions 
					{
						custom deluge script
						(
											input.Net_Total_In_Base_Currency = input.Net_Total / input.Transaction_Currency.Today_Currency_Rate;
										if(input.Status == "Estimation")
										{
											success message "The estimation has been added as a record";
										}
										if(input.Status == "Invoice")
										{
											if(input.Paid_Amount < input.Net_Total)
											{
												input.Payment_Status = "Partialy Paid";
											}
											if(input.Paid_Amount == input.Net_Total)
											{
												input.Payment_Status = "Fully Paid";
											}
											/* 	input.Net_Total_In_Base_Currency = Transaction_Currency.Today_Currency_Rate * input.Net_Total;
																																input.Remaining Balance_In_Base_Currency = Transaction_Currency.Today_Currency_Rate * input.Remaining_Balance;
																																input.Paid_Amount_In_Base_Currency = Transaction_Currency.Today_Currency_Rate * input.Paid_Amount; */
											input.Paid_Amount_In_Base_Currency = input.Paid_Amount / input.Transaction_Currency.Today_Currency_Rate;
											input.Remaining_Balance_In_base_Currency = input.Net_Total_In_Base_Currency - input.Paid_Amount_In_Base_Currency;
											if(Account != null)
											{
												insert into Money_Transactions_Form
												[
													Added_User=zoho.loginuser
													Transaction_Type="Receivable"
													Sale=input.ID
													Amount_Transaction_Date=input.Invoice_Date
													Account=input.Account
													Amount=input.Paid_Amount
													Amount_In_Base_Currency=input.Paid_Amount * input.Transaction_Currency.Today_Currency_Rate
													Notes="Invoice Amount"
												]
												insert into Add_Income
												[
													Added_User=zoho.loginuser
													Transaction_Date=input.Invoice_Date
													Amount_In_Base_Currency=input.Paid_Amount_In_Base_Currency
													Income_Amount=input.Paid_Amount
													Account=input.Account
													Notes="Amount has been received by Sales"
												]
												current_account = Add_Account_Details[ID == input.Account];
												current_account.Open_Balance=input.Account.Open_Balance + input.Paid_Amount;
												current_account.Open_Balance_In_Base_Currency=input.Account.Open_Balance_In_Base_Currency + input.Paid_Amount_In_Base_Currency;
											}
											success message "This invoice has been added as a record";
										}
										openUrl("#Script.page.refresh","same window");
						)
					}
	}

			}
			Run_Scripts_While_creatin2 as "Run Scripts - While creating record"
			{
				type =  form
				form = Money_Transactions_Form
				record event = on add

	field rules
	{
					actions  (Project is not null)
					{
						disable Project;
					}
					actions  (Sale is not null)
					{
						disable Sale;
					}
					actions 
					{
						hide Amount_In_Base_Currency,Month_field,Expense_Amount,Income_Amount,Transaction_Type;
					}
					actions  (Expense_Bill is not null)
					{
						disable Expense_Bill;
					}
	}

			}
			Run_Scripts_While_creatin3 as "Run Scripts - While creating record"
			{
				type =  form
				form = Money_Transactions_Form
				record event = on add

	on load
	{
					actions  (Project is not null)
					{
						custom deluge script
						(
											hide Sale;
										hide Expense_Bill;
										input.Transaction_Type = "Receivable";
										project_det = Add_Project[ID == input.Project];
										input.Payement_Details = "Currency : " + project_det.Transaction_Currency.Currency + "<br>Project Worth : " + project_det.Project_Worth + "<br>Paid Amount : " + project_det.Paid_Amount + "<br>Amount To pay : " + project_det.Amount_To_Be_Paid;
										accounts = Add_Account_Details[Currency == project_det.Transaction_Currency].ID.getAll();
										input.Account:ui.add(accounts);
						)
					}
					actions  (Sale is not null)
					{
						custom deluge script
						(
											hide Project;
										hide Expense_Bill;
										input.Transaction_Type = "Receivable";
										invoice_det = Add_Sales[ID == input.Sale];
										input.Payement_Details = "Currency : " + invoice_det.Transaction_Currency.Currency + "<br>Net Total : " + invoice_det.Net_Total + "<br>Paid Amount : " + invoice_det.Paid_Amount + "<br>Amount To pay : " + invoice_det.Remaining_Balance;
										accounts = Add_Account_Details[Currency == invoice_det.Transaction_Currency].ID.getAll();
										input.Account:ui.add(accounts);
						)
					}
					actions  (Expense_Bill is not null)
					{
						custom deluge script
						(
											hide Sale;
										hide Project;
										expense_details = Add_Bill1[ID == input.Expense_Bill];
										input.Transaction_Type = "Payable";
										input.Payement_Details = "Currency : " + Add_Company_Details[ID != 0].Currency + "<br> Net Total : " + expense_details.Net_Total + "<br>Paid Amount : " + expense_details.Paid_Amount + "<br>Amount To pay : " + expense_details.Amount_To_Pay;
										accounts = Add_Account_Details[Currency == expense_details.Transaction_Currency].ID.getAll();
										input.Account:ui.add(accounts);
						)
					}
	}

			}
			Run_Scripts_While_creatin4 as "Run Scripts - While creating record"
			{
				type =  form
				form = Money_Transactions_Form
				record event = on add

	on success
	{
					actions  (Project is not null)
					{
						custom deluge script
						(
											input.Amount_In_Base_Currency = input.Amount / input.Account.Currency.Today_Currency_Rate;
										project_det = Add_Project[ID == input.Project];
										project_det.Paid_Amount=project_det.Paid_Amount + input.Amount;
										if(project_det.Amount_To_Be_Paid == input.Amount)
										{
											project_det.Project_Status="Sold";
										}
										account_det = Add_Account_Details[ID == input.Account];
										account_det.Open_Balance=account_det.Open_Balance + input.Amount;
										account_det.Open_Balance_In_Base_Currency=account_det.Open_Balance_In_Base_Currency + input.Amount_In_Base_Currency;
						)
					}
					actions  (Sale is not null)
					{
						custom deluge script
						(
											invoice_det = Add_Sales[ID == input.Sale];
										invoice_det.Paid_Amount=invoice_det.Paid_Amount + input.Amount;
										input.Amount_In_Base_Currency = input.Amount / input.Account.Currency.Today_Currency_Rate;
										invoice_det.Paid_Amount_In_Base_Currency=invoice_det.Paid_Amount_In_Base_Currency + input.Amount_In_Base_Currency;
										invoice_det.Remaining_Balance_In_base_Currency=invoice_det.Remaining_Balance_In_base_Currency - input.Amount_In_Base_Currency;
										if(invoice_det.Paid_Amount < invoice_det.Net_Total)
										{
											invoice_det.Payment_Status="Partialy Paid";
										}
										if(invoice_det.Paid_Amount == invoice_det.Net_Total)
										{
											invoice_det.Payment_Status="Fully Paid";
										}
										account_det = Add_Account_Details[ID == input.Account];
										account_det.Open_Balance=account_det.Open_Balance + input.Amount;
										account_det.Open_Balance_In_Base_Currency=account_det.Open_Balance_In_Base_Currency + input.Amount_In_Base_Currency;
						)
					}
					actions 
					{
						custom deluge script
						(
											currency_rate = input.Account.Currency.Today_Currency_Rate;
										input.Amount_In_Base_Currency = input.Amount * currency_rate;
										if(input.Transaction_Type == "Receivable")
										{
											insert into Add_Income
											[
												Added_User=zoho.loginuser
												Amount_In_Base_Currency=input.Amount_In_Base_Currency
												Income_Amount=input.Amount
												Account=input.Account
												Transaction_Date=input.Amount_Transaction_Date
												Notes=input.Notes
											]
										}
										if(input.Transaction_Type == "Payable")
										{
											insert into Add_Expense
											[
												Added_User=zoho.loginuser
												Expense_Account=input.Account
												Expense_Date=input.Amount_Transaction_Date
												Amount=input.Amount
												Vendor=input.Expense_Bill.Vendor
												Notes=input.Notes
											]
										}
										openUrl("#Script.page.refresh","same window");
						)
					}
					actions  (Expense_Bill is not null)
					{
						custom deluge script
						(
											expence_det = Add_Bill1[ID == input.Expense_Bill];
										expence_det.Paid_Amount=expence_det.Paid_Amount + input.Amount;
										account_det = Add_Account_Details[ID == input.Account];
										account_det.Open_Balance=account_det.Open_Balance + input.Amount;
						)
					}
	}

			}
			Run_Scripts_While_creatin5 as "Run Scripts - While creating record"
			{
				type =  form
				form = Money_Transactions_Form
				record event = on add

	on user input of Amount
	{
					actions  (Project is not null)
					{
						custom deluge script
						(
											if(input.Amount != null)
										{
											if(input.Amount > input.Project.Amount_To_Be_Paid)
											{
												input.Amount = null;
												alert "This project's ramaing balance is only " + input.Project.Amount_To_Be_Paid + " " + input.Project.Transaction_Currency.Currency;
											}
											if(input.Amount < 0)
											{
												input.Amount = null;
												alert "Negative Values are not allowed here";
											}
										}
						)
					}
					actions  (Sale is not null)
					{
						custom deluge script
						(
											if(input.Amount != null)
										{
											if(input.Amount > input.Sale.Remaining_Balance)
											{
												input.Amount = null;
												alert "This invoice's ramaing balence is only " + input.Sale.Remaining_Balance + " " + input.Sale.Transaction_Currency.Currency;
											}
											if(input.Amount < 0)
											{
												input.Amount = null;
												alert "Negative Values are not allowed here";
											}
										}
						)
					}
					actions  (Expense_Bill is not null)
					{
						custom deluge script
						(
											if(input.Amount != null)
										{
											if(input.Amount > input.Expense_Bill.Amount_To_Pay)
											{
												input.Amount = null;
												alert "This Bill's ramaing balence is only " + input.Project.Amount_To_Be_Paid + " " + input.Expense_Bill.Transaction_Currency.Currency;
											}
											if(input.Amount < 0)
											{
												input.Amount = null;
												alert "Negative Values are not allowed here";
											}
										}
						)
					}
	}

			}
			Run_Scripts_On_Always_Sub7 as "Run Scripts - On Always (Subform)"
			{
				type =  form
				form = Add_Bill1
				record event = on add or edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											disable Item_Details.S_No;
										disable Item_Details.Subtotal;
						)
					}
	}

			}
			Run_Scripts_On_Always_Sub8 as "Run Scripts - On Always (Subform)"
			{
				type =  form
				form = Add_Bill1
				record event = on add or edit

	on user input of Item_Details.Unit_Price
	{
					actions 
					{
						custom deluge script
						(
											row.Quantity=null;
										row.Subtotal=null;
						)
					}
	}

			}
			Run_Scripts_On_Always_Sub9 as "Run Scripts - On Always (Subform)"
			{
				type =  form
				form = Add_Bill1
				record event = on add or edit

	on user input of Item_Details.Quantity
	{
					actions 
					{
						custom deluge script
						(
											//auto filling the subtotal of the product price that is multiple with the quantity.
										if(row.Product != "" && row.Quantity != null && row.Quantity != 0)
										{
											row.Subtotal=row.Unit_Price * row.Quantity;
											total_amount = 0;
											for each  row_ in Item_Details
											{
												if(row_.Subtotal != null)
												{
													total_amount = total_amount + row_.Subtotal;
												}
											}
											input.Total = total_amount;
										}
										else
										{
											row.Subtotal=null;
											alert "Quantity Field must have the value 1 or more";
										}
						)
					}
	}

			}
			Run_Scripts_On_Always_Sub10 as "Run Scripts - On Always (Subform)"
			{
				type =  form
				form = Add_Bill1
				record event = on add or edit

	on add row of Item_Details
	{
					actions 
					{
						custom deluge script
						(
											no_of_rows = input.Item_Details.toList().size();
										row.S_No=no_of_rows;
						)
					}
	}

			}
			Run_Scripts_On_Always_Sub11 as "Run Scripts - On Always (Subform)"
			{
				type =  form
				form = Add_Bill1
				record event = on add or edit

	on delete row of Item_Details
	{
					actions 
					{
						custom deluge script
						(
											if(row.Subtotal != null)
										{
											input.Total = input.Total - row.Subtotal;
										}
										for each  row_ in Item_Details
										{
											if(row_.S_No > row.S_No)
											{
												row_.S_No=input.Item_Details.toList().indexOf(row_);
											}
										}
						)
					}
	}

			}
			Fields_Scripts_On_Always11 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Bill1
				record event = on add or edit

	field rules
	{
					actions 
					{
						disable Total;
						hide Payment_Status;
					}
					actions  (Paid_Amount > 0)
					{
						show Account;
					}
	}

			}
			Fields_Scripts_On_Always12 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Bill1
				record event = on add or edit

	on user input of Adjustments
	{
					actions  (Tax is null || Adjustments is null || Shipping_Charges is null || Paid_Amount is null)
					{
						custom deluge script
						(
											input.Adjustments = 0;
						)
					}
	}

			}
			Fields_Scripts_On_Always13 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Bill1
				record event = on add or edit

	on user input of Tax
	{
					actions  (Tax is null || Adjustments is null || Shipping_Charges is null || Paid_Amount is null)
					{
						custom deluge script
						(
											input.Tax = 0;
						)
					}
	}

			}
			Fields_Scripts_On_Always14 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Bill1
				record event = on add or edit

	on user input of Paid_Amount
	{
					actions  (Tax is null || Adjustments is null || Shipping_Charges is null || Paid_Amount is null)
					{
						custom deluge script
						(
											input.Paid_Amount = 0;
						)
					}
	}

			}
			Fields_Scripts_On_Always15 as "Fields Scripts - On Always"
			{
				type =  form
				form = Add_Bill1
				record event = on add or edit

	on user input of Shipping_Charges
	{
					actions  (Tax is null || Adjustments is null || Shipping_Charges is null || Paid_Amount is null)
					{
						custom deluge script
						(
											input.Shipping_Charges = 0;
						)
					}
	}

			}
			Run_Sripts_While_adding_a5 as "Run Sripts - While adding a record"
			{
				type =  form
				form = Add_Bill1
				record event = on add

	field rules
	{
					actions 
					{
						disable Amount_To_Pay;
					}
	}

			}
			Run_Sripts_While_adding_a6 as "Run Sripts - While adding a record"
			{
				type =  form
				form = Add_Bill1
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(input.Paid_Amount > 0 && input.Account == null)
										{
											alert "Select Expensed Acount";
											cancel submit;
										}
										else
										{
											if(Paid_Amount > input.Net_Total)
											{
												alert "Net Total is only " + input.Net_Total + input.Transaction_Currency.Currency;
												cancel submit;
											}
										}
						)
					}
	}

			}
			Run_Sripts_While_adding_a7 as "Run Sripts - While adding a record"
			{
				type =  form
				form = Add_Bill1
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											if(input.Paid_Amount > 0)
										{
											insert into Money_Transactions_Form
											[
												Transaction_Type="Payable"
												Amount_Transaction_Date=input.Bill_Date
												Amount=input.Paid_Amount
												Amount_In_Base_Currency=input.Paid_Amount
												Account=input.Account
												Notes=input.Paid_Amount + " has been paid"
												Added_User=zoho.loginuser
											]
											insert into Add_Expense
											[
												Added_User=zoho.loginuser
												Expense_Date=input.Bill_Date
												Amount=input.Paid_Amount
												Expense_Account=input.Account
												Notes=input.Paid_Amount + " has been paid"
												Vendor=input.Vendor
											]
											trans_account = Add_Account_Details[ID == input.Account];
											trans_account.Open_Balance=trans_account.Open_Balance - input.Paid_Amount;
											trans_account.Open_Balance_In_Base_Currency=trans_account.Open_Balance_In_Base_Currency - input.Paid_Amount;
											if(input.Paid_Amount < input.Net_Total)
											{
												input.Payment_Status = "Partly Paid";
											}
											if(input.Paid_Amount == input.Net_Total)
											{
												input.Payment_Status = "Fully Paid";
											}
										}
										else
										{
											input.Payment_Status = "Unpaid";
										}
										success message "The bill has been added as a record";
						)
					}
	}

			}
			Field_Scripts_On_Always6 as "Field Scripts - On Always"
			{
				type =  form
				form = Add_Project
				record event = on add or edit

	field rules
	{
					actions 
					{
						hide Project_Status;
						disable Total_Project_Expenses,Amount_in_Customer_s_Currency;
					}
	}

			}
			Field_Scripts_On_Always7 as "Field Scripts - On Always"
			{
				type =  form
				form = Add_Project
				record event = on add or edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											if(input.Project_Worth < input.Amount_To_Be_Paid)
										{
											show Expense_Notes;
										}
										else
										{
											hide Expense_Notes;
										}
						)
					}
	}

			}
			Field_Scripts_On_Always8 as "Field Scripts - On Always"
			{
				type =  form
				form = Add_Project
				record event = on add or edit

	on user input of Total_Project_Expenses
	{
					actions 
					{
						custom deluge script
						(
											if(input.Project_Worth < input.Total_Project_Expenses)
										{
											show Expense_Notes;
										}
										else
										{
											hide Expense_Notes;
										}
						)
					}
	}

			}
			Field_Scripts_On_Always9 as "Field Scripts - On Always"
			{
				type =  form
				form = Add_Project
				record event = on add or edit

	on user input of Project_Expenses.Amount
	{
					actions 
					{
						custom deluge script
						(
											total_expense = 0;
										for each  expense in Project_Expenses
										{
											if(expense.Amount != null)
											{
												total_expense = total_expense + expense.Amount;
											}
										}
										input.Total_Project_Expenses = total_expense;
						)
					}
	}

			}
			Field_Scripts_On_Always10 as "Field Scripts - On Always"
			{
				type =  form
				form = Add_Project
				record event = on add or edit

	on user input of Project_Worth
	{
					actions 
					{
						custom deluge script
						(
											if(input.Project_Worth < input.Total_Project_Expenses)
										{
											show Expense_Notes;
										}
										else
										{
											hide Expense_Notes;
										}
										if(input.Project_Worth != null && input.Transaction_Currency != null)
										{
											input.Amount_in_Customer_s_Currency = input.Project_Worth * input.Transaction_Currency.Today_Currency_Rate;
										}
										else
										{
											input.Amount_in_Customer_s_Currency = null;
											input.Paid_Amount = 0;
										}
						)
					}
	}

			}
			Field_Scripts_On_Always11 as "Field Scripts - On Always"
			{
				type =  form
				form = Add_Project
				record event = on add or edit

	on user input of Paid_Amount
	{
					actions 
					{
						custom deluge script
						(
											if(input.Paid_Amount > input.Amount_in_Customer_s_Currency)
										{
											input.Paid_Amount = 0.00;
											alert input.Amount_in_Customer_s_Currency + " " + input.Transaction_Currency.Currency + " only has to be pay";
										}
						)
					}
	}

			}
			Field_Scripts_On_Always12 as "Field Scripts - On Always"
			{
				type =  form
				form = Add_Project
				record event = on add or edit

	on user input of Transaction_Currency
	{
					actions 
					{
						custom deluge script
						(
											if(Transaction_Currency != null)
										{
											cur_rate = Add_Currency[ID == input.Transaction_Currency].Today_Currency_Rate;
											input.Amount_in_Customer_s_Currency = cur_rate * input.Project_Worth;
										}
										else
										{
											input.Amount_in_Customer_s_Currency = null;
											input.Paid_Amount = 0;
										}
						)
					}
	}

			}
			Field_Scripts_On_Always13 as "Field Scripts - On Always"
			{
				type =  form
				form = Add_Project
				record event = on add or edit

	on delete row of Project_Expenses
	{
					actions 
					{
						custom deluge script
						(
											if(row.Amount != null)
										{
											input.Total_Project_Expenses = input.Total_Project_Expenses - row.Amount;
										}
						)
					}
	}

			}
			Run_Scripts_While_creatin6 as "Run Scripts - While creating record"
			{
				type =  form
				form = Add_Expense
				record event = on add

	field rules
	{
					actions  (Project is not null)
					{
						show Project;
						disable Project;
					}
					actions 
					{
						hide Expense_Bill;
					}
	}

			}
			Run_Scripts_While_creatin7 as "Run Scripts - While creating record"
			{
				type =  form
				form = Add_Expense
				record event = on add

	on success
	{
					actions  (Project is not null)
					{
						custom deluge script
						(
											this_project = Add_Project[ID == input.Project];
										expense_amount = 0;
										for each  row_ in this_project.Project_Expenses
										{
											expense_amount = expense_amount + row_.Amount;
										}
										this_project.Total_Project_Expenses=expense_amount;
										expense_account = Add_Account_Details[ID = input.Expense_Account];
										expense_account.Open_Balance=expense_account.Open_Balance - input.Amount;
										expense_account.Open_Balance_In_Base_Currency=expense_account.Open_Balance_In_Base_Currency - input.Amount;
										insert into Money_Transactions_Form
										[
											Transaction_Type="Payable"
											Project=input.Project.ID
											Amount_Transaction_Date=input.Expense_Date
											Amount=input.Amount
											Amount_In_Base_Currency=input.Amount
											Account=input.Expense_Account.ID
											Notes=input.Notes
											Added_User=zoho.loginuser
										]
										openUrl("#Script:page.refresh","same window");
						)
					}
					actions  (Project is null)
					{
						custom deluge script
						(
											if(Project == null)
										{
											insert into Money_Transactions_Form
											[
												Transaction_Type="Payable"
												Amount_Transaction_Date=input.Expense_Date
												Amount=input.Amount
												Amount_In_Base_Currency=input.Amount
												Account=input.Expense_Account
												Notes=input.Notes
												Added_User=zoho.loginuser
											]
											account = Add_Account_Details[ID == input.Expense_Account];
											account.Open_Balance=account.Open_Balance - input.Amount;
											account.Open_Balance_In_Base_Currency=account.Open_Balance_In_Base_Currency - input.Amount;
										}
										openUrl("#Script:page.refresh","same window");
						)
					}
	}

			}
			Run_Scripts_While_creatin8 as "Run Scripts - While creating record"
			{
				type =  form
				form = Add_Expense
				record event = on add

	on user input of Expense_Date
	{
					actions 
					{
						custom deluge script
						(
											if(input.Expense_Date > today && input.Expense_Date != null)
										{
											input.Expense_Date = null;
											alert "date should be future";
										}
						)
					}
	}

			}
			Field_Scripts_On_Always14 as "Field Scripts - On Always"
			{
				type =  form
				form = Add_Product
				record event = on add or edit

	field rules
	{
					actions  (Project is not null)
					{
						show Project;
					}
	}

			}
			Field_Scripts_On_Always15 as "Field Scripts - On Always"
			{
				type =  form
				form = Product_Adjustments1
				record event = on add or edit

	field rules
	{
					actions  (Adjustment_type == "Rate Reduced")
					{
						show New_Rate;
					}
					actions  (Adjustment_type == "Quantity Reduced")
					{
						show New_Quantity;
					}
	}

			}
			Run_Scripts_while_created1 as "Run Scripts - while created or edited a record"
			{
				type =  form
				form = Product_Adjustments1
				record event = on add or edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											if(input.Adjustment_type == "Quantity")
										{
											selected_product = Add_Product[ID == input.Product];
											selected_product.SKU=input.New_Quantity;
											success message "Product quantity has changed";
										}
										if(input.Adjustment_type == "Rate")
										{
											selected_product = Add_Product[ID == input.Product];
											selected_product.Rate=input.New_Rate;
											success message "Product rate has changed";
										}
						)
					}
	}

			}
			Field_Scripts_On_Always16 as "Field Scripts - On Always"
			{
				type =  form
				form = Refund_Return
				record event = on add

	field rules
	{
					actions  (Type == "Payable")
					{
						show Select_Sales_Invoice;
					}
					actions  (Type == "Recievable")
					{
						show Select_Expense_Bill;
					}
	}

			}
			Field_Scripts_On_Always17 as "Field Scripts - On Always"
			{
				type =  form
				form = Refund_Return
				record event = on add

	on user input of Select_Sales_Invoice
	{
					actions 
					{
						custom deluge script
						(
											input.Transatioin_Currency = input.Select_Sales_Invoice.Transaction_Currency;
						)
					}
	}

			}
			Field_Scripts_On_Always18 as "Field Scripts - On Always"
			{
				type =  form
				form = Refund_Return
				record event = on add

	on user input of Select_Expense_Bill
	{
					actions 
					{
						custom deluge script
						(
											input.Transatioin_Currency = input.Select_Expense_Bill.Transaction_Currency;
						)
					}
	}

			}
			Field_Scripts_On_Always19 as "Field Scripts - On Always"
			{
				type =  form
				form = Refund_Return
				record event = on add

	on user input of Type
	{
					actions 
					{
						custom deluge script
						(
											if(input.Type == "Recievable")
										{
											input.Select_Sales_Invoice = null;
										}
										else
										{
											input.Select_Expense_Bill = null;
										}
						)
					}
	}

			}
			Field_Scripts_On_Always20 as "Field Scripts - On Always"
			{
				type =  form
				form = Tax_Reminder_Form
				record event = on add or edit

	field rules
	{
					actions 
					{
						hide Tax_Amount,Status,Add_Account_Details,Date_Of_Paid;
					}
	}

			}
			Field_Scripts_On_Always21 as "Field Scripts - On Always"
			{
				type =  form
				form = Tax_Reminder_Form
				record event = on add or edit

	on user input of Dead_End_Date
	{
					actions 
					{
						custom deluge script
						(
											if(input.Dead_End_Date < input.To_date_Tax_Calculation)
										{
											input.Dead_End_Date = null;
											input.Remind_Date = null;
											alert "Dead End Date should be after last income date";
										}
										else
										{
											input.Remind_Date = null;
										}
						)
					}
	}

			}
			Field_Scripts_On_Always22 as "Field Scripts - On Always"
			{
				type =  form
				form = Tax_Reminder_Form
				record event = on add or edit

	on user input of Remind_Date
	{
					actions 
					{
						custom deluge script
						(
											if(input.Remind_Date > input.Dead_End_Date || input.Remind_Date != null || input.Remind_Date <= zoho.currentdate)
										{
											input.Remind_Date = null;
											alert "Remind date should should be before Dead end date";
										}
						)
					}
	}

			}
			Field_Scripts_On_Always23 as "Field Scripts - On Always"
			{
				type =  form
				form = Tax_Reminder_Form
				record event = on add or edit

	on user input of To_date_Tax_Calculation
	{
					actions 
					{
						custom deluge script
						(
											if(input.To_date_Tax_Calculation <= input.From_Date_Tax_Calculation && input.To_date_Tax_Calculation != null)
										{
											input.To_date_Tax_Calculation = null;
											alert "To date should be after from date";
										}
						)
					}
	}

			}
			Field_Scripts_On_Always24 as "Field Scripts - On Always"
			{
				type =  form
				form = Tax_Reminder_Form
				record event = on add or edit

	on user input of From_Date_Tax_Calculation
	{
					actions 
					{
						custom deluge script
						(
											if(From_Date_Tax_Calculation >= zoho.currentdate)
										{
											input.From_Date_Tax_Calculation = null;
											alert "Future date sould not allowed here";
										}
										else
										{
											input.To_date_Tax_Calculation = null;
										}
						)
					}
	}

			}
			Run_Scripts_While_Loading1 as "Run Scripts - While Loading Form"
			{
				type =  form
				form = Pay_Tax_Sateless_Form
				record event = on add

	field rules
	{
					actions  (Tax_Name is not null)
					{
						disable Tax_Amount,Tax_Name;
					}
	}

			}
			Run_Scripts_While_Loading2 as "Run Scripts - While Loading Form"
			{
				type =  form
				form = Pay_Tax_Sateless_Form
				record event = on add

	on load
	{
					actions  (Tax_Name is not null)
					{
						custom deluge script
						(
											if(input.Tax_Name != null)
										{
											input.Tax_Amount = input.Tax_Name.Tax_Amount;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_1 as "Run Scripts - While Adding Record"
			{
				type =  form
				form = Add_Income
				record event = on add

	field rules
	{
					actions 
					{
						hide Amount_In_Base_Currency,plain;
					}
	}

			}
			Run_Scripts_While_Adding_2 as "Run Scripts - While Adding Record"
			{
				type =  form
				form = Add_Income
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											//Fetching record of selected account from account details form
										if(input.Account != null)
										{
											selected_account = Add_Account_Details[ID == input.Account];
											input.plain = "This account is based on <b style='color:green'>" + selected_account.Currency.Currency + "</b> currency";
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_3 as "Run Scripts - While Adding Record"
			{
				type =  form
				form = Add_Income
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											input.Amount_In_Base_Currency = input.Income_Amount / input.Account.Currency.Today_Currency_Rate;
										account = Add_Account_Details[ID == input.Account];
										account.Open_Balance=account.Open_Balance + input.Income_Amount;
										account.Open_Balance_In_Base_Currency=account.Open_Balance_In_Base_Currency + input.Amount_In_Base_Currency;
										insert into Money_Transactions_Form
										[
											Transaction_Type="Receivable"
											Account=input.Account
											Amount=input.Income_Amount
											Amount_Transaction_Date=input.Transaction_Date
											Amount_In_Base_Currency=input.Amount_In_Base_Currency
											Notes=input.Notes
											Added_User=zoho.loginuser
										]
						)
					}
	}

			}
			Run_Scripts_While_Adding_4 as "Run Scripts - While Adding Record"
			{
				type =  form
				form = Add_Income
				record event = on add

	on user input of Account
	{
					actions 
					{
						custom deluge script
						(
											if(Account != null)
										{
											input.plain = "<p style='margin-left:30%'> This account based on <b style='color:green'>" + input.Account.Currency.Currency + "</b></p>";
											show plain;
										}
						)
					}
	}

			}
			Field_Scripts_On_Always25 as "Field Scripts - On Always"
			{
				type =  form
				form = Make_Your_Fiscal_Year
				record event = on add or edit

	field rules
	{
					actions 
					{
						hide Cash_Balance_When_Starting,Cash_Balance_When_ending;
						disable Fiscal_Year_To,Fiscal_Year;
					}
	}

			}
			Field_Scripts_On_Always26 as "Field Scripts - On Always"
			{
				type =  form
				form = Make_Your_Fiscal_Year
				record event = on add or edit

	on user input of Fiscal_Year_From
	{
					actions 
					{
						custom deluge script
						(
											if(input.Fiscal_Year_From != null && input.Fiscal_Year_From <= zoho.currentdate)
										{
											input.Fiscal_Year_To = input.Fiscal_Year_From.addYear(1).subDay(1);
											input.Fiscal_Year = input.Fiscal_Year_From.getYear() + "-" + input.Fiscal_Year_To.getYear();
										}
										if(input.Fiscal_Year_From > zoho.currentdate)
										{
											input.Fiscal_Year_To = null;
											alert "Future date is not allowed";
										}
										if(input.Fiscal_Year_From == null)
										{
											input.Fiscal_Year_To = null;
										}
						)
					}
	}

			}
			Run_Script_While_Adding_a as "Run Script - While Adding a Record"
			{
				type =  form
				form = Make_Your_Fiscal_Year
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											accounts = Add_Account_Details[ID != 0];
										total_Amount = 0;
										for each  acccount in accounts
										{
											total_Amount = total_Amount + acccount.Open_Balance_In_Base_Currency;
										}
										input.Cash_Balance_When_Starting = total_Amount;
						)
					}
	}

			}
			Run_Scripts_While_edit_a_2 as "Run Scripts - While edit a  record"
			{
				type =  form
				form = Add_Sales
				record event = on edit

	field rules
	{
					actions  (Status == "Invoice")
					{
						show Invoice_Date;
						hide Net_Total_In_Base_Currency,Paid_Amount_In_Base_Currency,Remaining_Balance_In_base_Currency,Currency_Details;
					}
	}

			}
			Run_Scripts_While_edit_a_3 as "Run Scripts - While edit a  record"
			{
				type =  form
				form = Add_Sales
				record event = on edit

	on load
	{
					actions  (Status == "Invoice")
					{
						custom deluge script
						(
											input.Invoice_Date = zoho.currentdate;
										disable Invoice_Date;
						)
					}
	}

			}
			Run_Scripts_While_edit_a_4 as "Run Scripts - While edit a  record"
			{
				type =  form
				form = Add_Sales
				record event = on edit

	on success
	{
					actions  (Status == "Invoice")
					{
						custom deluge script
						(
											if(input.Paid_Amount < input.Net_Total)
										{
											input.Payment_Status = "Partialy Paid";
										}
										if(input.Paid_Amount == input.Net_Total)
										{
											input.Payment_Status = "Fully Paid";
										}
										/* 	input.Net_Total_In_Base_Currency = Transaction_Currency.Today_Currency_Rate * input.Net_Total;
																															input.Remaining Balance_In_Base_Currency = Transaction_Currency.Today_Currency_Rate * input.Remaining_Balance;
																															input.Paid_Amount_In_Base_Currency = Transaction_Currency.Today_Currency_Rate * input.Paid_Amount; */
										input.Net_Total_In_Base_Currency = input.Net_Total / input.Transaction_Currency.Today_Currency_Rate;
										input.Paid_Amount_In_Base_Currency = input.Paid_Amount / input.Transaction_Currency.Today_Currency_Rate;
										input.Remaining_Balance_In_base_Currency = input.Net_Total_In_Base_Currency - input.Paid_Amount_In_Base_Currency;
										if(Account != null)
										{
											insert into Money_Transactions_Form
											[
												Added_User=zoho.loginuser
												Transaction_Type="Receivable"
												Sale=input.ID
												Amount_Transaction_Date=input.Invoice_Date
												Account=input.Account
												Amount=input.Paid_Amount
												Amount_In_Base_Currency=input.Paid_Amount * input.Transaction_Currency.Today_Currency_Rate
												Notes="Invoice Amount"
											]
											insert into Add_Income
											[
												Added_User=zoho.loginuser
												Transaction_Date=input.Invoice_Date
												Amount_In_Base_Currency=input.Paid_Amount_In_Base_Currency
												Income_Amount=input.Paid_Amount
												Account=input.Account
												Notes="Amount has been received by Sales"
											]
											current_account = Add_Account_Details[ID == input.Account];
											current_account.Open_Balance=input.Account.Open_Balance + input.Paid_Amount;
											current_account.Open_Balance_In_Base_Currency=input.Account.Open_Balance_In_Base_Currency + input.Paid_Amount_In_Base_Currency;
										}
										openUrl("https://app.zohocreator.com" + zoho.appuri + "#Report:Sales_Report","same window");
										success message "Estimation Has been Moved As Invoice";
						)
					}
	}

			}
			Run_Scripts_While_edit_a_5 as "Run Scripts - While edit a record"
			{
				type =  form
				form = Add_Company_Details
				record event = on edit

	field rules
	{
					actions 
					{
						disable Currency;
					}
	}

			}
		}
		schedule
		{
			Change_currency_Rates as "Change_currency_Rates"
			{
				type =  schedule
				start = "2018-10-31 18:30:00"
				frequency = daily
				time zone = "IST"
				on start
				{
					actions 
					{
					on load
					(
						for each  currency_det in Add_Currency[ID != 0]
										{
											currency_rate = thisapp.api_callings.get_currency_rate(currency_det.Currency_Code);
											currency_det.Date_field=zoho.currentdate;
											currency_det.Today_Currency_Rate=currency_rate;
										}
					)
					}
				}
			}
			Remain_Tax_pay as "Remain_Tax_pay"
			{
				type =  schedule
				form = Tax_Reminder_Form
				start = Remind_Date at "06:00:00"
				end   = Dead_End_Date
				frequency = daily
				time zone = "IST"
				on start
				{
					actions 
					{
					on load
					(
						if(input.Status != "Paid")
										{
											sendmail
											[
												from :zoho.adminuserid
												to :zoho.adminuserid
												subject :"Bussiness Finance Tracker: Tax Pay Remainder"
												message :"Hi,<br><br>Gentle Reminder :<br><br> The tax you have to pay is pending or you are not recorded your paid tax details in your Bussiness Finance Tracker appication. <br><br> Pay this tax.  if you already paid, please record that paid details . <br><br> <b>Tax Details: <br><br>" + input.Title + "</b><br><table><tr><td><b>Tax Percentage(%): </b></td><td>" + input.Tax_Percentage + "</td></tr><tr><td><b>Tax Amount: </b></td><td>" + input.Tax_Amount + "</td></tr><tr><td><b>Last Date To pay: </b></td><td>" + input.Dead_End_Date + "</td></tr></table><br><br>If you  paid tax already, please click <a href='https://app.zohocreator.com" + zoho.appuri + "#Form:Pay_Tax_Sateless_Form?Tax_Name=" + input.ID + "'>here</a> to record in our application.<br><br>Thank you."
											]
										}
					)
					}
				}
			}
			Fiscal_Year_Scripts as "Fiscal_Year_Scripts"
			{
				type =  schedule
				form = Make_Your_Fiscal_Year
				start = Fiscal_Year_To at "23:59:59"
				frequency = yearly
				time zone = "IST"
				on start
				{
					actions 
					{
					on load
					(
						fiscal_year = Make_Your_Fiscal_Year[ID == input.ID];
										fiscal_year.Fiscal_Year_Status="Completed";
										next_fiscal_year_from = input.Fiscal_Year_From.addYear(1);
										next_fiscal_year_to = input.Fiscal_Year_To.addYear(1);
										amount_now = Add_Account_Details[ID != 0].sum(Open_Balance_In_Base_Currency);
										input.Cash_Balance_When_ending = amount_now;
										if(next_fiscal_year_from == next_fiscal_year_to)
										{
											next_fiscal_year = next_fiscal_year_from;
										}
										else
										{
											next_fiscal_year = next_fiscal_year_from + "-" + next_fiscal_year_to;
										}
										insert into Make_Your_Fiscal_Year
										[
											Fiscal_Year_From=next_fiscal_year_from
											Fiscal_Year_To=next_fiscal_year_to
											Fiscal_Year=next_fiscal_year
											Cash_Balance_When_Starting=amount_now
											Fiscal_Year_Status="Current"
											Added_User=zoho.loginuser
										]
										sendmail
										[
											from :zoho.adminuserid
											to :zoho.adminuserid
											subject :"Bussiness Finance Tracker:Fiscal year ended"
											message :"Hi,<br><br>Your Fiscal year of <b>" + input.Fiscal_Year + "</b> Ended Today.Your next fiscal year year <b>" + next_fiscal_year + "</b> has created for track your financial status.<br><br>For check your cashflow of that fiscal year click <a href='https://app.zohocreator.com" + zoho.appuri + "#Report:Monthly_Cash_Flow?Fiscal_Year=" + input.Fiscal_Year + "'>here</a> <br><br>Thank You."
										]
					)
					}
				}
			}
			Run_scripts_when_month_st as "Run_scripts_when_month_st"
			{
				type =  schedule
				start = "2018-10-30 23:00:07"
				frequency = monthly
				time zone = "IST"
				on start
				{
					actions 
					{
					on load
					(
						fiscal_year = Make_Your_Fiscal_Year[Fiscal_Year_To >= Yesterday && Fiscal_Year_From <= Yesterday];
										closing_balence = Add_Account_Details[ID != 0].sum(Open_Balance_In_Base_Currency);
										incoming = Add_Income[Transaction_Date in Last month].sum(Amount_In_Base_Currency);
										outgoing = Add_Expense[Expense_Date in Last month].sum(Amount);
										insert into Cash_flow_Form
										[
											Added_User=zoho.loginuser
											Audition_Date=Yesterday
											Fiscal_Year=fiscal_year.ID
											Closing_Balance=closing_balence
											Incoming_Amount=incoming
											Outgoing_Amount=outgoing
											Profit_Lose=incoming - outgoing
										]
					)
					}
				}
			}
		}
		functions
		{
			Add_amount_scripts as "Add amount scripts"
			{
				type =  functions
				form = Add_Account_Details
				on start
				{
					actions 
					{
					custom_actions.addAmount(Add_Account_Details);
					}
				}
			}
			Start_Payment_Workflow as "Start Payment Workflow"
			{
				type =  functions
				form = Add_Sales
				on start
				{
					actions 
					{
					custom_actions.recieveInvoiceAmount(ID);
					}
				}
			}
			Move_To_Invoice_Workflow as "Move To Invoice Workflow"
			{
				type =  functions
				form = Add_Sales
				on start
				{
					actions 
					{
					custom_actions.moveToInvoice(ID);
					}
				}
			}
			Recieve_amount_work_flow as "Recieve amount work flow"
			{
				type =  functions
				form = Add_Sales
				on start
				{
					actions 
					{
					custom_actions.recieveInvoiceAmount(ID);
					}
				}
			}
			Start_Project_Workflow as "Start Project Workflow"
			{
				type =  functions
				form = Add_Project
				on start
				{
					actions 
					{
					custom_actions.startProject(Add_Project);
					}
				}
			}
			Add_Expense_Workflow as "Add Expense Workflow"
			{
				type =  functions
				form = Add_Project
				on start
				{
					actions 
					{
					custom_actions.addProjectExpense(ID);
					}
				}
			}
			Recieve_Payment_Workflow as "Recieve Payment Workflow"
			{
				type =  functions
				form = Add_Project
				on start
				{
					actions 
					{
					custom_actions.recieveProjectAmount(ID);
					}
				}
			}
			Add_Payment_for_finished_ as "Add Payment  for finished projects workfow"
			{
				type =  functions
				form = Add_Project
				on start
				{
					actions 
					{
					custom_actions.recieveProjectAmount(ID);
					}
				}
			}
			Change_as_a_product_Workf as "Change as a product Workflow"
			{
				type =  functions
				form = Add_Project
				on start
				{
					actions 
					{
					custom_actions.changeAsproduct(ID);
					}
				}
			}
			Finis_Project_Run_Scripts as "Finis Project Run Scripts"
			{
				type =  functions
				form = Add_Project
				on start
				{
					actions 
					{
					custom_actions.FinsihProject(ID);
					}
				}
			}
			Add_payment_Scipt as "Add payment Scipt"
			{
				type =  functions
				form = Add_Bill1
				on start
				{
					actions 
					{
					custom_actions.addBillPayment(ID);
					}
				}
			}
			Add_Payment_Scripts_fot_p as "Add Payment Scripts fot partly paid bill"
			{
				type =  functions
				form = Add_Bill1
				on start
				{
					actions 
					{
					custom_actions.addBillPayment(ID);
					}
				}
			}
			Tax_Calculation_Scripts as "Tax Calculation Scripts"
			{
				type =  functions
				form = Tax_Reminder_Form
				on start
				{
					actions 
					{
					on click
					(
						turnover = Money_Transactions_Form[Transaction_Type == "Recievable" && Sale != null || Project != null && Amount_Transaction_Date >= input.From_Date_Tax_Calculation && Amount_Transaction_Date <= input.To_date_Tax_Calculation];
										total_turnover = 0;
										for each  transaction in turnover
										{
											total_turnover = total_turnover + transaction.Amount_In_Base_Currency;
										}
										returned_amount = Refund_Return[Type == "Payable"].sum(Amount);
										total_turnover = total_turnover - returned_amount;
										input.Tax_Amount = total_turnover * input.Tax_Percentage / 100;
										input.Status = "Calculated";
					)
					}
				}
			}
			Tax_paying_Scripts as "Tax paying Scripts"
			{
				type =  functions
				form = Tax_Reminder_Form
				on start
				{
					actions 
					{
					on click
					(
						openUrl(zoho.appuri + "#Form:Pay_Tax_Sateless_Form?Tax_Name=" + input.ID,"popup window");
					)
					}
				}
			}
			Account_Summery_Workflow as "Account Summery Workflow"
			{
				type =  functions
				form = Add_Account_Details
				on start
				{
					actions 
					{
					on click
					(
						openUrl("#Report:Account_Summary?Account=" + input.Account_Code,"new window");
					)
					}
				}
			}
		}
	}
	share_settings
	{
			"Read"
			{
				name = "Read"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true}
				description = "This profile will have read permission for all components\n"
			}
			"Write"
			{
				name = "Write"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true}
				description = "This profile will have write permission for all components\n"
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true}
				description = "This profile will have all the permissions.\n"
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users.\n\n"
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 4
		new theme color = 1
		icons = true
    	icon type = 1
    	icon name = "zc-ab-finance5"
    	icon theme = "blue"
		icons style = outline
	}

	phone
	{
		section  Account_Details
		{
			displayname= "Account Details"
			icon = "users-2-contacts-44"
			form  Add_Account_Details
			{
				layout = auto
				icon = "users-2-contacts-44"
				hide = true
			}
		}
		section  Account_Types
		{
			displayname= "Account Types"
			icon = "shopping-cart-simple"
			form  Account_Types
			{
				layout = auto
				icon = "shopping-cart-simple"
				hide = true
			}
		}
		section  Dashboard
		{
			icon = "ui-1-dashboard-half"
			page Dashboard
			{
			}
		}
		section  Income
		{
			icon = "business-handout"
			form  Add_Income
			{
				layout = auto
				icon = "ui-1-bold-add"
			}
			list Incomes_Report
			{
				icon = "business-laptop-71"
			}
			list Income_by_Sales
			{
				icon = "shopping-tag"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Sale
								Notes
								Amount_Transaction_Date as "Amount Transaction Date"
								Expense_Bill.Transaction_Currency as "Transaction Currency"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Sale
								Amount
								Amount_In_Base_Currency as "Amount In Base Currency"
								Account
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Incomes_By_Projects
			{
				icon = "social-1-logo-creative-market"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Project
								Notes
								Amount_Transaction_Date as "Amount Transaction Date"
								Expense_Bill.Transaction_Currency as "Transaction Currency"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Project
								Amount
								Amount_In_Base_Currency as "Amount In Base Currency"
								Account
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Expense
		{
			icon = "shopping-credit-card-in"
			pivotchart Monthly_Expense
			{
				icon = "business-currency-dollar"
				hide = true
			}
			form  Add_Expense
			{
				layout = auto
				icon = "ui-1-bold-add"
			}
			list All_Expenses
			{
				icon = "shopping-credit-card-in"
			}
			list Project_Expenses
			{
				icon = "social-1-logo-creative-market"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Project
								Notes
								Amount
								Vendor
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Expense_Date as "Expense Date"
								Vendor
								Amount
								Expense_Account as "Expense Account"
								Notes
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Products
		{
			icon = "shopping-stock"
			form  Add_Product
			{
				layout = auto
				icon = "design-2-3d-29"
			}
			list All_Products
			{
				icon = "design-2-group"
			}
		}
		section  Sales_Details
		{
			displayname= "Sales Details"
			icon = "business-businessman-03"
			page Sales_Details
			{
			}
			form  Add_Sales
			{
				layout = left
				icon = "ui-1-bold-add"
			}
			list Sales_Report
			{
				icon = "business-businessman-03"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Sales_ID as "Sales ID"
								Customer
								Estimation_Date as "Estimation Date"
								Net_Total_In_Base_Currency as "Net Total In Base Currency"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Sales_ID as "Sales ID"
								Estimation_Date as "Estimation Date"
								Expiry_date as "Expiry date"
								Transaction_Currency as "Transaction Currency"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Move To Invoice"
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Overdue_Invoices
			{
				icon = "shopping-receipt"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Sales_ID as "Sales ID"
								Customer
								Invoice_Date as "Invoice Date"
								Remaining_Balance_In_base_Currency as "Remaining Balance In base Currency"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Sales_ID as "Sales ID"
								Customer
								Invoice_Date as "Invoice Date"
								Net_Total_In_Base_Currency as "Net Total In Base Currency"
							)
						)
						datablock4
						(
			 				layout type = -2
		     				title = "payment Details"
							fields
							(
								Transaction_Currency as "Transaction Currency"
								Net_Total_In_Base_Currency as "Net Total In Base Currency"
								Paid_Amount_In_Base_Currency as "Paid Amount In Base Currency"
								Remaining_Balance_In_base_Currency as "Remaining Balance In base Currency"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Recieve amount"
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Fully_Paid_Invoices
			{
				icon = "shopping-receipt-list-42"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Sales_ID as "Sales ID"
								Customer
								Invoice_Date as "Invoice Date"
								Net_Total_In_Base_Currency as "Net Total In Base Currency"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Sales_ID as "Sales ID"
								Customer
								Invoice_Date as "Invoice Date"
								Net_Total_In_Base_Currency as "Net Total In Base Currency"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Project_Tracker
		{
			displayname= "Project Tracker"
			icon = "design-app"
			page Project_Details
			{
			}
			form  Add_Project
			{
				layout = auto
				icon = "ui-1-bold-add"
			}
			summary Pending_Project
			{
				icon = "ui-2-hourglass"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Project_Name as "Project Name"
								Customer
								Customer.Email as "Email"
								Customer.Phone_Number as "Phone Number"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										"Start Project Work"
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
									on left swipe
									(
										Delete   	   
    								)
									on right swipe
									(
										"Start Project Work"
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 35
		     				title = "Project Details"
							fields
							(
								Project_Name as "Project Name"
								Project_Details as "Project Details"
								Project_Order_Date as "Project Order Date"
								Project_Final_Date as "Project Final Date"
							)
						)
						datablock4
						(
			 				layout type = -2
		     				title = "Financial Details"
							fields
							(
								Project_Worth as "Project Worth"
								Transaction_Currency as "Transaction Currency"
								Amount_in_Customer_s_Currency as "Amount in Customer's Currency"
								Paid_Amount as "Paid Amount"
								Amount_To_Be_Paid as "Amount To Be Paid"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"Start Project Work"
    		 				Edit 
    		 				Delete 
    	 				)
    				)
				)
			}
			summary Working_Projects
			{
				icon = "loader-refresh"
			}
			list Finished_Projects
			{
				icon = "design-todo"
			}
		}
		section  Purchase_Details
		{
			displayname= "Purchase Details"
			icon = "shopping-delivery-time"
			form  Add_Bill1
			{
				layout = left
				icon = "ui-1-bold-add"
			}
			summary Unpaid_Bills
			{
				icon = "business-money-time"
			}
			summary Partly_Paid_Bills
			{
				icon = "business-money-coins"
			}
			list Fully_Paid_Bills
			{
				icon = "business-money-12"
			}
		}
		section  Contacts
		{
			icon = "users-multiple-11"
			form  New_Contact
			{
				layout = left
				icon = "users-2-child"
			}
			list Customers
			{
				icon = "users-multiple-19"
			}
			list Vendors
			{
				icon = "users-2-woman"
			}
		}
		section  Currency
		{
			icon = "business-round-yen"
			form  Add_Currency
			{
				layout = auto
				icon = "shopping-mobile-card"
				hide = true
			}
		}
		section  Tax_Rates
		{
			displayname= "Tax Rates"
			icon = "shopping-credit-card-in"
			form  Add_Tax_Rates
			{
				layout = auto
				icon = "social-1-logo-yelp"
				hide = true
			}
		}
		section  Account_Journals
		{
			displayname= "Account Journals"
			icon = "education-books-46"
			pivotchart Income_vs_Expense
			{
				icon = "business-currency-dollar"
				hide = true
			}
			list All_Account_Details
			{
				icon = "users-2-contacts-44"
			}
			list Account_Summary
			{
				icon = "text-align-center"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Transaction_Type as "Transaction Type"
								Notes
								Amount_Transaction_Date as "Amount Transaction Date"
								Account.Currency as "Currency"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Transaction_Type as "Transaction Type"
								Expense_Bill as "Expense Bill"
								Sale
								Project
								Amount_Transaction_Date as "Amount Transaction Date"
								Amount
								Amount_In_Base_Currency as "Amount In Base Currency"
								Account
								Notes
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Monthly_Cash_Flow
			{
				icon = "weather-fog"
			}
		}
		section  Amounts
		{
			icon = "design-2-scale-down"
			form  Money_Transactions_Form
			{
				layout = auto
				icon = "shopping-bitcoin"
				hide = true
			}
		}
		section  Adjustments
		{
			icon = "media-1-edit-contrast-42"
			form  Product_Adjustments1
			{
				layout = auto
				icon = "shopping-cart-simple-remove"
				hide = true
			}
		}
		section  Taxations
		{
			icon = "shopping-mobile-card"
			form  Tax_Reminder_Form
			{
				layout = auto
				icon = "shopping-receipt"
			}
			list Pending_Taxes_To_Pay
			{
				icon = "ui-2-hourglass"
			}
			list Paid_Tax_History
			{
				icon = "shopping-credit-card-in"
			}
		}
		section  Settings
		{
			icon = "ui-1-settings-gear-65"
			form  Add_Company_Details
			{
				layout = auto
				icon = "users-2-contacts-44"
				hide = true
			}
			summary Company_Details
			{
				icon = "social-1-logo-creative-market"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Company_Name as "Company Name"
								Address
								Mobile_Number as "Mobile Number"
								Email
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    	 				)
									record
									(
										Edit   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										View Record   	   
    								)
									on left swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Company_Name as "Company Name"
								Email
								Mobile_Number as "Mobile Number"
								Phone_Number as "Phone Number"
								Address
								Website
								Company_Logo as "Company Logo"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Product_Adjustments
			{
				icon = "media-1-edit-contrast-42"
			}
			custom All_Currency
			{
				icon = "shopping-bitcoin"
			}
			list All_Account_Types
			{
				icon = "tech-2-pci-card"
			}
			list Taxes
			{
				icon = "shopping-credit-card-in"
			}
			list Fiscal_Years_Report
			{
				icon = "business-laptop-71"
			}
		}
		section  Refunt_Return
		{
			displayname= "Refunt/Return"
			icon = "tech-desktop"
			form  Refund_Return
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			list Refunt_Return_Report
			{
				icon = "arrows-1-back-80"
				hide = true
			}
		}
		section  Pay_Tax_Sateless_Form
		{
			displayname= "Pay Tax Sateless Form"
			icon = "social-1-logo-paypal"
			form  Pay_Tax_Sateless_Form
			{
				layout = left
				icon = "social-1-logo-paypal"
				hide = true
			}
		}
		section  Cash_flow_Form
		{
			displayname= "Cash flow Form"
			icon = "tech-desktop"
			form  Cash_flow_Form
			{
				layout = auto
				icon = "weather-fog"
				hide = true
			}
		}
		section  Make_Your_Fiscal_Year
		{
			displayname= "Make Your Fiscal Year"
			icon = "tech-desktop"
			form  Make_Your_Fiscal_Year
			{
				layout = auto
				icon = "business-sign"
				hide = true
			}
		}
		section  Add_Income
		{
			displayname= "Add Income"
			icon = "shopping-mobile-card"
			pivotchart Monthly_Income
			{
				icon = "shopping-credit-card-in"
				hide = true
			}
		}
		customize
		{
			colour = darkgrey
        	layout = onecolumn
		 	icons style = outline
		}
	}
	
	reports configuration
	{
	
		Version = 1251000165802441
		Key     = "Cxn23dwWtjEYrEF9t9EUxxnFOUTh94tTBKfCBZ5s0yKfkgC1DfKXXmfmZRyOzUjKfpH3R2JaJxYKV9jmO9t1HQHDjnqTuMCygn8K"
	}
}