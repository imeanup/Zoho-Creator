/*
 * Author       : app.zohocreator
 * Generated on : 06-May-2020 22:40:46
 * Version      : 1.0
 */
 application "Project Tracker"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "America/Los_Angeles"
 	time format = "24-hr"
	section Dashboard
	{
		icon = "ui-1-dashboard-30"
				 page Dashboard 
	 	 { 
 	 	 displayname = "Dashboard" 

 	 	 icon = "" 
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet'>\n\t<![CDATA[htmlpage html_snippet()\ncontent\n&lt;%{\n\tuserName = zoho.loginuser;\n\tprofileUrl = &quot;&quot;;\n\tthisapp.settings.update();\n\temployee = Employee[Email == zoho.loginuserid];\n\tif(employee.count() &gt; 0)\n\t{\n\t\tuserName = employee.Name;\n\t\tprofileUrl = &quot;#View:Profile?zc_LoadIn=dialog&amp;zc_Header=false&amp;zc_SecHeader=false&quot;;\n\t}\n\tif(employee.count() == 0)\n\t{\n\t\tprofileUrl = &quot;#Form:Employee?zc_LoadIn=dialog&amp;Email=&quot; + zoho.loginuserid;\n\t}\n\t%&gt;\n&lt;style&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;%=thisapp.style.home()%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t.box-title a{\n\t\t\t\t\t\t\t\t\t\t\t\tmargin-left: 20px;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t.wrapperForAdmin {\n\t\t\t\t\t\t\t\t\t\t\t\tfloat: left;\n\t\t\t    \t\t\t\t\t\t\t\twidth: 96%;\n\t\t\t    \t\t\t\t\t\t\t\tmargin: 1% 2%;\n\t\t\t    \t\t\t\t\t\t\t\tborder: 1px solid #d2cccc;\n\t\t\t    \t\t\t\t\t\t\t\tpadding: 5px;\n\t\t\t    \t\t\t\t\t\t\t\tbox-shadow: 0 1px 2px #efeded;\n\t\t\t    \t\t\t\t\t\t\t\tbackground-color: #fdfbfb;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t.wrapperforportal {\n\t\t\t\t\t\t\t\t\t\t\t\tfloat: left;\n\t\t\t    \t\t\t\t\t\t\t\twidth: 96%;\n\t\t\t    \t\t\t\t\t\t\t\tmargin: 1% 2%;\n\t\t\t    \t\t\t\t\t\t\t\tborder: 1px solid #d2cccc;\n\t\t\t    \t\t\t\t\t\t\t\tpadding: 5px;\n\t\t\t    \t\t\t\t\t\t\t\tbox-shadow: 0 1px 2px #efeded;\n\t\t\t    \t\t\t\t\t\t\t\tbackground-color: #fdfbfb;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t.span3{\n\t\t\t\t\t\t\t\t\t\t\t\tmax-width: 31.8%;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t.span12{\n\t\t\t\t\t\t\t\t\t\t\t\tpadding:5px;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t.welcomeHeader{\n\t\t\t\t\t\t\t\t\t\t\t\t\tposition: absolute;\n\t\t\t    \t\t\t\t\t\t\t\t\tleft: 42%;\n\t\t\t    \t\t\t\t\t\t\t\t\tfont-size: 20px;\n\t\t\t    \t\t\t\t\t\t\t\t\tline-height: 28px;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/style&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;container-fluid wrapperForAdmin&quot;&gt;\n&lt;%\n\tif(thisapp.user.isAdmin())\n\t{\n\t\t\/\/ Administrator Dashboard\n\t\tactCompList = Project[Status == &quot;Open&quot; || Status == &quot;Pending&quot;].distinct(Company);\n\t\tactiveCompCnt = actCompList.size();\n\t\tactiveEmpCnt = Employee[Status == &quot;Active&quot;].count();\n\t\topenProjCnt = Project[Status == &quot;Open&quot; || Status == &quot;Pending&quot;].count();\n\t\tpendingQuoteCnt = Quote[Status == &quot;Pending&quot;].count();\n\t\tpendingInvoiceCnt = Invoice[Status == &quot;Pending&quot;].count();\n\t\tpendingTaskCnt = Task[Status != &quot;Closed&quot;].count();\n\t\tpendingReqCnt = Requirement[Status != &quot;Closed&quot;].count();\n\t\tpendingTsCnt = Timesheet[Status == &quot;Pending&quot;].count();\n\t\t%&gt;\n&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-12&quot;&gt;\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot; style=&quot;min-height:30px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 14px;float: left;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-live-primary-btn&quot; href=&quot;#Form:Project&quot; style=&quot;font-size: 14px;&quot;&gt;&lt;span&gt;Add Project&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;welcomeHeader&quot;&gt; Welcome, &lt;%=userName%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 14px; float: right;&quot;&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-live-primary-btn&quot; style=&quot;font-size: 14px;&quot; href=&lt;%=profileUrl%&gt;&gt;&lt;span&gt;My Profile&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot; style=&quot;margin-left:-15px&quot;&gt;\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Active Projects&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a style = &quot;text-align:center&quot; href=&quot;#View:Active_Projects&quot;&gt;&lt;h1&gt;&lt;%=openProjCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Pending Requirements&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a style = &quot;text-align:center&quot;href=&quot;#View:Pending_Requirements&quot;&gt;&lt;h1&gt;&lt;%=pendingReqCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Pending Tasks&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a style = &quot;text-align:center&quot;href=&quot;#View:Pending_Tasks&quot;&gt;&lt;h1&gt;&lt;%=pendingTaskCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Pending Time Sheets &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a style = &quot;text-align:center&quot;href=&quot;#View:Pending_Timesheets&quot;&gt;&lt;h1&gt;&lt;%=pendingTsCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Pending Quotes&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:Pending_Quotes&quot;&gt;&lt;h1&gt;&lt;%=pendingQuoteCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Pending Invoices&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:Pending_Invoices&quot;&gt;&lt;h1&gt;&lt;%=pendingInvoiceCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Companies &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:Active_Companies&quot;&gt;&lt;h1&gt;&lt;%=activeCompCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Employees &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:Active_Employees&quot;&gt;&lt;h1&gt;&lt;%=activeEmpCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;                                      \n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-12&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;iframe width=&apos;99%&apos; height=&quot;295&quot; zc_mobileView=&quot;inline&quot; frameborder=&apos;0&apos; allowTransparency=&apos;true&apos; src=&apos;&lt;%=zoho.appuri%&gt;report-embed\/Project_Report\/&apos; style =&quot;padding-left: 3px;padding-right: 3px;&quot;&gt;&lt;\/iframe&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;             \n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-6&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;view-header&quot;&gt; &lt;h3 style=&quot;padding-left:20px;&quot;&gt;Payments&lt;\/h3&gt; &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;iframe width=&apos;100%&apos; height=&quot;295&quot; zc_mobileView=&quot;inline&quot; frameborder=&apos;0&apos; allowTransparency=&apos;true&apos;  src=&apos;&lt;%=zoho.appuri%&gt;report-embed\/Payments?zc_Header=false&apos;&gt;&lt;\/iframe&gt; \t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;col-md-6&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;view-header&quot;&gt; &lt;h3 style=&quot;padding-left:20px;&quot;&gt;Employee Worksheets&lt;\/h3&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;iframe width=&apos;100%&apos; height=&quot;295&quot; zc_mobileView=&quot;inline&quot; frameborder=&apos;0&apos; allowTransparency=&apos;true&apos;  src=&apos;&lt;%=zoho.appuri%&gt;report-embed\/Employee_Worksheets?zc_Header=false&apos;&gt;&lt;\/iframe&gt;                 \t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\telse if(thisapp.user.isEmployee())\n\t{\n\t\t\/\/Employee Dashboard\n\t\tprojectList = Project[Owner.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid &amp;&amp; Status == &quot;Open&quot; || Status == &quot;Pending&quot;].distinct(ID);\n\t\tprojectCnt = projectList.size();\n\t\ttaskList = Task[Manager.Email = zoho.loginuserid || Owner.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid &amp;&amp; Status != &quot;Closed&quot;].distinct(ID);\n\t\ttaskCnt = taskList.size();\n\t\ttimeSheetList = Timesheet[Manager.Email = zoho.loginuserid || Employee.Email == zoho.loginuserid &amp;&amp; Status == &quot;Pending&quot;].distinct(ID);\n\t\ttimeSheetCnt = timeSheetList.size();\n\t\t%&gt;\n&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span12&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot; style=&quot;min-height:20px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 15px;float: left;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-live-primary-btn&quot; href=&quot;#Form:Project&quot; style=&quot;font-size: 15px;&quot;&gt;&lt;span&gt;Add Project&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;welcomeHeader&quot;&gt;Welcome, &lt;%=userName%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 15px; float: right;&quot;&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-live-primary-btn&quot; style=&quot;font-size: 15px;&quot; href=&lt;%=profileUrl%&gt;&gt;&lt;span&gt;My Profile&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Projects &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Projects&quot;&gt;&lt;h1&gt;&lt;%=projectCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius:5px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Time Sheets&lt;\/div&gt;\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Timesheets&quot;&gt;&lt;h1&gt;&lt;%=timeSheetCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span3&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Tasks  &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Tasks&quot;&gt;&lt;h1&gt;&lt;%=taskCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;My Projects &lt;a class=&quot;zc-live-primary-btn&quot; href=&quot;#View:My_Projects&quot; target=&apos;_blank&apos;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; zc_mobileView=&quot;inline&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Projects&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading My Projects...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;My Tasks &lt;a class=&quot;zc-live-primary-btn&quot; href=&quot;#View:My_Tasks&quot; target=&apos;_blank&apos;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; zc_mobileView=&quot;inline&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Tasks&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading My Tasks...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;My Time Sheets &lt;a class=&quot;zc-live-primary-btn&quot; href=&quot;#View:My_Timesheets&quot; target=&apos;_blank&apos;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; zc_mobileView=&quot;inline&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Timesheets&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading My Timesheets...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\telse if(thisapp.user.isManager())\n\t{\n\t\t\/\/Manager Dashboard\n\t\tprojectList = Project[Manager.Email = zoho.loginuserid || Owner.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid &amp;&amp; Status == &quot;Open&quot; || Status == &quot;Pending&quot;].distinct(ID);\n\t\tprojectCnt = projectList.size();\n\t\ttaskList = Task[Manager.Email = zoho.loginuserid || Owner.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid &amp;&amp; Status != &quot;Closed&quot;].distinct(ID);\n\t\ttaskCnt = taskList.size();\n\t\ttimeSheetList = Timesheet[Manager.Email = zoho.loginuserid || Employee.Email == zoho.loginuserid &amp;&amp; Status == &quot;Pending&quot;].distinct(ID);\n\t\ttimeSheetCnt = timeSheetList.size();\n\t\tempCnt = Employee[Related_Manager.Email == zoho.loginuserid].count();\n\t\t%&gt;\n&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span12&quot;&gt;\t\t\t\t  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot; style=&quot;min-height:20px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 12px;float: left;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-live-primary-btn&quot; href=&quot;#Form:Project&quot; style=&quot;font-size: 12px;&quot;&gt;&lt;span&gt;Add Project&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;welcomeHeader&quot;&gt;Welcome, &lt;%=userName%&gt;\t&lt;\/div&gt;\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div style=&quot;font-size: 12px; float: right;&quot;&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-live-primary-btn&quot; style=&quot;font-size: 12px;&quot; href=&lt;%=profileUrl%&gt;&gt;&lt;span&gt;My Profile&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span4&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Projects&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot;href=&quot;#View:My_Team_Projects&quot;&gt;&lt;h1&gt;&lt;%=projectCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span4&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot; style=&quot;border-radius:5px;&quot;&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t            \t&lt;div class=&quot;box-title&quot;&gt;Time Sheets&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t           \t\t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot; href=&quot;#View:My_Team_Timesheets&quot;&gt;&lt;h1&gt;&lt;%=timeSheetCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t        \t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t     \t&lt;\/div&gt; \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t    &lt;div class=&quot;span4&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t         \t&lt;div class=&quot;box&quot; style=&quot;border-radius:5px;&quot;&gt;\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t          \t   &lt;div class=&quot;box-title&quot;&gt;Tasks&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t          \t   &lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot; href=&quot;#View:My_Team_Tasks&quot;&gt;&lt;h1&gt;&lt;%=taskCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t        \t &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t     \t&lt;\/div&gt; \t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span4&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t\t\t        \t&lt;div class=&quot;box&quot; style=&quot;border-radius: 5px;&quot;&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t            \t&lt;div class=&quot;box-title&quot;&gt;Employees&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t            \t&lt;div class=&quot;box-content&quot;&gt;&lt;a style = &quot;text-align:center&quot; href=&quot;#View:My_Team_Employees&quot;&gt;&lt;h1&gt;&lt;%=empCnt%&gt;&lt;\/h1&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t         \t&lt;\/div&gt;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t      \t&lt;\/div&gt; \t\n\t\t\t\t\t\t\t\t\t\t\t\t    &lt;\/div&gt;\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t   &lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t     &lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t         &lt;div class=&quot;box-title&quot;&gt;My Team Projects &lt;a class=&quot;zc-live-primary-btn&quot; href=&quot;#View:My_Team_Projects&quot; target=&apos;_blank&apos;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t         &lt;div class=&quot;box-content&quot; zc_mobileView=&quot;inline&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Team_Projects&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading Projects...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t     &lt;\/div&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t &lt;div class=&quot;box-title&quot;&gt;My Team Tasks &lt;a class=&quot;zc-live-primary-btn&quot; href=&quot;#View:My_Team_Tasks&quot; target=&apos;_blank&apos;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t&lt;div class=&quot;box-content&quot; zc_mobileView=&quot;inline&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Team_Tasks&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading Tasks...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t   &lt;div class=&quot;row&quot; style=&quot;margin-left:-15px&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t     &lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t       &lt;div class=&quot;box-title&quot;&gt;My Team Time Sheets &lt;a class=&quot;zc-live-primary-btn&quot; href=&quot;#View:My_Team_Timesheets&quot; target=&apos;_blank&apos;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t       &lt;div class=&quot;box-content&quot; zc_mobileView=&quot;inline&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Team_Timesheets&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading Team Timesheet...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t    &lt;\/div&gt;\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t  &lt;\/div&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Portal
	{
		icon = "users-multiple-11"
				 page Portal_Home 
	 	 { 
 	 	 displayname = "Portal Home" 

 	 	 icon = "" 
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Portal_Home1'>\n\t<![CDATA[htmlpage Portal_Home1()\ncontent\n&lt;%{\n\t\/\/Protal Home \n\t%&gt;\n&lt;style&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t    &lt;%=thisapp.style.projectHistory()%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t    &lt;%=thisapp.style.home()%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\th1,h2,h3\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-weight:bold;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}               \n\t\t\t\t\t\t\t\t\t\t\t\t\t*.zc-formbutton \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: #333!important;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-size: 11px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-family: Arial;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-weight: normal;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: #cdcdcd;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-image:url(\/creator\/live\/images\/bg_action_menu_t4c4.png);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-top: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-left: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-bottom: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 3px 11px!important;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical-align: middle;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: 5px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext-shadow: 0 1px 0 #fff;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbox-shadow: 0 1px 0 rgba(255,255,255,0.5);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-radius: 3px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.sidebar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: 0px 1% -300px 0px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: #FFFFFF;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.content\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 95%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 2px solid trasnparent;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: whitesmoke;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 5px 15px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: 1px 0px 20px 0px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.box \t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tborder:none;\n\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: 15px;\n\t\t\t\t\t\t\t\t\t\t\t\t\toverflow: visible;\n\t\t\t\t\t\t\t\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.container\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t \t\tmargin:20px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\th1,h2,h3\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-weight:bold;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}           \n\t\t\t\t\t\t\t\t\t\t\t\t\t.content \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 95%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 2px solid trasnparent;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: whitesmoke;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 5px 15px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: 1px 0px 20px 0px;\n\t\t\t\t\t\t\t\t\t\t\t\t          }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  .box-content .view-header\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: initial;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/style&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class =&quot;container-fluid wrapper&quot;&gt;\n&lt;%\n\tbasePortalUrl = &quot;https:\/\/&quot; + zoho.adminuser + &quot;.zohocreator.com\/portal\/&quot; + zoho.appname;\n\tframeUrl = basePortalUrl + &quot;\/form-perma\/My_Registeration\/zc_Header=false&quot;;\n\tif(!thisapp.user.isCustomer())\n\t{\n\t\t%&gt;\n&lt;div class=&quot;box&quot; style=&quot;width:54%; padding-left:255px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Register Yourself&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; style=&quot;padding-left: 25px;&quot; elName=&apos;zc-component&apos; formLinkName=&apos;My_Registeration&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;&apos;&gt;Loading Company Contact...&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\telse if(thisapp.user.isCustomer())\n\t{\n\t\tbasePortalUrl = &quot;https:\/\/&quot; + zoho.adminuser + &quot;.zohocreator.com\/portal\/&quot; + zoho.appname;\n\t\tcompany = Company[Primary_Email == zoho.loginuserid];\n\t\tcontact = Contact[Email == zoho.loginuserid];\n\t\t%&gt;\n&lt;div class=&quot;sidebar&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;My Details&lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Profile_Company?zc_LoadIn=dialog&amp;recLinkID=&lt;%=company.ID%&gt;&amp;viewLinkName=My_Company&quot;&gt;&lt;span style= &quot;padding:3px;&quot;&gt;Edit&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table cellpadding=&quot;10&quot;&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;font-weight: bolder;&quot;&gt; Name&amp;nbsp;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;&quot;&gt;&lt;%=ifnull(company.Name,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;font-weight: bolder;&quot;&gt; Email &amp;nbsp;:&amp;nbsp;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;&quot;&gt;&lt;%=ifnull(company.Primary_Email,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Contacts&lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Contact?zc_LoadIn=dialog&amp;zc_Header=false&amp;Company=&lt;%=company.ID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt; &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Company_Contacts&quot; target=&apos;_blank&apos;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Contacts&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading Company Contact...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Projects &lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Project?zc_LoadIn=dialog&amp;zc_Header=false&amp;Company=&lt;%=company.ID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt; &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Company_Projects&quot; target=&apos;_blank&apos;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Projects&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading Company Projects...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Tasks  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Company_Tasks&quot; target=&apos;_blank&apos;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Tasks&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading Tasks...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Timesheets&lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Company_Timesheets&quot; target=&apos;_blank&apos;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Timesheets&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading Timesheets...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Quotes &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Company_Quotes&quot; target=&apos;_blank&apos;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Quotes&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading Quote...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Invoices &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a class=&quot;zc-formbutton&quot; href=&quot;#View:My_Company_Invoices&quot; target=&apos;_blank&apos;&gt;&lt;span&gt;View All&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Invoices&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&apos;&gt;Loading Invoices...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
		summary My_Profile_Company
		{
			displayName = "My Profile"
			show all rows from Company  [Primary_Email == zoho.loginuserid || Contacts.Email == zoho.loginuserid]  
			(
				Name
				Primary_Email as "Primary Email"
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "users-single-03"
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Primary_Email as "Primary Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Primary_Email as "Primary Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section My_Data
	{
		displayname= "My Data"
		icon = "users-single-03"
		list My_Projects
		{
			displayName = "My Projects"
			show all rows from Project  [Owner.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid && Status == "Open" || Status == "Pending"]  
			(
				Company as "Customer"
				(
					view = My_Profile_Company
				)
				custom action "View"
				(
	  			workflow = View
				show action in edit record menu = true
				column header = "View"
				success message = ""
				)
				Title
				Start_Date as "Start Date"
				Owner
				(
					view = All_Employees
				)
				Manager
				(
					view = All_Managers
				)
				Status
			)
			filters
			(
				Status
			)
			permission
			(
				add = true
			)
			conditional formatting
			(
				"Open"
				{
				condition = (Status == "Open")
				fields = [Status]
				format = "font-weight:bold;color:#0900ff;"
				}
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Company as "Customer"
							Title
							Start_Date as "Start Date"
							Owner
							Manager
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Company as "Customer"
							Title
							Start_Date as "Start Date"
							Owner
							Manager
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Milestones
		{
			displayName = "My Milestones"
			show all rows from MileStones    
			(
				Title
				Description
				End_Date as "End Date"
				Project
				Start_Date as "Start Date"
			)
			group by
			(
				Project ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Title
							Description
							End_Date as "End Date"
							Project
							Start_Date as "Start Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Title
							Description
							End_Date as "End Date"
							Project
							Start_Date as "Start Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Tasks
		{
			displayName = "My Tasks"
			show all rows from Task  [Owner.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid && Status != "Closed"]  
			(
				Project
				(
					view = My_Projects
				)
				custom action "View"
				(
	  			workflow = View_Task
				column header = "View"
				success message = ""
				)
				Title
				Owner
				(
					view = All_Employees
				)
				Manager
				(
					view = All_Managers
				)
				Followers
				(
					view = All_Employees
				)
				Due_Date as "Due Date"
				Status
			)
			filters
			(
				Due_Date
				Status
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#0022ff;"
				}
				"Ready For Test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#a0c92f;"
				}
				"Need Info"
				{
				condition = (Status == "Need Info")
				fields = [Status]
				format = "font-weight:bold;color:#750075;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Title
							Owner
							Manager
							Followers
							Due_Date as "Due Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Title
							Owner
							Manager
							Followers
							Due_Date as "Due Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Timesheets
		{
			displayName = "My Timesheets"
			show all rows from Timesheet  [Employee.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid && Status == "Pending"]  
			(
				Project
				(
					view = My_Projects
				)
				Milestone
				(
					view = My_Milestones
				)
				Task
				(
					view = My_Tasks
				)
				Manager
				(
					view = All_Managers
				)
				Employee
				(
					view = My_Team_Employees
				)
				Start_Time as "Start Time"
				End_Time as "End Time"
				Status
				Billable
			)
			filters
			(
				Status
			)
			group by
			(
				Project ascending
				Milestone ascending
				Task ascending
			)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#2400ed;"
				}
				"Approved"
				{
				condition = (Status == "Approved")
				fields = [Status]
				format = "font-weight:bold;color:#0ced00;"
				}
				"Rejected"
				{
				condition = (Status == "Rejected")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							Milestone
							Task
							Manager
							Employee
							Start_Time as "Start Time"
							End_Time as "End Time"
							Status
							Billable
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							Milestone
							Task
							Manager
							Employee
							Start_Time as "Start Time"
							End_Time as "End Time"
							Status
							Billable
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Issues
		{
			displayName = "My Issues"
			show all rows from Issues  [Followers.Email == zoho.loginuserid || Owner.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid || Company.Primary_Email == zoho.loginuserid || Contact.Email == zoho.loginuserid]  
			(
				custom action "View"
				(
	  			workflow = View_Issue3
				column header = "View"
				success message = ""
				)
				Project
				(
					view = My_Projects
				)
				Company
				(
					view = All_Companies
				)
				MileStone
				(
					view = My_Milestones
				)
				Requirement
				(
					view = Project_Requirements
				)
				Task
				(
					view = My_Tasks
				)
				Title
				Description as "Comment"
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
				Followers
				(
					view = All_Employees
				)
				Status
			)
			filters
			(
				"New"  :  Status == "New"
				"In Progress"  :  Status == "In Progress"
				"Closed"  :  Status == "Closed"
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#990099;"
				}
				"Closed"
				{
				condition = (Status == "Closed")
				fields = [Status]
				format = "font-weight:bold;color:#007d13;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Company
							MileStone
							Requirement
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Followers
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Company
							MileStone
							Requirement
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Followers
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Team_Timesheets
		{
			displayName = "My Team Timesheets"
			show all rows from Timesheet  [Manager.Email == zoho.loginuserid]  
			(
				Project
				(
					view = My_Projects
				)
				custom action "Approve"
				(
	  			workflow = Approve
				column header = "Approve"
				success message = ""
				condition = (Status == "Pending")
				)
				Requirement
				(
					view = Project_Requirements
				)
				Comments
				Task
				(
					view = My_Tasks
				)
				Employee
				(
					view = All_Employees
				)
				Start_Time as "Start Time"
				End_Time as "End Time"
				Status
			)
			filters
			(
				"Pending  Filter"  :  Status == "Pending"
			)
			group by
			(
				Project ascending
				Requirement ascending
				Task ascending
			)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#3300ff;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Approve"
							Project
							Requirement
							Comments
							Task
							Employee
							Start_Time as "Start Time"
							End_Time as "End Time"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Approve"
							Project
							Requirement
							Comments
							Task
							Employee
							Start_Time as "Start Time"
							End_Time as "End Time"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Team_Tasks
		{
			displayName = "My Team Tasks"
			show all rows from Task  [Manager.Email == zoho.loginuserid && Status != "Closed"]  
			(
				Project
				(
					view = My_Projects
				)
				custom action "View"
				(
	  			workflow = View_Task1
				column header = "View"
				success message = ""
				)
				MileStone
				(
					view = My_Milestones
				)
				Title
				Description
				Owner
				(
					view = All_Employees
				)
				Followers
				(
					view = All_Employees
				)
				Due_Date as "Due Date"
				Status
			)
			filters
			(
				Due_Date
				Status
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#0022ff;"
				}
				"Ready For Test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#a0c92f;"
				}
				"Need Info"
				{
				condition = (Status == "Need Info")
				fields = [Status]
				format = "font-weight:bold;color:#750075;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Title
							Description
							Owner
							Followers
							Due_Date as "Due Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Title
							Description
							Owner
							Followers
							Due_Date as "Due Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Team_Projects
		{
			displayName = "My Team Projects"
			show all rows from Project  [Manager.Email == zoho.loginuserid && Status == "Open" || Status == "Pending"]  
			(
				Company
				(
					view = All_Companies
				)
				custom action "View"
				(
	  			workflow = View4
				column header = "View"
				success message = ""
				)
				Title
				Start_Date as "Start Date"
				Owner
				(
					view = All_Employees
				)
				Expected_Revenue as "Expected Revenue"
				(
					display = total	
				)
				End_Date as "End Date"
				Status
			)
			filters
			(
				Project_Type
			)
			group by
			(
				Company ascending
			)
			conditional formatting
			(
				"Open"
				{
				condition = (Status == "Open")
				fields = [Status]
				format = "font-weight:bold;color:#1100ff;"
				}
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Company
							Title
							Start_Date as "Start Date"
							Owner
							Expected_Revenue as "Expected Revenue"
							End_Date as "End Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Company
							Title
							Start_Date as "Start Date"
							Owner
							Expected_Revenue as "Expected Revenue"
							End_Date as "End Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Team_Issues
		{
			displayName = "My Team Issues"
			show all rows from Issues  [Manager.Email == zoho.loginuserid]  
			(
				Project
				(
					view = My_Projects
				)
				custom action "View"
				(
	  			workflow = View_Issue4
				column header = "View"
				success message = ""
				)
				MileStone
				(
					view = My_Milestones
				)
				Requirement
				(
					view = Project_Requirements
				)
				Task
				(
					view = My_Tasks
				)
				Title
				Description as "Comment"
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
				Followers
				(
					view = All_Employees
				)
				Status
			)
			filters
			(
				"New"  :  Status == "New"
				"In Progress"  :  Status == "In Progress"
				"Closed"  :  Status == "Closed"
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#990099;"
				}
				"Closed"
				{
				condition = (Status == "Closed")
				fields = [Status]
				format = "font-weight:bold;color:#007d13;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Requirement
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Followers
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Requirement
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Followers
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Team_Employees
		{
			displayName = "My Team Employees"
			show all rows from Employee  [Managers_Name.Email == zoho.loginuserid]  
			(
				Managers_Name as "Reporting to"
				Employee_ID as "Employee ID"
				Status
				Email
				Related_Manager as "Manager"
				Employee_Type as "Employee Type"
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Managers_Name as "Reporting to"
							Employee_ID as "Employee ID"
							Status
							Email
							Related_Manager as "Manager"
							Employee_Type as "Employee Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Managers_Name as "Reporting to"
							Employee_ID as "Employee ID"
							Status
							Email
							Related_Manager as "Manager"
							Employee_Type as "Employee Type"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Company_Projects
		{
			displayName = "My Company Projects"
			show all rows from Project  [Company.Primary_Email == zoho.loginuserid || Contacts.Email == zoho.loginuserid]  
			(
				Title
				custom action "View"
				(
	  			workflow = View6
				column header = "View"
				success message = ""
				)
				Manager
				Owner
				Followers
				(
					view = All_Employees
				)
				Description
				Start_Date as "Start Date"
				Expected_End_Date as "Expected End Date"
				End_Date as "End Date"
				Status
			)
			filters
			(
				Status
			)
			group by
			(
				Owner ascending
				Manager ascending
			)
			permission
			(
				edit = true
			)
			conditional formatting
			(
				"Open"
				{
				condition = (Status == "Open")
				fields = [Status]
				format = "font-weight:bold;color:#000dff;"
				}
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"Closed"
				{
				condition = (Status == "Closed")
				fields = [Status]
				format = "font-weight:bold;color:#1eb300;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Title
							Manager
							Owner
							Followers
							Description
							Start_Date as "Start Date"
							Expected_End_Date as "Expected End Date"
							End_Date as "End Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Title
							Manager
							Owner
							Followers
							Description
							Start_Date as "Start Date"
							Expected_End_Date as "Expected End Date"
							End_Date as "End Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Company_Tasks
		{
			displayName = "My Company Tasks"
			show all rows from Task  [Company.Primary_Email == zoho.loginuserid || Contact.Email == zoho.loginuserid && Status != "Closed"]  
			(
				Company
				Contact
				Project
				(
					view = My_Company_Projects
				)
				MileStone
				(
					view = My_Milestones
				)
				custom action "View"
				(
	  			workflow = View_Task2
				column header = "View"
				success message = ""
				)
				Requirement
				(
					view = My_Company_Requirement
				)
				Title
				Description
				Manager
				(
					view = All_Managers
				)
				Due_Date as "Due Date"
				Status
			)
			filters
			(
				Status
			)
			group by
			(
				Project ascending
				MileStone ascending
				Requirement ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#1e00ff;"
				}
				"Ready For Test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#1f9900;"
				}
				"Need Info"
				{
				condition = (Status == "Need Info")
				fields = [Status]
				format = "font-weight:bold;color:#750075;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Company
							Contact
				"View"
							Project
							MileStone
							Requirement
							Title
							Description
							Manager
							Due_Date as "Due Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company
							Contact
				"View"
							Project
							MileStone
							Requirement
							Title
							Description
							Manager
							Due_Date as "Due Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Company_Issues
		{
			displayName = "My Company Issues"
			show all rows from Issues  [Company.Primary_Email == zoho.loginuserid || Contact.Email == zoho.loginuserid]  
			(
				Project
				(
					view = My_Company_Projects
				)
				custom action "View"
				(
	  			workflow = View_Issue5
				column header = "View"
				success message = ""
				)
				MileStone
				(
					view = My_Milestones
				)
				Requirement
				(
					view = My_Company_Requirement
				)
				Task
				(
					view = My_Company_Tasks
				)
				Title
				Description as "Comment"
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
				Followers
				(
					view = All_Employees
				)
				Status
			)
			filters
			(
				"New"  :  Status == "New"
				"In Progress"  :  Status == "In Progress"
				"Closed"  :  Status == "Closed"
			)
			group by
			(
				Project ascending
				MileStone ascending
				Requirement ascending
				Task ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#990099;"
				}
				"Closed"
				{
				condition = (Status == "Closed")
				fields = [Status]
				format = "font-weight:bold;color:#007d13;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Requirement
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Followers
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Requirement
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Followers
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Company_Timesheets
		{
			displayName = "My Company Timesheets"
			show all rows from Timesheet  [Status == "Approved" && Company.Primary_Email == zoho.loginuserid || Contact.Email == zoho.loginuserid]  
			(
				Company
				Contact
				Project
				(
					view = My_Company_Projects
				)
				Task
				(
					view = My_Company_Tasks
				)
				Start_Time as "Start Time"
				End_Time as "End Time"
				Hours
				Employee
				(
					view = All_Employees
				)
				Status
			)
			filters
			(
				"Approved"  :  Status == "Approved"
			)
			group by
			(
				Project ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Company
							Contact
							Project
							Task
							Start_Time as "Start Time"
							End_Time as "End Time"
							Hours
							Employee
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company
							Contact
							Project
							Task
							Start_Time as "Start Time"
							End_Time as "End Time"
							Hours
							Employee
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Company_Invoices
		{
			displayName = "My Company Invoices"
			show all rows from Invoice  [Contacts.Email == zoho.loginuserid || Customer.Primary_Email == zoho.loginuserid]  
			(
				Project
				(
					view = My_Company_Projects
				)
				custom action "View"
				(
	  			workflow = View_Invoice1
				column header = "View"
				success message = ""
				)
				Customer
				(
					view = My_Profile_Company
				)
				Hourly_Rate as "Hourly Rate"
				Project_Cost as "Project Cost"
				(
					display = total	
				)
				Status
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Customer
							Hourly_Rate as "Hourly Rate"
							Project_Cost as "Project Cost"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Customer
							Hourly_Rate as "Hourly Rate"
							Project_Cost as "Project Cost"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Company_Quotes
		{
			displayName = "My Company Quotes"
			show all rows from Quote  [Contacts.Email == zoho.loginuserid || Customer.Primary_Email == zoho.loginuserid]  
			(
				Project
				custom action "View"
				(
	  			workflow = View10
				column header = "View"
				success message = ""
				)
				Hourly_Rate as "Hourly Rate"
				Expected_Hours as "Expected Hours"
				Expected_Cost as "Expected Cost"
				(
					width = 50px
				)
			)
			filters
			(
				"Pending"  :  Status == "Pending"
				"Approved"  :  Status == "Approved"
				"Cancelled"  :  Status == "Cancelled"
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				format = "font-weight:bold;color:#1100ff;"
				}
				"Approved"
				{
				condition = (Status == "Approved")
				format = "font-weight:bold;color:#00ff00;"
				}
				"Cancelled"
				{
				condition = (Status == "Cancelled")
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Hourly_Rate as "Hourly Rate"
							Expected_Hours as "Expected Hours"
							Expected_Cost as "Expected Cost"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Hourly_Rate as "Hourly Rate"
							Expected_Hours as "Expected Hours"
							Expected_Cost as "Expected Cost"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Company_Files
		{
			displayName = "My Company Files"
			show all rows from Add_File  [Company.Primary_Email == zoho.loginuserid || Contact.Email == zoho.loginuserid]  
			(
				Project
				Requirement
				Milestone
				Task
				File_Name as "File Name"
				File
			)
			group by
			(
				Project ascending
				Milestone ascending
				Requirement ascending
				Task ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							Requirement
							Milestone
							Task
							File_Name as "File Name"
							File
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							Requirement
							Milestone
							Task
							File_Name as "File Name"
							File
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Company_Contacts
		{
			displayName = "My Company Contacts"
			show all rows from Contact  [Company.Primary_Email == zoho.loginuserid || Email == zoho.loginuserid]  
			(
				Email
				Company
				(
					view = My_Profile_Company
				)
			)
			permission
			(
				add = true
				edit = true
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Email
							Company
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Email
							Company
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Data
	{
		icon = "ui-1-database"
		list Active_Projects
		{
			displayName = "Active Projects"
			show all rows from Project  [Status == "Open" || Status == "Pending"]  
			(
				Owner
				(
					view = All_Employees
				)
				Manager
				(
					view = All_Managers
				)
				custom action "View"
				(
	  			workflow = View11
				column header = "View"
				success message = ""
				)
				Followers
				(
					view = All_Employees
				)
				Expected_End_Date as "Expected End Date"
				Expected_Hours as "Expected Hours"
				Expected_Revenue as "Expected Revenue"
				End_Date as "End Date"
				Revenue
				Status
				Start_Date as "Start Date"
				Project_Type as "Project Type"
				Hourly_Rate as "Hourly Rate"
				Contacts
				(
					view = All_Contacts
				)
				Company
				(
					view = All_Companies
				)
				Description
				Title
			)
			filters
			(
				Status
			)
			group by
			(
				Status ascending
			)
			conditional formatting
			(
				"Open"
				{
				condition = (Status == "Open")
				fields = [Status]
				format = "font-weight:bold;color:#1100ff;"
				}
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Company
							Contacts
							Title
							Description
							Project_Type as "Project Type"
							Hourly_Rate as "Hourly Rate"
							Start_Date as "Start Date"
							Owner
							Manager
							Followers
							Expected_End_Date as "Expected End Date"
							Expected_Hours as "Expected Hours"
							Expected_Revenue as "Expected Revenue"
							End_Date as "End Date"
							Revenue
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company
							Contacts
							Description
							Expected_Hours as "Expected Hours"
							Status
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Overview"
		     			related field =  Company[Status == "Open" || Status == "Pending"]
						fields
						(
							Name
							Primary_Email as "Primary Email"
							Phone
							Address
							Website
							Project as "Projects"
						)
					)
					datablock4
					(
			 			layout type = -2
		     			title = "Overview"
		     			related field =  Requirement.Project
						fields
						(
							Title
							MileStone
							Description
							Expected_Hours as "Expected Hours"
							Status
						)
					)
					datablock5
					(
			 			layout type = -2
		     			title = "Overview"
		     			related field =  Contacts[Status == "Open" || Status == "Pending"]
						fields
						(
							Company
							Project as "Projects"
							Name
							Email
							Phone
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Projects
		{
			displayName = "All Projects"
			show all rows from Project    
			(
				Company as "Customer"
				(
					view = All_Companies
				)
				custom action "View Project Interface"
				(
	  			workflow = View_Project_Interface
				column header = "View Project Interface"
				success message = ""
				)
				Contacts
				(
					view = All_Contacts
				)
				Title
				Start_Date as "Start Date"
				Expected_End_Date as "Expected End Date"
				End_Date as "End Date"
				Status
				Hourly_Rate as "Hourly Rate"
				Expected_Hours as "Expected Hours"
				Expected_Revenue as "Expected Revenue"
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
				Followers
				(
					view = All_Employees
				)
			)
			filters
			(
				Status
			)
			group by
			(
				Company ascending
				Contacts ascending
				Status ascending
			)
			conditional formatting
			(
				"Open"
				{
				condition = (Status == "Open")
				fields = [Status]
				format = "font-weight:bold;color:#0900ff;"
				}
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"Closed"
				{
				condition = (Status == "Closed")
				fields = [Status]
				format = "font-weight:bold;color:#33ff00;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View Project Interface"
							Company as "Customer"
							Contacts
							Title
							Start_Date as "Start Date"
							Expected_End_Date as "Expected End Date"
							End_Date as "End Date"
							Status
							Hourly_Rate as "Hourly Rate"
							Expected_Hours as "Expected Hours"
							Expected_Revenue as "Expected Revenue"
							Manager
							Owner
							Followers
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View Project Interface"
							Company as "Customer"
							Contacts
							Title
							Start_Date as "Start Date"
							Expected_End_Date as "Expected End Date"
							End_Date as "End Date"
							Status
							Hourly_Rate as "Hourly Rate"
							Expected_Hours as "Expected Hours"
							Expected_Revenue as "Expected Revenue"
							Manager
							Owner
							Followers
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Pending_Requirements
		{
			displayName = "Pending Requirements"
			show all rows from Requirement  [Status != "Closed"]  
			(
				Project
				custom action "View"
				(
	  			workflow = View12
				column header = "View"
				success message = ""
				)
				MileStone
				Title
				Description
				Expected_Hours as "Expected Hours"
				Auto_Number as "Auto Number"
				Status
				Manager
				Owner
				Followers
				Company
			)
			filters
			(
				Status
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"InProgress"
				{
				condition = (Status == "InProgress")
				fields = [Status]
				format = "font-weight:bold;color:#15008f;"
				}
				"Ready For Test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#078f00;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Title
							Description
							Expected_Hours as "Expected Hours"
							Auto_Number as "Auto Number"
							Status
							Manager
							Owner
							Followers
							Company
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Title
							Description
							Expected_Hours as "Expected Hours"
							Auto_Number as "Auto Number"
							Status
							Manager
							Owner
							Followers
							Company
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Requirements
		{
			displayName = "All Requirements"
			show all rows from Requirement    
			(
				Project
				(
					view = All_Projects
				)
				custom action "View"
				(
	  			workflow = View13
				column header = "View"
				success message = ""
				)
				Company
				(
					view = All_Companies
				)
				Title
				MileStone
				(
					view = All_MileStones
				)
				Expected_Hours as "Expected Hours"
				(
					display = total	
				)
				Status
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
			)
			filters
			(
				Status
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"InProgress"
				{
				condition = (Status == "InProgress")
				fields = [Status]
				format = "font-weight:bold;color:#000dff;"
				}
				"Ready For Test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#5a7500;"
				}
				"Need Info"
				{
				condition = (Status == "Need Info")
				fields = [Status]
				format = "font-weight:bold;color:#c200c2;"
				}
				"Closed"
				{
				condition = (Status == "Closed")
				fields = [Status]
				format = "font-weight:bold;color:#22ff00;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Company
							Title
							MileStone
							Expected_Hours as "Expected Hours"
							Status
							Manager
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Company
							Title
							MileStone
							Expected_Hours as "Expected Hours"
							Status
							Manager
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Pending_Tasks
		{
			displayName = "Pending Tasks"
			show all rows from Task  [Status != "Closed"]  
			(
				Project
				custom action "View"
				(
	  			workflow = View_Task3
				column header = "View"
				success message = ""
				)
				MileStone
				Requirement
				Title
				Description
				Manager
				Owner
				Followers
				Due_Date as "Due Date"
				Status
				Company
				Contact
			)
			filters
			(
				Status
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#fc0511;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#2408fa;"
				}
				"Ready for test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#b2c716;"
				}
				"Need Info"
				{
				condition = (Status == "Need Info")
				fields = [Status]
				format = "font-weight:bold;color:#7a527a;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Requirement
							Title
							Description
							Manager
							Owner
							Followers
							Due_Date as "Due Date"
							Status
							Company
							Contact
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Requirement
							Title
							Description
							Manager
							Owner
							Followers
							Due_Date as "Due Date"
							Status
							Company
							Contact
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Tasks
		{
			displayName = "All Tasks"
			show all rows from Task    
			(
				Company
				(
					view = All_Companies
				)
				custom action "View"
				(
	  			workflow = View_Task4
				column header = "View"
				success message = ""
				)
				Contact
				Project
				(
					view = All_Projects
				)
				Requirement
				(
					view = All_Requirements
				)
				Title
				Due_Date as "Due Date"
				Status
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
			)
			filters
			(
				Status
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#0022ff;"
				}
				"Ready For Test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#a0c92f;"
				}
				"Need Info"
				{
				condition = (Status == "Need Info")
				fields = [Status]
				format = "font-weight:bold;color:#750075;"
				}
				"Closed"
				{
				condition = (Status == "Closed")
				fields = [Status]
				format = "font-weight:bold;color:#225c00;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Company
							Contact
							Project
							Requirement
							Title
							Due_Date as "Due Date"
							Status
							Manager
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Company
							Contact
							Project
							Requirement
							Title
							Due_Date as "Due Date"
							Status
							Manager
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Pending_Issues
		{
			displayName = "Pending Issues"
			show all rows from Issues  [Status == "New" || Status == "In Progress"]  
			(
				Company
				(
					view = All_Companies
				)
				custom action "View Issue"
				(
	  			workflow = View_Issue
				column header = "View Issue"
				success message = ""
				)
				Project
				(
					view = All_Projects
				)
				Task
				(
					view = All_Tasks
				)
				Title
				Description as "Comment"
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
				Status
			)
			filters
			(
				"New"  :  Status == "New"
				"In Progress"  :  Status == "In Progress"
			)
			group by
			(
				Project ascending
				Task ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#990099;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View Issue"
							Company
							Project
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View Issue"
							Company
							Project
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Issues_Report
		{
			displayName = "All Issues"
			show all rows from Issues    
			(
				Company
				(
					view = All_Companies
				)
				custom action "View Issue"
				(
	  			workflow = View_Issue1
				column header = "View Issue"
				success message = ""
				)
				Project
				(
					view = All_Projects
				)
				Task
				(
					view = All_Tasks
				)
				Title
				Description as "Comment"
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
				Status
			)
			filters
			(
				"New"  :  Status == "New"
				"In Progress"  :  Status == "In Progress"
				"Closed"  :  Status == "Closed"
			)
			group by
			(
				Project ascending
				Task ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#990099;"
				}
				"Closed"
				{
				condition = (Status == "Closed")
				fields = [Status]
				format = "font-weight:bold;color:#007d13;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View Issue"
							Company
							Project
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View Issue"
							Company
							Project
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_MileStones
		{
			displayName = "All MileStones"
			show all rows from MileStones    
			(
				Title
				Description
				End_Date as "End Date"
				Project
				Start_Date as "Start Date"
			)
			group by
			(
				Project ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Title
							Description
							End_Date as "End Date"
							Project
							Start_Date as "Start Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Title
							Description
							End_Date as "End Date"
							Project
							Start_Date as "Start Date"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Pending_Timesheets
		{
			displayName = "Pending Timesheets"
			show all rows from Timesheet  [Status == "Pending"]  
			(
				Project
				(
					view = All_Projects
				)
				Milestone
				(
					view = All_MileStones
				)
				custom action "Approve"
				(
	  			workflow = Approve1
				column header = "Approve"
				success message = ""
				condition = (Status == "Pending")
				)
				Requirement
				(
					view = All_Requirements
				)
				Task
				(
					view = All_Tasks
				)
				Comments as "Comment"
				Manager
				(
					view = All_Managers
				)
				Employee
				(
					view = All_Employees
				)
				Start_Time as "Start Time"
				End_Time as "End Time"
				Auto_Number as "Auto Number"
			)
			filters
			(
				"Pending"  :  Status == "Pending"
			)
			group by
			(
				Project ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Approve"
							Project
							Milestone
							Requirement
							Task
							Comments as "Comment"
							Manager
							Employee
							Start_Time as "Start Time"
							End_Time as "End Time"
							Auto_Number as "Auto Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Approve"
							Project
							Milestone
							Requirement
							Task
							Comments as "Comment"
							Manager
							Employee
							Start_Time as "Start Time"
							End_Time as "End Time"
							Auto_Number as "Auto Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Billable_Timesheets
		{
			displayName = "Billable Timesheets"
			show all rows from Timesheet  [Billable]  
			(
				Project
				(
					view = All_Projects
				)
				Milestone
				(
					view = All_MileStones
				)
				Requirement
				(
					view = All_Requirements
				)
				Task
				(
					view = All_Tasks
				)
				Comments as "Comment"
				Manager
				(
					view = All_Managers
				)
				Employee
				(
					view = All_Employees
				)
				Start_Time as "Start Time"
				End_Time as "End Time"
				Status
				Billable
				Invoiced
				Approved
				Company as "Company:"
				(
					view = All_Companies
				)
				Contact
				(
					view = All_Contacts
				)
				Auto_Number as "Auto Number"
			)
			filters
			(
				"Pending"  :  Status == "Pending"
				"Approved"  :  Status == "Approved"
				"Rejected"  :  Status == "Rejected"
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#3300ff;"
				}
				"Approved"
				{
				condition = (Status == "Approved")
				fields = [Status]
				format = "font-weight:bold;color:#15ff00;"
				}
				"Rejected"
				{
				condition = (Status == "Rejected")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							Milestone
							Requirement
							Task
							Comments as "Comment"
							Manager
							Employee
							Start_Time as "Start Time"
							End_Time as "End Time"
							Status
							Billable
							Invoiced
							Approved
							Company as "Company:"
							Contact
							Auto_Number as "Auto Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							Milestone
							Requirement
							Task
							Comments as "Comment"
							Manager
							Employee
							Start_Time as "Start Time"
							End_Time as "End Time"
							Status
							Billable
							Invoiced
							Approved
							Company as "Company:"
							Contact
							Auto_Number as "Auto Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Timesheets
		{
			displayName = "All Timesheets"
			show all rows from Timesheet    
			(
				custom action "Approve"
				(
	  			workflow = Approve2
				column header = "Approve"
				success message = ""
				condition = (Status != "Approved")
				)
				Company as "Company:"
				(
					view = All_Companies
				)
				Project
				(
					view = All_Projects
				)
				Requirement
				(
					view = All_Requirements
				)
				Task
				(
					view = All_Tasks
				)
				Start_Time as "Start Time"
				Invoiced
				End_Time as "End Time"
				Employee
				(
					view = All_Employees
				)
				Manager
				(
					view = All_Managers
				)
				Status
			)
			filters
			(
				"Pending"  :  Status == "Pending"
				"Approved"  :  Status == "Approved"
				"Rejected"  :  Status == "Rejected"
			)
			group by
			(
				Project ascending
				Requirement ascending
				Task ascending
			)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#3300ff;"
				}
				"Approved"
				{
				condition = (Status == "Approved")
				fields = [Status]
				format = "font-weight:bold;color:#15ff00;"
				}
				"Rejected"
				{
				condition = (Status == "Rejected")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Approve"
							Company as "Company:"
							Project
							Requirement
							Task
							Start_Time as "Start Time"
							Invoiced
							End_Time as "End Time"
							Employee
							Manager
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Approve"
							Company as "Company:"
							Project
							Requirement
							Task
							Start_Time as "Start Time"
							Invoiced
							End_Time as "End Time"
							Employee
							Manager
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Files
		{
			displayName = "All Files"
			show all rows from Add_File    
			(
				Company
				(
					view = All_Companies
				)
				File_Name as "Name"
				File
				Project
				(
					view = My_Company_Projects
				)
				Task
				(
					view = All_Tasks
				)
				Milestone
				(
					view = All_MileStones
				)
			)
			group by
			(
				Project ascending
				Milestone ascending
				Task ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Company
							File_Name as "Name"
							File
							Project
							Task
							Milestone
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company
							File_Name as "Name"
							File
							Project
							Task
							Milestone
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Notes
		{
			displayName = "All Notes Report"
			show all rows from Notes    
			(
				Project
				(
					view = All_Projects
				)
				Title
				Comments as "Comment"
			)
			group by
			(
				Project ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							Title
							Comments as "Comment"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							Title
							Comments as "Comment"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Project_Meetings
		{
			displayName = "All Project Meetings"
			show all rows from Project_Meeting    
			(
				Project
				(
					view = My_Company_Projects
				)
				Meeting_Title as "Meeting Title"
				Meeting_Description as "Meeting Description"
				Manager
				(
					view = All_Managers
				)
				Employees as "Employee"
				(
					view = All_Employees
				)
			)
			group by
			(
				Project ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							Meeting_Title as "Meeting Title"
							Meeting_Description as "Meeting Description"
							Manager
							Employees as "Employee"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							Meeting_Title as "Meeting Title"
							Meeting_Description as "Meeting Description"
							Manager
							Employees as "Employee"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Company_Meetings
		{
			displayName = "My Company Meetings"
			show all rows from Project_Meeting    
			(
				Project
				(
					view = My_Company_Projects
				)
				Meeting_Title as "Meeting Title"
				Meeting_Description as "Meeting Description"
				Manager
				(
					view = All_Managers
				)
				Employees as "Employee"
				(
					view = All_Employees
				)
			)
			group by
			(
				Project ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							Meeting_Title as "Meeting Title"
							Meeting_Description as "Meeting Description"
							Manager
							Employees as "Employee"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							Meeting_Title as "Meeting Title"
							Meeting_Description as "Meeting Description"
							Manager
							Employees as "Employee"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Company_Notes
		{
			displayName = "My Company Notes"
			show all rows from Notes    
			(
				Project
				(
					view = All_Projects
				)
				Title
				Comments as "Comment"
			)
			group by
			(
				Project ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							Title
							Comments as "Comment"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							Title
							Comments as "Comment"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Reports
	{
		icon = "health-pulse-chart"
		pivotchart Project_Report
		{ 
			displayname = "Project Report"
			based on Autoview_1422522849580_Project
							icon = "health-pulse-chart"				show all rows from Project
				(
 					ID 
 					Start_Date  as "Start Date"
 					Expected_Hours  as "Expected Hours"
 					End_Date  as "End Date"
 					Manager 
 					Expected_Revenue  as "Expected Revenue"
 					Revenue 
 					Expected_End_Date  as "Expected End Date"
 					Project_Type  as "Project Type"
 					Added_Time  as "Added Time"
 					Owner 
 					Title 
 					Status 
 					Company  as "Customer"
				)
		}
		pivotchart Employee_Worksheets
		{ 
			displayname = "Employee Worksheets"
			based on Autoview_1450649606091_Time_Sheet
							icon = "ui-3-chart-bars"				show all rows from Timesheet
				(
 					Quote 
 					Employee 
 					Company  as "Company:"
 					Invoice 
 					End_Time  as "End Time"
 					Billable 
 					Task 
 					Approved 
 					Invoiced 
 					Auto_Number  as "Auto Number"
 					Project 
 					Status 
 					Requirement 
 					Manager 
 					Start_Time  as "Start Time"
 					Contact 
 					Hours 
 					Milestone 
				)
		}
		pivottable Payments
		{ 
			displayname = "Payments"
			based on Autoview_1447755303147_Pay_Invoice
							icon = "business-money-bag"				show all rows from Pay_Invoice
				(
 					Project 
 					Invoice  as "Invoice No"
 					Quantity 
 					Amount 
 					Item 
				)
		}
	}
	section Quick_Links
	{
		displayname= "Quick Links"
		icon = "ui-2-link-69"
		form Company
		{
			displayname = "Add Company"
			success message = "Company Details Added SuccessFully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Name
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Primary_Email
			(
    			type = email
				displayname = "Primary Email"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone
			(
    			type = phonenumber
	 			row = 1
	 			column = 1   
				width = medium
			)
			Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Website
			(
    			type = url
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contacts
			(
				type = grid
				values  = Contact.ID
    			bidirectional = Company
	 			row = 1
	 			column = 1   
				width = 100px
			)
			Project
			(
				type = list
				displayname = "Projects"
				values  = Project.ID
    			bidirectional = Company
    			displayformat = [Title]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "files-folder-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Contact
		{
			displayname = "Add Contact"
			success message = "Contact Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Company
			(
				type = picklist
				values  = Company.ID
    			bidirectional = Contacts
    			displayformat = [Name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Project
			(
				type = list
				displayname = "Projects"
				values  = Project.ID
    			displayformat = [Title]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Phone
			(
    			type = phonenumber
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Project
		{
			displayname = "Add Project"
			success message = "Project Details Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Company
			(
				type = picklist
				values  = Company.ID
    			bidirectional = Project
    			displayformat = [Name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contacts
			(
				type = list
				values  = Contact[Company == input.Company].ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Title
			(
    			type = text
				maxchar = 254
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Project_Type
			(
				type = picklist
				displayname = "Project Type"
				values = {"Fixed", "Hourly"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Hourly_Rate
			(
				type = picklist
				displayname = "Hourly Rate"
				values  = Hourly_Rate.ID
    			displayformat = [Hourly_Rate]
				allow new entries = true
				[
					displayname = "Add New"
				]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Requirements
			(
				type = grid
				values  = Requirement.ID
    			bidirectional = Project
	 			row = 2
	 			column = 1   
				width = medium
			)
			Start_Date
			(
    			type = date
				displayname = "Start Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 3
	 			column = 1   
				width = medium
			)
			Owner
			(
				type = picklist
				values  = Employee.ID
    			displayformat = [Email]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 3
	 			column = 1   
				width = medium
			)
			Manager
			(
				type = picklist
				values  = Manager[Reporting_Employees == input.Owner].ID
    			bidirectional = Project
    			displayformat = [Name.first_name + " - " + Name.last_name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 3
	 			column = 1   
				width = medium
			)
			Followers
			(
				type = list
				values  = Employee.ID
    			displayformat = [Email]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
				height = 60px
	 			row = 3
	 			column = 1   
				width = medium
			)
			Expected_End_Date
			(
    			type = date
				displayname = "Expected End Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 3
	 			column = 1   
				width = medium
			)
			Expected_Hours
			(
				type = decimal
				displayname = "Expected Hours"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Expected_Revenue
			(
				type = decimal
				displayname = "Expected Revenue"
				maxchar = 9
				decimalplace = 1
	 			row = 3
	 			column = 1   
				width = medium
			)
			End_Date
			(
    			type = date
				displayname = "End Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 3
	 			column = 1   
				width = medium
			)
			Revenue
			(
				type = USD
	 			row = 3
	 			column = 1   
				width = medium
			)
			Section2
			(
				type = section
				displayname = "Section"
	 			row = 3
	 			column = 0   
				width = medium
			)
			Quotes
			(
				type = grid
				values  = Quote.ID
    			bidirectional = Project
				auto width = false
	 			row = 4
	 			column = 1   
				width = medium
			)
			MileStones
			(
				type = grid
				values  = MileStones.ID
    			bidirectional = Project
				auto width = false
	 			row = 5
	 			column = 1   
				width = 100px
			)
			Tasks
			(
				type = grid
				values  = Task.ID
    			bidirectional = Project
	 			row = 6
	 			column = 1   
				width = medium
			)
			Files
			(
				type = grid
				values  = Add_File.ID
    			bidirectional = Project
	 			row = 7
	 			column = 1   
				width = medium
			)
			Notes
			(
				type = grid
				values  = Notes.ID
    			bidirectional = Project
	 			row = 8
	 			column = 1   
				width = medium
			)
			Timesheets
			(
				type = grid
				values  = Timesheet.ID
    			bidirectional = Project
	 			row = 9
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"Open", "Pending", "Completed"}
				initial value = "Open"
	 			row = 10
	 			column = 1   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 10
	 			column = 0   
				width = medium
			)
			Issues
			(
				type = list
				values  = Issues.ID
    			bidirectional = Project
    			displayformat = [Title]
				sortorder = ascending
				height = 60px
	 			row = 10
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "media-1-polaroid-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form MileStones
		{
			displayname = "Add MileStone"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project[Company.Primary_Email == zoho.loginuserid || Contacts.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid || Owner.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid].ID
    			bidirectional = MileStones
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Title
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = richtext
				height = 200px
				toolbar = enable
				[
					style, alignment, bullets-and-numbering
				]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Start_Date
			(
    			type = date
				displayname = "Start Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			End_Date
			(
    			type = date
				displayname = "End Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Files
			(
				type = grid
				values  = Add_File.ID
    			bidirectional = Milestone
	 			row = 1
	 			column = 1   
				width = medium
			)
			Quote
			(
				type = picklist
				values  = Quote.ID
    			displayformat = [QuoteID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-simple-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Requirement
		{
			displayname = "Add Requirement"
			success message = "Requirements Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Project
			(
				type = picklist
				values  = Project[Company.Primary_Email == zoho.loginuserid || Contacts.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid || Owner.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid].ID
    			bidirectional = Requirements
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			MileStone
			(
				type = picklist
				values  = MileStones[Project == input.Project].ID
    			displayformat = [Title]
				allow new entries = true
				[
					displayname = "Add new"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Title
			(
    			type = text
				maxchar = 254
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Expected_Hours
			(
				type = decimal
				displayname = "Expected Hours"
				initial value = 0.0
	 			row = 1
	 			column = 1   
				width = medium
			)
			Tasks
			(
				type = grid
				values  = Task.ID
    			bidirectional = Requirement
	 			row = 1
	 			column = 1   
				width = medium
			)
			Files
			(
				type = grid
				values  = Add_File.ID
    			bidirectional = Requirement
				auto width = false
	 			row = 1
	 			column = 1   
				width = medium
			)
			Comments
			(
				type = grid
				values  = Comments.ID
    			bidirectional = Requirement
	 			row = 1
	 			column = 1   
				width = medium
			)
			Auto_Number
			(
    			type = autonumber
				displayname = "Auto Number"
				start index = 1
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Status
			(
				type = picklist
				values = {"New", "InProgress", "Ready For Test", "Need Info", "Closed"}
				initial value = "New"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Owner
			(
				type = picklist
				values  = Employee.ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Manager
			(
				type = picklist
				values  = Manager[Reporting_Employees == input.Owner].ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Followers
			(
				type = list
				values  = Employee.ID
    			displayformat = [Name.first_name + Name.last_name]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Company
			(
				type = picklist
				values  = Company.ID
    			displayformat = [Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contacts
			(
				type = list
				values  = Contact.ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-circle-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Task
		{
			displayname = "Add Task"
			success message = "Task Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project[Owner.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid || Company.Primary_Email == zoho.loginuserid || Contacts.Email == zoho.loginuserid].ID
    			bidirectional = Tasks
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			MileStone
			(
				type = picklist
				values  = MileStones[Project == input.Project].ID
    			displayformat = [Title]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Requirement
			(
				type = picklist
				values  = Requirement[Project == input.Project].ID
    			bidirectional = Tasks
    			displayformat = [Title]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Title
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Notes
			(
				type = grid
				values  = Notes.ID
	 			row = 1
	 			column = 1   
				width = medium
			)
			Issues
			(
				type = grid
				values  = Issues.ID
    			bidirectional = Task
	 			row = 1
	 			column = 1   
				width = medium
			)
			Comments
			(
				type = grid
				values  = Comments.ID
    			bidirectional = Task
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = richtext
				height = 201px
				toolbar = enable
				[
					style, font-color, alignment, link, ruler, bullets-and-numbering, script-text, code, html, quote
				]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Owner
			(
				type = picklist
				values  = Employee.ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Manager
			(
				type = picklist
				values  = Manager[Reporting_Employees == input.Owner].ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Followers
			(
				type = list
				values  = Employee.ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Due_Date
			(
    			type = date
				displayname = "Due Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"New", "In Progress", "Ready For Test", "Need Info", "Closed"}
				initial value = "New"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Files
			(
				type = grid
				values  = Add_File.ID
    			bidirectional = Task
	 			row = 1
	 			column = 1   
				width = medium
			)
			Company
			(
				type = picklist
				values  = Company.ID
    			displayformat = [Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contact
			(
				type = picklist
				values  = Contact.ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-circle-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Issues
		{
			displayname = "Add Issue"
			success message = "Issue Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Company
			(
				type = picklist
				values  = Company.ID
    			displayformat = [Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contact
			(
				type = picklist
				values  = Contact.ID
    			displayformat = [Email]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project[Company.Primary_Email == zoho.loginuserid || Contacts.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid || Owner.Email == zoho.loginuserid].ID
    			bidirectional = Issues
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			MileStone
			(
				type = picklist
				values  = MileStones.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Requirement
			(
				type = picklist
				values  = Requirement.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Task
			(
				type = picklist
				values  = Task.ID
    			bidirectional = Issues
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Title
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = richtext
				height = 200px
				toolbar = enable
				[
					style, indent, alignment, link, bullets-and-numbering, script-text, code
				]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Comments
			(
				type = grid
				values  = Comments.ID
    			bidirectional = Issue
	 			row = 1
	 			column = 1   
				width = medium
			)
			Owner
			(
				type = picklist
				values  = Employee.ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Manager
			(
				type = picklist
				values  = Manager.ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Followers
			(
				type = list
				values  = Employee.ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"New", "In Progress", "Closed"}
				initial value = "New"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-08"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_File
		{
			displayname = "Add File"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project[Company.Primary_Email == zoho.loginuserid || Contacts.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid || Owner.Email == zoho.loginuserid].ID
    			bidirectional = Files
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Requirement
			(
				type = picklist
				values  = Requirement.ID
    			bidirectional = Files
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Milestone
			(
				type = picklist
				values  = MileStones[Project == input.Project].ID
    			bidirectional = Files
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Task
			(
				type = picklist
				values  = Task[MileStone == input.Milestone].ID
    			bidirectional = Files
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have File_Name
			(
    			type = text
				displayname = "File Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have File
			(
    			type = upload file
				browse = local_drive
	 			row = 1
	 			column = 1   
				width = medium
			)
			Company
			(
				type = picklist
				values  = Company.ID
    			displayformat = [Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contact
			(
				type = picklist
				values  = Contact.ID
    			displayformat = [Email]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "files-folder-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Notes
		{
			displayname = "Add Note"
			success message = "Notes  Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project[Company.Primary_Email == zoho.loginuserid || Contacts.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid || Owner.Email == zoho.loginuserid].ID
    			bidirectional = Notes
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Quote
			(
				type = picklist
				values  = Quote.ID
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Invoice
			(
				type = picklist
				values  = Invoice.ID
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Task
			(
				type = picklist
				values  = Task.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Title
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Comments
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-3-card-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Project_Meeting
		{
			displayname = "Add Project Meeting"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project[Company.Primary_Email == zoho.loginuserid || Contacts.Email == zoho.loginuserid || Followers.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid || Owner.Email == zoho.loginuserid].ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Meeting_Title
			(
    			type = text
				displayname = "Meeting Title"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Meeting_Description
			(
    			type = textarea
				displayname = "Meeting Description"
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Meeting_Date_Time
			(
    			type = datetime
				displayname = "Meeting Date Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Manager
			(
				type = picklist
				values  = Manager.ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Employees
			(
				type = list
				values  = Employee[Related_Manager == input.Manager].ID
    			displayformat = [Name.first_name + Name.last_name]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Company
			(
				type = picklist
				values  = Company.ID
    			displayformat = [Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contact
			(
				type = list
				values  = Contact[Company == input.Company].ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-simple-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	section Cost
	{
		icon = "business-money-11"
		list Pending_Invoices
		{
			displayName = "Pending Invoices"
			show all rows from Invoice  [Status == "Pending"]  
			(
				Project
				(
					view = All_Projects
				)
				custom action "View"
				(
	  			workflow = View_Invoice2
				column header = "View"
				success message = ""
				)
				Customer
				(
					view = All_Companies
				)
				Contacts
				Hourly_Rate as "Hourly Rate"
				Status
				Total_Hours as "Total Hours"
				(
					display = total	
				)
				Project_Cost as "Project Cost"
				(
					display = total	
				)
				Invoice_Number as "Invoice Number"
			)
			options
			(
				icon = "files-time"
	 		)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#2b00d6;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Customer
							Contacts
							Hourly_Rate as "Hourly Rate"
							Status
							Total_Hours as "Total Hours"
							Project_Cost as "Project Cost"
							Invoice_Number as "Invoice Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Customer
							Contacts
							Hourly_Rate as "Hourly Rate"
							Status
							Total_Hours as "Total Hours"
							Project_Cost as "Project Cost"
							Invoice_Number as "Invoice Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Paid_Invoices
		{
			displayName = "Paid Invoices"
			show all rows from Invoice  [Status == "Paid"]  
			(
				Project
				(
					view = My_Projects
				)
				Customer
				(
					view = All_Companies
				)
				Contacts
				Hourly_Rate as "Hourly Rate"
				Status
				Total_Hours as "Total Hours"
				(
					display = total	
				)
				Project_Cost as "Project Cost"
				(
					display = total	
				)
				Invoice_Number as "Invoice Number"
			)
			group by
			(
				Project ascending
			)
			options
			(
				icon = "files-single-content-02"
	 		)
			conditional formatting
			(
				"Paid"
				{
				condition = (Status == "Paid")
				fields = [Status]
				format = "font-weight:bold;color:#00940a;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							Customer
							Contacts
							Hourly_Rate as "Hourly Rate"
							Status
							Total_Hours as "Total Hours"
							Project_Cost as "Project Cost"
							Invoice_Number as "Invoice Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							Customer
							Contacts
							Hourly_Rate as "Hourly Rate"
							Status
							Total_Hours as "Total Hours"
							Project_Cost as "Project Cost"
							Invoice_Number as "Invoice Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Invoices_Report
		{
			displayName = "All Invoices"
			show all rows from Invoice    
			(
				Project
				(
					view = My_Projects
				)
				custom action "View Invoice"
				(
	  			workflow = View_Invoice
				column header = "View Invoice"
				success message = ""
				)
				Customer
				(
					view = All_Companies
				)
				Contacts
				(
					view = All_Contacts
				)
				Project_Cost as "Cost"
				(
					display = total	
				)
				Hourly_Rate as "Hourly Rate"
				Invoice_Number as "Invoice Number"
				Status
			)
			filters
			(
				"Pending"  :  Status == "Pending"
				"Paid"  :  Status == "Paid"
				"Canceled"  :  Status == "Canceled"
			)
			group by
			(
				Project ascending
			)
			options
			(
				icon = "files-single-copies"
	 		)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#2b00d6;"
				}
				"Paid"
				{
				condition = (Status == "Paid")
				fields = [Status]
				format = "font-weight:bold;color:#00940a;"
				}
				"Canceled"
				{
				condition = (Status == "Canceled")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View Invoice"
							Project
							Customer
							Contacts
							Project_Cost as "Cost"
							Hourly_Rate as "Hourly Rate"
							Invoice_Number as "Invoice Number"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View Invoice"
							Project
							Customer
							Contacts
							Project_Cost as "Cost"
							Hourly_Rate as "Hourly Rate"
							Invoice_Number as "Invoice Number"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Pending_Quotes
		{
			displayName = "Pending Quotes"
			show all rows from Quote    
			(
				Project
				(
					view = All_Projects
				)
				custom action "Approve"
				(
	  			workflow = Approve3
				column header = "Approve"
				success message = ""
				condition = (Status != "Approved")
				)
				Customer
				(
					view = All_Companies
				)
				Contacts
				Hourly_Rate as "Hourly Rate"
				Date_field as "Date"
				Expected_Hours as "Expected Hours"
				(
					display = total	
				)
				Expected_Cost as "Total Amount"
				(
					display = total	
				)
				QuoteID
				Status
			)
			filters
			(
				"Approved"  :  Status == "Approved"
			)
			group by
			(
				Project ascending
			)
			options
			(
				icon = "files-edit"
	 		)
			conditional formatting
			(
				"Approved"
				{
				condition = (Status == "Approved")
				fields = [Status]
				format = "font-weight:bold;color:#00ff00;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Approve"
							Project
							Customer
							Contacts
							Hourly_Rate as "Hourly Rate"
							Date_field as "Date"
							Expected_Hours as "Expected Hours"
							Expected_Cost as "Total Amount"
							QuoteID
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Approve"
							Project
							Customer
							Contacts
							Hourly_Rate as "Hourly Rate"
							Date_field as "Date"
							Expected_Hours as "Expected Hours"
							Expected_Cost as "Total Amount"
							QuoteID
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Quotes_Report
		{
			displayName = "All Quotes"
			template = Task_Quote_Details
			print template = Task_Quote_Details
			show all rows from Quote    
			(
				Project
				(
					view = My_Projects
				)
				custom action "View Quote"
				(
	  			workflow = View_Quote
				column header = "View Quote"
				success message = ""
				)
				Status
				QuoteID
				Expected_Hours as "Expected Hours"
				(
					display = total	
				)
				Expected_Cost as "Expected Cost"
				(
					display = total	
				)
				Date_field as "Date"
				Customer
				(
					view = All_Companies
				)
				Hourly_Rate as "Hourly Rate"
			)
			filters
			(
				"Pending"  :  Status == "Pending"
				"Approved"  :  Status == "Approved"
				"Cancelled"  :  Status == "Cancelled"
			)
			group by
			(
				Project ascending
			)
			options
			(
				icon = "files-archive-paper"
	 		)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#1100ff;"
				}
				"Approved"
				{
				condition = (Status == "Approved")
				fields = [Status]
				format = "font-weight:bold;color:#00ff00;"
				}
				"Cancelled"
				{
				condition = (Status == "Cancelled")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View Quote"
							Project
							Status
							QuoteID
							Expected_Hours as "Expected Hours"
							Expected_Cost as "Expected Cost"
							Date_field as "Date"
							Customer
							Hourly_Rate as "Hourly Rate"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View Quote"
							Project
							Status
							QuoteID
							Expected_Hours as "Expected Hours"
							Expected_Cost as "Expected Cost"
							Date_field as "Date"
							Customer
							Hourly_Rate as "Hourly Rate"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Hourly_Rates
		{
			displayName = "All Hourly Rates"
			show all rows from Hourly_Rate    
			(
				Hourly_Rate as "Hourly Rate"
			)
			options
			(
				icon = "ui-2-time-clock"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Hourly_Rate as "Hourly Rate"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Hourly_Rate as "Hourly Rate"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Employees
	{
		icon = "users-multiple-11"
		list Active_Employees
		{
			displayName = "Active Employees"
			show all rows from Employee  [Status == "Active"]  
			(
				Managers_Name as "Reporting to"
				Employee_Type as "Employee Type"
				Managers_Name.Reporting_Employees as "Reporting Employees"
				Status
				Employee_ID as "Employee ID"
				Email
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
			)
			group by
			(
				Employee_Type descending
			)
			options
			(
				icon = "users-2-a-check"
	 		)
			conditional formatting
			(
				"Active Formatting"
				{
				condition = (Status == "Active")
				fields = [Status]
				format = "color:#47a8b3;"
				}
				"Inactive Formatting"
				{
				condition = (Status == "Inactive")
				fields = [Status]
				format = "color:#ffffff;background-color:#e84c3d;"
				}
			)
			quickview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
		     			title = "Overview"
						fields
						(
							Name
							Managers_Name.Reporting_Employees as "Reporting Employees"
							Email
							Employee_ID as "Employee ID"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Employee_Type as "Employee Type"
							Email
							Employee_ID as "Employee ID"
							Status
							Managers_Name as "Reporting to"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Employees
		{
			displayName = "All Employees"
			show all rows from Employee    
			(
				Managers_Name as "Reporting to"
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Employee_Type as "Employee Type"
				Email
				Employee_ID as "Employee ID"
				Status
			)
			group by
			(
				Employee_Type descending
			)
			options
			(
				icon = "users-badge-15"
	 		)
			conditional formatting
			(
				"Inactive Formatting"
				{
				condition = (Status == "Inactive")
				fields = [Status]
				format = "color:#ffffff;background-color:#e84c3d;"
				}
				"Active Formatting"
				{
				condition = (Status == "Active")
				fields = [Status]
				format = "color:#4c9eb5;"
				}
			)
			quickview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = 4
		     			title = "Overview"
						fields
						(
							Name
							Email
							Employee_ID as "Employee ID"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Employee_Type as "Employee Type"
							Email
							Employee_ID as "Employee ID"
							Status
							Managers_Name as "Reporting to"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Managers
		{
			displayName = "All Managers"
			show all rows from Manager    
			(
				Reporting_Employees as "Reporting Employees"
				Email
				Status
			)
			options
			(
				icon = "users-2-meeting"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Reporting_Employees as "Reporting Employees"
							Email
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Reporting_Employees as "Reporting Employees"
							Email
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Profile
	{
		icon = "users-single-03"
		summary Profile
		{
			displayName = "Profile"
			show all rows from Employee  [Email == zoho.loginuserid]  
			(
				Email
				Employee_ID as "Employee ID"
				Status
			)
			options
			(
				display rows = 1
				display records per row = 2
				icon = "ui-1-database"
			)
			permission
			(
				edit = true
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Email
							Employee_ID as "Employee ID"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Email
							Employee_ID as "Employee ID"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Data_Forms
	{
		displayname= "Data Forms"
		hide = true
		icon = "ui-2-menu-bold"
		form Quote
		{
			displayname = "Add Quote"
			success message = "Quote Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Project
			(
				type = picklist
				values  = Project.ID
    			bidirectional = Quotes
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Customer
			(
				type = picklist
				values  = Company.ID
    			displayformat = [Name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contacts
			(
				type = list
				values  = Contact[Company == input.Customer].ID
    			displayformat = [Name.first_name + " " + Name.last_name + " - " + Email]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Hourly_Rate
			(
				type = picklist
				displayname = "Hourly Rate"
				values  = Hourly_Rate.ID
    			displayformat = [Hourly_Rate]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_field
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Expected_Hours
			(
				type = decimal
				displayname = "Expected Hours"
				maxchar = 9
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Expected_Cost
			(
				displayname = "Total Amount"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
			QuoteID
			(
    			type = autonumber
				start index = 1
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Status
			(
				type = picklist
				values = {"Pending", "Approved", "Cancelled"}
				initial value = "Pending"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Invoiced
			(
    			type = checkbox
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		print template
			{
				Task_Quote_Details
				{
						displayname = "Task Quote Details"
						content = {"layout":"1","isFooterEnabled":false,"mainLayout":[{"elements":[{"type":"text","element":{"id":"elem_1492d3aae90","fields":[],"content":"<div>\n  <h1 style=\"text-align: center;\">\n    <b>Task and Invoice<\/b><\/h1>\n  <div>\n    <br /><\/div><\/div>"}},{"type":"text","element":{}}],"id":1}],"resize":"A4","templateStyle":"text-align: left; width: 1122.5px; margin: 0px auto; border: 5px solid rgb(245, 218, 218); padding: 4px;","isHeaderEnabled":false}
				}
			}
		}
		form Project_Actions
		{
			displayname = "Project Actions"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				displayname = "Go to Project"
				values  = Project.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				Add_Milestone
				(
   					type = button
   					displayname = "Add Milestone"
				)
				Generate_Quote
				(
   					type = button
   					displayname = "Generate Quote"
				)
				Generate_Invoice
				(
   					type = button
   					displayname = "Generate Invoice"
				)
			}
		}
		form Hourly_Rate
		{
			displayname = "Hourly Rate"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Hourly_Rate
			(
				displayname = "Hourly Rate"
				type = USD
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Invoice
		{
			displayname = "Add Invoice"
			success message = "Invoice Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Project
			(
				type = picklist
				values  = Project.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Customer
			(
				type = picklist
				values  = Company.ID
    			displayformat = [Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Contacts
			(
				type = list
				values  = Contact.ID
    			displayformat = [Name.first_name + " " + Name.last_name + " - " + Email]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Hourly_Rate
			(
				type = picklist
				displayname = "Hourly Rate"
				values  = Hourly_Rate.ID
    			displayformat = [Hourly_Rate]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_field
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Due_Date
			(
    			type = date
				displayname = "Due Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Timesheets
			(
				type = grid
				values  = Timesheet.ID
    			bidirectional = Invoice
				defaultrow = 1
				auto width = false
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"Pending", "Paid", "Canceled"}
				initial value = "Pending"
				private = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Total_Hours
			(
				type = decimal
				displayname = "Total Hours"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Related_Quote
			(
				type = picklist
				displayname = "Related Quote"
				values  = Quote.ID
    			displayformat = [QuoteID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Project_Cost
			(
				displayname = "Total Amount"
				type = USD
				decimalplace = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			Invoice_Number
			(
    			type = autonumber
				displayname = "Invoice Number"
				start index = 1
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Reminded
			(
    			type = checkbox
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Employee
		{
			displayname = "Add Employee"
			success message = "Employee Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Employee_Type
			(
				type = radiobuttons
				displayname = "Employee Type"
				values = {"Employee", "Manager"}
				initial value = "Employee"
				layout = 2
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Employee_ID
			(
    			type = autonumber
				displayname = "Employee ID"
				start index = 1
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			Related_Manager
			(
				type = picklist
				displayname = "Related Manager"
				values  = Manager.ID
    			bidirectional = Related_Employee
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Employee_ID_Custom
			(
    			type = text
				displayname = "Employee ID (Custom)"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Managers_Name
			(
				type = picklist
				displayname = "Reporting to"
				values  = Manager.ID
    			bidirectional = Reporting_Employees
    			displayformat = [Name.first_name + " " + Name.last_name]
				allow new entries = true
				[
					displayname = "Add New"
				]
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Status
			(
				type = picklist
				values = {"Active", "Inactive"}
				initial value = "Active"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Manager
		{
			displayname = "Add Manager"
			success message = "Manager Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have unique Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Status
			(
				type = picklist
				values = {"Active", "Inactive"}
				initial value = "Active"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Reporting_Employees
			(
				type = list
				displayname = "Reporting Employees"
				values  = Employee.ID
    			bidirectional = Managers_Name
    			displayformat = [Name.first_name + " " + Name.last_name]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project.ID
    			bidirectional = Manager
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Related_Employee
			(
				type = picklist
				displayname = "Related Employee"
				values  = Employee.ID
    			bidirectional = Related_Manager
    			displayformat = [Name.first_name + " " + Name.last_name]
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Close_Project
		{
			displayname = "Close Project"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Alert
			(
    			type = plaintext
				value = "Do you want to close this Project ?"
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				Close
				(
   					type = button
   					displayname = "Close"
				)
			}
		}
		form Comments
		{
			success message = "Comments Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Requirement
			(
				type = picklist
				values  = Requirement.ID
    			bidirectional = Comments
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Task
			(
				type = picklist
				values  = Task.ID
    			bidirectional = Comments
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Issue
			(
				type = picklist
				values  = Issues.ID
    			bidirectional = Comments
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Comments
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Timesheet
		{
			displayname = "Add Timesheet"
			success message = "Timesheet Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Project
			(
				type = picklist
				values  = Project[Owner.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid].ID
    			bidirectional = Timesheets
    			displayformat = [Title]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Milestone
			(
				type = picklist
				values  = MileStones[Project == input.Project].ID
    			displayformat = [Title]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Requirement
			(
				type = picklist
				values  = Requirement.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Task
			(
				type = picklist
				values  = Task[MileStone == input.Milestone].ID
    			displayformat = [Title]
				allow new entries = true
				[
					displayname = "Add New"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Comments
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Invoice
			(
				type = picklist
				values  = Invoice.ID
    			bidirectional = Timesheets
    			displayformat = [ID]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Quote
			(
				type = picklist
				values  = Quote.ID
    			displayformat = [Expected_Cost]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Manager
			(
				type = picklist
				values  = Manager.ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Employee
			(
				type = picklist
				values  = Employee[Managers_Name == input.Manager].ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Start_Time
			(
    			type = datetime
				displayname = "Start Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			End_Time
			(
    			type = datetime
				displayname = "End Time"
				timedisplayoptions = "hh:mm:ss"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Hours
			(
				type = decimal
				maxchar = 9
				initial value = 0.0
				decimalplace = 1
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"Pending", "Approved", "Rejected"}
				initial value = "Pending"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Billable
			(
    			type = checkbox
				initial value = true
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Invoiced
			(
    			type = checkbox
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Approved
			(
    			type = checkbox
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Company
			(
				type = picklist
				values  = Company.ID
    			displayformat = [Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Contact
			(
				type = picklist
				values  = Contact.ID
    			displayformat = [Email]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Auto_Number
			(
    			type = autonumber
				displayname = "Auto Number"
				start index = 1
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Project_Issues
		{
			displayName = "Project Issues"
   			hide = true
			show all rows from Issues    
			(
				Project
				(
					view = My_Company_Projects
				)
				custom action "View Issue"
				(
	  			workflow = View_Issue2
				column header = "View Issue"
				success message = ""
				)
				Task
				(
					view = My_Tasks
				)
				Title
				Description as "Comment"
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
				Status
			)
			filters
			(
				"New"  :  Status == "New"
				"In Progress"  :  Status == "In Progress"
				"Closed"  :  Status == "Closed"
			)
			group by
			(
				Project ascending
				Task ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#990099;"
				}
				"Closed"
				{
				condition = (Status == "Closed")
				fields = [Status]
				format = "font-weight:bold;color:#007d13;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View Issue"
							Project
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View Issue"
							Project
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary Manager_s_Profile
		{
			displayName = "Manager's Profile"
   			hide = true
			show all rows from Manager  [Email == zoho.loginuserid]  
			(
				Email
				Reporting_Employees as "Reporting Employees"
			)
			options
			(
				display rows = 1
				display records per row = 2
				icon = "ui-2-grid-49"
			)
			permission
			(
				edit = true
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Email
							Reporting_Employees as "Reporting Employees"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Email
							Reporting_Employees as "Reporting Employees"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Project_Tasks
		{
			displayName = "Project Tasks"
   			hide = true
			show all rows from Task    
			(
				Requirement
				(
					view = Project_Requirements
				)
				custom action "View"
				(
	  			workflow = View_Task5
				column header = "View"
				success message = ""
				)
				Title
				Due_Date as "Due Date"
				Status
				Project
				(
					view = My_Company_Projects
				)
			)
			filters
			(
				Status
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#0022ff;"
				}
				"Ready For Test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#a0c92f;"
				}
				"Need Info"
				{
				condition = (Status == "Need Info")
				fields = [Status]
				format = "font-weight:bold;color:#750075;"
				}
				"Closed"
				{
				condition = (Status == "Closed")
				fields = [Status]
				format = "font-weight:bold;color:#225c00;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Requirement
							Title
							Due_Date as "Due Date"
							Status
							Project
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Requirement
							Title
							Due_Date as "Due Date"
							Status
							Project
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Hide_Portions
	{
		displayname= "Hide Portions"
		hide = true
		icon = "ui-2-menu-bold"
		form Project_Settings
		{
			displayname = "Project Settings Form"
			success message = "Data Added Successfully!"
			field alignment = top
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Enable_Attachments
			(
    			type = checkbox
				displayname = "Enable Attachments"
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
			plain
			(
    			type = plaintext
				value = "<b><font color=\"#000099\">Notification</font></b>"
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Enable_Notification
			(
    			type = checkbox
				displayname = "Enable Notification"
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Notify_Employee
			(
				type = checkboxes
				displayname = "Notify Employee when"
				values = {"Project is assigned", "Requirement is assigned", "Task is assigned", "Issue is assigned", "Timesheet is approval"}
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Notify_Manager
			(
				type = checkboxes
				displayname = "Notify Manager when"
				values = {"Project is assigned", "Requirement is assigned", "Task is assigned", "Issue is assigned", "Timesheet is added"}
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Notify_Customer
			(
				type = checkboxes
				displayname = "Notify Customer When"
				values = {"Project is Created", "Requirement is Created", "Task is Created", "Issue is Created", "Timesheet is Created"}
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Send_Notification_Emails_to
			(
    			type = email
				displayname = "Send all nofitications to"
				maxchar = 254
	 			row = 1
	 			column = 1   
				width = medium
			)
			plain1
			(
    			type = plaintext
				value = "<b><font color=\"#000099\">Portal</font></b>"
	 			row = 1
	 			column = 1   
				width = 300px
			)
			Customer_Portal_Url
			(
    			type = text
				displayname = "Customer Portal Url"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Enable_Portal
			(
    			type = checkbox
				displayname = "Enable Portal"
				initial value = false
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		properties
		{
			total entries
			{
				allowed count = 1
			}
		}
		}
		list Timesheets
		{
			displayName = "Project Timesheets"
   			hide = true
			show all rows from Timesheet    
			(
				Manager
				(
					view = All_Managers
				)
				custom action "Approve"
				(
	  			workflow = Approve4
				column header = "Approve"
				success message = ""
				condition = (Approved == false)
				)
				Employee
				(
					view = All_Employees
				)
				Project
				(
					view = All_Projects
				)
				Task
				(
					view = Project_Tasks
				)
				Requirement
				(
					view = Project_Requirements
				)
				Milestone
				(
					view = All_MileStones
				)
				Start_Time as "Start Time"
				End_Time as "End Time"
				Hours
				Status
			)
			filters
			(
				"Pending"  :  Status == "Pending"
				"Approved"  :  Status == "Approved"
				"Rejected"  :  Status == "Rejected"
			)
			group by
			(
				Project ascending
				Milestone ascending
				Requirement ascending
				Task ascending
			)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#3300ff;"
				}
				"Approved"
				{
				condition = (Status == "Approved")
				fields = [Status]
				format = "font-weight:bold;color:#15ff00;"
				}
				"Rejected"
				{
				condition = (Status == "Rejected")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Approve"
							Manager
							Employee
							Project
							Task
							Requirement
							Milestone
							Start_Time as "Start Time"
							End_Time as "End Time"
							Hours
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Approve"
							Manager
							Employee
							Project
							Task
							Requirement
							Milestone
							Start_Time as "Start Time"
							End_Time as "End Time"
							Hours
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Pay_Invoice_Report
		{
			displayName = "Pay Invoice Report"
   			hide = true
			show all rows from Pay_Invoice    
			(
				Invoice as "Invoice No"
				(
					view = My_Company_Invoices
				)
				Amount
				Item
				ZC_Payment.payment_id as "Payment"
				(
					view = Paypal_WPS_History_View
				)
				Quantity
				Project
				(
					view = My_Company_Projects
				)
			)
			group by
			(
				Project ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Invoice as "Invoice No"
							Amount
							Item
							Quantity
							Project
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Invoice as "Invoice No"
							Amount
							Item
							ZC_Payment.payment_id as "Payment"
							Quantity
							Project
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Company_Requirement
		{
			displayName = "My Company Requirement"
   			hide = true
			show all rows from Requirement  [Company.Primary_Email == zoho.loginuserid]  
			(
				Project
				custom action "View"
				(
	  			workflow = View18
				column header = "View"
				success message = ""
				)
				MileStone
				Title
				Expected_Hours as "Expected Hours"
				Manager
				Owner
				Status
			)
			filters
			(
				Status
			)
			group by
			(
				Project ascending
				MileStone ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"InProgress"
				{
				condition = (Status == "InProgress")
				fields = [Status]
				format = "font-weight:bold;color:#1f00d1;"
				}
				"Ready For Test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#208000;"
				}
				"Need Info"
				{
				condition = (Status == "Need Info")
				fields = [Status]
				format = "font-weight:bold;color:#b800b8;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Title
							Expected_Hours as "Expected Hours"
							Manager
							Owner
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Title
							Expected_Hours as "Expected Hours"
							Manager
							Owner
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list My_Requirements
		{
			displayName = "My Requirements"
   			hide = true
			show all rows from Requirement  [Followers.Email == zoho.loginuserid || Manager.Email == zoho.loginuserid || Owner.Email == zoho.loginuserid]  
			(
				Project
				(
					view = All_Projects
				)
				custom action "View"
				(
	  			workflow = View19
				column header = "View"
				success message = ""
				)
				Company
				(
					view = All_Companies
				)
				Title
				MileStone
				(
					view = All_MileStones
				)
				Expected_Hours as "Expected Hours"
				(
					display = total	
				)
				Status
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
			)
			filters
			(
				Status
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"InProgress"
				{
				condition = (Status == "InProgress")
				fields = [Status]
				format = "font-weight:bold;color:#000dff;"
				}
				"Ready For Test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#5a7500;"
				}
				"Need Info"
				{
				condition = (Status == "Need Info")
				fields = [Status]
				format = "font-weight:bold;color:#c200c2;"
				}
				"Closed"
				{
				condition = (Status == "Closed")
				fields = [Status]
				format = "font-weight:bold;color:#22ff00;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Company
							Title
							MileStone
							Expected_Hours as "Expected Hours"
							Status
							Manager
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Company
							Title
							MileStone
							Expected_Hours as "Expected Hours"
							Status
							Manager
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Task_for_Interface
		{
			displayName = "Task for Interface"
   			hide = true
			show all rows from Task    
			(
				Project
				custom action "View"
				(
	  			workflow = View_Task6
				column header = "View"
				success message = ""
				)
				Requirement
				Title
				Due_Date as "Due Date"
				Status
				Manager
				Owner
			)
			filters
			(
				Status
			)
			group by
			(
				Project ascending
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Requirement
							Title
							Due_Date as "Due Date"
							Status
							Manager
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Requirement
							Title
							Due_Date as "Due Date"
							Status
							Manager
							Owner
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Timesheet_for_Task_Interface
		{
			displayName = "Timesheet for (Task)Interface"
   			hide = true
			show all rows from Timesheet    
			(
				Project
				Requirement
				Task
				Start_Time as "Start Time"
				Invoiced
				End_Time as "End Time"
				Employee
				Status
			)
			filters
			(
				"Pending"  :  Status == "Pending"
				"Approved"  :  Status == "Approved"
				"Rejected"  :  Status == "Rejected"
			)
			group by
			(
				Project ascending
				Requirement ascending
				Task ascending
			)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#3300ff;"
				}
				"Approved"
				{
				condition = (Status == "Approved")
				fields = [Status]
				format = "font-weight:bold;color:#15ff00;"
				}
				"Rejected"
				{
				condition = (Status == "Rejected")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							Requirement
							Task
							Start_Time as "Start Time"
							Invoiced
							End_Time as "End Time"
							Employee
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							Requirement
							Task
							Start_Time as "Start Time"
							Invoiced
							End_Time as "End Time"
							Employee
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Timesheet_in_Task
		{
			displayName = "Timesheet in Task"
   			hide = true
			show all rows from Timesheet    
			(
				Project
				Milestone
				Requirement
				Task
				Comments as "Comment"
				Manager
				Employee
				Start_Time as "Start Time"
				End_Time as "End Time"
				Status
				Billable
				Invoiced
				Approved
				Auto_Number as "Auto Number"
			)
			filters
			(
				"Pending"  :  Status == "Pending"
				"Approved"  :  Status == "Approved"
				"Rejected"  :  Status == "Rejected"
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#3300ff;"
				}
				"Approved"
				{
				condition = (Status == "Approved")
				fields = [Status]
				format = "font-weight:bold;color:#15ff00;"
				}
				"Rejected"
				{
				condition = (Status == "Rejected")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							Milestone
							Requirement
							Task
							Comments as "Comment"
							Manager
							Employee
							Start_Time as "Start Time"
							End_Time as "End Time"
							Status
							Billable
							Invoiced
							Approved
							Auto_Number as "Auto Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							Milestone
							Requirement
							Task
							Comments as "Comment"
							Manager
							Employee
							Start_Time as "Start Time"
							End_Time as "End Time"
							Status
							Billable
							Invoiced
							Approved
							Auto_Number as "Auto Number"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Comments_Report
		{
			displayName = "Comments"
   			hide = true
			show all rows from Comments    
			(
				Comments as "Add Comment"
				Issue
				Added_User as "Added User"
				Added_Time as "Added Time"
				Requirement
				Task
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Comments as "Add Comment"
							Issue
							Added_User as "Added User"
							Added_Time as "Added Time"
							Requirement
							Task
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Comments as "Add Comment"
							Issue
							Added_User as "Added User"
							Added_Time as "Added Time"
							Requirement
							Task
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Contacts_Section1
	{
		displayname= "Contacts"
		icon = "users-multiple-11"
		list Active_Companies
		{
			displayName = "Active Companies"
			show all rows from Company  [Project is not null && Project.Status == "Open" || Project.Status == "Pending"]  
			(
				Name
				custom action "Generate Invoice"
				(
	  			workflow = Generate_Invoice
				column header = "Generate Invoice"
				success message = ""
				)
				Primary_Email as "Primary Email"
				Project as "Projects"
			)
			options
			(
				icon = "business-building"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Generate Invoice"
							Name
							Primary_Email as "Primary Email"
							Project as "Projects"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Generate Invoice"
							Name
							Primary_Email as "Primary Email"
							Project as "Projects"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Companies
		{
			displayName = "All Companies"
			show all rows from Company    
			(
				Name
				Primary_Email as "Primary Email"
				custom action "Generate Invoice"
				(
	  			workflow = Generate_Invoice1
				column header = "Generate Invoice"
				success message = ""
				)
				Project as "Projects"
			)
			options
			(
				icon = "travel-temple-02"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"Generate Invoice"
							Name
							Primary_Email as "Primary Email"
							Project as "Projects"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"Generate Invoice"
							Name
							Primary_Email as "Primary Email"
							Project as "Projects"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Contacts
		{
			displayName = "All Contacts"
			show all rows from Contact    
			(
				Email
				Company
				(
					view = All_Companies
				)
			)
			options
			(
				icon = "users-2-contacts-45"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Email
							Company
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Email
							Company
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Interfaces
	{
		hide = true
		icon = "ui-2-menu-bold"
				 page Project_Interface(projectIDStr) 
	 	 { 
 	 	 displayname = "Project Interface" 

 	 	 icon = "" 

 	 	 hide =  true
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Project_Interface1'>\n\t<![CDATA[htmlpage Project_Interface1(projectIDStr)\ncontent\n&lt;%{\n\tif(input.projectIDStr != null &amp;&amp; input.projectIDStr != &quot;&quot;)\n\t{\n\t\t\/\/Project Interface\n\t\tprojID = projectIDStr.toLong();\n\t\tproject = Project[ID = projID];\n\t\t%&gt;\n&lt;style&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;%=thisapp.style.home()%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;%=thisapp.style.projectHistory()%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\th1,h2,h3\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-weight:bold;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t*.zc-formbutton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: #333!important;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-size: 11px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-family: Arial;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-weight: normal;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: #cdcdcd;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-image:url(\/creator\/live\/images\/bg_action_menu_t4c4.png);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-top: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-left: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-bottom: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 3px 11px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical-align: middle;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: 5px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext-shadow: 0 1px 0 #fff;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbox-shadow: 0 1px 0 rgba(255,255,255,0.5);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-radius: 3px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.leftside \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: auto;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 30%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 5px solid whitesmoke;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: #FFFFFF;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.rightside \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth:65%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 2pxsolid trasnparent;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: whitesmoke;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat:left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding:5px 15px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: 0px 0px 20px 0px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.content \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 95%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 2px solid trasnparent;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: whitesmoke;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 5px 15px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: 1px 0px 20px 0px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.container\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 99%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmax-width: 1000px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: auto;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-top: 20px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.box-content .view-header\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight: initial;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/style&gt;          \n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class =&quot;container&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;leftside&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style=&quot;text-align:center;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style=&quot;text-align:center;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;&lt;h3 style=&quot;text-align:center; margin-bottom:5px;&quot;&gt;&lt;%=ifnull(project.Title,&quot;&quot;)%&gt;&lt;\/h3&gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer() &amp;&amp; !thisapp.user.isEmployee())\n\t\t{\n\t\t\t%&gt;\n&lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Project?recLinkID=&lt;%=project.ID%&gt;&amp;viewLinkName=All_Projects&quot; target=&quot;new window&quot;&gt;&lt;span&gt;Edit Project&lt;\/span&gt;&lt;\/a&gt;\n&lt;%\n\t\t\tif(!thisapp.user.isManager())\n\t\t\t{\n\t\t\t\tif(project.Status != &quot;Completed&quot;)\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Close_Project?zc_LoadIn=dialog&amp;zc_Header=false&amp;Project=&lt;%=project.ID%&gt;&quot;&gt;&lt;span&gt;Close Project&lt;\/span&gt;&lt;\/a&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; style=&quot;text-align:center;&quot;&gt;\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table border=&quot;0px&quot; style=&quot;font-size:small&quot;&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt; Start Date&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp;&lt;%=if(project.Start_Date == null,&quot;&quot;,project.Start_Date.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt; Due Date &lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp; &lt;%=if(project.Expected_End_Date == null,&quot;&quot;,project.Expected_End_Date.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;End Date &lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp;&lt;%=if(project.End_Date == null,&quot;&quot;,project.End_Date.toString(&quot;dd-MMM-yyyy&quot;))%&gt; &lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\tif(!thisapp.user.isEmployee() &amp;&amp; !thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Expected Hours&lt;\/td&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp;&lt;%=ifnull(project.Expected_Hours,0.0)%&gt; &lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Expected Revenue&lt;\/td&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp;&lt;%=ifnull(project.Expected_Revenue,0.0)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Revenue&lt;\/td&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp;&lt;%=ifnull(project.Revenue,0.0)%&gt; &lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;&lt;b&gt;Project Status&lt;\/b&gt;&lt;\/td&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp;&lt;b&gt;&lt;%=ifnull(project.Status,&quot;&quot;)%&gt;&lt;\/b&gt; &lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\tif(!thisapp.user.isEmployee())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box&quot;&gt;\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot; style=&quot;text-align:center;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;h3 style=&quot;text-align:center&quot;&gt;Customer&lt;\/h3&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table style=&quot;font-size:small&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Customer&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp;&lt;%=ifnull(project.Company.Name,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt; Email&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp;&lt;%=ifnull(project.Company.Primary_Email,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt; Mobile&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp;&lt;%=ifnull(project.Company.Phone,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;&lt;h3 style=&quot;text-align:center&quot;&gt;Contacts&lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Contact?zc_LoadIn=dialog&amp;zc_Header=false&amp;Company=&lt;%=project.Company%&gt;&amp;Project=&lt;%=project.ID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;&lt;\/h3&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; style=&quot;text-align:center;&quot;&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table style=&quot;font-size:small&quot;&gt;\n&lt;%\n\t\t\tfor each  projCont in project.Contacts\n\t\t\t{\n\t\t\t\tcon = Contact[ID == projCont];\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%&quot;&gt;&lt;%=con.Name%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt; :&amp;nbsp; &lt;%=con.Email%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tfor each  cont in Contact[Project == project.ID]\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;&lt;%=cont.Name%&gt;&lt;\/td&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp; &lt;%=cont.Email%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/table&gt;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;div class=&quot;box&quot;&gt;\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot; style=&quot;text-align:center;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;h3 style=&quot;text-align:center&quot;&gt;Users&lt;\/h3&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table style=&quot;font-size:small&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt;Manager&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp;&lt;%=ifnull(project.Manager.Name,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;color:black;margin:5%;&quot;&gt; Owner&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp;&lt;%=ifnull(project.Owner.Name,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;vertical-align:top;color:black;margin:5%;&quot;&gt;  Followers&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td&gt;:&amp;nbsp;\n&lt;%\n\t\tfor each  followers in project.Followers\n\t\t{\n\t\t\tflwr = Employee[ID == followers];\n\t\t\t%&gt;\n&lt;%=ifnull(flwr.Name,&quot;&quot;)%&gt;&lt;\/br &gt;&amp;nbsp;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class =&quot;rightside&quot;&gt;           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;content&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;coursetitle&quot; &gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer() &amp;&amp; !thisapp.user.isEmployee() &amp;&amp; !thisapp.user.isManager())\n\t\t{\n\t\t\t%&gt;\n&lt;div align=&quot;center&quot; class=&quot;enroll&quot; elName=&apos;zc-component&apos;  formLinkName=&apos;Project_Actions&apos; params=&apos;zc_Header=false&amp;Project=&lt;%=projID%&gt;&apos; &gt;Loading Project Actions...\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Description\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; &apos;&gt;&lt;p style=&quot;color:#CC0066; text-align:center&quot;&gt;&lt;small&gt;&lt;%=ifnull(project.Description,&quot;&quot;)%&gt;&lt;\/small&gt;&lt;\/p&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Requirements &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Requirement?zc_LoadIn=dialog&amp;zc_Header=false&amp;Project=&lt;%=project.ID%&gt;&amp;Company=&lt;%=project.Company%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt; &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Add_bulk?zc_LoadIn=dialog&amp;zc_Header=false&amp;Project=&lt;%=project.ID%&gt;&amp;Type=Requirement&amp;Company=&lt;%=project.Company%&gt;&quot;&gt;&lt;span&gt;Add Bulk&lt;\/span&gt;&lt;\/a&gt; &lt;\/div&gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;Project_Requirements&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Requirements...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Requirement&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Requirements...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Tasks &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Task?zc_LoadIn=dialog&amp;zc_Header=false&amp;Project=&lt;%=projID%&gt;&amp;Company=&lt;%=project.Company%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;&lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Add_bulk?zc_LoadIn=dialog&amp;zc_Header=false&amp;Project=&lt;%=project.ID%&gt;&amp;Type=Task&amp;Company=&lt;%=project.Company%&gt;&quot;&gt;&lt;span&gt;Add Bulk&lt;\/span&gt;&lt;\/a&gt; &lt;\/div&gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;Project_Tasks&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Tasks...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Tasks&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Tasks...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Issues \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Issues?zc_LoadIn=dialog&amp;zc_Header=false&amp;Project=&lt;%=projID%&gt;&amp;Company=&lt;%=project.Company%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;&lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Add_bulk?zc_LoadIn=dialog&amp;zc_Header=false&amp;Project=&lt;%=project.ID%&gt;&amp;Type=Issues&amp;Company=&lt;%=project.Company%&gt;&quot;&gt;&lt;span&gt;Add Bulk&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;Project_Issues&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Issues...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Issues&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Issues...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\tif(thisapp.settings.enableAttachments())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Files\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Add_File?zc_LoadIn=dialog&amp;zc_Header=false&amp;Project=&lt;%=projID%&gt;&amp;Company=&lt;%=project.Company%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t\tif(!thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;All_Files&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos; &gt;Loading Files...&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Files&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos; &gt;Loading Files...&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Notes &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Notes?zc_LoadIn=dialog&amp;zc_Header=false&amp;Project=&lt;%=projID%&gt;&amp;Company=&lt;%=project.Company%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;All_Notes&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos; &gt;Loading Notes...&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Meetings\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Project_Meeting?zc_LoadIn=dialog&amp;zc_Header=false&amp;Company=&lt;%=project.Company%&gt;&amp;Project=&lt;%=projID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;Project_Meetings&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Meetings...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Meetings&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Meetings...&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\tif(!thisapp.user.isEmployee())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Quotes&lt;\/div&gt;\n&lt;%\n\t\t\tif(!thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;Project_Quotes&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Quotes...&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Quotes&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Quotes...&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Timesheets  &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Timesheet?zc_LoadIn=dialog&amp;zc_Header=false&amp;Project=&lt;%=projID%&gt;&amp;Company=&lt;%=project.Company%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;Timesheets&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&amp;&apos;&gt;Loading Time Sheets...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Timesheets &lt;\/div&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Timesheets&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Time Sheets...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt;\n&lt;%\n\t\tif(!thisapp.user.isEmployee())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Invoices&lt;\/div&gt;\n&lt;%\n\t\t\tif(!thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;All_Invoices_Views&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Invoices...\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;  elName=&apos;zc-component&apos; viewLinkName=&apos;My_Company_Invoices&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&apos;&gt;Loading Invoices...\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page View_Details(type,idStr) 
	 	 { 
 	 	 displayname = "View Details" 

 	 	 icon = "" 

 	 	 hide =  true
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='View_Details1'>\n\t<![CDATA[htmlpage View_Details1(type,idStr)\ncontent\n&lt;%{\n\t%&gt;\n&lt;style&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  &lt;%=thisapp.style.home()%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  &lt;%=thisapp.style.viewDetails()%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t*.zc-formbutton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: #333!important;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-size: 11px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-family: Arial;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-weight: normal;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: #cdcdcd;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-image:url(\/creator\/live\/images\/bg_action_menu_t4c4.png);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-top: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-left: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-bottom: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 3px 11px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical-align: middle;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: 5px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext-shadow: 0 1px 0 #fff;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbox-shadow: 0 1px 0 rgba(255,255,255,0.5);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-radius: 3px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.row-fluid .span2 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 15px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 48%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/style&gt;\n&lt;%\n\tif(input.idStr != null &amp;&amp; input.idStr != &quot;&quot; &amp;&amp; input.type != null &amp;&amp; input.type != null)\n\t{\n\t\t\/\/Requirement Interface\n\t\tif(input.type == &quot;tList&quot;)\n\t\t{\n\t\t\ttListID = idStr.toLong();\n\t\t\trequirement = Requirement[ID = tListID];\n\t\t\tmsID = requirement.MileStone;\n\t\t\tthisUrl = &quot;#View:View_Details?type=tList&amp;idStr=&quot;;\n\t\t\tnextNavigation = thisUrl + thisapp.navigation.nextReqID(requirement);\n\t\t\tprevnaviagtion = thisUrl + thisapp.navigation.prevReqID(requirement);\n\t\t\t%&gt;\n&lt;div class=&quot;container&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t&lt;div class=&quot;sidebar&quot; style=&quot;width: 26%;&quot;&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t&lt;div style=&quot;text-align:center;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;title&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;\t\t&lt;a href=&quot;#View:Project_Interface?projectIDStr=&lt;%=requirement.Project%&gt;&quot;&gt;&lt;h3&gt;&lt;%=ifnull(requirement.Project.Title,&quot;&quot;)%&gt;&lt;\/h3&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;secwrap&quot;&gt;\n&lt;%\n\t\t\tif(!thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div formLinkName=&apos;Requirement_Actions&apos; style=&quot;WIDTH=26 HEIGHT=26&quot; elName=&apos;zc-component&apos; formLinkName=&apos;Requirement_Actions&apos; params=&apos;Requirement=&lt;%=requirement.ID%&gt;&amp;Project=&lt;%=requirement.Project%&gt;&amp;MileStones=&lt;%=msID%&gt;&amp;zc_Header=false&amp;header=false&apos;User_Defined_Fields=&apos;status &amp; Assign_to&apos; label&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;content&quot;style=&quot;width: 69%;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span2&quot;&gt;\t  \t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;pagination&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a class=&apos;page-numbers&apos; href=&quot;&lt;%=prevnaviagtion%&gt;&quot;&gt;&lt; PREV&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span2&quot;&gt;\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;pagination&quot; style=&quot;float:right;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a class=&apos;page-numbers&apos; href=&quot;&lt;%=nextNavigation%&gt;&quot;&gt;NEXT &gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class = &quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n&lt;%\n\t\t\tif(!thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div class=&quot;box-title&quot;&gt;&lt;%=ifnull(requirement.Title,&quot;&quot;)%&gt;  &lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Requirement?zc_LoadIn=dialog&amp;zc_Header=false&amp;recLinkID=&lt;%=requirement.ID%&gt;&amp;viewLinkName=My_Requirements&quot;&gt;&lt;span&gt;Edit&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div class=&quot;box-title&quot;&gt;&lt;%=ifnull(requirement.Title,&quot;&quot;)%&gt;  &lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Requirement?zc_LoadIn=dialog&amp;zc_Header=false&amp;recLinkID=&lt;%=requirement.ID%&gt;&amp;viewLinkName=My_Company_Requirement&quot;&gt;&lt;span&gt;Edit&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div&gt;&lt;p1&gt;&lt;%=ifnull(requirement.Description,&quot;&quot;)%&gt;&lt;\/p1&gt;&lt;\/div&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style=&quot;margin-top:10px;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Tasks &lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Task?zc_LoadIn=dialog&amp;zc_Header=false&amp;Requirement=&lt;%=requirement.ID%&gt;&amp;Project=&lt;%=requirement.Project%&gt;&amp;Company=&lt;%=requirement.Project.Company%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt; &lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Add_bulk?zc_LoadIn=dialog&amp;zc_Header=false&amp;header=false&amp;Company=&lt;%=requirement.Project.Company%&gt;&amp;Requirement=&lt;%=requirement.ID%&gt;&amp;Project=&lt;%=requirement.Project%&gt;&amp;Type=Task&quot;&gt;&lt;span&gt;Add Bulk&lt;\/span&gt;&lt;\/a&gt;&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;Task_for_Interface&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=requirement.Project.Title%&gt;&amp;Requirement=&lt;%=requirement.Title%&gt;&apos;&gt;Loading Tasks...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class = &quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Comments  &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Comments?zc_LoadIn=dialog&amp;zc_Header=false&amp;Requirement=&lt;%=requirement.ID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div elName=&apos;zc-component&apos; viewLinkName=&apos;Comments_Report&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Requirement=&lt;%=requirement.Title%&gt;&apos;&gt;Loading Comments...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse if(input.type == &quot;task&quot;)\n\t\t{\n\t\t\t\/\/Task Interface\n\t\t\ttaskID = idStr.toLong();\n\t\t\ttask = Task[ID = taskID];\n\t\t\trequirement = Requirement[ID == task.Requirement];\n\t\t\tproject = Project[ID == task.Project];\n\t\t\tms = MileStones[ID == task.MileStone];\n\t\t\tthisUrl = &quot;#View:View_Details?type=task&amp;idStr=&quot;;\n\t\t\tnextNavigation = thisUrl + thisapp.navigation.nextTaskID(task);\n\t\t\tprevnaviagtion = thisUrl + thisapp.navigation.prevTaskID(task);\n\t\t\t%&gt;\n&lt;div class=&quot;sidebar&quot;  style=&quot;width: 26%;&quot;&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div style=&quot;text-align:center;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;tile&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a href=&quot;#View:Project_Interface?projectIDStr=&lt;%=task.Project%&gt;&quot;&gt;&lt;h3&gt;&lt;%=ifnull(task.Project.Title,&quot;&quot;)%&gt;&lt;\/h3&gt;&lt;\/a&gt;  \t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t&lt;div class=&quot;row-fluid&quot; style=&quot;text-align:center;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t&lt;div class=&quot;secwrap&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t&lt;div class=&quot;highlight&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:right;color:black;margin:5%;font-weight: bolder;&quot;&gt;Due Date&amp;nbsp;:&amp;nbsp;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;font-weight: bolder;&quot;&gt;&lt;%=if(task.Due_Date == null,&quot;&quot;,task.Due_Date.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t&lt;\/table&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t\tif(!thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div formLinkName=&apos;Task_Actions&apos; style=&quot;WIDTH=26 HEIGHT=26&quot; elName=&apos;zc-component&apos; formLinkName=&apos;Task_Actions&apos; params=&apos;Task=&lt;%=task.ID%&gt;&amp;Requirement=&lt;%=requirement.ID%&gt;&amp;Project=&lt;%=project.ID%&gt;&amp;MileStones=&lt;%=ms.ID%&gt;&amp;zc_Header=false&amp;header=false&apos; User_Defined_Fields=&apos;status &amp; Assign_to&apos; label&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;content&quot;  style=&quot;width: 69%;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t&lt;div class=&quot;span2&quot;&gt; \t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t&lt;div class=&quot;pagination&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t&lt;a class=&apos;page-numbers&apos; href=&quot;&lt;%=prevnaviagtion%&gt;&quot;&gt;&lt; PREV&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;  \t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span2&quot;&gt;\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;pagination&quot; style=&quot;float:right;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a class=&apos;page-numbers&apos; href=&quot;&lt;%=nextNavigation%&gt;&quot;&gt;NEXT &gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class = &quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n&lt;%\n\t\t\tif(!thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div class=&quot;box-title&quot;&gt;&lt;%=ifnull(task.Title,&quot;&quot;)%&gt; &lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Task?zc_LoadIn=dialog&amp;zc_Header=false&amp;recLinkID=&lt;%=task.ID%&gt;&amp;viewLinkName=My_Tasks&quot;&gt;&lt;span&gt;Edit&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div class=&quot;box-title&quot;&gt;&lt;%=ifnull(task.Title,&quot;&quot;)%&gt; &lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Task?zc_LoadIn=dialog&amp;zc_Header=false&amp;recLinkID=&lt;%=task.ID%&gt;&amp;viewLinkName=My_Company_Tasks&quot;&gt;&lt;span&gt;Edit&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div&gt;&lt;p1&gt;&lt;%=ifnull(task.Description,&quot;&quot;)%&gt;&lt;\/p1&gt;&lt;\/div&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Issues&lt;a class=&quot;zc-formbutton&quot; style=&quot;margin-right:2px;&quot; href=&quot;#Form:Issues?zc_LoadIn=dialog&amp;zc_Header=false&amp;Task=&lt;%=task.ID%&gt;&amp;Requirement=&lt;%=requirement.ID%&gt;&amp;Project=&lt;%=project.ID%&gt;&amp;MileStones=&lt;%=ms.ID%&gt;&amp;Company=&lt;%=task.Project.Company%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt; &lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Add_bulk?zc_LoadIn=dialog&amp;zc_Header=false&amp;header=false&amp;Task=&lt;%=task.ID%&gt;&amp;Company=&lt;%=task.Project.Company%&gt;&amp;Requirement=&lt;%=requirement.ID%&gt;&amp;Project=&lt;%=project.ID%&gt;&amp;MileStones=&lt;%=ms.ID%&gt;&amp;Type=Issues&quot;&gt;&lt;span&gt;Add Bulk&lt;\/span&gt;&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;Issues_Report&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&amp;Requirement=&lt;%=requirement.Title%&gt;&amp;Task=&lt;%=task.Title%&gt;&apos;&gt;Loading Issues...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t\tif(!thisapp.user.isCustomer())\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;TimeSheets&lt;a class=&quot;zc-formbutton&quot;  href=&quot;#Form:Timesheet?zc_LoadIn=dialog&amp;zc_Header=false&amp;Task=&lt;%=task.ID%&gt;&amp;Project=&lt;%=project.ID%&gt;&amp;Company=&lt;%=task.Project.Company%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot; elName=&apos;zc-component&apos; viewLinkName=&apos;Timesheet_for_Task_Interface&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Project=&lt;%=project.Title%&gt;&amp;Task=&lt;%=task.Title%&gt;&apos;&gt;Loading Timesheet...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt;\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class = &quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Comments  &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Comments?zc_LoadIn=dialog&amp;zc_Header=false&amp;Task=&lt;%=task.ID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div elName=&apos;zc-component&apos; viewLinkName=&apos;Comments_Report&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Task=&lt;%=task.Title%&gt;&apos;&gt;Loading Comments...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t  \t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  \t&lt;\/div&gt;\n&lt;%\n\t\t}\n\t}\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Invoice_Interface(invoiceIDStr,compInvIDStr) 
	 	 { 
 	 	 displayname = "Invoice Interface" 

 	 	 icon = "" 

 	 	 hide =  true
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Invoice_Interface1'>\n\t<![CDATA[htmlpage Invoice_Interface1(invoiceIDStr,compInvIDStr)\ncontent\n&lt;%{\n\tif(input.invoiceIDStr != null &amp;&amp; input.invoiceIDStr != &quot;&quot;)\n\t{\n\t\t\/\/Project Invoice\n\t\tinvoiceID = invoiceIDStr.toLong();\n\t\tinvoice = Invoice[ID = invoiceID];\n\t\tproject = Project[ID = invoice.Project];\n\t\t%&gt;\n&lt;style type=&quot;text\/css&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;%=thisapp.style.home()%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t.container\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth:100%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin:auto;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-top:20px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t\t\t.right\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth:65%;border: 2pxsolid trasnparent;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: whitesmoke;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat:left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding:5px 15px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin:1px 0px 20px 0px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-left:32%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t\t\t\t\t*.zc-viewtable \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t { \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth : 100%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-top : none;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right : 1px solid rgb(93,155,215);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder- 1px solid rgb(93,155,215);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-bottom : 1px solid rgb(93,155,215);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t\t\t\t    .zc-viewheader \n\t\t\t\t\t\t\t\t\t\t\t\t             { \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color : rgb(127, 190, 251);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding : 5px 5px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext-align : left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-top : 1px solid rgb(93,155,215);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder- 1px solid rgb(93,155,215);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right : 1px solid rgb(93,155,215);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-bottom : 1px solid rgb(93,155,215);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-image : none;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewheader-height \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \theight : 25px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewrowheader-template \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color : #FAEBD7;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding : 5px 5px;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext-align : left;       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-top :  1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder- 1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right : 1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-bottom : 1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-image : none;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\t\t\t*.zc-viewrow td\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder- none;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder : 1px solid rgb(205,228,249);        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical-align : middle;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhite-space : nowrap;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight : 27px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-size : 12px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding : 3px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewrow td:first-child \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-left: 1px solid transparent;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 1px solid rgb(205,228,249);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewrow td:last-child \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right: 1px solid transparent;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 1px solid rgb(205,228,249);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t*.zc-row-1 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color : rgb(255, 255, 255);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-summarytable-template\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder:1px solid #CFE2A9;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-summary-label-template\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont: 12px Arial, Helvetica, sans-serif;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color :#FAEBD7;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-bottom:1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right:1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight:25px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.row:before,.row:after,.container:before,.container:after \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: table;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent: &quot;&quot;;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-summary-data-template\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont: 12px Arial, Helvetica, sans-serif;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight:25px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color:#FFFFFF;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder:1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.content \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: white;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 5px 15px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: 1px 0px 20px 0px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t@media print\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  .noprint\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvisibility:hidden;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/style&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;container&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t    &lt;div class=&quot;content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t        &lt;div class=&quot;row&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t          &lt;h2 style=&quot;text-align:center&quot;&gt;Invoice&lt;\/h2&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t        &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/n&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/n&gt;  \t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t            &lt;table&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t                &lt;tbody&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t                  &lt;tr height=&quot;20&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t               \t\t &lt;td colspan=&quot;2&quot;&gt;&lt;hr style=&quot;width: 50%;  \/* text-align: center; *\/  margin-left: 25%;&quot; align=&quot;center&quot;&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t &lt;\/td&gt;                    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  &lt;\/tr&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t                &lt;td valign=&quot;top&quot; align=&quot;left&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t                    &lt;table width=&quot;56%&quot; class=&quot;span6&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; class=&quot;zc-summarytable-template&quot; style=&quot;margin-bottom:10px&quot;&gt;         \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;                         \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;35%&quot; class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Customer\tName&lt;\/strong&gt;&lt;\/td&gt;     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;65%&quot; class=&quot;zc-summary-data-template&quot;&gt;&lt;%=ifnull(invoice.Customer.Name,&quot;&quot;)%&gt;&lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                         \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Address &lt;\/strong&gt;&lt;\/td&gt;          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt;&lt;%=ifnull(invoice.Customer.Address,&quot;&quot;)%&gt;&lt;\/td&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                              \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Company Email &lt;\/strong&gt;&lt;\/td&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt; &lt;%=ifnull(invoice.Customer.Primary_Email,&quot;&quot;)%&gt;&lt;\/td&gt;                  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tbody&gt;                      \n\t\t\t\t\t\t\t\t\t\t\t\t                    &lt;\/table&gt;          \n\t\t\t\t\t\t\t\t\t\t\t\t                &lt;\/td&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t                &lt;td valign=&quot;top&quot; align=&quot;right&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t                    &lt;table width=&quot;56%&quot;  class=&quot;span6&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; class=&quot;zc-summarytable-template&quot;&gt;          \n\t\t\t\t\t\t\t\t\t\t\t\t                        &lt;tbody&gt;                          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;35%&quot; class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Invoice #&lt;\/strong&gt;&lt;\/td&gt;     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;65%&quot; class=&quot;zc-summary-data-template&quot;&gt;&lt;%=ifnull(invoice.Invoice_Number,0)%&gt;&lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Invoice Date &lt;\/strong&gt;&lt;\/td&gt;          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt;&lt;%=if(invoice.Date_field == null,&quot;&quot;,invoice.Date_field.toString(&quot;dd-MMM-yyyy&quot;))%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                              \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Due Date &lt;\/strong&gt;&lt;\/td&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt;&lt;%=if(invoice.Due_Date == null,&quot;&quot;,invoice.Due_Date.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;                      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                              \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Related Quote&lt;\/strong&gt;&lt;\/td&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt;&lt;a href=&apos;#View:Quote_Interface?quoteIDStr=&lt;%=invoice.Related_Quote%&gt;&apos;&gt;&lt;%=ifnull(invoice.Related_Quote.QuoteID,0)%&gt;&lt;\/a&gt;&lt;\/td&gt;                      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t                        &lt;\/tbody&gt;                       \n\t\t\t\t\t\t\t\t\t\t\t\t                    &lt;\/table&gt;           \n\t\t\t\t\t\t\t\t\t\t\t\t                &lt;\/td&gt;             \n\t\t\t\t\t\t\t\t\t\t\t\t                &lt;\/tr&gt;              \n\t\t\t\t\t\t\t\t\t\t\t\t                &lt;tr&gt;           \n\t\t\t\t\t\t\t\t\t\t\t\t                    &lt;td valign=&quot;top&quot; style=text-align:&quot;center&quot;&gt; &lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t                &lt;\/tr&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t                &lt;tr&gt;             \n\t\t\t\t\t\t\t\t\t\t\t\t                    &lt;td colspan=&quot;2&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;100%&quot;  class=&quot;span12&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot;&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;thead&gt;                           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Serial No&lt;\/th&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot; align=&quot;center&quot;&gt; Project&lt;\/th&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot; align=&quot;center&quot;&gt;Start Time&lt;\/th&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot; align=&quot;center&quot;&gt;End\tTime&lt;\/th&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot; align=&quot;center&quot;&gt; Hours&lt;\/th&gt;     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot; align=&quot;center&quot;&gt;Cost&lt;\/th&gt;     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\tsno = 0;\n\t\ttmSheetCnt = Timesheet[Invoice == invoiceID].count();\n\t\tfor each  ts in Timesheet[Invoice == invoiceID]\n\t\t{\n\t\t\tsno = sno + 1;\n\t\t\tif(project.Hourly_Rate.Hourly_Rate != null)\n\t\t\t{\n\t\t\t\texpCost = ts.Hours * project.Hourly_Rate.Hourly_Rate;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\texpCost = ifnull(project.Expected_Revenue \/ tmSheetCnt,0.0);\n\t\t\t}\n\t\t\t%&gt;\n&lt;tr class=&quot;zc-viewrow zc-row-1&quot;&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=sno%&gt;&lt;\/td&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=ifnull(ts.Project.Title,&quot;&quot;)%&gt; &lt;\/td&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=if(ts.Start_Time == null,&quot;&quot;,ts.Start_Time.toString(&quot;dd-MMM-yyyy&quot;))%&gt;   &lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=if(ts.End_Time == null,&quot;&quot;,ts.End_Time.toString(&quot;dd-MMM-yyyy&quot;))%&gt;   &lt;\/td&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=ifnull(ts.Hours,0.0)%&gt; &lt;\/td&gt;                    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=ifnull(expCost,0.0)%&gt;  &lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;tr&gt;       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  &lt;td width=&quot;32%&quot; colspan=&quot;6&quot;&gt; &lt;\/td&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/thead&gt;              \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;                    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot;&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;                             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;64%&quot; valign=&quot;top&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table\tborder=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; style=&quot;margin-left:15px;&quot;&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;thead&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;h3&gt;Notes&lt;a style=&quot;margin-left:10px; margin-right:10px; text-decoration:none;&quot;class=&quot;noprint&quot; href=&quot;#Form:Notes?zc_Header=false&amp;zc_LoadIn=dialog&amp;Invoice=&lt;%=invoice.ID%&gt;&quot;&gt;&lt;img src =&apos;https:\/\/css.zohostatic.com\/creator\/live\/images\/add_value_plus_icon_orange.png&apos; width=&apos;11px&apos; height=&apos;11px&apos; &gt;&lt;span class=&quot;noprint&quot;&gt; Add New&lt;\/span&gt;&lt;\/a&gt;  &lt;\/h3&gt;        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/thead&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;\n&lt;%\n\t\tif(Notes[Invoice == invoice.ID].count() &gt; 0)\n\t\t{\n\t\t\tfor each  notes in Notes[Invoice == invoice.ID]\n\t\t\t{\n\t\t\t\tnoteTitle = ifnull(notes.Title,&quot;&quot;);\n\t\t\t\tcomments = notes.Comments;\n\t\t\t\t%&gt;\n&lt;tr&gt;           \n\t\t\t\t\t&lt;td style=&quot;text-align:left;&quot;&gt;&lt;%=ifnull(noteTitle,&quot;&quot;)%&gt;&lt;\/td&gt;&lt;td style=&quot;text-align:left;&quot;&gt;&amp;nbsp;:&amp;nbsp;&lt;%=ifnull(comments,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t}\n\t\t%&gt;\n&lt;\/tbody&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  &lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  &lt;td width=&quot;36%&quot; valign=&quot;top&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot;&gt;\n&lt;%\n\t\ttotProjHour = Timesheet[Invoice == invoiceID].sum(Hours);\n\t\tif(invoice.Hourly_Rate.Hourly_Rate != null &amp;&amp; invoice.Hourly_Rate.Hourly_Rate != 0 &amp;&amp; invoice.Hourly_Rate.Hourly_Rate != 0.0)\n\t\t{\n\t\t\ttotProjAmount = ifnull(totProjHour,0.0) * invoice.Hourly_Rate.Hourly_Rate;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttotProjAmount = ifnull(project.Expected_Revenue,0.0);\n\t\t}\n\t\t%&gt;\n&lt;tbody&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr class=&quot;zc-viewrow zc-row-1&quot;&gt;   \t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;9%&quot; align=&quot;center&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Total Hours&lt;\/td&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;17%&quot; align=&quot;center&quot;&gt;&lt;%=ifnull(totProjHour,0.0)%&gt;&lt;\/td&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;9%&quot; align=&quot;center&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Total Amount&lt;\/td&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;17%&quot; align=&quot;center&quot;&gt;&lt;%=ifnull(totProjAmount,0.0)%&gt;&lt;\/td&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                                        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tbody&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;                          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;                      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t &lt;\/tr&gt;                         \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tbody&gt;                     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;        \n\t\t\t\t\t\t\t\t\t\t\t\t                 &lt;\/td&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t              &lt;\/tr&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t          &lt;\/tbody&gt;        \n\t\t\t\t\t\t\t\t\t\t\t\t      &lt;\/table&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t   &lt;\/div&gt;\n&lt;%\n\t}\n\tif(input.compInvIDStr != null &amp;&amp; input.compInvIDStr != &quot;&quot;)\n\t{\n\t\t\/\/Company Invoice\n\t\tcompanyID = compInvIDStr.toLong();\n\t\tcompany = Company[ID = companyID];\n\t\tinv = Invoice[Customer = company.ID];\n\t\t%&gt;\n&lt;style type=&quot;text\/css&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;%=thisapp.style.home()%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewheader-height \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight : 25px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewrowheader-template \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color : #FAEBD7;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding : 5px 5px;        text-align : left;        border-top :  1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder- 1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right : 1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-bottom : 1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-image : none;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t*.zc-viewrow td\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder- none;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder : 1px solid rgb(205,228,249);        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical-align : middle;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhite-space : nowrap;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight : 27px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-size : 12px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding : 3px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewrow td:first-child\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-left: 1px solid transparent;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 1px solid rgb(205,228,249);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewrow td:last-child\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right: 1px solid transparent;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 1px solid rgb(205,228,249);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t*.zc-row-1 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color:rgb(255, 255, 255);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-summarytable-template\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder:1px solid #CFE2A9;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-summary-label-template\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont: 12px Arial, Helvetica, sans-serif;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color :#FAEBD7;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-bottom:1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right:1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight:25px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.row:before,.row:after,.container:before,.container:after \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: table;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent: &quot;&quot;;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-summary-data-template\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont: 12px Arial, Helvetica, sans-serif;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight:25px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color:#FFFFFF;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder:1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t.content\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: white;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 5px 15px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: 1px 0px 20px 0px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t@media print\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.noprint{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvisibility:hidden;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/style&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;h2 style=&quot;text-align:center&quot;&gt;Invoice&lt;\/h2&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/n&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/n&gt;  \t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr height=&quot;20&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td colspan=&quot;2&quot;&gt;&lt;hr \/&gt;                     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;                    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td valign=&quot;top&quot; align=&quot;left&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;56%&quot; class=&quot;span6&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; class=&quot;zc-summarytable-template&quot; style=&quot;margin-bottom:10px&quot;&gt;         \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;                         \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;35%&quot; class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Customer\tName&lt;\/strong&gt;&lt;\/td&gt;     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;65%&quot; class=&quot;zc-summary-data-template&quot;&gt;&lt;%=ifnull(inv.Customer.Name,&quot;&quot;)%&gt;&lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                         \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Address &lt;\/strong&gt;&lt;\/td&gt;          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt;&lt;%=ifnull(inv.Customer.Address,&quot;&quot;)%&gt;&lt;\/td&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                              \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Company Email &lt;\/strong&gt;&lt;\/td&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt; &lt;%=ifnull(inv.Customer.Primary_Email,&quot;&quot;)%&gt;&lt;\/td&gt;                  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tbody&gt;                      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td valign=&quot;top&quot; align=&quot;right&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;56%&quot;  class=&quot;span6&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; class=&quot;zc-summarytable-template&quot;&gt;          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;                          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;35%&quot; class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Invoice #&lt;\/strong&gt;&lt;\/td&gt;     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;65%&quot; class=&quot;zc-summary-data-template&quot;&gt;&lt;%=ifnull(inv.Invoice_Number,0)%&gt;&lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Invoice Date &lt;\/strong&gt;&lt;\/td&gt;          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt;&lt;%=if(inv.Date_field == null,&quot;&quot;,inv.Date_field.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                              \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Due Date &lt;\/strong&gt;&lt;\/td&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt;&lt;%=if(inv.Due_Date == null,&quot;&quot;,inv.Due_Date.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;                      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tbody&gt;                       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;              \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td valign=&quot;top&quot; style=text-align:&quot;center&quot;&gt; &lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td colspan=&quot;2&quot;&gt; &lt;!--  Requirements list --&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;100%&quot;  class=&quot;span12&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot;&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;thead&gt;                           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Serial No&lt;\/th&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot; align=&quot;center&quot;&gt; Project&lt;\/th&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot; align=&quot;center&quot;&gt;Start Time&lt;\/th&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot; align=&quot;center&quot;&gt;End\tTime&lt;\/th&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot; align=&quot;center&quot;&gt; Hours&lt;\/th&gt;     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot; align=&quot;center&quot;&gt;Cost&lt;\/th&gt;     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\tsno = 0;\n\t\tcmpTmSheetCnt = 0.0;\n\t\tfor each  proj in Project[Company == company.ID]\n\t\t{\n\t\t\tfor each  ts in Timesheet[Project == proj.ID]\n\t\t\t{\n\t\t\t\tcmpTmSheetCnt = cmpTmSheetCnt + 1;\n\t\t\t}\n\t\t}\n\t\tfor each  proj in Project[Company == company.ID]\n\t\t{\n\t\t\thourlyRate = Hourly_Rate[ID == proj.Hourly_Rate].Hourly_Rate;\n\t\t\tfor each  ts in Timesheet[Project == proj.ID]\n\t\t\t{\n\t\t\t\tsno = sno + 1;\n\t\t\t\tif(hourlyRate != null)\n\t\t\t\t{\n\t\t\t\t\texpCost = ts.Hours * hourlyRate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\texpCost = ifnull(proj.Expected_Revenue \/ cmpTmSheetCnt,0.0);\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;tr class=&quot;zc-viewrow zc-row-1&quot;&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=sno%&gt;&lt;\/td&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=ifnull(ts.Project.Title,&quot;&quot;)%&gt; &lt;\/td&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=if(ts.Start_Time == null,&quot;&quot;,ts.Start_Time.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=if(ts.End_Time == null,&quot;&quot;,ts.End_Time.toString(&quot;dd-MMM-yyyy&quot;))%&gt; &lt;\/td&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=ifnull(ts.Hours,0.0)%&gt; &lt;\/td&gt;                    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=ifnull(expCost,0.0)%&gt;  &lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t}\n\t\t%&gt;\n&lt;tr&gt;       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;32%&quot; colspan=&quot;6&quot;&gt; &lt;\/td&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/thead&gt;              \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;                                     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot;&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;                             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;td width=&quot;64%&quot; valign=&quot;top&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table\tborder=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; style=&quot;margin-left:15px;&quot;&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;thead&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;h3&gt;Notes&lt;a style=&quot;margin-left:10px; margin-right:10px; text-decoration:none;&quot;class=&quot;noprint&quot; href=&quot;#Form:Notes?zc_Header=false&amp;zc_LoadIn=dialog&amp;Invoice=&lt;%=inv.ID%&gt;&quot;&gt;&lt;img src =&apos;https:\/\/css.zohostatic.com\/creator\/live\/images\/add_value_plus_icon_orange.png&apos; width=&apos;11px&apos; height=&apos;11px&apos; &gt;&lt;span class=&quot;noprint&quot;&gt; Add New&lt;\/span&gt;&lt;\/a&gt;  &lt;\/h3&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/thead&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;\n&lt;%\n\t\t\tif(Notes[Invoice == inv.ID].count() &gt; 0)\n\t\t\t{\n\t\t\t\tfor each  notes in Notes[Invoice == inv.ID]\n\t\t\t\t{\n\t\t\t\t\tnoteTitle = ifnull(notes.Title,&quot;&quot;);\n\t\t\t\t\tcomments = notes.Comments;\n\t\t\t\t\t%&gt;\n&lt;tr&gt;           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;&quot;&gt;&lt;%=ifnull(noteTitle,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;&quot;&gt;&amp;nbsp;:&amp;nbsp;&lt;%=ifnull(comments,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/tbody&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;td width=&quot;36%&quot; valign=&quot;top&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot;&gt;            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;\n&lt;%\n\t\tfor each  proj in Project[Company == company.ID]\n\t\t{\n\t\t\tfor each  ts in Timesheet[Project == proj.ID]\n\t\t\t{\n\t\t\t\thourlyRate = Hourly_Rate[ID == proj.Hourly_Rate].Hourly_Rate;\n\t\t\t\tif(hourlyRate != null &amp;&amp; hourlyRate != 0 &amp;&amp; hourlyRate != 0.0)\n\t\t\t\t{\n\t\t\t\t\ttotHours = Timesheet[Company == company.ID || Project == proj.ID].sum(Hours);\n\t\t\t\t\ttotAmount = totHours * hourlyRate;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttotAmount = ifnull(proj.Expected_Revenue,0.0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t%&gt;\n&lt;tr class=&quot;zc-viewrow zc-row-1&quot;&gt;                \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;9%&quot; align=&quot;center&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Total Hour&lt;\/td&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;17%&quot; align=&quot;center&quot;&gt;&lt;%=ifnull(totHours,0.0)%&gt;&lt;\/td&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;9%&quot; align=&quot;center&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Total Amount&lt;\/td&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;17%&quot; align=&quot;center&quot;&gt;&lt;%=ifnull(totAmount,0.0)%&gt;&lt;\/td&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                                        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tbody&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;                          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;                      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                         \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tbody&gt;                     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tbody&gt;        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Quote_Interface(quoteIDStr) 
	 	 { 
 	 	 displayname = "Quote Interface" 

 	 	 icon = "" 

 	 	 hide =  true
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Quote_Interface1'>\n\t<![CDATA[htmlpage Quote_Interface1(quoteIDStr)\ncontent\n&lt;%{\n\tif(input.quoteIDStr != null &amp;&amp; input.quoteIDStr != &quot;&quot;)\n\t{\n\t\t\/\/Quote Interface\n\t\tquoteID = quoteIDStr.toLong();\n\t\tquote = Quote[ID = quoteID];\n\t\tproject = Project[ID = quote.Project];\n\t\tcompany = Company[ID = quote.Customer];\n\t\t%&gt;\n&lt;style type=&quot;text\/css&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;%=thisapp.style.home()%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t.container\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth:100%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmax-width:1000px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin:auto;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-top:20px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t*.zc-viewtable \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth : 100%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-top : none;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 1px solid rgb(93,155,215);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewheader \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color : rgb(127, 190, 251);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding : 5px 5px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext-align : left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-top : 1px solid rgb(93,155,215);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-left: 1px solid rgb(93,155,215);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right : 1px solid rgb(93,155,215);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-bottom : 1px solid rgb(93,155,215);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-image : none;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewheader-height \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight : 25px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewrowheader-template \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   background-color : #FAEBD7;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   padding : 5px 5px;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   text-align : left;     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   border : 1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   background-image : none;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\t\t\t*.zc-viewrow td \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder- none;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder : 1px solid rgb(205,228,249);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical-align : middle;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhite-space : nowrap;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight : 27px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-size : 12px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding : 3px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewrow td:first-child\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-left: 1px solid transparent;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 1px solid rgb(205,228,249);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-viewrow td:last-child \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right: 1px solid transparent;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 1px solid rgb(205,228,249);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-summarytable-template\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder:1px solid #CFE2A9;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-summary-label-template\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont: 12px Arial, Helvetica, sans-serif;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color :#FAEBD7;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder:1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight:25px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.row:before,.row:after,.container:before,.container:after \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: table;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent: &quot;&quot;;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.zc-summary-data-template\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont: 12px Arial, Helvetica, sans-serif;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight:25px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color:#FFFFFF;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder:1px solid #DBEBBB;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.content \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: white;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 5px 15px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: 1px 0px 20px 0px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t@media print\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.noprint\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvisibility:hidden;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t            &lt;\/style&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;container&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t          &lt;h2 style=&quot;text-align:center&quot;&gt;Quote&lt;\/h2&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t        &lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/n&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/n&gt;  \t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t            &lt;table&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t                &lt;tbody&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t                  &lt;tr height=&quot;20&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t               \t\t &lt;td colspan=&quot;2&quot;&gt;&lt;hr style=&quot;width: 50%;  \/* text-align: center; *\/  margin-left: 25%;&quot; align=&quot;center&quot;&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t &lt;\/td&gt;                    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  &lt;\/tr&gt;                \t\t\t\t\t\t     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td valign=&quot;top&quot; align=&quot;left&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;56%&quot; class=&quot;span6&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; class=&quot;zc-summarytable-template&quot; style=&quot;margin-bottom:10px&quot;&gt;         \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;                         \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;35%&quot; class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Customer Name&lt;\/strong&gt;&lt;\/td&gt;     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;65%&quot; class=&quot;zc-summary-data-template&quot;&gt;&lt;%=ifnull(company.Name,&quot;&quot;)%&gt;&lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                         \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Address &lt;\/strong&gt;&lt;\/td&gt;          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt;&lt;%=ifnull(company.Address,&quot;&quot;)%&gt;&lt;\/td&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                              \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Company Email &lt;\/strong&gt;&lt;\/td&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt; &lt;%=ifnull(company.Primary_Email,&quot;&quot;)%&gt;&lt;\/td&gt;                  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tbody&gt;                      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;   \t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td valign=&quot;top&quot; align=&quot;right&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;56%&quot;  class=&quot;span6&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; class=&quot;zc-summarytable-template&quot;&gt;          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;                          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;35%&quot; class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Project&lt;\/strong&gt;&lt;\/td&gt;     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;65%&quot; class=&quot;zc-summary-data-template&quot;&gt;&lt;%=ifnull(quote.Project.Title,&quot;&quot;)%&gt;&lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;      \t\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;35%&quot; class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Quote#&lt;\/strong&gt;&lt;\/td&gt;     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;65%&quot; class=&quot;zc-summary-data-template&quot;&gt;&lt;%=ifnull(quote.QuoteID,0)%&gt;&lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                        \t\t\t\t\t\t\t\t\t\t\t                            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                              \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Quote Date &lt;\/strong&gt;&lt;\/td&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt;&lt;%=if(quote.Date_field == null,&quot;&quot;,quote.Date_field.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;                      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                               \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Start Date&lt;\/strong&gt;&lt;\/td&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt;&lt;%=if(project.Start_Date == null,&quot;&quot;,project.Start_Date.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                           \t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                               \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-label-template&quot;&gt;&lt;strong&gt;Expected End Date&lt;\/strong&gt;&lt;\/td&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td class=&quot;zc-summary-data-template&quot;&gt;&lt;%=if(project.Expected_End_Date == null,&quot;&quot;,project.Expected_End_Date.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;                   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tbody&gt;                       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;              \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td valign=&quot;top&quot; align=&quot;right&quot;&gt; &lt;\/td&gt;           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;  \t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td colspan=&quot;2&quot;&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;100%&quot;  class=&quot;span12&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; colspan=&quot;2&quot;&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;thead&gt;                           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Serial No&lt;\/th&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Requirement&lt;\/th&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Hourly Rate&lt;\/th&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Expected Hours&lt;\/th&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;th style=&quot;text-align:center;&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Expected Cost&lt;\/th&gt;\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\tsno = 0;\n\t\ttotExpCost = 0.0;\n\t\tfor each  reqList in Requirement[Project = project.ID]\n\t\t{\n\t\t\tsno = sno + 1;\n\t\t\tif(project.Hourly_Rate != null &amp;&amp; project.Hourly_Rate != 0 &amp;&amp; project.Hourly_Rate != 0.0)\n\t\t\t{\n\t\t\t\texpCost = reqList.Expected_Hours * project.Hourly_Rate.Hourly_Rate;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\texpCost = ifnull(project.Expected_Revenue,0.0);\n\t\t\t}\n\t\t\ttotExpCost = totExpCost + expCost;\n\t\t\t%&gt;\n&lt;tr class=&quot;zc-viewrow zc-row-1&quot;&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=ifnull(sno,0)%&gt;&lt;\/td&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=ifnull(reqList.Title,&quot;&quot;)%&gt; &lt;\/td&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=ifnull(project.Hourly_Rate.Hourly_Rate,0.0)%&gt; &lt;\/td&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=ifnull(reqList.Expected_Hours,0.0)%&gt; &lt;\/td&gt;                        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:center;&quot;&gt;&lt;%=ifnull(expCost,0.0)%&gt; &lt;\/td&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;tr&gt;       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;32%&quot; colspan=&quot;6&quot;&gt; &lt;\/td&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/thead&gt;              \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;                    \t                \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot;&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;                             \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;                           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;64%&quot; valign=&quot;top&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table\tborder=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; style=&quot;margin-left:15px;&quot;&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;thead&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;h3&gt;Notes&lt;a style=&quot;margin-left:10px; margin-right:10px; text-decoration:none;&quot;class=&quot;noprint&quot; href=&quot;#Form:Notes?zc_Header=false&amp;zc_LoadIn=dialog&amp;Quote=&lt;%=quote.ID%&gt;&quot;&gt;&lt;img src =&apos;https:\/\/css.zohostatic.com\/creator\/live\/images\/add_value_plus_icon_orange.png&apos; width=&apos;11px&apos; height=&apos;11px&apos; &gt;&lt;span class=&quot;noprint&quot;&gt; Add New&lt;\/span&gt;&lt;\/a&gt;  &lt;\/h3&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/thead&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;\n&lt;%\n\t\tif(Notes[Quote == quote.ID].count() &gt; 0)\n\t\t{\n\t\t\tfor each  notes in Notes[Quote == quote.ID]\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;           \n\t\t\t\t\t&lt;td style=&quot;text-align:left;&quot;&gt;&lt;%=ifnull(notes.Title,&quot;&quot;)%&gt;&lt;\/td&gt;&lt;td style=&quot;text-align:left;&quot;&gt;&amp;nbsp;:&amp;nbsp;&lt;%=ifnull(notes.Comments,&quot;&quot;)%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t}\n\t\t%&gt;\n&lt;\/tbody&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;36%&quot; valign=&quot;top&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot;&gt;            \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tbody&gt;                                       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr class=&quot;zc-viewrow zc-row-1&quot;&gt;       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;9%&quot; align=&quot;right&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Total Hours&lt;\/td&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;17%&quot; style=&quot;text-align:center;&quot; &gt;&lt;%=ifnull(quote.Expected_Hours,0.0)%&gt;&lt;\/td&gt;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;9%&quot; align=&quot;right&quot; class=&quot;zc-viewrowheader-template&quot;&gt;Total Amount&lt;\/td&gt;      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td width=&quot;17%&quot; style=&quot;text-align:center;&quot; &gt;&lt;%=ifnull(totExpCost,0.0)%&gt;&lt;\/td&gt;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                                        \t\t\t\t\t\t\t\t\t                     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t    &lt;\/tbody&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;                          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;                      \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                         \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tbody&gt;                     \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/td&gt;                 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;                 \t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tbody&gt;        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;  \t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Issues_Interface(issueIDStr) 
	 	 { 
 	 	 displayname = "Issues Interface" 

 	 	 icon = "" 

 	 	 hide =  true
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Issues_Interface1'>\n\t<![CDATA[htmlpage Issues_Interface1(issueIDStr)\ncontent\n&lt;%{\n\tif(input.issueIDStr != null &amp;&amp; input.issueIDStr != &quot;&quot;)\n\t{\n\t\t\/\/Issue Interface\n\t\tissueID = issueIDStr.toLong();\n\t\tissue = Issues[ID = issueID];\n\t\tproject = Project[ID = issue.Project];\n\t\ttask = Task[Project = issue.Project];\n\t\tthisUrl = &quot;#View:Issues_Interface?issueIDStr=&quot;;\n\t\tnextNavigation = thisUrl + thisapp.navigation.nextIssueID(issue);\n\t\tprevnaviagtion = thisUrl + thisapp.navigation.prevIssueID(issue);\n\t\t%&gt;\n&lt;style&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  &lt;%=thisapp.style.home()%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t  &lt;%=thisapp.style.viewDetails()%&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t*.zc-formbutton \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: #333!important;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-size: 11px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-family: Arial;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfont-weight: normal;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: #cdcdcd;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-image:url(\/creator\/live\/images\/bg_action_menu_t4c4.png);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-top: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-left: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-bottom: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-right: 1px solid #a2a2a2;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 3px 11px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvertical-align: middle;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-left: 10px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin-bottom: 5px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext-shadow: 0 1px 0 #fff;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbox-shadow: 0 1px 0 rgba(255,255,255,0.5);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder-radius: 3px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.content \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 69%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin: 0px 0px 0px 0px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground-color: white;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: 10px 15px;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t.row-fluid .span2\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t    padding: 15px;\n\t\t\t\t\t\t\t\t\t\t\t\t    width: 48%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/style&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;container&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;sidebar&quot; style=&quot;width: 26%;&quot;&gt; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div style=&quot;text-align:center;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;title&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a href=&quot;#View:Project_Interface?projectIDStr=&lt;%=project.ID%&gt;&quot;&gt;&lt;h3&gt;&lt;%=ifnull(project.Title,&quot;&quot;)%&gt;&lt;\/h3&gt;&lt;\/div&gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;secwrap&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;highlight&quot; &gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;table&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:right;color:black;margin:5%;font-weight: bolder;&quot;&gt;Start Date&amp;nbsp;:&amp;nbsp;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;font-weight: bolder;&quot;&gt;&lt;%=if(project.Start_Date == null,&quot;&quot;,project.Start_Date.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:right;color:black;margin:5%;font-weight: bolder;&quot;&gt;Due Date &amp;nbsp;:&amp;nbsp;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;font-weight: bolder;&quot;&gt;&lt;%=if(project.Expected_End_Date == null,&quot;&quot;,project.Expected_End_Date.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;tr&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:right;color:black;margin:5%;font-weight: bolder;&quot;&gt;End Date &amp;nbsp;:&amp;nbsp;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;td style=&quot;text-align:left;color:black;margin:5%;font-weight: bolder;&quot;&gt;&lt;%=if(project.End_Date == null,&quot;&quot;,project.End_Date.toString(&quot;dd-MMM-yyyy&quot;))%&gt;&lt;\/td&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/tr&gt;\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/table&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div formLinkName=&apos;Issue_Actions&apos; style=&quot;WIDTH=26 HEIGHT=26&quot; elName=&apos;zc-component&apos; formLinkName=&apos;Issue_Actions&apos; params=&apos;Issues=&lt;%=issue.ID%&gt;&amp;Task=&lt;%=task.ID%&gt;&amp;Project=&lt;%=project%&gt;&amp;zc_Header=false&amp;header=false&apos;User_Defined_Fields=&apos;status &amp; Assign_to&apos; label&gt;&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span2&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;pagination&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a class=&apos;page-numbers&apos; href=&quot;&lt;%=prevnaviagtion%&gt;&quot;&gt;&lt; PREV&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;  \t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;span2&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;pagination&quot; style=&quot;float:right;&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;a class=&apos;page-numbers&apos; href=&quot;&lt;%=nextNavigation%&gt;&quot;&gt;NEXT &gt;&lt;\/a&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class = &quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n&lt;%\n\t\tif(!thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-title&quot;&gt;&lt;%=ifnull(issue.Title,&quot;&quot;)%&gt;  &lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Issues?zc_LoadIn=dialog&amp;zc_Header=false&amp;recLinkID=&lt;%=issue.ID%&gt;&amp;viewLinkName=My_Issues&quot;&gt;&lt;span&gt;Edit&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\tif(thisapp.user.isCustomer())\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;box-title&quot;&gt;&lt;%=ifnull(issue.Title,&quot;&quot;)%&gt;  &lt;a class=&quot;zc-formbutton&quot; href=&quot;#Form:Issues?zc_LoadIn=dialog&amp;zc_Header=false&amp;recLinkID=&lt;%=issue.ID%&gt;&amp;viewLinkName=My_Issues&quot;&gt;&lt;span&gt;Edit&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div&gt;&lt;p1&gt;&lt;%=ifnull(issue.Description,&quot;&quot;)%&gt;&lt;\/p1&gt;&lt;\/div&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class = &quot;row-fluid&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-title&quot;&gt;Comments  &lt;a class=&quot;zc-formbutton&quot;href=&quot;#Form:Comments?zc_LoadIn=dialog&amp;zc_Header=false&amp;Issue=&lt;%=issue.ID%&gt;&quot;&gt;&lt;span&gt;Add&lt;\/span&gt;&lt;\/a&gt;&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div class=&quot;box-content&quot;&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;div elName=&apos;zc-component&apos; viewLinkName=&apos;Comments_Report&apos; params=&apos;zc_Header=false&amp;zc_SecHeader=false&amp;Issue=&lt;%=issue.Title%&gt;&apos;&gt;Loading Comments...&lt;\/div&gt;  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;  \t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t&lt;\/div&gt;\n&lt;%\n\t}\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
		form Alert
		{
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			msg
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Alert_Message
			(
    			type = plaintext
				value = "No Pending Data available&nbsp;"
	 			row = 1
	 			column = 1   
				width = 300px
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				Proceed
				(
   					type = button
   					displayname = "Proceed"
				)
				Close
				(
   					type = button
   					displayname = "Close"
				)
			}
		}
		form Add_bulk
		{
			displayname = "Add bulk"
			success message = "Data Added Successfully!"
			field alignment = top
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Company
			(
				type = picklist
				values  = Company.ID
    			displayformat = [Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			MileStones
			(
				type = picklist
				values  = MileStones.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Requirement
			(
				type = picklist
				values  = Requirement.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Task
			(
				type = picklist
				values  = Task.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Issues
			(
				type = picklist
				values  = Issues.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Type
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Add_in_new_line
			(
    			type = textarea
				displayname = "Add records one per line"
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Requirement_Actions
		{
			displayname = "Requirement Actions"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = top
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			MileStones
			(
				type = picklist
				values  = MileStones.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Requirement
			(
				type = picklist
				values  = Requirement.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Task
			(
				type = picklist
				values  = Task.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"New", "In Progress", "Ready For Testing", "Need Info", "Closed"}
				initial value = "New"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assign_To
			(
				type = picklist
				displayname = "Assign To"
				values  = Employee[Employee_Type == "Employee"].ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Manager
			(
				type = picklist
				values  = Manager[Reporting_Employees == input.Assign_To].ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Followers
			(
				type = list
				values  = Employee.ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				Save
				(
   					type = button
   					displayname = "Save"
				)
			}
		}
		form Task_Actions
		{
			displayname = "Task Actions"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = top
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			MileStones
			(
				type = picklist
				values  = MileStones.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Task
			(
				type = picklist
				values  = Task.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Requirement
			(
				type = picklist
				values  = Requirement.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"New", "In Progress", "Ready For Testing", "Need Info", "Closed"}
				initial value = "New"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assign_To
			(
				type = picklist
				displayname = "Assign To"
				values  = Employee[Employee_Type == "Employee"].ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Manager
			(
				type = picklist
				values  = Manager[Reporting_Employees == input.Assign_To].ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Followers
			(
				type = list
				values  = Employee.ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-bold-add"
			)
			actions
			{
				Save
				(
   					type = button
   					displayname = "Save"
				)
			}
		}
		form Issue_Actions
		{
			displayname = "Issue Actions"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = top
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Requirement
			(
				type = picklist
				values  = Requirement.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Task
			(
				type = picklist
				values  = Task.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Issues
			(
				type = picklist
				displayname = "Add Issue"
				values  = Issues.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"New", "In Progress", "Ready For Testing", "Need Info", "Closed"}
				initial value = "New"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Assign_To
			(
				type = picklist
				displayname = "Assign To"
				values  = Employee[Employee_Type == "Employee"].ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Manager
			(
				type = picklist
				values  = Manager[Reporting_Employees == input.Assign_To].ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Followers
			(
				type = list
				values  = Employee[Related_Manager == input.Manager].ID
    			displayformat = [Name.first_name + " " + Name.last_name]
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				Save
				(
   					type = button
   					displayname = "Save"
				)
			}
		}
		form Pay_Invoice
		{
			displayname = "Pay Invoice"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Project
			(
				type = picklist
				values  = Project.ID
    			displayformat = [Title]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Invoice
			(
				type = picklist
				displayname = "Invoice No"
				values  = Invoice.ID
    			displayformat = [Invoice_Number]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Item
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Quantity
			(
				type = number
				maxchar = 8
	 			row = 1
	 			column = 1   
				width = medium
			)
			Amount
			(
				type = decimal
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
			enable payment
			{
				type : selling
				paypalaccount : "ruben@zohocorp.com"
				environment : sandbox
				currency : USD
				needpayeraddress : no
				paypallanguage : EN
	    		description : Item 
	    		amount : Amount 
			}
		}
		list Bulk_Report
		{
			displayName = "Bulk Report"
   			hide = true
			show all rows from Add_bulk    
			(
				Company
				Project
				MileStones
				Requirement
				Task
				Issues
				Type
				Add_in_new_line as "Add records one per line"
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Company
							Project
							MileStones
							Requirement
							Task
							Issues
							Type
							Add_in_new_line as "Add records one per line"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company
							Project
							MileStones
							Requirement
							Task
							Issues
							Type
							Add_in_new_line as "Add records one per line"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Project_Requirements
		{
			displayName = "Project Requirements"
   			hide = true
			show all rows from Requirement    
			(
				Title
				custom action "View"
				(
	  			workflow = View21
				column header = "View"
				success message = ""
				)
				Expected_Hours as "Expected Hours"
				Status
				Project
				(
					view = My_Company_Projects
				)
				MileStone
				(
					view = My_Milestones
				)
				Manager
				(
					view = All_Managers
				)
			)
			filters
			(
				Status
			)
			group by
			(
				Project ascending
				MileStone ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0505;"
				}
				"InProgress"
				{
				condition = (Status == "InProgress")
				fields = [Status]
				format = "font-weight:bold;color:#2500b8;"
				}
				"Ready For Test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#078500;"
				}
				"Need Info"
				{
				condition = (Status == "Need Info")
				fields = [Status]
				format = "font-weight:bold;color:#700070;"
				}
				"Closed"
				{
				condition = (Status == "Closed")
				fields = [Status]
				format = "font-weight:bold;color:#073807;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Title
							Expected_Hours as "Expected Hours"
							Manager
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							MileStone
							Title
							Expected_Hours as "Expected Hours"
							Manager
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Project_Quotes
		{
			displayName = "Project Quotes"
   			hide = true
			show all rows from Quote    
			(
				Hourly_Rate as "Hourly Rate"
				custom action "View"
				(
	  			workflow = View23
				column header = "View"
				success message = ""
				)
				Project
				(
					view = My_Company_Projects
				)
				Expected_Hours as "Expected Hours"
				Expected_Cost as "Total Amount"
			)
			filters
			(
				"Pending"  :  Status == "Pending"
				"Approved"  :  Status == "Approved"
				"Cancelled"  :  Status == "Cancelled"
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				format = "font-weight:bold;color:#1100ff;"
				}
				"Approved"
				{
				condition = (Status == "Approved")
				format = "font-weight:bold;color:#00ff00;"
				}
				"Cancelled"
				{
				condition = (Status == "Cancelled")
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Hourly_Rate as "Hourly Rate"
							Project
							Expected_Hours as "Expected Hours"
							Expected_Cost as "Total Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Hourly_Rate as "Hourly Rate"
							Project
							Expected_Hours as "Expected Hours"
							Expected_Cost as "Total Amount"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Invoices_Views
		{
			displayName = "All Invoices(Views)"
   			hide = true
			show all rows from Invoice    
			(
				Project
				(
					view = My_Company_Projects
				)
				custom action "View"
				(
	  			workflow = View_Invoice3
				column header = "View"
				success message = ""
				)
				Customer
				(
					view = All_Companies
				)
				Contacts
				Project_Cost as "Project Cost"
			)
			filters
			(
				"Pending"  :  Status == "Pending"
				"Paid"  :  Status == "Paid"
				"Canceled"  :  Status == "Canceled"
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"Pending"
				{
				condition = (Status == "Pending")
				format = "font-weight:bold;color:#2b00d6;"
				}
				"Paid"
				{
				condition = (Status == "Paid")
				format = "font-weight:bold;color:#00940a;"
				}
				"Canceled"
				{
				condition = (Status == "Canceled")
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Customer
							Contacts
							Project_Cost as "Project Cost"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
				"View"
							Project
							Customer
							Contacts
							Project_Cost as "Project Cost"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Add_a_Project
	{
		displayname= "Add a Project"
		hide = true
		icon = "ui-2-menu-bold"
		form My_Registeration
		{
			displayname = "My Registeration"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Company_Name
			(
    			type = text
				displayname = "Company Name"
	 			row = 1
	 			column = 1   
				width = 200px
			)
			Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Company_Website
			(
    			type = url
				displayname = "Company Website"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Primary_Email
			(
    			type = email
				displayname = "Primary Email"
				maxchar = 254
	 			row = 1
	 			column = 1   
				width = medium
			)
			Primary_Phone
			(
    			type = phonenumber
				displayname = "Primary Phone"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Your_Phone
			(
    			type = phonenumber
				displayname = "Your Phone"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-2-square-add-11"
			)
			actions
			{
				Submit
				(
   					type = button
   					displayname = "Submit"
				)
			}
		}
	}
	section Following
	{
		icon = "media-1-button-skip"
		list Following_Requirements
		{
			displayName = "Following Requirements"
			show all rows from Requirement  [Followers.Email == zoho.loginuserid && Status != "Closed"]  
			(
				Auto_Number as "Auto Number"
				Project
				(
					view = My_Projects
				)
				MileStone
				(
					view = My_Milestones
				)
				Title
				Description
				Expected_Hours as "Expected Hours"
				Status
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
				Followers
				(
					view = All_Employees
				)
			)
			filters
			(
				Status
			)
			group by
			(
				Project ascending
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"InProgress"
				{
				condition = (Status == "InProgress")
				fields = [Status]
				format = "font-weight:bold;color:#1e00ff;"
				}
				"Ready For Test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#246100;"
				}
				"Need Info"
				{
				condition = (Status == "Need Info")
				fields = [Status]
				format = "font-weight:bold;color:#b500b5;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Auto_Number as "Auto Number"
							Project
							MileStone
							Title
							Description
							Expected_Hours as "Expected Hours"
							Status
							Manager
							Owner
							Followers
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Auto_Number as "Auto Number"
							Project
							MileStone
							Title
							Description
							Expected_Hours as "Expected Hours"
							Status
							Manager
							Owner
							Followers
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Following_Projects
		{
			displayName = "Following Projects"
			show all rows from Project  [(Followers.Email == zoho.loginuserid && Status == "Open") || Status == "Pending"]  
			(
				Company
				(
					view = All_Companies
				)
				Contacts
				(
					view = All_Contacts
				)
				Title
				Description
				Project_Type as "Project Type"
				Hourly_Rate as "Hourly Rate"
				Start_Date as "Start Date"
				Owner
				(
					view = All_Employees
				)
				Manager
				(
					view = All_Managers
				)
				Followers
				(
					view = All_Employees
				)
				Expected_End_Date as "Expected End Date"
				Expected_Hours as "Expected Hours"
				(
					display = total	
				)
				Expected_Revenue as "Expected Revenue"
				End_Date as "End Date"
				Revenue
				Status
			)
			filters
			(
				Status
			)
			conditional formatting
			(
				"Open"
				{
				condition = (Status == "Open")
				fields = [Status]
				format = "font-weight:bold;color:#2700a8;"
				}
				"Pending"
				{
				condition = (Status == "Pending")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Company
							Contacts
							Title
							Description
							Project_Type as "Project Type"
							Hourly_Rate as "Hourly Rate"
							Start_Date as "Start Date"
							Owner
							Manager
							Followers
							Expected_End_Date as "Expected End Date"
							Expected_Hours as "Expected Hours"
							Expected_Revenue as "Expected Revenue"
							End_Date as "End Date"
							Revenue
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Company
							Contacts
							Title
							Description
							Project_Type as "Project Type"
							Hourly_Rate as "Hourly Rate"
							Start_Date as "Start Date"
							Owner
							Manager
							Followers
							Expected_End_Date as "Expected End Date"
							Expected_Hours as "Expected Hours"
							Expected_Revenue as "Expected Revenue"
							End_Date as "End Date"
							Revenue
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Following_Tasks
		{
			displayName = "Following Tasks"
			show all rows from Task  [Followers.Email == zoho.loginuserid && Status != "Closed"]  
			(
				Project
				(
					view = My_Projects
				)
				MileStone
				(
					view = My_Milestones
				)
				Requirement
				(
					view = Project_Requirements
				)
				Title
				Description
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
				Followers
				(
					view = All_Employees
				)
				Due_Date as "Due Date"
				Status
			)
			filters
			(
				Status
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"InProgress"
				{
				condition = (Status == "InProgress")
				fields = [Status]
				format = "font-weight:bold;color:#5100ff;"
				}
				"Ready For Test"
				{
				condition = (Status == "Ready For Test")
				fields = [Status]
				format = "font-weight:bold;color:#009e05;"
				}
				"Need Info"
				{
				condition = (Status == "Need Info")
				fields = [Status]
				format = "font-weight:bold;color:#750075;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							MileStone
							Requirement
							Title
							Description
							Manager
							Owner
							Followers
							Due_Date as "Due Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							MileStone
							Requirement
							Title
							Description
							Manager
							Owner
							Followers
							Due_Date as "Due Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Following_Issues
		{
			displayName = "Following Issues"
			show all rows from Issues  [Followers.Email == zoho.loginuserid && Status == "New" || Status == "In Progress"]  
			(
				Project
				(
					view = My_Projects
				)
				MileStone
				(
					view = My_Milestones
				)
				Requirement
				(
					view = Project_Requirements
				)
				Task
				(
					view = My_Tasks
				)
				Title
				Description as "Comment"
				Manager
				(
					view = All_Managers
				)
				Owner
				(
					view = All_Employees
				)
				Followers as "Delegates"
				(
					view = All_Employees
				)
				Status
			)
			filters
			(
				"New"  :  Status == "New"
				"In Progress"  :  Status == "In Progress"
			)
			conditional formatting
			(
				"New"
				{
				condition = (Status == "New")
				fields = [Status]
				format = "font-weight:bold;color:#ff0000;"
				}
				"In Progress"
				{
				condition = (Status == "In Progress")
				fields = [Status]
				format = "font-weight:bold;color:#990099;"
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Project
							MileStone
							Requirement
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Followers as "Delegates"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Project
							MileStone
							Requirement
							Task
							Title
							Description as "Comment"
							Manager
							Owner
							Followers as "Delegates"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Project_Settings
	{
		displayname= "Project Settings"
		icon = "ui-1-settings-gear-64"
		summary Project_Settings_View
		{
			displayName = "Project Settings"
			show all rows from Project_Settings    
			(
				Enable_Attachments as "Enable Attachments"
				Enable_Notification as "Enable Notification"
				Notify_Employee as "Notify Employee"
				Notify_Manager as "Notify Manager"
				Notify_Customer as "Notify Customer"
				Send_Notification_Emails_to as "Send all nofitications to"
				Customer_Portal_Url as "Customer Portal Url"
				Enable_Portal as "Enable Portal"
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "ui-1-database"
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Enable_Attachments as "Enable Attachments"
							Enable_Notification as "Enable Notification"
							Notify_Employee as "Notify Employee"
							Notify_Manager as "Notify Manager"
							Notify_Customer as "Notify Customer"
							Send_Notification_Emails_to as "Send all nofitications to"
							Customer_Portal_Url as "Customer Portal Url"
							Enable_Portal as "Enable Portal"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Enable_Attachments as "Enable Attachments"
							Enable_Notification as "Enable Notification"
							Notify_Employee as "Notify Employee"
							Notify_Manager as "Notify Manager"
							Notify_Customer as "Notify Customer"
							Send_Notification_Emails_to as "Send all nofitications to"
							Customer_Portal_Url as "Customer Portal Url"
							Enable_Portal as "Enable Portal"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	functions
	{
 			bool user.isAdmin()
			{
				return zoho.loginuserid == zoho.adminuserid;
			}
 			string nullFix.floatToStr(float num)
			{
				myStr = "";
				if(input.num != null && input.num > 0.0)
				{
					myNum = num.round(2);
					myStr = myNum.toString();
				}
				return myStr;
			}
 			string nullFix.intToStr(int num)
			{
				myStr = "";
				if(input.num != null && input.num > 0)
				{
					myNum = num.round(2);
					myStr = myNum.toString();
				}
				return myStr;
			}
 			string nullFix.strToStr(string str)
			{
				myStr = "";
				if(input.str != null && input.str != "")
				{
					myStr = str.replaceAll("null","");
				}
				return myStr;
			}
 			string nullFix.dateToStr(date day)
			{
				myStr = "";
				if(input.day != null)
				{
					myStr = day.toString();
				}
				return myStr;
			}
 			string style.viewDetails()
			{
				return "body{font-family:Verdana, arial;}.sidebar{margin : 0px 1% 0 0px;width:23%;float:right;  background-color: #FFFFFF;  }.sidetext{    color: #0D0D0D;    font-weight: 600;}.instructors{font-size:15px;font-weight:bold;color:white;}.highlight{font-size:16px;color:#222;margin:30px 0px 0px 0px;text-align:center;}.highlight a{font-size:16px;color:#222;}.context{padding:15px;}.context p{color:#fff;}.content{width:72%;margin : 0px 0px 0px 0px;background-color: white;float:left;padding:10px 15px;}p{font-size:13px;line-height:18px;}h1,h2,h3,h4,h5,h5{font-weight:normal;}h1{font-size:22px;line-height:18px;}h5{color:#ffffff;text-align:center;}.topic{color:#ffffff;}.softrain{color: #222;text-align:center;margin:15px 0px;}.softrain a{color: #222;text-align:center;font-size:19px;text-decoration:none;}.tuter{font-size:14px;color:#ffffff;font-weight:bold;}.tuter span{font-size:13px;color:#ccc;}.latest {border: 2px solid trasnparent;color: lightslategrey;width: 250;margin:-127 0 0 250px;}.colortakethis{color:white;float:left;font-size: 16px;padding:10px 20px;text-decoration:none;font-weight:bold;border-radius:5px;}.colortakethis a{background-color: #39d1b4;color:white;font-size: 14px;padding:10px 20px;text-decoration:none;font-weight:bold;border-radius:5px;}.container{width:90%;min-width:1000px;margin:auto;margin-top:30px;}.photo{float:left;width:250px;margin:10px 0px 20px 0px;}.photo1{float:left;margin:0px;padding:0px 5px 0px 0px}li{color:#ododod;margin:0px 0px 10px 0px;list-type:none;  font-size: 14px;}li a{color:#fff;text-decoration:none;}.coursetitle{text-align:center;}.coursetitle h2{text-align:center;font-size:22px;font-weight:normal;}.coudesc{background-color:#fff;padding:30px 50px;border-bottom:1px #f5f5f5 solid;font-weight:normal;}.coudesc a{font-weight:normal;color:#000;text-decoration:none;}.coudesc:hover{color:#fff;text-decoration:none;background-color:#39d1b4;}.coudesc:hover a{color:#fff;text-decoration:none;background-color:#39d1b4;}.course_description{margin:20px 0px 40px 0px;}.courli a:hover{//margin-top:1px;//padding:05px 0px;//font: 13px verdana,helvetica,arial,sans-serif;//font-size:13px;//text-decoration: underline;//color:green;//border-bottom:1px #ccc solid;}.courli a{margin:10px 0px 10px 0px;color:#0D0D0D;text-decoration:none; }.courli a:hover{margin:10px 0px 10px 0px;color:#A52A2A;text-decoration:none; }.secwrap{margin : 2px;}.image{width: 98.6%;border: 2px solid #FFFFFF;border-radius: 10px;}.page-numbers{color: #FFFFFF;font-weight: bold;font-size: 13px;background-color: #FF69B4;padding: 3px 8px;border-radius: 5px}.row-fluid {  width: 100%;  *zoom: 1;margin:10px;}.row-fluid:before,.row-fluid:after {  display: table;  content: \"\";}.row-fluid:after {  clear: both;}.row-fluid [class*=\"span\"] {  display: block;  float: left;  width: 100%;  min-height: 28px;  margin-left: 2.127659574%;  *margin-left: 2.0744680846382977%;  -webkit-box-sizing: border-box;     -moz-box-sizing: border-box;      -ms-box-sizing: border-box;          box-sizing: border-box;}.row-fluid [class*=\"span\"]:first-child {  margin-left: 0;}.row-fluid .span12 {  width: 99.99999998999999%;  *width: 99.94680850063828%;}.row-fluid .span11 {  width: 91.489361693%;  *width: 91.4361702036383%;}.row-fluid .span10 {  width: 82.97872339599999%;  *width: 82.92553190663828%;}.row-fluid .span9 {  width: 74.468085099%;  *width: 74.4148936096383%;}.row-fluid .span8 {  width: 65.95744680199999%;  *width: 65.90425531263828%;}.row-fluid .span7 {  width: 57.446808505%;  *width: 57.3936170156383%;}.row-fluid .span6 {  width: 48.93617020799999%;  *width: 48.88297871863829%;}.row-fluid .span5 {  width: 40.425531911%;  *width: 40.3723404216383%;}.row-fluid .span4 {  width: 31.914893614%;  *width: 31.8617021246383%;}.row-fluid .span3 {  width: 23.404255317%;  *width: 23.3510638276383%;}.row-fluid .span2 {	padding:15px;  width: 14.89361702%;  *width: 14.8404255306383%;}.span2 rl {  float:right;}.row-fluid .span1 {  width: 6.382978723%;  *width: 6.329787233638298%;}.tile{text-align:center;}tyle Attribute {width: 680.0px;margin: 5.0px 0.0px 10.0px;font-family: verdana;padding: 0.0px;border: 1.0px solid rgb(213,221,198);line-height: 23.0px;background-color: rgb(255,255,255);}.zc-formcontent{box-shadow:none;border-radius:0;border:none;}.zc-dialog-border-top {border-top: none !important;}";
			}
 			void launch.openTask(Task task)
			{
				openUrl("#View:View_Details?type=task&idStr=" + task.ID,"same window");
			}
 			void launch.openReq(Requirement req)
			{
				openUrl("#View:View_Details?type=tList&idStr=" + req.ID,"same window");
			}
 			int navigation.nextTaskID(Task task)
			{
				//1853690000003027028
				proj = Project[ID == task.Project];
				nextTask = task.ID;
				if(task.ID != null)
				{
					allTasks = (Task[Project == proj.ID].ID sort by Requirement).getAll();
					thisTask = allTasks.indexOf(task.ID);
					size = allTasks.size();
					maxTask = size - 1;
					if(thisTask < maxTask)
					{
						nextTaskInd = thisTask + 1;
						nextTask = allTasks.get(nextTaskInd);
					}
				}
				return nextTask;
			}
 			int navigation.nextReqID(Requirement req)
			{
				nextReqID = req.ID;
				if(req.ID != null)
				{
					allReqsList = Requirement[Project == req.Project].ID.getAll();
					thisReqInd = allReqsList.indexOf(req.ID);
					size = allReqsList.size();
					maxReqInd = size - 1;
					if(thisReqInd < maxReqInd)
					{
						nexReqInd = thisReqInd + 1;
						nextReqID = allReqsList.get(nexReqInd);
					}
				}
				return nextReqID;
			}
 			void project.statusUpdate(Project project)
			{
				project.End_Date=zoho.currentdate;
				project.Status="Completed";
			}
 			void invoice.statusPaid(Invoice inv)
			{
				inv.Status="Paid";
				proj = Project[ID == inv.Project];
				thisapp.invoice.updateRevenueToProject(proj);
			}
 			void invoice.updateRevenueToProject(Project proj)
			{
				proj.Revenue=Invoice[Project == proj.ID && Status = "Paid"].sum(Project_Cost);
			}
 			void quote.Approved(Quote quote)
			{
				quote.Status="Approved";
			}
 			int navigation.nextIssueID(Issues issu)
			{
				nextissuID = issu.ID;
				if(issu.ID != null)
				{
					allissuList = Issues[Project == issu.Project].ID.getAll();
					thisissuInd = allissuList.indexOf(issu.ID);
					size = allissuList.size();
					maxissuInd = size - 1;
					if(thisissuInd < maxissuInd)
					{
						nexissuInd = thisissuInd + 1;
						nextissuID = allissuList.get(nexissuInd);
					}
				}
				return nextissuID;
			}
 			int navigation.prevIssueID(Issues issue)
			{
				prevIssue = issue.ID;
				if(issue.ID != null)
				{
					allIssues = (Issues[Project == issue.Project].ID sort by Task).getAll();
					thisIssue = allIssues.indexOf(issue.ID);
					size = allIssues.size();
					maxIssue = size - 1;
					if(thisIssue == 0)
					{
						prevIssues = allIssues.get(0);
					}
					if(thisIssue <= maxIssue && thisIssue != 0)
					{
						prevIssue = thisIssue - 1;
						prevIssues = allIssues.get(prevIssue);
					}
					else
					{
						prevIssues = allIssues.get(0);
					}
				}
				return prevIssues;
			}
 			int navigation.prevReqID(Requirement req)
			{
				proj = Project[ID == req.Project];
				prevReq = req.ID;
				if(req.ID != null)
				{
					allReqs = Requirement[Project == proj.ID].ID.getAll();
					thisReq = allReqs.indexOf(req.ID);
					size = allReqs.size();
					maxReq = size - 1;
					if(thisReq == 0)
					{
						prevReqs = allReqs.get(0);
					}
					if(thisReq <= maxReq && thisReq != 0)
					{
						prevReq = thisReq - 1;
						prevReqs = allReqs.get(prevReq);
					}
					else
					{
						prevReqs = allReqs.get(0);
					}
				}
				return prevReqs;
			}
 			int navigation.prevTaskID(Task t)
			{
				proj = Project[ID == t.Project];
				prevTask = t.ID;
				if(t.ID != null)
				{
					allTasks = (Task[Project == proj.ID].ID sort by Requirement).getAll();
					thisTask = allTasks.indexOf(t.ID);
					size = allTasks.size();
					maxTask = size - 1;
					if(thisTask == 0)
					{
						prevTasks = allTasks.get(0);
					}
					if(thisTask <= maxTask && thisTask != 0)
					{
						prevTask = thisTask - 1;
						prevTasks = allTasks.get(prevTask);
					}
					else
					{
						prevTasks = allTasks.get(0);
					}
				}
				return prevTasks;
			}
 			void launch.openQuote(Quote quot)
			{
				openUrl("#View:Quote_Interface?quoteIDStr=" + quot.ID,"same window");
			}
 			bool user.isCustomer()
			{
				return Company[Primary_Email == zoho.loginuserid].count() > 0 || Contact[Email == zoho.loginuserid].count() > 0;
			}
 			void launch.openIssue(Issues issue)
			{
				openUrl("#View:Issues_Interface?issueIDStr=" + issue.ID,"same window");
			}
 			void invoice.payAmount(Invoice inv)
			{
				openUrl("#Form:Pay_Invoice?zc_LoadIn=dialog&Invoice=" + inv.ID,"same window");
			}
 			void launch.openProjInterface(Project pro)
			{
				openUrl("#View:Project_Interface?projectIDStr=" + pro.ID,"same window");
			}
 			void launch.openInvoice(Invoice inv)
			{
				openUrl("#View:Invoice_Interface?invoiceIDStr=" + inv.ID,"same window");
			}
 			void appShare.toEmployee(string email)
			{
				thisapp.permissions.assignUserInProfile(email,"Employee");
				sendmail
				[
					from :zoho.adminuserid
					to :email
					subject :"Invitation to access '" + zoho.appname + "' "
					message :"<div style='width:100%;display:inline-block;box-sizing:border-box;border:1px solid #ddd;'><div style='padding:2%;text-align:center;'>You've been invited to use an application built on Zoho Creator by \"" + zoho.adminuserid + "\".</div><div style='background: #efefef; padding: 20.0px;margin: 20.0px 0 10.0px;text-align:center;'><h2>" + zoho.appname.toUpperCase() + "</h2><div style='margin: 20.0px 0 10.0px;'><a style='padding:10px;background-color: rgb(62,149,205);text-decoration: none;color: rgb(255,255,255);font-size: 14.0px;' href='https://creator.zoho.com" + zoho.appuri + "' target='_blank'> Go to application </a></div></div></div>"
				]
			}
 			void quote.Generate(Project project)
			{
				if(project.Expected_Revenue != 0.0 && project.Expected_Revenue != null)
				{
					qID = insert into Quote
			[
				Added_User=zoho.loginuser
				Customer=project.Company
				Contacts=project.Contacts
				Project=project.ID
				Hourly_Rate=project.Hourly_Rate
				Date_field=zoho.currentdate
				Status="Pending"
				Expected_Hours=project.Expected_Hours
				Expected_Cost=project.Expected_Revenue
			];
					openUrl("#View:Quote_Interface?quoteIDStr=" + qID,"same window");
				}
				else
				{
					openUrl("#Form:Alert?zc_LoadIn=dialog&zc_Header=false&msg=revMissing&Project=" + project.ID,"same window");
				}
			}
 			void project.updateExpHrs(Project proj)
			{
				proj.Expected_Hours=Requirement[Project == proj.ID].sum(Expected_Hours);
				hrlyRate = Hourly_Rate[ID == proj.Hourly_Rate].Hourly_Rate;
				expectedRevenue = ifnull(hrlyRate,0.0) * ifnull(proj.Expected_Hours,0.0);
				if(expectedRevenue == 0.0)
				{
					proj.Expected_Revenue=ifnull(proj.Expected_Revenue,0.0);
				}
				if(expectedRevenue != 0.0)
				{
					proj.Expected_Revenue=expectedRevenue;
				}
			}
 			bool user.isManager()
			{
				return Manager[Email == zoho.loginuserid].count() > 0 && !thisapp.user.isAdmin();
			}
 			int user.getEmpFromManID(int manID)
			{
				man = Manager[ID == input.manID];
				if(Employee[Email == man.Email].count() > 0)
				{
					empID = Employee[Email == man.Email].ID;
				}
				else
				{
					empID = insert into Employee
			[
				Employee_Type="Manager"
				Name=man.Name
				Email=man.Email
				Status=man.Status
				Added_User=zoho.loginuser
			];
				}
				return empID;
			}
 			bool settings.enableNotification()
			{
				setting = Project_Settings[ID is not null];
				return setting.Enable_Notification;
			}
 			void notify.manOnTimesheetCreation(Timesheet ts)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyManagerTsAdded())
					{
						manEmail = Manager[ID == ts.Manager].Email;
						sendmail
						[
							from :zoho.loginuserid
							to :manEmail
							subject :"New TimeSheet has been created"
							message :("New Timesheet Added by " + ts.Employee.Name) + " review and approve."
						]
					}
				}
			}
 			bool settings.notifyManagerTsAdded()
			{
				setting = Project_Settings[ID is not null];
				type = "Timesheet is added";
				return setting.Notify_Manager.contains(type);
			}
 			void notify.empOnTimesheetApproval(Timesheet ts)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyEmployeeTsApproval())
					{
						empEmail = Employee[ID == ts.Employee].Email;
						sendmail
						[
							from :zoho.loginuserid
							to :empEmail
							subject :"Your TimeSheet has been " + ts.Status
							message :"Your Timesheet has been " + ts.Status + " review your timesheet."
						]
					}
				}
			}
 			bool settings.notifyEmployeeTsApproval()
			{
				setting = Project_Settings[ID is not null];
				type = "Timesheet is approval";
				return setting.Notify_Employee.contains(type);
			}
 			void timesheet.approveWork(Timesheet timesheet)
			{
				timesheet.Status="Approved";
				timesheet.Approved=true;
				thisapp.notify.empOnTimesheetApproval(timesheet);
			}
 			void timesheet.rejectWork(Timesheet timesheet)
			{
				timesheet.Status="Rejected";
				timesheet.Approved=false;
				thisapp.notify.empOnTimesheetApproval(timesheet);
			}
 			void invoice.generateForQuote(Quote quote)
			{
				inv = Invoice[Related_Quote == quote.ID];
				if(inv.count() > 0)
				{
					inv.Total_Hours=quote.Expected_Hours;
					inv.Project_Cost=quote.Expected_Cost;
					openUrl("#View:Invoice_Interface?invoiceIDStr=" + inv.ID,"samewindow");
				}
				if(inv.count() == 0)
				{
					if(!quote.Invoiced)
					{
						invID = insert into Invoice
			[
				Added_User=zoho.loginuser
				Project=quote.Project
				Customer=quote.Customer
				Contacts=quote.Contacts
				Related_Quote=quote.ID
				Total_Hours=quote.Expected_Hours
				Project_Cost=quote.Expected_Cost
			];
						quote.Invoiced=true;
						openUrl("#View:Invoice_Interface?invoiceIDStr=" + invID,"samewindow");
					}
				}
			}
 			bool settings.notifyEmployee(string type)
			{
				setting = Project_Settings[ID is not null];
				type = type + " is assigned";
				return setting.Notify_Employee.contains(type);
			}
 			bool settings.notifyManager(string type)
			{
				setting = Project_Settings[ID is not null];
				type = type + " is assigned";
				return setting.Notify_Manager.contains(type);
			}
 			void settings.update()
			{
				if(Project_Settings.count() == 0)
				{
					insert into Project_Settings
					[
						Enable_Attachments=true
						Enable_Notification=true
						Customer_Portal_Url="https://" + zoho.adminuser + ".zohocreator.com/portal/" + zoho.appname + "/"
						Enable_Portal=true
						Send_Notification_Emails_to=zoho.adminuserid
						Added_User=zoho.adminuser
					]
				}
			}
 			bool user.isEmployee()
			{
				return Employee[Email == zoho.loginuserid].count() > 0 && !thisapp.user.isManager() && !thisapp.user.isAdmin();
			}
 			void quote.Rejected(Quote quote)
			{
				quote.Status="Cancelled";
			}
 			bool settings.enableAttachments()
			{
				setting = Project_Settings[ID is not null];
				return setting.Enable_Attachments;
			}
 			void invoice.reminder(Invoice inv)
			{
				if(thisapp.settings.enableNotification())
				{
					invIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Invoice_Interface?invoiceIDStr=" + inv.ID;
					compEmail = Company[ID == inv.Customer].Primary_Email;
					sendmail
					[
						from :zoho.adminuserid
						to :compEmail
						subject :"Reminder for Pending Invoice"
						message :"Hi, <br />\nThis is reminder for Invoice Number " + inv.Invoice_Number + ". Click <a href='" + invIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
					]
					inv.Reminded=true;
				}
			}
 			void appShare.toManager(string email)
			{
				thisapp.permissions.assignUserInProfile(email,"Manager");
				sendmail
				[
					from :zoho.adminuserid
					to :email
					subject :"Invitation to access '" + zoho.appname + "' "
					message :"<div style='width:100%;display:inline-block;box-sizing:border-box;border:1px solid #ddd;'><div style='padding:2%;text-align:center;'>You've been invited to use an application built on Zoho Creator by \"" + zoho.adminuserid + "\".</div><div style='background: #efefef; padding: 20.0px;margin: 20.0px 0 10.0px;text-align:center;'><h2>" + zoho.appname.toUpperCase() + "</h2><div style='margin: 20.0px 0 10.0px;'><a style='padding:10px;background-color: rgb(62,149,205);text-decoration: none;color: rgb(255,255,255);font-size: 14.0px;' href='https://creator.zoho.com" + zoho.appuri + "' target='_blank'> Go to application </a></div></div></div>"
				]
			}
 			bool settings.notifyCustomer(string type)
			{
				setting = Project_Settings[ID is not null];
				type = type + " is Created";
				return setting.Notify_Customer.contains(type);
			}
 			float timesheet.getHours(date stime, date endtime)
			{
				ms = (endtime - stime);
				mins = (ms / (1000 * 60) % 60).toLong();
				hrs = (ms / (1000 * 60 * 60) % 24).toLong();
				hrsDec = hrs + if(mins > 30,1.0,if(mins > 0,0.5,0.0));
				return hrsDec;
			}
 			void user.addManager(Employee emp)
			{
				if(emp.Employee_Type == "Manager")
				{
					if(Manager[Email == emp.Email].count() == 0)
					{
						manID = insert into Manager
			[
				Added_User=zoho.loginuser
				Name=emp.Name
				Email=emp.Email
				Status=emp.Status
			];
						emp.Related_Manager=manID;
						thisapp.appShare.toManager(emp.Email);
					}
				}
			}
 			string style.Dashboard()
			{
				return "body{    font-family:Verdana,arial;    color:#393a3a;}p{    font-size:13px;    line-height:18px;    color:#393a3a;}h1,h2,h3,h4,h5,h5{    font-weight:normal;    color:#393a3a;}h1{    font-size:22px;    line-height:18px;}h5{    color:#000000;    text-align:center;}.container{    width:100%;    max-width:1000px;    margin:auto;    margin-top:20px;}.sidebar{    margin : 0px 1% 0 0px;    width:15%;    float:left;     background-color:#FFFFFF;}.course_sharing{    text-align: center;    margin: -10px 2px;    width: 215px;}.sidetext{    color: #FFFFFF;    font-weight: 600;}.instructors{    font-size:15px;    font-weight:bold;    color:black;}.highlight{    font-size:16px;}.highlight a{    font-size:16px;    color:#fff;}.context{    padding:15px;}.content{    width:65%;    border: 2px solid trasnparent;    background-color: whitesmoke;    float:left;    padding:5px 15px;    margin:1px 0px 20px 0px;}.topic{    color:#ffffff;}.softrain{    background-color: black;    color: #39d1b4;    text-align:center;    margin:15px 0px;}.softrain a{    background-color: black;    color: #39d1b4;    text-align:center;    font-size:22px;    text-decoration:none;}.tuter{    font-size:14px;    color:#000000;    font-weight:bold;}.tuter span{    font-size:13px;    color:#ccc;}.latest {    border: 2px solid trasnparent;    color: lightslategrey;    width: 250;    margin:-127 0 0 250px;}.colortakethis{    color:white;    font-size: 16px;    text-align:center;    padding:20px 20px;    text-decoration:none;    font-weight:bold;    border-radius:5px;}.colortakethis a{    background-color: #009CBD;    color:white;    font-size: 14px;    padding:10px 20px;    text-decoration:none;    font-weight:bold;    border-radius:5px;}.photo{    float:left;    width:250px;    margin:10px 0px 0px 0px;}.photo1{    float:left;    margin:0px;    padding:0px 5px 0px 0px}li{    color:#000000;}li a{    color:#000000;    text-decoration:none;}.coursetitle{    text-align:center;}.coursetitle h2{    text-align:center;    font-size:22px;    font-weight:normal;}.coudesc{    background-color: #FFF;    padding:15px 18px;    border-bottom: 1px solid #F5F5F5;    font-weight: normal;    border-radius: 5px;    float: left;    width: 95%;}.coudesc a{    font-weight:normal;    color:#000;    text-decoration:none;    padding:15px 20px;}.coudesc:hover{    color:#fff;    text-decoration:none;    background-color:whitesmoke;    border-radius: 5px;}.coudesc:hover a{    color:#fff;    text-decoration:none;}.imag{    width:100%;}.image{    width: 98.6%;    border: 2px solid #42B3E5;    border-radius: 10px;}.page-numbers{    color:#42B3E5;    font-weight:bold;    font-size:13px;}.tile{    text-align:center;}.zc-formcontent{    box-shadow: 0 0 10px grey;    border-radius: 5px;    padding: 0 0 10px 0 !important;}.zc-dialog-border-top {    border-top: none !important;}";
			}
 			string style.home()
			{
				return "body {margin: 0;font-family:Verdana, arial;font-size: 13px;line-height: 18px;color: #333333;background-color: #ffffff;}a {color: #0088cc;text-decoration: none;}a:hover {color:darkred}.row {margin-left: -20px;*zoom: 1;}.row:before,.row:after {display: table;content: '';}.row:after {clear: both;}[class*=span] {float: left;margin-left: 20px;}.container,.navbar-fixed-top .container,.navbar-fixed-bottom .container {width: 940px;}.span12 {width: 940px;padding:15px}.span11 {width: 860px;}.span10 {width: 780px;}.span9 {width: 700px;}.span8 {width: 620px;}.span7 {width: 540px;}.span6 {width: 460px;}.span5 {width: 380px;}.span4 {width: 300px;}.span3 {width: 220px;}.span2 {width: 140px;}.span1 {width: 60px;}.offset12 {margin-left: 980px;}.row-fluid {width: 100%;*zoom: 1;}.row-fluid:before,.row-fluid:after {display: table;content: '' ;}.row-fluid:after {clear: both;}.row-fluid [class*=span] {display: block;float: left;width: 100%;min-height: 28px;margin-left: 2.127659574%;*margin-left: 2.0744680846382977%;-webkit-box-sizing: border-box;   -moz-box-sizing: border-box;    -ms-box-sizing: border-box;        box-sizing: border-box;}.row-fluid [class*=span]:first-child {margin-left: 0;}.row-fluid .span12 {width: 99.99999998999999%;*width: 99.94680850063828%;}.row-fluid .span11 {width: 91.489361693%;*width: 91.4361702036383%;}.row-fluid .span10 {width: 82.97872339599999%;*width: 82.92553190663828%;}.row-fluid .span9 {width: 74.468085099%;*width: 74.4148936096383%;}.row-fluid .span8 {width: 65.95744680199999%;*width: 65.90425531263828%;}.row-fluid .span7 {width: 57.446808505%;*width: 57.3936170156383%;}.row-fluid .span6 { }.row-fluid .span5 {width: 40.425531911%;*width: 40.3723404216383%;}.row-fluid .span4 {width:23.4%}.row-fluid .span3 {23.404255317%;*width: 23.3510638276383%;}.row-fluid .span2 {width: 14.89361702%;*width: 14.8404255306383%;}.row-fluid .span2 a {	text-decoration: none;}.row-fluid .span1 {width: 6.382978723%;*width: 6.329787233638298%;}.container {margin-right: auto;margin-left: auto;*zoom: 1;}.container:before,.container:after {display: table;content: '';}.container:after {clear: both;}.container-fluid {margin: 50px auto;width: 80%;padding-left: 20px;padding-right: 20px;padding-bottom: 30px;}.container-fluid:before,.container-fluid:after {display: table;content: '';}.container-fluid:after {clear: both;}p {margin: 0 0 9px;}p small {font-size: 11px;color: #999999;}.lead {margin-bottom: 18px;font-size: 20px;font-weight: 200;line-height: 27px;}h1,h2,h3,h4,h5,h6 {margin: 0;font-family: inherit;font-weight: bold;color: inherit;text-rendering: optimizelegibility;}h1 small,h2 small,h3 small,h4 small,h5 small,h6 small {font-weight: normal;color: #999999;}h1 {font-size: 30px;line-height: 36px;}h1 small {font-size: 18px;}h2 {font-size: 24px;line-height: 36px;}h2 small {font-size: 18px;}h3 {font-size: 18px;line-height: 27px;}h3 small {font-size: 14px;}h4,h5,h6 {line-height: 18px;}h4 {font-size: 14px;}h4 small {font-size: 12px;}h5 {font-size: 12px;}h6 {font-size: 11px;color: #999999;text-transform: uppercase;}.page-header {padding-bottom: 17px;margin: 18px 0;border-bottom: 1px solid #eeeeee;}.page-header h1 {line-height: 1;}ul,ol {padding: 0;margin: 0 0 9px 25px;}ul ul,ul ol,ol ol,ol ul {margin-bottom: 0;}ul {list-style: disc;}ol {list-style: decimal;}li {line-height: 18px;}ul.unstyled,ol.unstyled {margin-left: 0;list-style: none;}dl {margin-bottom: 18px;}dt,dd {line-height: 18px;}dt {font-weight: bold;line-height: 17px;}dd {margin-left: 9px;}.dl-horizontal dt {float: left;width: 120px;overflow: hidden;clear: left;text-align: right;text-overflow: ellipsis;white-space: nowrap;}.dl-horizontal dd {margin-left: 130px;}hr {margin: 18px 0;border: 0;border-top: 1px solid #eeeeee;border-bottom: 1px solid #ffffff;}strong {font-weight: bold;}em {font-style: italic;}table {max-width: 100%;background-color: transparent;border-collapse: collapse;border-spacing: 0;}.table {width: 100%;margin-bottom: 18px;}.table th,.table td {padding: 8px;line-height: 18px;text-align: left;vertical-align: top;border-top: 1px solid #dddddd;}.table th {font-weight: bold;}.table thead th {vertical-align: bottom;}.table tbody + tbody {border-top: 2px solid #dddddd;}.table-condensed th,.table-condensed td {padding: 4px 5px;}.table-bordered {border: 1px solid #dddddd;border-collapse: separate;*border-collapse: collapsed;border-left: 0;-webkit-border-radius: 4px;   -moz-border-radius: 4px;        border-radius: 4px;}.table tbody tr:hover td,.table tbody tr:hover th {background-color: #f5f5f5;}table .span1 {float: none;width: 44px;margin-left: 0;}table .span2 {float: none;width: 124px;margin-left: 0;}table .span3 {float: none;width: 204px;margin-left: 0;}table .span4 {float: none;width: 284px;margin-left: 0;}table .span5 {float: none;width: 364px;margin-left: 0;}table .span6 {float: none;width: 444px;margin-left: 0;}table .span7 {float: none;width: 524px;margin-left: 0;}table .span8 {float: none;width: 604px;margin-left: 0;}table .span9 {float: none;width: 684px;margin-left: 0;}table .span10 {float: none;width: 764px;margin-left: 0;}table .span11 {float: none;width: 844px;margin-left: 0;}table .span12 {float: none;width: 924px;margin-left: 0;}table .span13 {float: none;width: 1004px;margin-left: 0;}table .span14 {float: none;width: 1084px;margin-left: 0;}table .span15 {float: none;width: 1164px;margin-left: 0;}table .span16 {float: none;width: 1244px;margin-left: 0;}table .span17 {float: none;width: 1324px;margin-left: 0;}table .span18 {float: none;width: 1404px;margin-left: 0;}table .span19 {float: none;width: 1484px;margin-left: 0;}table .span20 {float: none;width: 1564px;margin-left: 0;}table .span21 {float: none;width: 1644px;margin-left: 0;}table .span22 {float: none;width: 1724px;margin-left: 0;}table .span23 {float: none;width: 1804px;margin-left: 0;}table .span24 {float: none;width: 1884px;margin-left: 0;}.quick-action {  display: block;  background-color: #fdfdfd;  background-image: -moz-linear-gradient(top, #fefefe, #f3f3f3);  background-image: -ms-linear-gradient(top, #fefefe, #f3f3f3);  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#fefefe), to(#f3f3f3));  background-image: -webkit-linear-gradient(top, #FDD7A5,#A9BEEC);  background-image: -o-linear-gradient(top, #fefefe, #f3f3f3);  background-image: linear-gradient(top, #fefefe, #f3f3f3);  box-shadow: 0 1px 2px rgba(100,100,100,0.1), 0 1px 0 #ffffff inset;  padding: 10px 0;  color: #999999;  text-shadow: 0 1px 0 #ffffff;  text-align: center;  margin-bottom: 15px;  border: 1px solid #d6d6d6;  border-radius: 3px;    }.quick-action:hover {  color: #666666;}.quick-action span {  margin: 0 auto 3px;  opacity: .4;  filter: alpha(opacity=40); /* for  IE < 9 */  -webkit-transition: opacity 0.2s ease-in-out;     -moz-transition: opacity 0.2s ease-in-out;      -ms-transition: opacity 0.2s ease-in-out;       -o-transition: opacity 0.2s ease-in-out;          transition: opacity 0.2s ease-in-out;}.quick-action:hover span {  opacity: .7;  filter: alpha(opacity=70); /* for  IE < 9 */}/* Boxes */.box {  border: 1px solid #d6d6d6;  box-shadow: 0 1px 3px rgba(100,100,100,0.1);  margin-bottom: 15px;  border-radius: 3px 3px 0 0;  overflow: visible;  position: relative;}.accordion .box {  border-radius: 0;  margin-bottom: -1px !important;}.accordion .box:first-child {  border-radius: 3px 3px 0 0;       }.box.login {  margin: 50px auto 0;  width: 350px;}.box-title {text-align:center;  padding: 10px 15px;margin-buttom:10px;  background-color: #f8f8f8;  background-image: -moz-linear-gradient(top, #fdfdfd, #f6f6f6);  background-image: -ms-linear-gradient(top, #fdfdfd, #f6f6f6);  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#fdfdfd), to(#f6f6f6));  background-image: -webkit-linear-gradient(top, #fdfdfd, #f6f6f6);  background-image: -o-linear-gradient(top, #fdfdfd, #f6f6f6);  background-image: linear-gradient(top, #fdfdfd, #f6f6f6);  border-bottom: 1px solid #d6d6d6;  color: #555555;  text-shadow: 0 1px 0 #ffffff;  font-size: 14px;  font-weight: bold;}.accordion .box-title {  border-bottom: 0;}.box-title[data-toggle=collapse]:hover {  cursor: pointer;}.box.alternate .box-title {  background-color: #444444;  background-image: -moz-linear-gradient(top, #555555, #333333);  background-image: -ms-linear-gradient(top, #555555, #333333);  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#555555), to(#333333));  background-image: -webkit-linear-gradient(top, #555555, #333333);  background-image: -o-linear-gradient(top, #555555, #333333);  background-image: linear-gradient(top, #555555, #333333);  color: #ffffff;  text-shadow: 0 1px 0 #000000;}.box-title span.ico {  display: inline-block;  padding: 10px;  margin: -10px 10px -10px -10px;  border-right: 1px solid #d6d6d6;}.box.alternate .box-title span.ico {  border-right: 1px solid #333;}.box-title span.label {  float: right;}.box-content, .box-content.collapse.in {  background-color: #ffffff;  padding: 15px;}.box.login .box-content form {  margin-bottom: 0;}.box.login .box-content .control-label {  width: 70px;}.box.login .box-content .controls {  margin-left: 90px;}.box.login .box-content .form-actions {  margin: 0 -15px -15px;  padding: 15px;  text-align: center;}.accordion .box-content.in {  border-top: 1px solid #d6d6d6;}.box-content div[class*=span] {  margin-top: 15px;  margin-bottom: 15px;}.box-content.collapse {  padding: 0;}.box-title .nav {  margin: -10px -15px;}.box-title .nav-tabs {  border-bottom: 0;  margin-bottom: -10px !important;}.box-title .nav-tabs li a {  border-radius: 0;  border-top: none;  border-left: 1px solid #d6d6d6;  border-right: 1px solid #d6d6d6;  border-bottom: none !important;  color: #999999;  margin: 0 ;  outline: none;}.box.alternate .box-title .nav-tabs li a {  text-shadow:none;  border-left: 1px solid #444444;  border-right: 1px solid #444444;}.box-title .nav-tabs li a:first-child {  border-left: none !important;}.box-title .nav-tabs li a:hover {  color: #666666;  background-color: transparent !important;  border-width: 0 1px;  border-color: #d6d6d6;}.box-title .nav-tabs li.active a {  background-color: #ffffff !important;  color: #444444;}/** Widgets **/.activity-list {  margin: 0;  list-style: none;}.activity-list li {  display: block;  border-bottom: 1px solid #eeeeee;}.activity-list li:last-child {  border-bottom: none;}.activity-list li a {  display: block;  padding: 7px 10px 7px;  color: #888888;}.activity-list li a:hover {  background-color: #fbfbfb;}.activity-list li a span {  font-size: 11px;  color: #aaaaaa;  font-style: italic;}.activity-list li a i {  opacity: 0.6;  margin-right: 10px;  vertical-align: sub;}.taskDesc i {  margin: 1px 5px 0;}.taskStatus, .taskOptions {  text-align: center !important;}.taskStatus .in-progress {  color: #64909E;}.taskStatus .pending {  color: #AC6363;}.taskStatus .done {  color: #75B468;}.box-content h3 {  background-color: #ffffff;  padding: 15px;  text-align:center;}.container-fluid1 {margin:0px auto;width:600px; *zoom: 1;background:#E4EAEC;padding-left:20px;padding-right:20px;padding-bottom:30px;}.btn-primary,.btn-primary:hover {color: #ffffff;text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);  text-decoration:none;} .btn-primary.active, {color: rgba(255, 255, 255, 0.75);} .btn {border-color: #ccc;border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);} .btn-primary {background-color: #0074cc;*background-color: #0055cc;background-image: -ms-linear-gradient(top, #0088cc, #0055cc);background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#0088cc), to(#AB2A2A));background-image: -webkit-linear-gradient(top, #0088cc,#6B5781c);background-image: -o-linear-gradient(top, #0088cc, #0055cc);background-image: -moz-linear-gradient(top, #0088cc, #0055cc);background-image: linear-gradient(top, #0088cc, #0055cc);background-repeat: repeat-x;border-color: #0055cc #0055cc #003580;border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);padding:10px;border-radius:4px;} .btn-primary:hover,.btn-primary:active,.btn-primary.active,.btn-primary.disabled,.btn-primary[disabled] {background-color: #0055cc;*background-color: #004ab3;} .btn-primary:active,.btn-primary.active {background-color: #004099 \9;} button, input[type=button], input[type=reset], input[type=submit] {  cursor: pointer;}      /* Header */#header {  background-color: #333333;  background-image: -moz-linear-gradient(top, #444444, #222222);  background-image: -ms-linear-gradient(top,#AAA7AD4,#B8CBEA2);  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#444444), to(#222222));  background-image: -webkit-linear-gradient(top#6B57811,#C6CDC32);  background-image: -o-linear-gradient(top, #444444, #222222);  background-image: linear-gradient(top, #444444, #222222);  box-shadow: 0 0 7px rgb(33, 122, 239, 0.23));  height: 70px;  margin-bottom: 0px;  position: relative;}#header form {  margin: 0 !important;}#header > a > img {  margin: 10px 0 0 25px;}#header .hright {  position: relative;  float: right;  margin-right: 30px;}#header .column {  float: left;  padding: 17px 10px;  position: relative;  vertical-align: middle;  color:#FFFFFF;} #header .column span{  float: left;  padding: 7px 10px;  position: relative;  vertical-align: middle;  color:#FFFFFF;} #header .search input {  background: #222222;  box-shadow: 0 -1px 0 #444444 inset, 0 1px 8px rgba(0,0,0,0.5) inset !important;  border: none !important;  padding: 8px 10px;  color: #666666;  margin-bottom: 0;}#header .userinfo {  background: none no-repeat scroll top left #373737;  border: 1px solid #272727;  box-shadow: 0 1px 0 #444444;  color: #CCCCCC;  display: inline-block;  padding: 4px;  position: relative;  vertical-align: top;}#header .userinfo img {  vertical-align: middle;}#header .userinfo span {  width: auto;  display:inline-block !important;}#header .dropdown-menu {  margin-top: -13px;  margin-left: -35px !important;}";
			}
 			string style.projectHistory()
			{
				return "body{font-family:Verdana,arial;color:#393a3a;}p{font-size:13px;line-height:18px;color:#393a3a;}h1,h2,h3,h4,h5,h5{font-weight:normal;color:#393a3a;}h1{font-size:22px;line-height:18px;}h5{color:#000000;text-align:center;}.container{width:100%;max-width:1000px;margin:auto;margin-top:20px;}.sidebar{margin : 0px 1% 0 0px;width:28%;float:left;  background-color:#FFFFFF;}.course_sharing{text-align: center;margin: -10px 2px;width: 215px;}.sidetext{color: #FFFFFF;font-weight: 600;}.instructors{font-size:15px;font-weight:bold;color:black;}.highlight{font-size:16px;}.highlight a{font-size:16px;color:#fff;}.context{padding:15px;}.content{width:65%;border: 2px solid trasnparent;background-color: whitesmoke;float:left;padding:5px 15px;margin:1px 0px 20px 0px;}.topic{color:#ffffff;}.softrain{background-color: black;color: #39d1b4;text-align:center;margin:15px 0px;}.softrain a{background-color: black;color: #39d1b4;text-align:center;font-size:22px;text-decoration:none;}.tuter{font-size:14px;color:#000000;font-weight:bold;}.tuter span{font-size:13px;color:#ccc;}.latest {border: 2px solid trasnparent;color: lightslategrey;width: 250;margin:-127 0 0 250px;}.colortakethis{color:white;font-size: 16px;text-align:center;padding:20px 20px;text-decoration:none;font-weight:bold;border-radius:5px;}.colortakethis a{background-color: #009CBD;color:white;font-size: 14px;padding:10px 20px;text-decoration:none;font-weight:bold;border-radius:5px;}.photo{float:left;width:250px;margin:10px 0px 0px 0px;}.photo1{float:left;margin:0px;padding:0px 5px 0px 0px}li{color:#000000;}li a{color:#000000;text-decoration:none;}.coursetitle{text-align:center;}.coursetitle h2{text-align:center;font-size:22px;font-weight:normal;}.coudesc{background-color: #FFF;padding:15px 18px;border-bottom: 1px solid #F5F5F5;font-weight: normal;border-radius: 5px;float: left;width: 95%;}.coudesc a{font-weight:normal;color:#000;text-decoration:none;padding:15px 20px;}.coudesc:hover{color:#fff;text-decoration:none;background-color:whitesmoke;border-radius: 5px;}.coudesc:hover a{color:#fff;text-decoration:none;background-color:#39d1b4;}.imag{width:100%;}.image{width: 98.6%;border: 2px solid #42B3E5;border-radius: 10px;}.page-numbers{color:#42B3E5;font-weight:bold;font-size:13px;}.row-fluid {  width: 100%;  *zoom: 1;}.row-fluid:before,.row-fluid:after {  display: table;  content: '';}.row-fluid:after {  clear: both;}.row-fluid [class*='span'] {  display: block;  float: left;  width: 100%;  margin-left: 2.127659574%;  *margin-left: 2.0744680846382977%;  -webkit-box-sizing: border-box; -moz-box-sizing: border-box;  -ms-box-sizing: border-box;  box-sizing: border-box;}.row-fluid [class*='span']:first-child {  margin-left: 0;}.row-fluid .span12 {  width: 99.99999998999999%;  *width: 99.94680850063828%;}.row-fluid .span11 {  width: 91.489361693%;  *width: 91.4361702036383%;}.row-fluid .span10 {  width: 82.97872339599999%;  *width: 82.92553190663828%;}.row-fluid .span9 {  width: 74.468085099%;  *width: 74.4148936096383%;}.row-fluid .span8 {  width: 65.95744680199999%;  *width: 65.90425531263828%;}.row-fluid .span7 {  width: 57.446808505%;  *width: 57.3936170156383%;}.row-fluid .span6 {  width: 48.93617020799999%;  *width: 48.88297871863829%;}.row-fluid .span5 {  width: 40.425531911%;  *width: 40.3723404216383%;}.row-fluid .span4 {  width: 31.914893614%;  *width: 31.8617021246383%;}.row-fluid .span3 {  width: 23.404255317%;  *width: 23.3510638276383%;}.row-fluid .span2 {  width: 14.89361702%;  *width: 14.8404255306383%;}.row-fluid .span1 {  width: 6.382978723%;  *width: 6.329787233638298%;}.content .row-fluid .coudesc:after{content:'\2192';color:#ffff;position: absolute;right: 12rem;margin-top: -13;font-size: 2.5rem;color:#ffff;}.tile{text-align:center;}.zc-formcontent{box-shadow: 0 0 10px grey;border-radius: 5px;padding: 0 0 10px 0 !important;}.zc-dialog-border-top {border-top: none !important;}";
			}
 			void invoice.generateForCompany(Company company)
			{
				for each  project in company.Project
				{
					proj = Project[ID == project];
					invID = insert into Invoice
			[
				Added_User=zoho.loginuser
				Project=proj.ID
				Customer=company.ID
				Contacts=proj.Contacts
				Hourly_Rate=proj.Hourly_Rate
				Status="Pending"
				Date_field=zoho.currentdate
				Due_Date=(zoho.currentdate + '1W:0D:0H:0M:0S')
			];
					for each  ts in Timesheet[Company == company.ID && Billable && Approved && Invoiced == false]
					{
						ts.Invoiced=true;
						ts.Invoice=invID;
					}
					for each  invoic in Invoice[Customer == company.ID]
					{
						inv = Invoice[ID == invID];
						inv.Total_Hours=Timesheet[Invoice == invID].sum(Hours);
						hourlyRate = Hourly_Rate[ID == proj.Hourly_Rate].Hourly_Rate;
						if(proj.Project_Type == "Hourly")
						{
							inv.Project_Cost=ifnull(hourlyRate,0.0) * ifnull(inv.Total_Hours,0.0);
						}
						else
						{
							inv.Project_Cost=ifnull(proj.Expected_Revenue,0.0);
						}
					}
					openUrl("#View:Invoice_Interface?compInvIDStr=" + company.ID,"same window");
				}
			}
 			void invoice.generateForProject(Project project)
			{
				if(Timesheet[Project == project.ID && Billable && Approved && Status == "Approved" && Invoiced == false].count() > 0)
				{
					invID = insert into Invoice
			[
				Added_User=zoho.loginuser
				Project=project.ID
				Customer=project.Company
				Contacts=project.Contacts
				Hourly_Rate=project.Hourly_Rate
				Status="Pending"
				Date_field=zoho.currentdate
				Due_Date=(zoho.currentdate + '1W:0D:0H:0M:0S')
			];
					for each  ts in Timesheet[Project == project.ID && Billable && Approved && Status == "Approved" && Invoiced == false]
					{
						ts.Invoiced=true;
						ts.Invoice=invID;
					}
					inv = Invoice[ID == invID];
					inv.Total_Hours=Timesheet[Invoice == invID].sum(Hours);
					if(project.Project_Type == "Hourly")
					{
						hourlyRate = Hourly_Rate[ID == project.Hourly_Rate].Hourly_Rate;
						inv.Project_Cost=hourlyRate * ifnull(inv.Total_Hours,0.0);
					}
					else
					{
						inv.Project_Cost=ifnull(project.Expected_Revenue,0.0);
					}
					openUrl("#View:Invoice_Interface?invoiceIDStr=" + invID,"same window");
				}
				else
				{
					openUrl("#Form:Alert?zc_LoadIn=dialog&zc_Header=false&msg=noPendTS&Project=" + project.ID,"same window");
				}
			}
 			void notify.CustomerOnProjCreation(Project proj)
			{
				cust = Company[ID == proj.Company];
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyCustomer("Project"))
					{
						projIntUrl = "https://" + zoho.adminuser + ".zohocreator.com/portal/" + zoho.appuri + "#View:Project_Interface?projectIDStr=" + proj.ID;
						sendmail
						[
							from :zoho.adminuserid
							to :cust.Primary_Email
							subject :"New Project has been created"
							message :"Hi, <br />\nThe " + proj.Title + " Project is created.Click <a href='" + projIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.adminuser
						]
					}
				}
			}
 			void notify.adminOnFileCreation(Add_File file)
			{
				if(thisapp.settings.enableNotification())
				{
					fileIntUrl = "https://creator.zoho.com" + zoho.appuri + "#Form:Add_File?recLinkID=file.ID&viewLinkName=All_Files";
					sendmail
					[
						from :zoho.loginuserid
						to :zoho.adminuserid
						subject :"New File has been Added"
						message :"Hi, <br />\nThe " + file.File_Name + " File is Added. Click <a href='" + fileIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
					]
				}
			}
 			void notify.adminOnRequirementOnCreation(Requirement req)
			{
				if(thisapp.settings.enableNotification())
				{
					reqIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:View_Details?type=tList&idStr=" + req.ID;
					sendmail
					[
						from :zoho.loginuserid
						to :zoho.adminuserid
						subject :"New Requirement has been created"
						message :"Hi, <br />\nThe " + req.Title + " Requirement is created. Click <a href='" + reqIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
					]
				}
			}
 			void notify.managerOnIssueCreation(Issues issue)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyManager("Issues"))
					{
						manEmail = Manager[ID == issue.Manager].Email;
						issueIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Issues_Interface?issueIDStr=" + issue.ID;
						sendmail
						[
							from :zoho.adminuserid
							to :manEmail
							subject :"New Issue has been Assigned"
							message :"Hi, <br />\nThe " + issue.Title + " Issue is Assigned to you. Click <a href='" + issueIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
						]
					}
				}
			}
 			void notify.managerOnProjectCreation(Project proj)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyManager("Project"))
					{
						manEmail = Manager[ID == proj.Manager].Email;
						projIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Project_Interface?projectIDStr=" + proj.ID;
						if(manEmail != null)
						{
							sendmail
							[
								from :zoho.adminuserid
								to :manEmail
								subject :"New Project has been Assigned"
								message :"Hi, <br />\nThe " + proj.Title + " Project is assigned to you.Click <a href='" + projIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
							]
						}
					}
				}
			}
 			void notify.managerOnReqCreation(Requirement req)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyManager("Requirement"))
					{
						manEmail = Manager[ID == req.Manager].Email;
						reqIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:View_Details?type=tList&idStr=" + req.ID;
						if(manEmail != null)
						{
							sendmail
							[
								from :zoho.adminuserid
								to :manEmail
								subject :"New Requirement has been Assigned"
								message :"Hi, <br />\nThe " + req.Title + " Requirement is assigned to you.Click <a href='" + reqIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
							]
						}
					}
				}
			}
 			void notify.managerOnTaskCreation(Task task)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyManager("Task"))
					{
						manEmail = Manager[ID == task.Manager].Email;
						taskIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:View_Details?type=task&idStr=" + task.ID;
						if(manEmail != null)
						{
							sendmail
							[
								from :zoho.adminuserid
								to :manEmail
								subject :"New Task has been Assigned"
								message :"Hi, <br />\nThe " + task.Title + " Task is assigned to you.Click <a href='" + taskIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
							]
						}
					}
				}
			}
 			void notify.CustomerOnIssueCreation(Issues issue)
			{
				cust = Company[ID == issue.Company];
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyCustomer("Issues"))
					{
						issueIntUrl = "https://" + zoho.adminuser + ".zohocreator.com/portal/" + zoho.appuri + "#View:Issues_Interface?issueIDStr=" + issue.ID;
						sendmail
						[
							from :zoho.loginuserid
							to :cust.Primary_Email
							subject :"New Issue has been created"
							message :"Hi, <br />\nThe " + issue.Title + " Issue is created. Click <a href='" + issueIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
						]
					}
				}
			}
 			void notify.CustomerOnReqCreation(Requirement req)
			{
				cust = Company[ID == req.Company];
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyCustomer("Requirement"))
					{
						reqIntUrl = "https://" + zoho.adminuser + ".zohocreator.com/portal/" + zoho.appuri + "#View:View_Details?type=tList&idStr=" + req.ID;
						sendmail
						[
							from :zoho.adminuserid
							to :cust.Primary_Email
							subject :"New Requirement has been created"
							message :"Hi, <br />\nThe " + req.Title + " Requirement is created. Click <a href='" + reqIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.adminuser
						]
					}
				}
			}
 			void notify.adminOnIssueCreation(Issues issue)
			{
				if(thisapp.settings.enableNotification())
				{
					issueIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Issues_Interface?issueIDStr=" + issue.ID;
					sendmail
					[
						from :zoho.loginuserid
						to :zoho.adminuserid
						subject :"New Issue has been created"
						message :"Hi, <br />\nThe " + issue.Title + " Issue is created. Click <a href='" + issueIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
					]
				}
			}
 			void notify.adminTaskOnCreation(Task task)
			{
				if(thisapp.settings.enableNotification())
				{
					taskIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:View_Details?type=task&idStr=" + task.ID;
					sendmail
					[
						from :zoho.loginuserid
						to :zoho.adminuserid
						subject :"New Task has been created"
						message :"Hi, <br />\nThe " + task.Title + " Requirement is created. Click <a href='" + taskIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
					]
				}
			}
 			void notify.followersOnIssueCreation(Issues issue)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyEmployee("Issue"))
					{
						issueIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Issues_Interface?issueIDStr=" + issue.ID;
						for each  followers in issue.Followers
						{
							followersEmail = Employee[ID == followers].Email;
							sendmail
							[
								from :zoho.adminuserid
								to :followersEmail
								subject :"New Issue has been Assigned"
								message :"Hi, <br />\nThe " + issue.Title + " Issue is Assigned. Click <a href='" + issueIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
							]
						}
					}
				}
			}
 			void notify.followersOnReqCreation(Requirement req)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyEmployee("Requirement"))
					{
						reqIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:View_Details?type=tList&idStr=" + req.ID;
						if(req.Followers != null)
						{
							for each  followerID in req.Followers
							{
								followerEmail = Employee[ID == followerID].Email;
								sendmail
								[
									from :zoho.adminuserid
									to :followerEmail
									subject :"New Requirement has been Assigned"
									message :"Hi, <br />\nThe " + req.Title + " Requirement is Assigned. Click <a href='" + reqIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
								]
							}
						}
					}
				}
			}
 			void notify.ownerOnFileCreation(Add_File file)
			{
				if(thisapp.settings.enableNotification())
				{
					fileProject = Project[ID == file.Project];
					ownerEmail = Employee[ID == fileProject.Owner].Email;
					fileIntUrl = "https://creator.zoho.com" + zoho.appuri + "#Form:Add_File?recLinkID=file.ID&viewLinkName=All_Files";
					sendmail
					[
						from :zoho.loginuserid
						to :ownerEmail
						subject :"New File has been Assigned"
						message :"Hi, <br />\nThe " + file.File_Name + " File is assigned to you. Click <a href='" + fileIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
					]
				}
			}
 			void notify.ownerOnReqCreation(Requirement req)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyEmployee("Requirement"))
					{
						ownerEmail = Employee[ID == req.Owner].Email;
						reqIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:View_Details?type=tList&idStr=" + req.ID;
						if(ownerEmail != null)
						{
							sendmail
							[
								from :zoho.adminuserid
								to :ownerEmail
								subject :"New Requirement has been Assigned"
								message :"Hi, <br />\nThe " + req.Title + " Requirement is assigned to you.Click <a href='" + reqIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
							]
						}
					}
				}
			}
 			void notify.ownerOnTaskCreation(Task task)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyEmployee("Task"))
					{
						ownerEmail = Employee[ID == task.Owner].Email;
						taskIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:View_Details?type=task&idStr=" + task.ID;
						if(ownerEmail != null)
						{
							sendmail
							[
								from :zoho.adminuserid
								to :ownerEmail
								subject :"New Task has been Assigned"
								message :"Hi, <br />\nThe " + task.Title + " Task is assigned to you. Click <a href='" + taskIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
							]
						}
					}
				}
			}
 			void notify.CustomerTaskOnCreation(Task task)
			{
				cust = Company[ID == task.Company];
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyCustomer("Task"))
					{
						taskIntUrl = "https://" + zoho.adminuser + ".zohocreator.com/portal/" + zoho.appuri + "#View:View_Details?type=task&idStr=" + task.ID;
						sendmail
						[
							from :zoho.adminuserid
							to :cust.Primary_Email
							subject :"New Task has been created"
							message :"Hi, <br />\nThe " + task.Title + " Requirement is created. Click <a href='" + taskIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.adminuser
						]
					}
				}
			}
 			void notify.adminOnProjectCreation(Project proj)
			{
				if(thisapp.settings.enableNotification())
				{
					projIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Project_Interface?projectIDStr=" + proj.ID;
					sendmail
					[
						from :zoho.loginuserid
						to :zoho.adminuserid
						subject :"New Project has been created"
						message :"Hi, <br />\nThe " + proj.Title + " Project is created.Click <a href='" + projIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
					]
				}
			}
 			void notify.followersOnProjectCreation(Project proj)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyEmployee("Project"))
					{
						projIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Project_Interface?projectIDStr=" + proj.ID;
						if(proj.Followers != null)
						{
							for each  followerID in proj.Followers
							{
								followerEmail = Employee[ID == followerID].Email;
								sendmail
								[
									from :zoho.adminuserid
									to :followerEmail
									subject :"New Project has been Assigned"
									message :"Hi, <br />\nThe " + proj.Title + " Project is Assigned. Click <a href='" + projIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
								]
							}
						}
					}
				}
			}
 			void notify.followersOnTaskCreation(Task task)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyEmployee("Task"))
					{
						taskIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:View_Details?type=task&idStr=" + task.ID;
						if(task.Followers != null)
						{
							for each  followerID in task.Followers
							{
								followerEmail = Employee[ID == followerID].Email;
								sendmail
								[
									from :zoho.adminuserid
									to :followerEmail
									subject :"New Task has been Assigned"
									message :"Hi, <br />\nThe " + task.Title + " Task is Assigned. Click <a href='" + taskIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
								]
							}
						}
					}
				}
			}
 			void notify.managerOnFileUploaded(Add_File file)
			{
				if(thisapp.settings.enableNotification())
				{
					fileProject = Project[ID == file.Project];
					manEmail = Manager[ID == fileProject.Manager].Email;
					fileIntUrl = "https://creator.zoho.com" + zoho.appuri + "#Form:Add_File?recLinkID=file.ID&viewLinkName=All_Files";
					sendmail
					[
						from :zoho.loginuserid
						to :manEmail
						subject :"New File has been Added"
						message :"Hi, <br />\nThe " + file.File_Name + " File is assigned to you. Click <a href='" + fileIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
					]
				}
			}
 			void notify.ownerOnIssueCreation(Issues issue)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyEmployee("Issue"))
					{
						ownerEmail = Employee[ID == issue.Owner].Email;
						issueIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Issues_Interface?issueIDStr=" + issue.ID;
						sendmail
						[
							from :zoho.adminuserid
							to :ownerEmail
							subject :"New Issue has been Assigned"
							message :"Hi, <br />\nThe " + issue.Title + " Issue is Assigned to you. Click <a href='" + issueIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
						]
					}
				}
			}
 			void notify.ownerOnProjectCreation(Project proj)
			{
				if(thisapp.settings.enableNotification())
				{
					if(thisapp.settings.notifyEmployee("Project"))
					{
						ownerEmail = Employee[ID == proj.Owner].Email;
						projIntUrl = "https://creator.zoho.com" + zoho.appuri + "#View:Project_Interface?projectIDStr=" + proj.ID;
						if(ownerEmail != null)
						{
							sendmail
							[
								from :zoho.adminuserid
								to :ownerEmail
								subject :"New Project has been Assigned"
								message :"Hi, <br />\nThe " + proj.Title + " Project is assigned to you.Click <a href='" + projIntUrl + "'>here</a> to read more<br />\n<br />\nThank You<br />\nYours,<br />\n" + zoho.loginuser
							]
						}
					}
				}
			}
 			void appUnshare.toManager(string email)
			{
				thisapp.permissions.deleteuser(email);
			}
 			void appUnshare.toEmployee(string email)
			{
				thisapp.permissions.deleteuser(email);
			}
	}



	workflow
	{
		form
		{
			Run_Scripts_On_Button_Cli as "Run Scripts - On Button Click of Add Milestone"
			{
				type =  form
				form = Project_Actions
				button = Add_Milestone
				on click
				{
					actions 
					{
					on click
					(
						openUrl("#Form:MileStones?zc_Header=false&zc_LoadIn=dialog&Project=" + input.Project,"same window");
					)
					}
				}
			}
			Run_Scripts_On_Button_Cli1 as "Run Scripts - On Button Click of Generate Quote"
			{
				type =  form
				form = Project_Actions
				button = Generate_Quote
				on click
				{
					actions 
					{
					on click
					(
						proj = Project[ID == input.Project];
										if(Quote[Project == input.Project].count() > 0)
										{
											openUrl("#Form:Alert?zc_LoadIn=dialog&zc_Header=false&msg=quoteExist&Project=" + proj.ID,"same window");
										}
										else
										{
											thisapp.quote.Generate(proj);
										}
					)
					}
				}
			}
			Run_Scripts_On_Button_Cli2 as "Run Scripts - On Button Click of Generate Invoice"
			{
				type =  form
				form = Project_Actions
				button = Generate_Invoice
				on click
				{
					actions 
					{
					on click
					(
						thisapp.invoice.generateForProject(Project[ID == input.Project]);
					)
					}
				}
			}
			Run_Scripts_On_Button_Cli3 as "Run Scripts - On Button Click"
			{
				type =  form
				form = Task_Actions
				button = Save
				on click
				{
					actions 
					{
					on click
					(
						t = Task[ID = input.Task];
										t.Project=input.Project;
										t.MileStone=input.MileStones;
										t.Requirement=input.Requirement;
										t.Status=input.Status;
										t.Owner=input.Assign_To;
										t.Manager=input.Manager;
										t.Followers=input.Followers;
										openUrl("#View:View_Details?type=task&idStr=" + t.ID,"same window");
										ownerMail = Employee[ID == input.Assign_To].Email;
										if(input.Manager != null)
										{
											thisapp.notify.managerOnTaskCreation(t);
										}
										if(input.Assign_To != null)
										{
											thisapp.notify.ownerOnTaskCreation(t);
										}
										if(input.Followers != null)
										{
											thisapp.notify.followersOnTaskCreation(t);
										}
										openUrl("#Script:dialog.close","same window");
					)
					}
				}
			}
			Run_Scripts_On_Button_Cli4 as "Run Scripts - On Button Click"
			{
				type =  form
				form = My_Registeration
				button = Submit
				on click
				{
					actions 
					{
					on click
					(
						comp = Company[Primary_Email == zoho.loginuserid];
										custInfoID = insert into Company
										[
											Added_User=zoho.loginuser
											Primary_Email=input.Primary_Email
											Address=input.Address
											Phone=input.Primary_Phone
											Name=input.Company_Name
											Website=input.Company_Website
										];
										insert into Contact
										[
											Added_User=zoho.loginuser
											Company=custInfoID
											Email=input.Primary_Email
											Name=input.Name
											Phone=input.Primary_Phone
										]
										openUrl("#Script:page.refresh","same window");
					)
					}
				}
			}
			Run_Scripts_On_Button_Cli5 as "Run Scripts - On Button Click"
			{
				type =  form
				form = Issue_Actions
				button = Save
				on click
				{
					actions 
					{
					on click
					(
						issue = Issues[ID = input.Issues];
										issue.Project=input.Project;
										issue.Requirement=input.Requirement;
										issue.Status=input.Status;
										issue.Owner=input.Assign_To;
										issue.Manager=input.Manager;
										issue.Followers=input.Followers;
										openUrl("#View:Issues_Interface?issueIDStr=" + issue.ID,"same window");
										if(input.Manager != null)
										{
											thisapp.notify.managerOnIssueCreation(issue);
										}
										if(input.Assign_To != null)
										{
											thisapp.notify.ownerOnIssueCreation(issue);
										}
										if(input.Followers != null)
										{
											thisapp.notify.followersOnIssueCreation(issue);
										}
										openUrl("#Script:dialog.close","same window");
					)
					}
				}
			}
			Run_Scripts_On_Button_Cli6 as "Run Scripts - On Button Click"
			{
				type =  form
				form = Close_Project
				button = Close
				on click
				{
					actions 
					{
					on click
					(
						proj = Project[ID == input.Project];
										thisapp.project.statusUpdate(proj);
										openUrl("#View:Project_Interface?projectIDStr=" + proj.ID,"same window");
					)
					}
				}
			}
			Run_Scripts_On_Button_Cli7 as "Run Scripts - On Button Click"
			{
				type =  form
				form = Requirement_Actions
				button = Save
				on click
				{
					actions 
					{
					on click
					(
						requirment = Requirement[ID = input.Requirement];
										requirment.Project=input.Project;
										requirment.MileStone=input.MileStones;
										requirment.Owner=input.Assign_To;
										requirment.Manager=input.Manager;
										requirment.Status=input.Status;
										requirment.Followers=input.Followers;
										openUrl("#View:View_Details?type=tList&idStr=" + requirment.ID,"samewindow");
										ownerMail = Employee[ID == input.Assign_To].Email;
										if(input.Manager != null)
										{
											thisapp.notify.managerOnReqCreation(requirment);
										}
										if(input.Assign_To != null)
										{
											thisapp.notify.ownerOnReqCreation(requirment);
										}
										if(input.Followers != null)
										{
											thisapp.notify.followersOnReqCreation(requirment);
										}
										openUrl("#Script:dialog.close","same window");
					)
					}
				}
			}
			Run_Scripts_On_Button_Cli8 as "Run Scripts - On Button Click of Proceed"
			{
				type =  form
				form = Alert
				button = Proceed
				on click
				{
					actions 
					{
					on click
					(
						if(input.msg == "quoteExist")
										{
											proj = Project[ID == input.Project];
											thisapp.quote.Generate(proj);
										}
										else
										{
											openUrl("#Script:dialog.close","same window");
										}
					)
					}
				}
			}
			Run_Scripts_On_Button_Cli9 as "Run Scripts - On Button Click of Close"
			{
				type =  form
				form = Alert
				button = Close
				on click
				{
					actions 
					{
					on click
					(
						openUrl("#Script:dialog.close","same window");
					)
					}
				}
			}
			Enable_Notification_is_tr1 as "Enable Notification is true"
			{
				type =  form
				form = Project_Settings
				record event = on add or edit

	field rules
	{
					actions  (Enable_Notification == true)
					{
						show Notify_Employee,Notify_Manager,Send_Notification_Emails_to,plain1,Notify_Customer;
					}
	}

			}
			Enable_Notification_is_fa1 as "Enable Notification is false"
			{
				type =  form
				form = Project_Settings
				record event = on add or edit

	field rules
	{
					actions 
					{
						hide Notify_Employee,Notify_Manager,Send_Notification_Emails_to,plain1,Notify_Customer;
					}
	}

			}
			Run_Scripts_While_Adding_25 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Company
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Project;
										hide Contacts;
						)
					}
	}

			}
			Run_Scripts_While_Editing12 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Company
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Project;
										hide Contacts;
										disable Primary_Email;
						)
					}
	}

			}
			Run_Scripts_While_Adding_26 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Contact
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Project;
										if(input.Company != null)
										{
											hide Company;
										}
										if(thisapp.user.isCustomer())
										{
											hide Company;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_27 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Contact
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			Run_Scripts_While_Editing13 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Contact
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											disable Email;
										hide Project;
						)
					}
	}

			}
			Run_Scripts_While_Adding_28 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Project
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											if(Project_Settings[ID is not null].count() == 0)
										{
											thisapp.settings.update();
										}
										hide Notes;
										hide Issues;
										hide End_Date;
										hide Revenue;
										hide Requirements.MileStone;
										hide Requirements.Status;
										hide Requirements.Manager;
										hide Requirements.Owner;
										hide Requirements.Followers;
										hide Requirements.Company;
										hide Requirements.Contacts;
										if(!thisapp.settings.enableAttachments())
										{
											hide Files;
										}
										hide Files.Company;
										hide Files.Contact;
										hide Files.Milestone;
										hide Files.Task;
										hide Files.Requirement;
										hide Notes.Task;
										if(input.Company != null)
										{
											hide Company;
										}
										if(thisapp.user.isEmployee())
										{
											input.Owner = Employee[Email == zoho.loginuserid].ID;
											if(Employee[Email == zoho.loginuserid].Managers_Name != null)
											{
												input.Manager = Employee[Email == zoho.loginuserid].Managers_Name;
											}
										}
										if(thisapp.user.isManager())
										{
											input.Manager = Manager[Email == zoho.loginuserid].ID;
										}
										if(thisapp.user.isCustomer())
										{
											if(input.Company == null)
											{
												input.Company = Company[Primary_Email == zoho.loginuserid].ID;
											}
											hide Company;
											hide Manager;
											hide Owner;
											hide Followers;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_29 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Project
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(input.Project_Type == "Fixed" && input.Expected_Revenue == null)
										{
											alert "Enter Expected Revenue for Fixed type Projects";
											cancel submit;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_30 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Project
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											project = Project[ID == input.ID];
										thisapp.notify.adminOnProjectCreation(project);
										if(input.Owner != null)
										{
											thisapp.notify.ownerOnProjectCreation(project);
										}
										if(input.Followers != null)
										{
											thisapp.notify.followersOnProjectCreation(project);
										}
										if(input.Manager != null)
										{
											thisapp.notify.managerOnProjectCreation(project);
										}
										if(input.Company != null)
										{
											thisapp.notify.CustomerOnProjCreation(project);
										}
										if(input.Start_Date == null)
										{
											input.Start_Date = zoho.currentdate;
										}
										if(input.Company != null)
										{
											for each  row in input.Requirements
											{
												row.Company=input.Company;
											}
										}
										if(input.Company != null)
										{
											for each  file in input.Files
											{
												file.Company=input.Company;
											}
										}
										openUrl("#View:Project_Interface?projectIDStr=" + input.ID,"same window");
						)
					}
	}

			}
			Run_Scripts_While_Editing14 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Project
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Requirements.MileStone;
										hide Requirements.Status;
										hide Requirements.Manager;
										hide Requirements.Owner;
										hide Requirements.Followers;
										hide Requirements.Company;
										hide Requirements.Contacts;
										hide Files.Milestone;
										hide Files.Task;
										hide Files.Requirement;
										hide Notes;
										hide Notes.Task;
										hide Issues;
										hide Files.Company;
										hide Files.Contact;
						)
					}
	}

			}
			Run_Scripts_While_Editing15 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Project
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											project = Project[ID == input.ID];
										thisapp.notify.adminOnProjectCreation(project);
										if(input.Owner != null)
										{
											thisapp.notify.ownerOnProjectCreation(project);
										}
										if(input.Followers != null)
										{
											thisapp.notify.followersOnProjectCreation(project);
										}
										if(input.Manager != null)
										{
											thisapp.notify.managerOnProjectCreation(project);
										}
										openUrl("#View:Project_Interface?projectIDStr=" + input.ID,"same window");
						)
					}
	}

			}
			Run_Scripts_On_Always7 as "Run Scripts - On Always"
			{
				type =  form
				form = Project
				record event = on add or edit

	on user input of Hourly_Rate
	{
					actions 
					{
						custom deluge script
						(
											if(input.Hourly_Rate != null)
										{
											hrlyRate = Hourly_Rate[ID == input.Hourly_Rate].Hourly_Rate;
											input.Expected_Revenue = (ifnull(hrlyRate,0.0) * ifnull(input.Expected_Hours,0.0)).round(2);
										}
						)
					}
	}

			}
			Run_Scripts_On_Always8 as "Run Scripts - On Always"
			{
				type =  form
				form = Project
				record event = on add or edit

	on user input of Status
	{
					actions 
					{
						custom deluge script
						(
											if(input.Status == "Completed")
										{
											input.End_Date = zoho.currentdate;
										}
						)
					}
	}

			}
			Run_Scripts_On_Always9 as "Run Scripts - On Always"
			{
				type =  form
				form = Project
				record event = on add or edit

	on user input of Requirements.Expected_Hours
	{
					actions 
					{
						custom deluge script
						(
											totalHrs = 0.0;
										for each  rowReq in Requirements
										{
											totalHrs = totalHrs + ifnull(rowReq.Expected_Hours,0.0);
										}
										input.Expected_Hours = totalHrs;
										if(input.Hourly_Rate != null)
										{
											hrlyRate = Hourly_Rate[ID == input.Hourly_Rate].Hourly_Rate;
											input.Expected_Revenue = (ifnull(hrlyRate,0.0) * input.Expected_Hours).round(2);
										}
						)
					}
	}

			}
			Run_Scripts_On_Always10 as "Run Scripts - On Always"
			{
				type =  form
				form = Project
				record event = on add or edit

	on user input of Expected_Hours
	{
					actions 
					{
						custom deluge script
						(
											if(input.Expected_Hours != null)
										{
											if(input.Hourly_Rate != null)
											{
												hrlyRate = Hourly_Rate[ID == input.Hourly_Rate].Hourly_Rate;
												input.Expected_Revenue = (ifnull(hrlyRate,0.0) * ifnull(input.Expected_Hours,0.0)).round(2);
											}
											if(input.Hourly_Rate == null)
											{
												input.Expected_Revenue = 0.0;
											}
										}
						)
					}
	}

			}
			Run_Scripts_On_Always11 as "Run Scripts - On Always"
			{
				type =  form
				form = Project
				record event = on add or edit

	on user input of Project_Type
	{
					actions 
					{
						custom deluge script
						(
											if(input.Project_Type == "Fixed")
										{
											hide Hourly_Rate;
											input.Hourly_Rate = null;
											input.Expected_Revenue = 0.0;
										}
										if(input.Project_Type == "Hourly")
										{
											show Hourly_Rate;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_31 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = MileStones
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Quote;
										hide Files.Project;
										hide Files.Requirement;
										hide Files.Task;
										hide Files.Company;
										hide Files.Contact;
										if(input.Project != null)
										{
											hide Project;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_32 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = MileStones
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:dialog.close","samewindow");
						)
					}
	}

			}
			Run_Scripts_While_Editing16 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = MileStones
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Quote;
										hide Files.Company;
										hide Files.Contact;
						)
					}
	}

			}
			Run_Scripts_On_Always12 as "Run Scripts - On Always"
			{
				type =  form
				form = MileStones
				record event = on add or edit

	on add row of Files
	{
					actions 
					{
						custom deluge script
						(
											row.Project=input.Project;
						)
					}
	}

			}
			Run_Scripts_While_Adding_33 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Requirement
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Tasks;
										hide Comments;
										hide Company;
										hide Contacts;
										hide Files.Project;
										hide Files.Milestone;
										hide Files.Task;
										hide Files.Company;
										hide Files.Contact;
										if(!thisapp.settings.enableAttachments())
										{
											hide Files;
										}
										if(input.Project != null)
										{
											hide Project;
										}
										if(thisapp.user.isEmployee())
										{
											input.Owner = Employee[Email == zoho.loginuserid].ID;
											input.Manager = Employee[Email == zoho.loginuserid].Managers_Name;
										}
										if(thisapp.user.isManager())
										{
											input.Manager = Manager[Email == zoho.loginuserid].ID;
										}
										if(thisapp.user.isCustomer())
										{
											if(input.Company == null)
											{
												input.Company = Company[Primary_Email == zoho.loginuserid].ID;
											}
											hide MileStone;
											hide Company;
											hide Manager;
											hide Owner;
											hide Followers;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_34 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Requirement
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											proj = Project[ID == input.Project];
										thisapp.project.updateExpHrs(proj);
										input.Company = proj.Company;
										input.Contacts = proj.Contacts;
										req = Requirement[ID == input.ID];
										thisapp.notify.adminOnRequirementOnCreation(req);
										if(input.Manager != null)
										{
											thisapp.notify.managerOnReqCreation(req);
										}
										if(input.Owner != null)
										{
											thisapp.notify.ownerOnReqCreation(req);
										}
										if(input.Followers != null)
										{
											thisapp.notify.followersOnReqCreation(req);
										}
										if(input.Company != null)
										{
											thisapp.notify.CustomerOnReqCreation(req);
										}
										openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			Run_Scripts_While_Editing17 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Requirement
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Tasks;
										hide Comments;
										hide Company;
										hide Contacts;
										hide Files.Project;
										hide Files.Milestone;
										hide Files.Task;
										hide Files.Company;
										hide Files.Contact;
										if(!thisapp.settings.enableAttachments())
										{
											hide Files;
										}
						)
					}
	}

			}
			Run_Scripts_While_Editing18 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Requirement
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											proj = Project[ID == input.Project];
										thisapp.project.updateExpHrs(proj);
						)
					}
	}

			}
			Run_Scripts_On_Always13 as "Run Scripts - On Always"
			{
				type =  form
				form = Requirement
				record event = on add or edit

	on add row of Files
	{
					actions 
					{
						custom deluge script
						(
											row.Company=input.Company;
										row.Project=input.Project;
										row.Milestone=input.MileStone;
						)
					}
	}

			}
			Run_Scripts_While_Adding_35 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Task
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Company;
										hide Contact;
										hide Notes;
										hide Issues;
										hide Comments;
										hide Issues.Requirement;
										hide Files.Project;
										hide Files.Milestone;
										hide Files.Requirement;
										hide Notes.Project;
										hide Notes.Task;
										hide Notes.Quote;
										hide Notes.Invoice;
										hide Files.Company;
										hide Files.Contact;
										if(!thisapp.settings.enableAttachments())
										{
											hide Files;
										}
										if(input.Project != null)
										{
											hide Project;
										}
										if(thisapp.user.isEmployee())
										{
											input.Owner = Employee[Email == zoho.loginuserid].ID;
											input.Manager = Employee[Email == zoho.loginuserid].Managers_Name;
										}
										if(thisapp.user.isManager())
										{
											input.Manager = Manager[Email == zoho.loginuserid].ID;
										}
										if(thisapp.user.isCustomer())
										{
											if(input.Company == null)
											{
												input.Company = Company[Primary_Email == zoho.loginuserid].ID;
											}
											hide Company;
											hide Manager;
											hide Owner;
											hide Followers;
											hide MileStone;
											hide Requirement;
											hide Issues.Manager;
											hide Issues.Owner;
											hide Issues.Followers;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_36 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Task
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											proj = Project[ID == input.Project];
										input.Company = proj.Company;
										task = Task[ID == input.ID];
										thisapp.notify.adminTaskOnCreation(task);
										if(input.Manager != null)
										{
											thisapp.notify.managerOnTaskCreation(task);
										}
										if(input.Owner != null)
										{
											thisapp.notify.ownerOnTaskCreation(task);
										}
										if(input.Followers != null)
										{
											thisapp.notify.followersOnTaskCreation(task);
										}
										if(input.Company != null)
										{
											thisapp.notify.CustomerTaskOnCreation(task);
										}
										openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			Run_Scripts_While_Editing19 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Task
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Comments;
										hide Company;
										hide Contact;
										hide Notes.Project;
										hide Notes.Task;
										hide Notes.Quote;
										hide Notes.Invoice;
										hide Issues.Project;
										hide Issues.MileStone;
										hide Issues.Requirement;
										hide Issues.Company;
										hide Issues.Contact;
										hide Files.Project;
										hide Files.Milestone;
										hide Files.Requirement;
										if(thisapp.user.isCustomer())
										{
											if(input.Company == null)
											{
												input.Company = Company[Primary_Email == zoho.loginuserid].ID;
											}
											hide Company;
											hide Manager;
											hide Owner;
											hide Followers;
											hide MileStone;
											hide Requirement;
											hide Issues.Manager;
											hide Issues.Owner;
											hide Issues.Followers;
										}
										if(!thisapp.settings.enableAttachments())
										{
											hide Files;
										}
						)
					}
	}

			}
			Run_Scripts_On_Always14 as "Run Scripts - On Always"
			{
				type =  form
				form = Task
				record event = on add or edit

	on add row of Files
	{
					actions 
					{
						custom deluge script
						(
											row.Project=input.Project;
										row.Milestone=input.MileStone;
										row.Requirement=input.Requirement;
						)
					}
	}

			}
			Run_Scripts_While_Adding_37 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Issues
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide MileStone;
										hide Requirement;
										hide Task;
										hide Comments;
										hide Company;
										hide Contact;
										if(input.Project != null)
										{
											hide Project;
										}
										if(thisapp.user.isCustomer())
										{
											hide Company;
											hide Manager;
											hide Owner;
											hide Followers;
										}
										if(thisapp.user.isEmployee())
										{
											input.Owner = Employee[Email == zoho.loginuserid].ID;
										}
										if(thisapp.user.isManager())
										{
											input.Manager = Manager[Email == zoho.loginuserid].ID;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_38 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Issues
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											issue = Issues[ID == input.ID];
										thisapp.notify.adminOnIssueCreation(issue);
										if(input.Manager != null)
										{
											thisapp.notify.managerOnIssueCreation(issue);
										}
										if(input.Owner != null)
										{
											thisapp.notify.ownerOnIssueCreation(issue);
										}
										if(input.Followers != null)
										{
											thisapp.notify.followersOnIssueCreation(issue);
										}
										if(input.Company != null)
										{
											thisapp.notify.CustomerOnIssueCreation(issue);
										}
										followerIDs = input.Followers;
										if(input.Owner != null)
										{
											if(!followerIDs.contains(input.Owner))
											{
												followerIDs.add(input.Owner);
											}
										}
										if(input.Manager != null && input.Owner != null)
										{
											if(!followerIDs.contains(Employee[ID == input.Owner].Managers_Name))
											{
												followerIDs.add(Employee[ID == input.Owner].Managers_Name);
											}
										}
										input.Followers = followerIDs;
										openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			Run_Scripts_While_Editing20 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Issues
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide MileStone;
										hide Requirement;
										hide Task;
										hide Comments;
										if(input.Project != null)
										{
											hide Project;
										}
						)
					}
	}

			}
			Run_Scripts_While_Editing21 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Issues
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			Run_Scripts_While_Adding_39 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_File
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Requirement;
										hide Milestone;
										hide Task;
										hide Company;
										hide Contact;
										if(input.Project != null)
										{
											hide Project;
										}
										if(thisapp.user.isCustomer())
										{
											comp = Company[Primary_Email == zoho.loginuserid];
											proj = Project[Company == comp.ID];
											input.Project = proj.ID;
											input.Company = comp.ID;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_40 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_File
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											file = Add_File[ID == input.ID];
										thisapp.notify.adminOnFileCreation(file);
										thisapp.notify.managerOnFileUploaded(file);
										thisapp.notify.ownerOnFileCreation(file);
										proj = Project[ID == input.Project];
										input.Company = proj.Company;
						)
					}
	}

			}
			Run_Scripts_while_Editing1 as "Run Scripts - while Editing a Record"
			{
				type =  form
				form = Add_File
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Requirement;
										hide Milestone;
										hide Task;
										hide Company;
						)
					}
	}

			}
			Run_Scripts_While_Adding_41 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Notes
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Task;
										hide Quote;
										hide Invoice;
										if(input.Project != null)
										{
											hide Project;
										}
										if(input.Quote != null)
										{
											hide Project;
										}
										if(input.Invoice != null)
										{
											hide Project;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_42 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Notes
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			Run_Scripts_While_Editing22 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Notes
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Task;
										hide Quote;
										hide Invoice;
										if(input.Project != null)
										{
											hide Project;
										}
										if(input.Quote != null)
										{
											hide Project;
										}
										if(input.Invoice != null)
										{
											hide Project;
										}
						)
					}
	}

			}
			Run_Scripts_While_Editing23 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Notes
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			Run_Scripts_While_Adding_43 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Project_Meeting
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											disable Company;
										if(input.Project != null)
										{
											hide Project;
										}
										if(thisapp.user.isManager())
										{
											input.Manager = Manager[Email == zoho.loginuserid].ID;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_44 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Project_Meeting
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											for each  emp in input.Employees
										{
											empEmail = Employee[ID == emp].Email;
										}
										manEmail = Manager[ID == input.Manager].Email;
										loggedUser = zoho.loginuserid;
										sendmail
										[
											from :zoho.loginuserid
											to :zoho.adminuserid,loggedUser,empEmail,manEmail
											subject :"" + input.Meeting_Title
											message :"" + input.Meeting_Description
										]
						)
					}
	}

			}
			Run_Scripts_While_Adding_45 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Quote
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Status;
						)
					}
	}

			}
			Run_Scripts_While_Adding_46 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Invoice
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Timesheets.Project;
										hide Timesheets.Milestone;
										hide Timesheets.Requirement;
										hide Timesheets.Task;
										hide Timesheets.Quote;
										hide Timesheets.Company;
										hide Timesheets.Contact;
						)
					}
	}

			}
			Run_Scripts_While_Adding_47 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Invoice
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											for each  row in Timesheet
										{
											row.Project=input.Project;
										}
						)
					}
	}

			}
			Run_Scripts_While_Editing24 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Invoice
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Timesheets.Project;
										hide Timesheets.Milestone;
										hide Timesheets.Requirement;
										hide Timesheets.Task;
										hide Timesheets.Quote;
										hide Timesheets.Company;
										hide Timesheets.Contact;
						)
					}
	}

			}
			Run_Scripts_While_Editing25 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Invoice
				record event = on edit

	on update of Status
	{
					actions 
					{
						custom deluge script
						(
											if(input.Status = "Paid")
										{
											thisapp.invoice.updateRevenueToProject(Project[ID == input.Project]);
										}
						)
					}
	}

			}
			Run_Scripts_On_Always15 as "Run Scripts - On Always"
			{
				type =  form
				form = Invoice
				record event = on add or edit

	on add row of Timesheets
	{
					actions 
					{
						custom deluge script
						(
											row.Project=input.Project;
						)
					}
	}

			}
			Run_Scripts_While_Adding_48 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Employee
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Related_Manager;
										hide Employee_ID_Custom;
										if(thisapp.user.isEmployee() && !thisapp.user.isAdmin())
										{
											hide Employee_Type;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_49 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Employee
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											if(input.Employee_Type == "Employee")
										{
											thisapp.appShare.toEmployee(input.Email);
										}
										if(input.Employee_Type == "Manager")
										{
											thisapp.user.addManager(Employee[ID == input.ID]);
											thisapp.appShare.toManager(input.Email);
										}
						)
					}
	}

			}
			Run_Scripts_While_Editing26 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Employee
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Related_Manager;
										hide Employee_ID_Custom;
						)
					}
	}

			}
			Run_Scripts_While_Editing27 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Employee
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											if(input.Employee_Type == "Employee")
										{
											thisapp.appShare.toEmployee(input.Email);
										}
										if(input.Employee_Type == "Manager")
										{
											thisapp.user.addManager(Employee[ID == input.ID]);
											thisapp.appShare.toManager(input.Email);
										}
						)
					}
	}

			}
			Run_Scripts_While_Deletin1 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Employee
				record event = on delete

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(input.Employee_Type == "Employee")
										{
											thisapp.appUnshare.toEmployee(input.Email);
										}
										if(input.Employee_Type == "Manager")
										{
											thisapp.appUnshare.toManager(input.Email);
										}
						)
					}
	}

			}
			Run_Scripts_On_Always16 as "Run Scripts - On Always"
			{
				type =  form
				form = Employee
				record event = on add or edit

	on user input of Managers_Name
	{
					actions 
					{
						custom deluge script
						(
											input.Related_Manager = input.Managers_Name;
						)
					}
	}

			}
			Run_Scripts_While_Adding_50 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Manager
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											thisapp.appShare.toManager(input.Email);
										input.Related_Employee = thisapp.user.getEmpFromManID(input.ID);
						)
					}
	}

			}
			Run_Scripts_While_Editing28 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Manager
				record event = on edit

	on success
	{
					actions 
					{
						custom deluge script
						(
											thisapp.appShare.toManager(input.Email);
										input.Related_Employee = thisapp.user.getEmpFromManID(input.ID);
						)
					}
	}

			}
			Run_Scripts_While_Adding_51 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Close_Project
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Project;
						)
					}
	}

			}
			Run_Scripts_While_Adding_52 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Comments
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Requirement;
										hide Task;
										hide Issue;
						)
					}
	}

			}
			Run_Scripts_While_Adding_53 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Comments
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			Run_Scripts_While_Adding_54 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Timesheet
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Company;
										hide Contact;
										hide Status;
										hide Milestone;
										hide Task;
										hide Requirement;
										hide Invoiced;
										hide Approved;
										hide Billable;
										proj = Project[ID == input.Project];
										comp = Company[ID == proj.Company];
										input.Company = comp.ID;
										cont = Contact[Company = proj.Company];
										input.Contact = cont.ID;
										if(input.Project != null)
										{
											hide Project;
										}
										if(thisapp.user.isEmployee())
										{
											input.Employee = Employee[Email == zoho.loginuserid].ID;
											input.Manager = Employee[Email == zoho.loginuserid].Managers_Name;
										}
										if(thisapp.user.isManager())
										{
											input.Manager = Manager[Email == zoho.loginuserid].ID;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_55 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Timesheet
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											thisapp.notify.manOnTimesheetCreation(Timesheet[ID == input.ID]);
										openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			Run_Scripts_While_Editing29 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Timesheet
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Company;
										hide Contact;
										hide Milestone;
										hide Task;
										hide Requirement;
						)
					}
	}

			}
			Run_Scripts_On_Always17 as "Run Scripts - On Always"
			{
				type =  form
				form = Timesheet
				record event = on add or edit

	on user input of Project
	{
					actions 
					{
						custom deluge script
						(
											proj = Project[ID == input.Project];
										comp = Company[ID == proj.Company];
										input.Company = comp.ID;
										cont = Contact[Company = proj.Company];
										input.Contact = cont.ID;
						)
					}
	}

			}
			Run_Scripts_On_Always18 as "Run Scripts - On Always"
			{
				type =  form
				form = Timesheet
				record event = on add or edit

	on user input of End_Time
	{
					actions 
					{
						custom deluge script
						(
											input.Hours = thisapp.timesheet.getHours(input.Start_Time,input.End_Time);
						)
					}
	}

			}
			Run_Scripts_While_Adding_56 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Alert
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Project;
										hide msg;
										alertMsg = "<p style='max-width:200px;'>";
										if(input.msg == "revMissing")
										{
											alertMsg = alertMsg + "Quote is not created. Missing Expected revenue for the project. Edit the Project and set <b>Expected Revenue</b> to generate quote.";
										}
										if(input.msg == "quoteExist")
										{
											alertMsg = alertMsg + "There are quotes created for this project already. Click Proceed, if you wish to create a new quote.";
										}
										if(input.msg == "noPendTS")
										{
											alertMsg = alertMsg + "There are not pending Billable Timesheets exist for this project.";
										}
										alertMsg = alertMsg + "</p>";
										input.Alert_Message = alertMsg;
						)
					}
	}

			}
			Run_Scripts_While_Adding_57 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_bulk
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Company;
										hide Project;
										hide MileStones;
										hide Requirement;
										hide Task;
										hide Issues;
										hide Type;
						)
					}
	}

			}
			Run_Scripts_While_Adding_58 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_bulk
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											textList = input.Add_in_new_line.toList("\n");
										for each  text in textList
										{
											text = text.trim();
											if(text != "")
											{
												if(input.Type = "Requirement")
												{
													insert into Requirement
													[
														Added_User=zoho.loginuser
														MileStone=input.MileStones
														Project=input.Project
														Company=input.Company
														Status="New"
														Title=text
													]
												}
												if(input.Type = "Project")
												{
													insert into Project
													[
														Added_User=zoho.loginuser
														Company=input.Company
														Title=text
													]
												}
												else if(input.Type = "Task")
												{
													insert into Task
													[
														Added_User=zoho.loginuser
														MileStone=input.MileStones
														Project=input.Project
														Company=input.Company
														Requirement=input.Requirement
														Status="New"
														Title=text
													]
												}
												else if(input.Type = "Issues")
												{
													insert into Issues
													[
														Added_User=zoho.loginuser
														MileStone=input.MileStones
														Project=input.Project
														Company=input.Company
														Requirement=input.Requirement
														Status="New"
														Task=input.Task
														Title=text
													]
												}
											}
										}
										openUrl("#Script:dialog.close","same window");
						)
					}
	}

			}
			Run_Scripts_While_Adding_59 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Requirement_Actions
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Project;
										hide MileStones;
										hide Requirement;
										hide Task;
										requirment = Requirement[ID = input.Requirement];
										input.Project = requirment.Project;
										input.MileStones = requirment.MileStone;
										input.Assign_To = requirment.Owner;
										input.Manager = requirment.Manager;
										input.Status = requirment.Status;
										input.Followers = requirment.Followers;
										if(input.Status == null || input.Status == "")
										{
											input.Status = "New";
										}
										if(thisapp.user.isEmployee() && requirment.Owner == null)
										{
											Owner = Employee[Email == zoho.loginuserid].ID;
											input.Manager = Employee[Email == zoho.loginuserid].Managers_Name;
										}
										if(thisapp.user.isManager() && requirment.Manager == null)
										{
											input.Manager = Manager[Email == zoho.loginuserid].ID;
										}
										if(thisapp.user.isCustomer())
										{
											disable Manager;
											disable Assign_To;
											disable Status;
											disable Followers;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_60 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Task_Actions
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Project;
										hide MileStones;
										hide Requirement;
										hide Task;
										t = Task[ID = input.Task];
										input.Project = t.Project;
										input.MileStones = t.MileStone;
										input.Requirement = t.Requirement;
										input.Status = t.Status;
										input.Manager = t.Manager;
										input.Assign_To = t.Owner;
										input.Followers = t.Followers;
										if(input.Status == null || input.Status == "")
										{
											input.Status = "New";
										}
										if(thisapp.user.isEmployee() && t.Owner == null)
										{
											Owner = Employee[Email == zoho.loginuserid].ID;
											input.Manager = Employee[Email == zoho.loginuserid].Managers_Name;
										}
										if(thisapp.user.isManager() && t.Manager == null)
										{
											input.Manager = Manager[Email == zoho.loginuserid].ID;
										}
										if(thisapp.user.isCustomer())
										{
											disable Manager;
											disable Assign_To;
											disable Status;
											disable Followers;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_61 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Issue_Actions
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Project;
										hide Requirement;
										hide Task;
										hide Issues;
										issue = Issues[ID = input.Issues];
										input.Project = issue.Project;
										input.Requirement = issue.Requirement;
										input.Status = issue.Status;
										input.Manager = issue.Manager;
										input.Assign_To = issue.Owner;
										input.Followers = issue.Followers;
										if(input.Status == null || input.Status == "")
										{
											input.Status = "New";
										}
										if(thisapp.user.isCustomer())
										{
											disable Manager;
											disable Assign_To;
											disable Followers;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_62 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Pay_Invoice
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Project;
										disable Invoice;
										hide Item;
										disable Quantity;
										disable Amount;
										if(input.Invoice != null)
										{
											inv = Invoice[ID == input.Invoice];
											projID = Project[ID == inv.Project].ID;
											input.Project = projID;
											input.Item = inv.Invoice_Number.toString();
											input.Quantity = 1;
											input.Amount = inv.Project_Cost;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_63 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Pay_Invoice
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											inv = Invoice[ID == input.Invoice];
										inv.Status="Paid";
						)
					}
	}

			}
			Run_Scripts_While_Adding_64 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = My_Registeration
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Primary_Email = zoho.loginuserid;
										disable Primary_Email;
						)
					}
	}

			}
			Run_Scripts_While_Adding_65 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Project_Actions
				record event = on add

	on user input of Project
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#View:Project_Interface?projectIDStr=" + input.Project,"same window");
						)
					}
	}

			}
		}
		functions
		{
			View as "View"
			{
				type =  functions
				form = Project
				on start
				{
					actions 
					{
					launch.openProjInterface(Project);
					}
				}
			}
			View_Task as "View Task"
			{
				type =  functions
				form = Task
				on start
				{
					actions 
					{
					launch.openTask(Task);
					}
				}
			}
			View_Issue3 as "View Issue"
			{
				type =  functions
				form = Issues
				on start
				{
					actions 
					{
					launch.openIssue(Issues);
					}
				}
			}
			Approve as "Approve"
			{
				type =  functions
				form = Timesheet
				on start
				{
					actions 
					{
					timesheet.approveWork(Timesheet);
					}
				}
			}
			View_Task1 as "View Task"
			{
				type =  functions
				form = Task
				on start
				{
					actions 
					{
					launch.openTask(Task);
					}
				}
			}
			View4 as "View"
			{
				type =  functions
				form = Project
				on start
				{
					actions 
					{
					launch.openProjInterface(Project);
					}
				}
			}
			View_Issue4 as "View Issue"
			{
				type =  functions
				form = Issues
				on start
				{
					actions 
					{
					launch.openIssue(Issues);
					}
				}
			}
			View6 as "View"
			{
				type =  functions
				form = Project
				on start
				{
					actions 
					{
					launch.openProjInterface(Project);
					}
				}
			}
			View_Task2 as "View Task"
			{
				type =  functions
				form = Task
				on start
				{
					actions 
					{
					launch.openTask(Task);
					}
				}
			}
			View_Issue5 as "View Issue"
			{
				type =  functions
				form = Issues
				on start
				{
					actions 
					{
					launch.openIssue(Issues);
					}
				}
			}
			View_Invoice1 as "View Invoice"
			{
				type =  functions
				form = Invoice
				on start
				{
					actions 
					{
					launch.openInvoice(Invoice);
					}
				}
			}
			View10 as "View"
			{
				type =  functions
				form = Quote
				on start
				{
					actions 
					{
					launch.openQuote(Quote);
					}
				}
			}
			View11 as "View"
			{
				type =  functions
				form = Project
				on start
				{
					actions 
					{
					launch.openProjInterface(Project);
					}
				}
			}
			View_Project_Interface as "View Project Interface"
			{
				type =  functions
				form = Project
				on start
				{
					actions 
					{
					launch.openProjInterface(Project);
					}
				}
			}
			View12 as "View"
			{
				type =  functions
				form = Requirement
				on start
				{
					actions 
					{
					launch.openReq(Requirement);
					}
				}
			}
			View13 as "View"
			{
				type =  functions
				form = Requirement
				on start
				{
					actions 
					{
					launch.openReq(Requirement);
					}
				}
			}
			View_Task3 as "View Task"
			{
				type =  functions
				form = Task
				on start
				{
					actions 
					{
					launch.openTask(Task);
					}
				}
			}
			View_Task4 as "View Task"
			{
				type =  functions
				form = Task
				on start
				{
					actions 
					{
					launch.openTask(Task);
					}
				}
			}
			View_Issue as "View Issue"
			{
				type =  functions
				form = Issues
				on start
				{
					actions 
					{
					launch.openIssue(Issues);
					}
				}
			}
			View_Issue1 as "View Issue"
			{
				type =  functions
				form = Issues
				on start
				{
					actions 
					{
					launch.openIssue(Issues);
					}
				}
			}
			Approve1 as "Approve"
			{
				type =  functions
				form = Timesheet
				on start
				{
					actions 
					{
					timesheet.approveWork(Timesheet);
					}
				}
			}
			Approve2 as "Approve"
			{
				type =  functions
				form = Timesheet
				on start
				{
					actions 
					{
					timesheet.approveWork(Timesheet);
					}
				}
			}
			View_Invoice2 as "View Invoice"
			{
				type =  functions
				form = Invoice
				on start
				{
					actions 
					{
					launch.openInvoice(Invoice);
					}
				}
			}
			View_Invoice as "View Invoice"
			{
				type =  functions
				form = Invoice
				on start
				{
					actions 
					{
					launch.openInvoice(Invoice);
					}
				}
			}
			Approve3 as "Approve"
			{
				type =  functions
				form = Quote
				on start
				{
					actions 
					{
					quote.Approved(Quote);
					}
				}
			}
			View_Quote as "View Quote"
			{
				type =  functions
				form = Quote
				on start
				{
					actions 
					{
					launch.openQuote(Quote);
					}
				}
			}
			View_Issue2 as "View Issue"
			{
				type =  functions
				form = Issues
				on start
				{
					actions 
					{
					launch.openIssue(Issues);
					}
				}
			}
			View_Task5 as "View Task"
			{
				type =  functions
				form = Task
				on start
				{
					actions 
					{
					launch.openTask(Task);
					}
				}
			}
			Approve4 as "Approve"
			{
				type =  functions
				form = Timesheet
				on start
				{
					actions 
					{
					timesheet.approveWork(Timesheet);
					}
				}
			}
			View18 as "View"
			{
				type =  functions
				form = Requirement
				on start
				{
					actions 
					{
					launch.openReq(Requirement);
					}
				}
			}
			View19 as "View"
			{
				type =  functions
				form = Requirement
				on start
				{
					actions 
					{
					launch.openReq(Requirement);
					}
				}
			}
			View_Task6 as "View Task"
			{
				type =  functions
				form = Task
				on start
				{
					actions 
					{
					launch.openTask(Task);
					}
				}
			}
			Generate_Invoice as "Generate Invoice"
			{
				type =  functions
				form = Company
				on start
				{
					actions 
					{
					invoice.generateForCompany(Company);
					}
				}
			}
			Generate_Invoice1 as "Generate Invoice"
			{
				type =  functions
				form = Company
				on start
				{
					actions 
					{
					invoice.generateForCompany(Company);
					}
				}
			}
			View21 as "View"
			{
				type =  functions
				form = Requirement
				on start
				{
					actions 
					{
					launch.openReq(Requirement);
					}
				}
			}
			View_Invoice3 as "View Invoice"
			{
				type =  functions
				form = Invoice
				on start
				{
					actions 
					{
					launch.openInvoice(Invoice);
					}
				}
			}
			View23 as "View"
			{
				type =  functions
				form = Quote
				on start
				{
					actions 
					{
					launch.openQuote(Quote);
					}
				}
			}
		}
	}
	share_settings
	{
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true}
				description = "This profile will have all the permissions.\n"
			}
			"Employee"
			{
				name = "Employee"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false}
				description = "This profile will have limited permissions.\n"
				ModulePermissions
				{
					Company
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Address{visibility:false,readonly:false}
							Contacts{visibility:true,readonly:false}
							Phone{visibility:false,readonly:false}
							Website{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Primary_Email{visibility:true,readonly:false}
							Name{visibility:true,readonly:false}
						}
					}
					Task
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							My_Company_Tasks={"View"}
							Following_Tasks={"View"}
							My_Tasks={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Owner{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							MileStone{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Due_Date{visibility:true,readonly:false}
							Issues{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Contact{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Files{visibility:true,readonly:false}
							Notes{visibility:true,readonly:false}
						}
					}
					Invoice
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							My_Company_Invoices={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Due_Date{visibility:true,readonly:false}
							Customer{visibility:true,readonly:false}
							Related_Quote{visibility:true,readonly:false}
							Project_Cost{visibility:true,readonly:false}
							Timesheets{visibility:true,readonly:false}
							Invoice_Number{visibility:true,readonly:false}
							Total_Hours{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Project{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Contacts{visibility:true,readonly:false}
							Reminded{visibility:true,readonly:false}
							Hourly_Rate{visibility:true,readonly:false}
						}
					}
					Issues
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							My_Issues={"View"}
							My_Company_Issues={"View"}
							Following_Issues={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Owner{visibility:true,readonly:false}
							MileStone{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Contact{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
						}
					}
					Add_File
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							File_Name{visibility:true,readonly:false}
							Milestone{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							File{visibility:true,readonly:false}
							Contact{visibility:true,readonly:false}
						}
					}
					Project_Actions
					{
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Manager
					{
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Reporting_Employees{visibility:true,readonly:false}
							Related_Employee{visibility:true,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Project_Settings
					{
						FieldPermissions
						{
							Enable_Notification{visibility:true,readonly:false}
							Notify_Customer{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							Customer_Portal_Url{visibility:true,readonly:false}
							plain1{visibility:true,readonly:false}
							Enable_Attachments{visibility:true,readonly:false}
							Notify_Manager{visibility:true,readonly:false}
							Notify_Employee{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Enable_Portal{visibility:true,readonly:false}
							Send_Notification_Emails_to{visibility:true,readonly:false}
						}
					}
					Project_Meeting
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Meeting_Date_Time{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Meeting_Description{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							Meeting_Title{visibility:true,readonly:false}
							Employees{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Contact{visibility:true,readonly:false}
						}
					}
					Task_Actions
					{
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Assign_To{visibility:true,readonly:false}
							MileStones{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Pay_Invoice
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							Payments={"View"}
						}
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Item{visibility:true,readonly:false}
							Invoice{visibility:true,readonly:false}
							Amount{visibility:true,readonly:false}
							Quantity{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					My_Registeration
					{
						FieldPermissions
						{
							Company_Website{visibility:true,readonly:false}
							Address{visibility:false,readonly:false}
							Company_Name{visibility:true,readonly:false}
							Primary_Phone{visibility:false,readonly:false}
							Your_Phone{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
							Primary_Email{visibility:true,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Hourly_Rate
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Hourly_Rate{visibility:true,readonly:false}
						}
					}
					Notes
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Quote{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Invoice{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Comments
					{
						FieldPermissions
						{
							Requirement{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Issue{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Comments{visibility:true,readonly:false}
						}
					}
					Timesheet
					{
						enabled= Viewall,Export 
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							Invoice{visibility:true,readonly:false}
							Hours{visibility:true,readonly:false}
							Milestone{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Billable{visibility:true,readonly:false}
							Approved{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Auto_Number{visibility:true,readonly:false}
							Contact{visibility:true,readonly:false}
							Quote{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Employee{visibility:true,readonly:false}
							End_Time{visibility:true,readonly:false}
							Start_Time{visibility:true,readonly:false}
							Invoiced{visibility:true,readonly:false}
						}
					}
					Issue_Actions
					{
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Assign_To{visibility:true,readonly:false}
							Issues{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Close_Project
					{
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Alert{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Contact
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							My_Company_Contacts={"View"}
						}
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Phone{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Quote
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							My_Company_Quotes={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Expected_Hours{visibility:true,readonly:false}
							Contacts{visibility:true,readonly:false}
							Customer{visibility:true,readonly:false}
							QuoteID{visibility:true,readonly:false}
							Expected_Cost{visibility:true,readonly:false}
							Invoiced{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Hourly_Rate{visibility:true,readonly:false}
						}
					}
					Project
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							Project_Report={"View"}
							My_Projects={"View"}
							My_Company_Projects={"View"}
							Following_Projects={"View"}
						}
						FieldPermissions
						{
							Company{visibility:true,readonly:false}
							Owner{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Issues{visibility:true,readonly:false}
							Quotes{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							End_Date{visibility:true,readonly:false}
							Requirements{visibility:true,readonly:false}
							Expected_Hours{visibility:true,readonly:false}
							Expected_Revenue{visibility:true,readonly:false}
							Section1{visibility:false,readonly:false}
							Section2{visibility:false,readonly:false}
							Expected_End_Date{visibility:true,readonly:false}
							Start_Date{visibility:true,readonly:false}
							Files{visibility:true,readonly:false}
							Project_Type{visibility:true,readonly:false}
							Hourly_Rate{visibility:true,readonly:false}
							Notes{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Tasks{visibility:true,readonly:false}
							Timesheets{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Contacts{visibility:true,readonly:false}
							MileStones{visibility:true,readonly:false}
							Revenue{visibility:true,readonly:false}
						}
					}
					Requirement
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							Following_Requirements={"View"}
							My_Company_Requirement={"View"}
							My_Requirements={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Owner{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							MileStone{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Tasks{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Auto_Number{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Expected_Hours{visibility:true,readonly:false}
							Contacts{visibility:true,readonly:false}
							Files{visibility:true,readonly:false}
						}
					}
					Employee
					{
						ReportPermissions
						{
							My_Team_Employees={"View"}
							Profile={"View"}
						}
						FieldPermissions
						{
							Managers_Name{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Employee_Type{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Employee_ID_Custom{visibility:true,readonly:false}
							Employee_ID{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:false,readonly:false}
							Related_Manager{visibility:true,readonly:false}
						}
					}
					Requirement_Actions
					{
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Assign_To{visibility:true,readonly:false}
							MileStones{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					MileStones
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							My_Milestones={"View"}
						}
						FieldPermissions
						{
							Quote{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Start_Date{visibility:true,readonly:false}
							End_Date{visibility:true,readonly:false}
							Files{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_bulk
					{
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Type{visibility:true,readonly:false}
							MileStones{visibility:true,readonly:false}
							Issues{visibility:true,readonly:false}
							Add_in_new_line{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Alert
					{
						FieldPermissions
						{
							msg{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Alert_Message{visibility:true,readonly:false}
						}
					}
					Dashboard
					{
						enabled = tab
					}
				}
			}
			"Manager"
			{
				name = "Manager"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false}
				description = "This profile will have manager privileges.\n"
				ModulePermissions
				{
					Company
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Address{visibility:false,readonly:false}
							Contacts{visibility:true,readonly:false}
							Phone{visibility:false,readonly:false}
							Website{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Primary_Email{visibility:true,readonly:false}
							Name{visibility:true,readonly:false}
						}
					}
					Task
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							My_Company_Tasks={"View","Edit"}
							My_Team_Tasks={"View","Edit"}
							Following_Tasks={"View"}
							My_Tasks={"View","Edit"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Owner{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							MileStone{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Due_Date{visibility:true,readonly:false}
							Issues{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Contact{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Files{visibility:true,readonly:false}
							Notes{visibility:true,readonly:false}
						}
					}
					Invoice
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							My_Company_Invoices={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Due_Date{visibility:true,readonly:false}
							Customer{visibility:true,readonly:false}
							Related_Quote{visibility:true,readonly:false}
							Project_Cost{visibility:true,readonly:false}
							Timesheets{visibility:true,readonly:false}
							Invoice_Number{visibility:true,readonly:false}
							Total_Hours{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Project{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Contacts{visibility:true,readonly:false}
							Reminded{visibility:true,readonly:false}
							Hourly_Rate{visibility:true,readonly:false}
						}
					}
					Issues
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							My_Issues={"View"}
							My_Company_Issues={"View"}
							Following_Issues={"View"}
							My_Team_Issues={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Owner{visibility:true,readonly:false}
							MileStone{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Contact{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
						}
					}
					Add_File
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							My_Company_Files={"View"}
						}
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							File_Name{visibility:true,readonly:false}
							Milestone{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							File{visibility:true,readonly:false}
							Contact{visibility:true,readonly:false}
						}
					}
					Project_Actions
					{
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Manager
					{
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Reporting_Employees{visibility:true,readonly:false}
							Related_Employee{visibility:true,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Project_Settings
					{
						FieldPermissions
						{
							Enable_Notification{visibility:true,readonly:false}
							Notify_Customer{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							Customer_Portal_Url{visibility:true,readonly:false}
							plain1{visibility:true,readonly:false}
							Enable_Attachments{visibility:true,readonly:false}
							Notify_Manager{visibility:true,readonly:false}
							Notify_Employee{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Enable_Portal{visibility:true,readonly:false}
							Send_Notification_Emails_to{visibility:true,readonly:false}
						}
					}
					Project_Meeting
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Meeting_Date_Time{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Meeting_Description{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							Meeting_Title{visibility:true,readonly:false}
							Employees{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Contact{visibility:true,readonly:false}
						}
					}
					Task_Actions
					{
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Assign_To{visibility:true,readonly:false}
							MileStones{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Pay_Invoice
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							Payments={"View"}
						}
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Item{visibility:true,readonly:false}
							Invoice{visibility:true,readonly:false}
							Amount{visibility:true,readonly:false}
							Quantity{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					My_Registeration
					{
						FieldPermissions
						{
							Company_Website{visibility:true,readonly:false}
							Address{visibility:false,readonly:false}
							Company_Name{visibility:true,readonly:false}
							Primary_Phone{visibility:false,readonly:false}
							Your_Phone{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
							Primary_Email{visibility:true,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Hourly_Rate
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Hourly_Rate{visibility:true,readonly:false}
						}
					}
					Notes
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Quote{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Invoice{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Comments
					{
						FieldPermissions
						{
							Requirement{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Issue{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Comments{visibility:true,readonly:false}
						}
					}
					Timesheet
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							My_Timesheets={"View"}
							My_Team_Timesheets={"View"}
							Employee_Worksheets={"View"}
							My_Company_Timesheets={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							Invoice{visibility:true,readonly:false}
							Hours{visibility:true,readonly:false}
							Milestone{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Billable{visibility:true,readonly:false}
							Approved{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Auto_Number{visibility:true,readonly:false}
							Contact{visibility:true,readonly:false}
							Quote{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Employee{visibility:true,readonly:false}
							End_Time{visibility:true,readonly:false}
							Start_Time{visibility:true,readonly:false}
							Invoiced{visibility:true,readonly:false}
						}
					}
					Issue_Actions
					{
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Assign_To{visibility:true,readonly:false}
							Issues{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Close_Project
					{
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Alert{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Contact
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							My_Company_Contacts={"View","Edit"}
						}
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Phone{visibility:false,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:false,readonly:false}
						}
					}
					Quote
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							My_Company_Quotes={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Expected_Hours{visibility:true,readonly:false}
							Contacts{visibility:true,readonly:false}
							Customer{visibility:true,readonly:false}
							QuoteID{visibility:true,readonly:false}
							Expected_Cost{visibility:true,readonly:false}
							Invoiced{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Hourly_Rate{visibility:true,readonly:false}
						}
					}
					Project
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							Project_Report={"View"}
							My_Projects={"View","Edit"}
							My_Team_Projects={"View","Edit"}
							My_Company_Projects={"View","Edit"}
							Following_Projects={"View"}
						}
						FieldPermissions
						{
							Company{visibility:true,readonly:false}
							Owner{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Issues{visibility:true,readonly:false}
							Quotes{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							End_Date{visibility:true,readonly:false}
							Requirements{visibility:true,readonly:false}
							Expected_Hours{visibility:true,readonly:false}
							Expected_Revenue{visibility:true,readonly:false}
							Section1{visibility:false,readonly:false}
							Section2{visibility:false,readonly:false}
							Expected_End_Date{visibility:true,readonly:false}
							Start_Date{visibility:true,readonly:false}
							Files{visibility:true,readonly:false}
							Project_Type{visibility:true,readonly:false}
							Hourly_Rate{visibility:true,readonly:false}
							Notes{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Tasks{visibility:true,readonly:false}
							Timesheets{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Contacts{visibility:true,readonly:false}
							MileStones{visibility:true,readonly:false}
							Revenue{visibility:true,readonly:false}
						}
					}
					Requirement
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							Following_Requirements={"View"}
							My_Company_Requirement={"View"}
							My_Requirements={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Owner{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							MileStone{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Tasks{visibility:true,readonly:false}
							Comments{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Auto_Number{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Expected_Hours{visibility:true,readonly:false}
							Contacts{visibility:true,readonly:false}
							Files{visibility:true,readonly:false}
						}
					}
					Employee
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							My_Team_Employees={"View"}
							Profile={"View"}
						}
						FieldPermissions
						{
							Managers_Name{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Employee_Type{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Employee_ID_Custom{visibility:true,readonly:false}
							Employee_ID{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:false,readonly:false}
							Related_Manager{visibility:true,readonly:false}
						}
					}
					Requirement_Actions
					{
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Assign_To{visibility:true,readonly:false}
							MileStones{visibility:true,readonly:false}
							Manager{visibility:true,readonly:false}
							Followers{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					MileStones
					{
						enabled= Create,Viewall,Export,Tab 
						ReportPermissions
						{
							My_Milestones={"View","Edit"}
						}
						FieldPermissions
						{
							Quote{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Title{visibility:true,readonly:false}
							Start_Date{visibility:true,readonly:false}
							End_Date{visibility:true,readonly:false}
							Files{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_bulk
					{
						FieldPermissions
						{
							Project{visibility:true,readonly:false}
							Requirement{visibility:true,readonly:false}
							Company{visibility:true,readonly:false}
							Task{visibility:true,readonly:false}
							Type{visibility:true,readonly:false}
							MileStones{visibility:true,readonly:false}
							Issues{visibility:true,readonly:false}
							Add_in_new_line{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Alert
					{
						FieldPermissions
						{
							msg{visibility:true,readonly:false}
							Project{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Alert_Message{visibility:true,readonly:false}
						}
					}
				}
			}
			"Customer"
			{
				name = "Customer"
				type = Customer_Portal
				permissions = {Chat:false, Predefined:true}
				description = "This is the default profile having only add and view permission.\n"
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users.\n"
				}
			}
	}

	customize
	{
		
		layout = "pane left"
		color = "black"
		base theme = "professional"
		new theme = 4
		new theme color = 4
		icons = true
    	icon type = 1
    	icon name = "zc-ab-finance1"
    	icon theme = "yellow"
		icons style = solid
	}

	phone
	{
		section  Dashboard
		{
			page Dashboard
			{
			}
		}
		section  Portal
		{
			page Portal_Home
			{
			}
			summary My_Profile_Company
			{
				icon = "users-single-03"
			}
		}
		section  My_Data
		{
			displayname= "My Data"
			list My_Projects
			{
			}
			list My_Milestones
			{
			}
			list My_Tasks
			{
			}
			list My_Timesheets
			{
			}
			list My_Issues
			{
			}
			list My_Team_Timesheets
			{
			}
			list My_Team_Tasks
			{
			}
			list My_Team_Projects
			{
			}
			list My_Team_Issues
			{
			}
			list My_Team_Employees
			{
			}
			list My_Company_Projects
			{
			}
			list My_Company_Tasks
			{
			}
			list My_Company_Issues
			{
			}
			list My_Company_Timesheets
			{
			}
			list My_Company_Invoices
			{
			}
			list My_Company_Quotes
			{
			}
			list My_Company_Files
			{
			}
			list My_Company_Contacts
			{
			}
		}
		section  Data
		{
			list Active_Projects
			{
			}
			list All_Projects
			{
			}
			list Pending_Requirements
			{
			}
			list All_Requirements
			{
			}
			list Pending_Tasks
			{
			}
			list All_Tasks
			{
			}
			list Pending_Issues
			{
			}
			list Issues_Report
			{
			}
			list All_MileStones
			{
			}
			list Pending_Timesheets
			{
			}
			list Billable_Timesheets
			{
			}
			list All_Timesheets
			{
			}
			list All_Files
			{
			}
			list All_Notes
			{
			}
			list Project_Meetings
			{
			}
			list My_Company_Meetings
			{
			}
			list My_Company_Notes
			{
			}
		}
		section  Reports
		{
			pivottable Payments
			{
				icon = "ui-2-grid-square"
			}
			pivotchart Project_Report
			{
				icon = "business-chart-bar-32"
			}
			pivotchart Employee_Worksheets
			{
				icon = "business-chart-bar-32"
			}
		}
		section  Quick_Links
		{
			displayname= "Quick Links"
			form  Company
			{
				layout = auto
				icon = "files-folder-add"
			}
			form  Contact
			{
				layout = auto
				icon = "users-2-a-add"
			}
			form  Project
			{
				layout = left
				icon = "media-1-polaroid-add"
			}
			form  MileStones
			{
				layout = auto
				icon = "ui-1-simple-add"
			}
			form  Requirement
			{
				layout = auto
				icon = "ui-1-circle-bold-add"
			}
			form  Task
			{
				layout = auto
				icon = "ui-1-circle-add"
			}
			form  Issues
			{
				layout = auto
				icon = "ui-2-square-add-08"
			}
			form  Add_File
			{
				layout = auto
				icon = "files-folder-add"
			}
			form  Notes
			{
				layout = auto
				icon = "ui-3-card-add"
			}
			form  Project_Meeting
			{
				layout = auto
				icon = "ui-1-simple-add"
			}
		}
		section  Cost
		{
			list Pending_Invoices
			{
				icon = "files-time"
			}
			list Paid_Invoices
			{
				icon = "files-single-content-02"
			}
			list Invoices_Report
			{
				icon = "files-single-copies"
			}
			list Pending_Quotes
			{
				icon = "files-edit"
			}
			list Quotes_Report
			{
				icon = "files-archive-paper"
			}
			list All_Hourly_Rates
			{
				icon = "ui-2-time-clock"
			}
		}
		section  Employees
		{
			list Active_Employees
			{
				icon = "users-2-a-check"
			}
			list All_Employees
			{
				icon = "users-badge-15"
			}
			list All_Managers
			{
				icon = "users-2-meeting"
			}
		}
		section  Profile
		{
			summary Profile
			{
				icon = "ui-1-database"
			}
		}
		section  Data_Forms
		{
			displayname= "Data Forms"
			hide = true
			form  Quote
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Project_Actions
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Hourly_Rate
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Invoice
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Employee
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Manager
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Close_Project
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Comments
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Timesheet
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			list Project_Issues
			{
				hide = true
			}
			summary Manager_s_Profile
			{
				icon = "ui-2-grid-49"
				hide = true
			}
			list Project_Tasks
			{
				hide = true
			}
		}
		section  Hide_Portions
		{
			displayname= "Hide Portions"
			hide = true
			form  Project_Settings
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			list Timesheets
			{
				hide = true
			}
			list Pay_Invoice_Report
			{
				hide = true
			}
			list My_Company_Requirement
			{
				hide = true
			}
			list My_Requirements
			{
				hide = true
			}
			list Task_for_Interface
			{
				hide = true
			}
			list Timesheet_for_Task_Interface
			{
				hide = true
			}
			list Timesheet_in_Task
			{
				hide = true
			}
			list Comments_Report
			{
				hide = true
			}
		}
		section  Contacts_Section1
		{
			displayname= "Contacts"
			list Active_Companies
			{
				icon = "business-building"
			}
			list All_Companies
			{
				icon = "travel-temple-02"
			}
			list All_Contacts
			{
				icon = "users-2-contacts-45"
			}
		}
		section  Interfaces
		{
			hide = true
			page Project_Interface
			{
				hide = true
			}
			page View_Details
			{
				hide = true
			}
			page Invoice_Interface
			{
				hide = true
			}
			page Quote_Interface
			{
				hide = true
			}
			page Issues_Interface
			{
				hide = true
			}
			form  Alert
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			form  Add_bulk
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Requirement_Actions
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			form  Task_Actions
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			form  Issue_Actions
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Pay_Invoice
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			list Bulk_Report
			{
				hide = true
			}
			list Project_Requirements
			{
				hide = true
			}
			list Project_Quotes
			{
				hide = true
			}
			list All_Invoices_Views
			{
				hide = true
			}
		}
		section  Add_a_Project
		{
			displayname= "Add a Project"
			hide = true
			form  My_Registeration
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
		}
		section  Following
		{
			list Following_Requirements
			{
			}
			list Following_Projects
			{
			}
			list Following_Tasks
			{
			}
			list Following_Issues
			{
			}
		}
		section  Project_Settings
		{
			displayname= "Project Settings"
			summary Project_Settings_View
			{
				icon = "ui-1-database"
			}
		}
		customize
		{
			colour = red
        	layout = slidingpane
		 	icons style = outline
		}
	}
	tablet
	{
		section  Dashboard
		{
			icon = "ui-1-dashboard-30"
			page Dashboard
			{
			}
		}
		section  Portal
		{
			icon = "users-multiple-11"
			page Portal_Home
			{
			}
			summary My_Profile_Company
			{
				icon = "users-single-03"
			}
		}
		section  My_Data
		{
			displayname= "My Data"
			icon = "users-single-03"
			list My_Projects
			{
			}
			list My_Milestones
			{
			}
			list My_Tasks
			{
			}
			list My_Timesheets
			{
			}
			list My_Issues
			{
			}
			list My_Team_Timesheets
			{
			}
			list My_Team_Tasks
			{
			}
			list My_Team_Projects
			{
			}
			list My_Team_Issues
			{
			}
			list My_Team_Employees
			{
			}
			list My_Company_Projects
			{
			}
			list My_Company_Tasks
			{
			}
			list My_Company_Issues
			{
			}
			list My_Company_Timesheets
			{
			}
			list My_Company_Invoices
			{
			}
			list My_Company_Quotes
			{
			}
			list My_Company_Files
			{
			}
			list My_Company_Contacts
			{
			}
		}
		section  Data
		{
			icon = "ui-1-database"
			list Active_Projects
			{
			}
			list All_Projects
			{
			}
			list Pending_Requirements
			{
			}
			list All_Requirements
			{
			}
			list Pending_Tasks
			{
			}
			list All_Tasks
			{
			}
			list Pending_Issues
			{
			}
			list Issues_Report
			{
			}
			list All_MileStones
			{
			}
			list Pending_Timesheets
			{
			}
			list Billable_Timesheets
			{
			}
			list All_Timesheets
			{
			}
			list All_Files
			{
			}
			list All_Notes
			{
			}
			list Project_Meetings
			{
			}
			list My_Company_Meetings
			{
			}
			list My_Company_Notes
			{
			}
		}
		section  Reports
		{
			icon = "health-pulse-chart"
			pivottable Payments
			{
				icon = "ui-2-grid-square"
			}
			pivotchart Project_Report
			{
				icon = "business-chart-bar-32"
			}
			pivotchart Employee_Worksheets
			{
				icon = "business-chart-bar-32"
			}
		}
		section  Quick_Links
		{
			displayname= "Quick Links"
			icon = "ui-2-link-69"
			form  Company
			{
				layout = auto
				icon = "files-folder-add"
			}
			form  Contact
			{
				layout = auto
				icon = "users-2-a-add"
			}
			form  Project
			{
				layout = left
				icon = "media-1-polaroid-add"
			}
			form  MileStones
			{
				layout = auto
				icon = "ui-1-simple-add"
			}
			form  Requirement
			{
				layout = auto
				icon = "ui-1-circle-bold-add"
			}
			form  Task
			{
				layout = auto
				icon = "ui-1-circle-add"
			}
			form  Issues
			{
				layout = auto
				icon = "ui-2-square-add-08"
			}
			form  Add_File
			{
				layout = auto
				icon = "files-folder-add"
			}
			form  Notes
			{
				layout = auto
				icon = "ui-3-card-add"
			}
			form  Project_Meeting
			{
				layout = auto
				icon = "ui-1-simple-add"
			}
		}
		section  Cost
		{
			icon = "business-money-11"
			list Pending_Invoices
			{
				icon = "files-time"
			}
			list Paid_Invoices
			{
				icon = "files-single-content-02"
			}
			list Invoices_Report
			{
				icon = "files-single-copies"
			}
			list Pending_Quotes
			{
				icon = "files-edit"
			}
			list Quotes_Report
			{
				icon = "files-archive-paper"
			}
			list All_Hourly_Rates
			{
				icon = "ui-2-time-clock"
			}
		}
		section  Employees
		{
			icon = "users-multiple-11"
			list Active_Employees
			{
				icon = "users-2-a-check"
			}
			list All_Employees
			{
				icon = "users-badge-15"
			}
			list All_Managers
			{
				icon = "users-2-meeting"
			}
		}
		section  Profile
		{
			icon = "users-single-03"
			summary Profile
			{
				icon = "ui-1-database"
			}
		}
		section  Data_Forms
		{
			displayname= "Data Forms"
			hide = true
			icon = "ui-2-menu-bold"
			form  Quote
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Project_Actions
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Hourly_Rate
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Invoice
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Employee
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Manager
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Close_Project
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Comments
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Timesheet
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			list Project_Issues
			{
				hide = true
			}
			summary Manager_s_Profile
			{
				icon = "ui-2-grid-49"
				hide = true
			}
			list Project_Tasks
			{
				hide = true
			}
		}
		section  Hide_Portions
		{
			displayname= "Hide Portions"
			hide = true
			icon = "ui-2-menu-bold"
			form  Project_Settings
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			list Timesheets
			{
				hide = true
			}
			list Pay_Invoice_Report
			{
				hide = true
			}
			list My_Company_Requirement
			{
				hide = true
			}
			list My_Requirements
			{
				hide = true
			}
			list Task_for_Interface
			{
				hide = true
			}
			list Timesheet_for_Task_Interface
			{
				hide = true
			}
			list Timesheet_in_Task
			{
				hide = true
			}
			list Comments_Report
			{
				hide = true
			}
		}
		section  Contacts_Section1
		{
			displayname= "Contacts"
			icon = "users-multiple-11"
			list Active_Companies
			{
				icon = "business-building"
			}
			list All_Companies
			{
				icon = "travel-temple-02"
			}
			list All_Contacts
			{
				icon = "users-2-contacts-45"
			}
		}
		section  Interfaces
		{
			hide = true
			icon = "ui-2-menu-bold"
			page Project_Interface
			{
				hide = true
			}
			page View_Details
			{
				hide = true
			}
			page Invoice_Interface
			{
				hide = true
			}
			page Quote_Interface
			{
				hide = true
			}
			page Issues_Interface
			{
				hide = true
			}
			form  Alert
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			form  Add_bulk
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Requirement_Actions
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			form  Task_Actions
			{
				layout = auto
				icon = "ui-1-bold-add"
				hide = true
			}
			form  Issue_Actions
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			form  Pay_Invoice
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
			list Bulk_Report
			{
				hide = true
			}
			list Project_Requirements
			{
				hide = true
			}
			list Project_Quotes
			{
				hide = true
			}
			list All_Invoices_Views
			{
				hide = true
			}
		}
		section  Add_a_Project
		{
			displayname= "Add a Project"
			hide = true
			icon = "ui-2-menu-bold"
			form  My_Registeration
			{
				layout = auto
				icon = "ui-2-square-add-11"
				hide = true
			}
		}
		section  Following
		{
			icon = "media-1-button-skip"
			list Following_Requirements
			{
			}
			list Following_Projects
			{
			}
			list Following_Tasks
			{
			}
			list Following_Issues
			{
			}
		}
		section  Project_Settings
		{
			displayname= "Project Settings"
			icon = "ui-1-settings-gear-64"
			summary Project_Settings_View
			{
				icon = "ui-1-database"
			}
		}
		customize
		{
			colour = red
        	layout = slidingpane
		 	icons style = outline
		}
	}
	
	reports configuration
	{
	
		Version = 1251000165802193
		Key     = "XTG7rPmEOVtsvYeXwhEvzU1XXR4ZFnFCSf5ywdRFV6fzsYXsWQU9QYzDOvYDECBTjwzHbNNJWRx1DzeMaakAaaPsewSpGZeVq45J"
	}
}