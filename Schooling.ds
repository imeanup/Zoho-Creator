/*
 * Author       : app.zohocreator
 * Generated on : 06-May-2020 23:18:38
 * Version      : 1.0
 */
 application "Schooling"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "IST"
 	time format = "24-hr"
	section Admin
	{
		icon = "ui-1-lock-circle"
				 page Admin_Dashboard 
	 	 { 
 	 	 displayname = "Admin Dashboard" 

 	 	 icon = "" 
	 	 Content="<zml \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet'>\n\t<![CDATA[htmlpage html_snippet()\ncontent\n&lt;%{\n\tcurrentYear = Add_Current_Academic_Year[ID != 0].Academic_Year;\n\tstudentsCount = Add_Grade[Academic_Year == currentYear].Students.getAll().size();\n\temployeeCount = Add_Employee[Employee_Status == &quot;Active&quot;].count();\n\tsubjectCount = Add_Subject[ID != 0].count();\n\tholidaysCount = Add_to_Academic_Calender[Type == &quot;Holiday&quot; &amp;&amp; Academic_Year == currentYear].sum(No_of_Days);\n\t%&gt;\n&lt;style&gt;\n.col-sm-6 {\n    width: 100%;\n}\n.view-header&gt;.row h3 {\n    font-size: 19px;\n    color: #333945;\n    line-height: 40px;\n    font-weight: inherit;\n}\n.view-header&gt;.row {\n    margin-left: -21px;\n\t\n}\n.row {\n    padding-top: 4px;\n    margin-left: -15px;\n    margin-right: 0px;\n}\n.customBadge\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  width:100%;\n\t\t\t\t\t\t  \/\/height:100%;\n\t\t\t\t\t\t  border:1px solid white;\n\t\t\t\t\t\t  border-radius:3px;\n\t\t\t\t\t\t  background:white;\n\t\t\t\t\t\t  display:inline-block;\n\t\t\t\t\t\t  height: 92px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .iconDiv\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  width: 35%;\n\t\t\t\t\t\t  \/\/height:100%;\n\t\t\t\t\t\t  border-radius: 3px 0px 0px 3px;\n\t\t\t\t\t\t  \/\/padding:20px 0px 20px 0px;\n\t\t\t\t\t\t  padding:6% 0px;\n\t\t\t\t\t\t  float:left;\n\t\t\t\t\t\t  padding-left : 5%;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .iconDiv .zc-li-solid\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  font-size: 60px;\n\t\t\t\t\t\t  \/\/color: white;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t   .contentDiv\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  \/\/height:100%;\n\t\t\t\t\t\t  float:right;\n\t\t\t\t\t\t  width:60%;\n\t\t\t\t\t\t  text-align:center;\n\t\t\t\t\t\t  \/\/padding-top: 12px;\n\t\t\t\t\t\t  \/\/padding-bottom: 11px;\n\t\t\t\t\t\t  padding-top: 5%;\n\t\t\t\t\t\t  padding-bottom: 4%;\n\t\t\t\t\t\t  color: #9e9e9e;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .numSpan\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  font-size: 33px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .contentDiv font\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t  font-size : 14px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .row\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t  padding-top: 4px;\n\t\t\t\t\t\t\t  margin-left : 0px;\n\t\t\t\t\t\t\t  margin-right : 0px;\n\t\t\t\t\t\t  }\n\/* \t\t\t\t\t\t  .zcp-col span i{\n\t\t\t\t\t\t\t  color: #594DFB;\n\t\t\t\t\t\t  } *\/\n&lt;\/style&gt;\n &lt;div class=&quot;row&quot; &gt;\n\t\t\t\t\t\t  &lt;div class=&quot;col-md-3&quot; &gt;\n\t\t\t\t\t\t  &lt;div class=&quot;customBadge&quot; style=&quot;border-right:2px solid #6acbca;&quot;&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;iconDiv&quot; style=&quot;color: #6acbca;&quot;&gt;\n\t\t\t\t\t\t  &lt;i class=&quot;education-hat zc-li-solid&quot; &gt;&lt;\/i&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;a href=&quot;#Report:Student_Details?Status=Active&quot; target=&quot;_blank&quot;&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;contentDiv&quot;&gt;\n\t\t\t\t\t\t  &lt;span class=&quot;numSpan&quot;&gt;&lt;%=studentsCount%&gt;&lt;\/span&gt;&lt;br&gt;\n\t\t\t\t\t\t  &lt;font &gt;Total Students&lt;\/font&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/a&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;col-md-3&quot; &gt;\n\t\t\t\t\t\t  &lt;div class=&quot;customBadge&quot; style=&quot;border-right:2px solid #fb6c5e;&quot;&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;iconDiv&quot; style=&quot;color: #fb6c5e;&quot;&gt;\n\t\t\t\t\t\t  &lt;i class=&quot;zc-li-solid users-multiple-19&quot; &gt;&lt;\/i&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;a href=&quot;#Report:Employee_Details?Status=Active&quot; target=&quot;_blank&quot;&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;contentDiv&quot;&gt;\n\t\t\t\t\t\t  &lt;span class=&quot;numSpan&quot;&gt;&lt;%=employeeCount%&gt;&lt;\/span&gt;&lt;br&gt;\n\t\t\t\t\t\t  &lt;font &gt;Total Employees&lt;\/font&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/a&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;col-md-3&quot; &gt;\n\t\t\t\t\t\t  &lt;div class=&quot;customBadge&quot; style=&quot;border-right:2px solid #f8d347;&quot;&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;iconDiv&quot; style=&quot;color: #f8d347;&quot;&gt;\n\t\t\t\t\t\t  &lt;i class=&quot;zc-li-solid files-book-08&quot; style=&quot;font-size: 55px;&quot; &gt;&lt;\/i&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;a href=&quot;#Report:All_Subjects&quot; target=&quot;_blank&quot;&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;contentDiv&quot;&gt;\n\t\t\t\t\t\t  &lt;span class=&quot;numSpan&quot;&gt;&lt;%=subjectCount%&gt;&lt;\/span&gt;&lt;br&gt;\n\t\t\t\t\t\t  &lt;font &gt;Total Subjects&lt;\/font&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/a&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;col-md-3&quot; &gt;\n\t\t\t\t\t\t  &lt;div class=&quot;customBadge&quot;&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;iconDiv&quot; style=&quot;color: #55c8f1;&quot;&gt;\n\t\t\t\t\t\t  &lt;i class=&quot;zc-li-solid ui-1-calendar-check-62&quot; style=&quot;font-size: 53px;&quot; &gt;&lt;\/i&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;a href=&quot;#Report:Holidays&quot; target=&quot;_blank&quot;&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;contentDiv&quot;&gt;\n\t\t\t\t\t\t  &lt;span class=&quot;numSpan&quot;&gt;&lt;%=holidaysCount%&gt;&lt;\/span&gt;&lt;br&gt;\n\t\t\t\t\t\t  &lt;font&gt;Total Holidays&lt;\/font&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/a&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"60%\"\n   \t>\n\t<report    \t\t appLinkName = 'thisapp'\n   \t\t linkName = 'Academic_Calendar'\n   \t\t heightType = 'custom'\n   \t\t heightValue = '620'\n   \t\t iszreport = 'false'\n   \t\t zc_Footer = 'true'\n   \t\t zc_AddRec = 'true'\n   \t\t zc_EditRec = 'true'\n   \t\t zc_Print = 'true'\n   \t\t zc_Export = 'true'\n   \t\t zc_DelRec = 'true'\n   \t\t zc_DuplRec = 'true'\n   \t\t zc_Search = 'true'\n\n\/>\n<\/column><column\n   \t\t width=\"40%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n   \t\t action = 'OpenForm'\n   \t\t componentLinkName = 'Add_Student'\n   \t\t target = 'popup'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<pr \n>\n\t<pc \n>\n\t<image    \t\t color = '#449BE6'\n   \t\t bgColor = '#FFFFFF'\n   \t\t width = '52px'\n   \t\t height = '52px'\n   \t\t type = 'icon'\n   \t\t value = 'ui-2-square-add-11'\n   \t\t size = '4'\n   \t\t cornerRadius = '0px'\n   \t\t iconType = 'solid'\n\n\/>\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Add Student'\n   \t\t size = '2'\n   \t\t color = '#333333'\n   \t\t marginTop = '5px'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n   \t\t action = 'OpenForm'\n   \t\t componentLinkName = 'Add_Employee'\n   \t\t target = 'popup'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<pr \n>\n\t<pc \n>\n\t<image    \t\t color = '#449BE6'\n   \t\t bgColor = '#FFFFFF'\n   \t\t width = '52px'\n   \t\t height = '52px'\n   \t\t type = 'icon'\n   \t\t value = 'users-2-a-add'\n   \t\t size = '4'\n   \t\t cornerRadius = '0px'\n   \t\t iconType = 'solid'\n\n\/>\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Add Employee'\n   \t\t size = '2'\n   \t\t color = '#333333'\n   \t\t marginTop = '5px'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n   \t\t action = 'OpenForm'\n   \t\t componentLinkName = 'Add_to_Academic_Calender'\n   \t\t target = 'popup'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<pr \n>\n\t<pc \n>\n\t<image    \t\t color = '#449BE6'\n   \t\t bgColor = '#FFFFFF'\n   \t\t width = '52px'\n   \t\t height = '52px'\n   \t\t type = 'icon'\n   \t\t value = 'ui-3-calendar-add'\n   \t\t size = '4'\n   \t\t cornerRadius = '0px'\n   \t\t iconType = 'solid'\n\n\/>\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Plan Academic Calendar'\n   \t\t size = '2'\n   \t\t color = '#333333'\n   \t\t marginTop = '5px'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n>\n\t<pr    \t\t height = 'fill'\n   \t\t width = 'fill'\n\n>\n\t<pc    \t\t width = '100%'\n   \t\t bgColor = '#FFFFFF'\n   \t\t padding = '20px'\n   \t\t hAlign = 'center'\n   \t\t vAlign = 'middle'\n   \t\t action = 'OpenForm'\n   \t\t componentLinkName = 'Send_Mail'\n   \t\t target = 'popup'\n\n>\n\t<pr    \t\t height = 'auto'\n   \t\t width = 'auto'\n\n>\n\t<pc \n>\n\t<pr \n>\n\t<pc \n>\n\t<image    \t\t color = '#449BE6'\n   \t\t bgColor = '#FFFFFF'\n   \t\t width = '52px'\n   \t\t height = '52px'\n   \t\t type = 'icon'\n   \t\t value = 'ui-1-email-83'\n   \t\t size = '4'\n   \t\t cornerRadius = '0px'\n   \t\t iconType = 'solid'\n\n\/>\n<\/pc>\n<\/pr><pr \n>\n\t<pc \n>\n\t<text    \t\t type = 'Text'\n   \t\t value = 'Send Announcement'\n   \t\t size = '2'\n   \t\t color = '#333333'\n   \t\t marginTop = '5px'\n   \t\t textAlign = 'center'\n\n>\n<\/text>\n\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report    \t\t appLinkName = 'thisapp'\n   \t\t linkName = 'Absentees'\n   \t\t heightType = 'custom'\n   \t\t heightValue = '390'\n   \t\t iszreport = 'true'\n   \t\t zc_Footer = 'true'\n   \t\t zc_AddRec = 'true'\n   \t\t zc_EditRec = 'true'\n   \t\t zc_Print = 'true'\n   \t\t zc_Export = 'true'\n   \t\t zc_DelRec = 'true'\n   \t\t zc_DuplRec = 'true'\n   \t\t zc_Search = 'true'\n\n\/>\n<\/column>\n<\/row>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
		form Add_Student
		{
			displayname = "Add Student"
			success message = "Student Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Student_Name
			(
    			type = name
				displayname = "Student Name"
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_of_Birth
			(
    			type = date
				displayname = "Date of Birth"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Gender
			(
				type = radiobuttons
				values = {"Male", "Female"}
				initial value = "Male"
				layout = 2
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Blood_Group
			(
				type = picklist
				displayname = "Blood Group"
				values = {""}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Nationality
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Category
			(
				type = picklist
				values  = Add_Student_Category.ID
    			displayformat = [Category_Name]
				allow new entries = true
				[
					displayname = "Add New Category"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Religion
			(
				type = picklist
				values  = Add_Religion.ID
    			displayformat = [Religion]
				allow new entries = true
				[
					displayname = "Add New Religion"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			plain
			(
    			type = plaintext
				value = "<font size=\"3\">Contact Details</font>"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Email_Student
			(
    			type = email
				displayname = "Email"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Student
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Mobile_No_Student
			(
    			type = phonenumber
				displayname = "Mobile No"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Photo
			(
    			type = image
				source  = public_url,file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Address_Student
			(
    			type = address
				displayname = "Student Address"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				values = {"Active", "Inactive"}
				initial value = "Active"
	 			row = 1
	 			column = 1   
				width = medium
			)
			plain1
			(
    			type = plaintext
				value = "<font size=\"3\">Official Details</font>"
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have unique Admission_No
			(
				type = number
				displayname = "Admission No"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Joining_Date
			(
    			type = date
				displayname = "Joining Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have unique Roll_No
			(
				type = number
				displayname = "Roll No"
	 			row = 1
	 			column = 2   
				width = medium
			)
			plain2
			(
    			type = plaintext
				value = "<font size=\"3\">Parent Details</font>"
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Parent_Name
			(
    			type = name
				displayname = "Parent Name"
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 2   
				width = medium
			)
			Relation
			(
				type = picklist
				values = {"Father", "Mother", "Guardian"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			Occupation
			(
    			type = text
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Email_Parent
			(
    			type = email
				displayname = "Email"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Phone_Parent
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Mobile_No_Parent
			(
    			type = phonenumber
				displayname = "Mobile No"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Address_same_as_Student_Address
			(
    			type = checkbox
				displayname = "Address same as Student Address"
				initial value = false
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Address_Parent
			(
    			type = address
				displayname = "Parent Address"
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_12
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_22
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city2
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province2
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code2
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country2
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude2
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude2
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 2   
				width = medium
			)
	
			customize
			(
				icon = "users-add-27"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Employee
		{
			displayname = "Add Employee"
			success message = "Employee Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Employee_Id_No
			(
    			type = text
				displayname = "Employee Id/No"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Employee_Name
			(
    			type = name
				displayname = "Employee Name"
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.","Mrs.","Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Department
			(
				type = picklist
				values  = Add_Department.ID
    			displayformat = [Department]
				allow new entries = true
				[
					displayname = "Add New Department"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Designation
			(
				type = picklist
				values  = Add_Designation.ID
    			displayformat = [Designation]
				allow new entries = true
				[
					displayname = "Add New Designation"
				]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Qualification
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Type
			(
				type = radiobuttons
				values = {"Fresher", "Experienced"}
				initial value = "Fresher"
				layout = 2
	 			row = 1
	 			column = 1   
				width = medium
			)
			Experience_Info
			(
    			type = textarea
				displayname = "Experience Info"
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Joining_Date
			(
    			type = date
				displayname = "Joining Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			plain
			(
    			type = plaintext
				value = "<font size=\"3\">Personal Details</font>"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Gender
			(
				type = radiobuttons
				values = {"Male", "Female"}
				layout = 2
	 			row = 1
	 			column = 1   
				width = medium
			)
			Date_of_Birth
			(
    			type = date
				displayname = "Date of Birth"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Marital_Status
			(
				type = picklist
				displayname = "Marital Status"
				values = {"Single", "Married", "Widowed", "Divorced", "Separated"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Blood_Group
			(
				type = picklist
				displayname = "Blood Group"
				values = {""}
	 			row = 1
	 			column = 1   
				width = medium
			)
			plain1
			(
    			type = plaintext
				value = "<font size=\"3\">Contact Details</font>"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Phone
			(
    			type = phonenumber
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Email
			(
    			type = email
	 			row = 1
	 			column = 2   
				width = medium
			)
			Mobile_No
			(
    			type = phonenumber
				displayname = "Mobile No"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_13
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_23
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city3
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province3
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code3
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country3
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude3
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude3
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Photo
			(
    			type = image
				source  = public_url,file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 2   
				width = medium
			)
			Employee_Status
			(
				type = picklist
				displayname = "Employee Status"
				values = {"Active", "Inactive"}
				initial value = "Active"
	 			row = 1
	 			column = 2   
				width = medium
			)
	
			customize
			(
				icon = "users-2-a-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		custom Student_Details
		{
			displayName = "Student Details"
			show all rows from Add_Student    
			(
				Date_of_Birth as "Date of Birth"
				Gender
				Blood_Group as "Blood Group"
				Nationality
				Category
				Religion
				Joining_Date as "Joining Date"
				Relation
				Occupation
				Status
				Email_Parent as "Email"
				Mobile_No_Parent as "Mobile No"
				Admission_No as "Admission No"
				Address_Student  as "Student Address"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
				Roll_No as "Roll No"
				Email_Student as "Email"
				Photo
				Mobile_No_Student as "Mobile No"
				Student_Name  as "Student Name"
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
			)
			filters
			(
				Category
				Gender
			)
			group by
			(
				Status ascending
			)
			options
			(
				icon = "users-2-contacts-44"
	 		)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 20
		     			title = "Overview"
						fields
						(
							Photo
							Roll_No as "Roll No"
							Student_Name as "Student Name"
							Email_Student as "Email"
							Mobile_No_Student as "Mobile No"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Admission_No as "Admission No"
							Roll_No as "Roll No"
							Photo
							Email_Student as "Email"
							Date_of_Birth as "Date of Birth"
							Gender
							Blood_Group as "Blood Group"
							Nationality
							Category
							Religion
							Joining_Date as "Joining Date"
							Relation
							Email_Parent as "Email"
							Occupation
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		custom Employee_Details
		{
			displayName = "Employee Details"
			show all rows from Add_Employee    
			(
				Date_of_Birth as "Date of Birth"
				Marital_Status as "Marital Status"
				Employee_Status as "Employee Status"
				Email
				Photo
				Experience_Info as "Experience Info"
				Employee_Id_No as "Employee Id/No"
				Designation
				Department
				Qualification
				Employee_Name  as "Employee Name"
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Gender
				Joining_Date as "Joining Date"
				Phone
				Address 
	 			(
	      			displayformat = [address_line_13+""+address_line_23+""+district_city3+""+state_province3+""+postal_Code3+""+country3]
	      			enable = Show_As_Text
	 			)
				Blood_Group as "Blood Group"
				Mobile_No as "Mobile No"
			)
			filters
			(
				Department
				Designation
				Type
			)
			group by
			(
				Employee_Status ascending
			)
			options
			(
				icon = "users-2-contacts-45"
	 		)
			quickview
			(
				layout
				(
		 			type = 6
					datablock1
					(
			 			layout type = 21
		     			title = "Overview"
						fields
						(
							Photo
							Employee_Name as "Employee Name"
							Designation
							Department
							Employee_Id_No as "Employee Id/No"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Employee_Id_No as "Employee Id/No"
							Photo
							Employee_Name as "Employee Name"
							Qualification
							Joining_Date as "Joining Date"
							Department
							Designation
							Email
						)
					)
					datablock2
					(
			 			layout type = -2
		     			title = "Personal Detais"
						fields
						(
							Gender
							Blood_Group as "Blood Group"
							Joining_Date as "Joining Date"
							Phone
							Address
							Mobile_No as "Mobile No"
							Qualification
							Experience_Info as "Experience Info"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Employee
	{
		icon = "users-single-03"
				 page Employee_Dashboard 
	 	 { 
 	 	 displayname = "Employee Dashboard" 

 	 	 icon = "" 
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"style\":\"padding-right:0px;padding-top:0px;padding-bottom:0px;padding-left:0px;\",\"design\":\"fluid\",\"displayType\":\"plain\"}}'\n\t\t\n\t\t\tmobileDeviceConfig='{\"layout\":{\"design\":\"onebyone\",\"displayType\":\"plain\",\"forcedOrientation\":false}}'\n\t\t\n\t\t\ttabletDeviceConfig='{\"layout\":{\"design\":\"onebyone\",\"displayType\":\"plain\",\"forcedOrientation\":false}}'\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Employee_Dashboard1'>\n\t<![CDATA[htmlpage Employee_Dashboard1()\ncontent\n&lt;%{\n\t%&gt;\n&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\n\t\t\t\t\t\t  &lt;link rel=&quot;stylesheet&quot; href=&quot;https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.7\/css\/bootstrap.min.css&quot;&gt;\n\t\t\t\t\t\t  &lt;style&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  .calcIcon {\n\t\t\t\t\t\t    width: 31px;\n\t\t\t\t\t\t    height: 33px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.input-group-addon {\n\t\t\t\t\t\t    border: none;\n\t\t\t\t\t\t    background: none;\n\t\t\t\t\t\t    padding: 8px 8px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.input-group .form-control {\n\t\t\t\t\t\t    position: initial;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t  .dropdown-menu\n\t\t\t\t\t\t{\n\t\t\t\t\t\tz-index:1000000\n\t\t\t\t\t\t}\n\t\t\t\t\t\t  .studentAttendanceDiv{\n\t\t\t\t\t\t  margin-left:1%;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t@media (max-width: 991px){\n\t\t\t\t\t\t  .studentAttendanceDiv{\n\t\t\t\t\t\t  margin-left:0px;\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .view-outer-wrapper{\n\t\t\t\t\t\t  overflow:hidden;\n\t\t\t\t\t\t  }  \n\t\t\t\t\t\t.topbar_dropdown#zc-app-dropdown a{\n\t\t\t\t\t\t  height:100%;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .container-fluid\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  background:transparent;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t \n\t\t\t\t\t\t  .gradeList\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  padding: 2%;\n\t\t\t\t\t\t  border-bottom: 1px solid #e8e8e8;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  #zohoreportel\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  height:200px !important;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .view-header&gt;.row\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t \/\/ border-bottom: 1px solid #EFEFEF;\n\t\t\t\t\t\t    \/\/padding: 2% 0 2% 0;\n\t\t\t\t\t\t    padding: 1% 0 2% 0;\n\t\t\t\t\t\t      margin-left: 0px\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .view-outer-wrapper\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t    margin:0px;\n\t\t\t\t\t\t  border:none;\n\t\t\t\t\t\t    \/\/border: 1px solid #EFEFEF;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t.view-outer-wrapper .view-header\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  height:41px;\n\t\t\t\t\t\t  margin: 0 0 3% 0;\n\t\t\t\t\t\t  border-bottom:2px solid #99acb5;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  .reportfullwidth &gt; div:first-child\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t   height:195px;\n\t\t\t\t\t\t  overflow:hidden;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .view-header&gt;.row h3\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  overflow: visible;\n\t\t\t\t\t\t    color: #555;\n\t\t\t\t\t\t    padding-left: 0px;\n\t\t\t\t\t\t    font-size: 18px;\n\t\t\t\t\t\t    line-height:22px;\n\t\t\t\t\t\t  font-weight: 500;\n\t\t\t\t\t\t  padding: 5px 15px 5px 0;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .quickLinkList\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t    \/\/box-shadow: -1px -1px 6px #e8e8e8 inset;\n\t\t\t\t\t\t    box-shadow: -1px 1px 1px rgba(0, 0, 0, 0.05);\n\t\t\t\t\t\t    text-align: center;\n\t\t\t\t\t\t    text-overflow: ellipsis;\n\t\t\t\t\t\t    white-space: nowrap;\n\t\t\t\t\t\t    overflow: hidden;\n\t\t\t\t\t\t    \/\/padding: 11px;\n\t\t\t\t\t\t    padding:10.5px;\n\t\t\t\t\t\t    margin-bottom: 4px;\n\t\t\t\t\t\t    border: 1px solid #eee;\n\t\t\t\t\t\t    border-radius: 2px;\n\t\t\t\t\t\t    font-size:14px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  .row {\n\t\t\t\t\t\t    margin-right: 0px;\n\t\t\t\t\t\t    margin-left: 0px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .container-fluid\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t      padding: 1% 1% 0.5% 1%;\n\t\t\t\t\t\t  color:#767676;\n\t\t\t\t\t\t      background: #f2f2f2;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .page_content_wrapper\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  background:whitesmoke;\n\t\t\t\t\t\t  padding:0px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t   .customtable td\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  text-align:center;\n\t\t\t\t\t\t  border: 1px solid #eeeeee;\n\t\t\t\t\t\t   width: 92px;\n\t\t\t\t\t\t    padding: 13px 7px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .customtable div\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  text-overflow: ellipsis;\n\t\t\t\t\t\t    white-space: nowrap;\n\t\t\t\t\t\t    overflow: hidden;\n\t\t\t\t\t\t    width: inherit;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .tableDay\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  background:rgba(93, 170, 224, 0.9);\n\t\t\t\t\t\t  color: white;\n\t\t\t\t\t\t  border: none;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  a.zc-live-primary-btn:visited\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  text-decoration: none;\n\t\t\t\t\t\t  color:white;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .quickLinkList a\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  \/\/color:#62b5f6;\n\t\t\t\t\t\t  color:#61a4dc;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  #viewheadername\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t  width: 100%;\n    \t\t\t\t\t\tpadding: 0px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t .view-header&gt;.row .view-name-wrapper+div&gt;.view-options-menufix\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t  padding : 0px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .profileDetails\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\tfloat:right;width:94%;padding:0.42%;  \n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  @media(min-width : 993px)\n\t\t\t\t\t\t  .chartDiv\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t  height : 275px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t   @media(max-width : 992px)\n\t\t\t\t\t\t   {\n\t\t\t\t\t\t\t   img\n\t\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t\t  height :45px !important;\n\t\t\t\t\t\t\t\t  width  :40px !important;\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  .profileDetails\n\t\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t\t  width : 88%;\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t   }\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;\/style&gt;\n&lt;%\n\tcurrentYear = Add_Current_Academic_Year[ID != 0].Academic_Year;\n\temployeeRecord = Add_Employee[Email == zoho.loginuserid];\n\tsubjectsRec = Assign_Subjects_and_Faculties[Academic_Year == currentYear &amp;&amp; Allocation.Faculty == employeeRecord.ID];\n\t%&gt;\n&lt;div class=&quot;container-fluid&quot;&gt;\n&lt;%\n\tif(employeeRecord.count() == 0)\n\t{\n\t\t%&gt;\n&lt;div style=&quot;text-align:center;font-size: 20px;&quot;&gt;You are not a registered Employee!&lt;\/div&gt;\n&lt;%\n\t}\n\telse\n\t{\n\t\t%&gt;\n&lt;div class=&quot;row&quot; style=&quot;border: 1px solid #f1f1f1;border-radius: 1px;background: white;&quot;&gt;\n\t\t\t\t\t\t  &lt;div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;float:left;width:6%;padding: 0.3% 0px 0.3% 0.9%;&quot;&gt;\n&lt;%\n\t\temployeePhoto = employeeRecord.Photo.replaceFirst(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName&quot;,zoho.appuri + &quot;My_Details_Employee\/Photo&quot;);\n\t\t%&gt;\n&lt;%=employeePhoto.replacefirst(&quot;&lt;img&quot;,&quot;&lt;img style=&apos;border-radius:50%;height:60px;width:100%;&apos;&quot;)%&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;profileDetails&quot; &gt;\n\t\t\t\t\t\t  &lt;div style=&quot;float:left;padding: 0.7%;&quot;&gt;\n\t\t\t\t\t\t  &lt;span style=&quot;font-size:20px;color:#555;&quot;&gt;&lt;%=employeeRecord.Employee_Name%&gt; &lt;\/span&gt;\n\t\t\t\t\t\t  &lt;a style=&quot;color:lightgray;padding-left:5Px;&quot; href=&quot;https:\/\/app.zohocreator.com&lt;%=zoho.appuri%&gt;#Form:Add_Employee?recLinkID=&lt;%=employeeRecord.ID%&gt;&amp;viewLinkName=My_Details_Employee&amp;zc_LoadIn=dialog&quot;   &gt;\n\t\t\t\t\t\t  &lt;i class=&quot;fa fa-pencil&quot;&gt;&lt;\/i&gt;\n\t\t\t\t\t\t  &lt;\/a&gt;&lt;br&gt;\n\t\t\t\t\t\t  &lt;span&gt;&lt;%=employeeRecord.Designation.Designation%&gt;,&lt;%=employeeRecord.Department.Department%&gt;&lt;\/span&gt;&lt;br&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;float:right;margin: 1.2%;&quot;&gt;\n\t\t\t\t\t\t   &lt;a class=&quot;zc-live-primary-btn&quot; href=&quot;#Form:Employee_Attendance?zc_LoadIn=dialog&quot; &gt;Mark Attendance&lt;\/a&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;div class=&quot;row&quot; style=&quot;margin-top:0.5%;border: 1px solid #f1f1f1;border-radius: 1px;background:white;&quot;&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;div class=&quot;col-md-4&quot; style=&quot;height:275px;&quot;&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:100%;&quot;&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:15%;border-bottom:2px solid #f8857c;padding:2.7%;font-size:18px;color: #555&quot;&gt;Subjects&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:83%;overflow:auto;&quot;&gt;\n&lt;%\n\t\tif(subjectsRec.count() == 0)\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;height:100%;width:100%;display:flex;align-items:center;justify-content:center;font-size:19px;&quot;&gt;\n\t\t\t\t\t\t  No Data Available\n\t\t\t\t\t\t  &lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse\n\t\t{\n\t\t\t%&gt;\n&lt;ol style=&quot;box-shadow: 1px 1px 1px #e8e8e8;margin-top: 2%;border: 1px solid #e8e8e8;margin-bottom:0px;&quot;&gt;\n&lt;%\n\t\t\tfor each  Rec in subjectsRec\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;li class=&quot;gradeList&quot;&gt;\n\t\t\t\t\t\t  &lt;span&gt;Grade&lt;%=Rec.Grade.Grade%&gt;&lt;\/span&gt;&lt;br&gt;\n&lt;%\n\t\t\t\tfor each  subformRec in Rec.Allocation\n\t\t\t\t{\n\t\t\t\t\tif(subformRec.Faculty == employeeRecord.ID)\n\t\t\t\t\t{\n\t\t\t\t\t\t%&gt;\n&lt;span&gt;&lt;%=Add_Subject[ID == subformRec.Subject_field].Subject_Name%&gt; - &lt;\/span&gt;\n\t\t\t\t\t\t  &lt;span&gt;&lt;%=Add_Subject[ID == Rec.Allocation.Subject_field].Subject_Code%&gt;&lt;\/span&gt;\n&lt;%\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/li&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/ol&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;div class=&quot;col-md-5 chartDiv&quot; &gt;\n\t\t\t\t\t\t   &lt;div style=&quot;height: 41px;\n    border-bottom: 2px solid #99acb5;\n    padding: 2.7%;\n    font-size: 18px;\n    color: #555;&quot;&gt; My Attendance(Current Month)&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:85%;&quot; elName=&apos;zc-component&apos; reportLinkName=&apos;Employee_Attendance_Chart&apos; params=&apos;zc_Header=false&apos;  &gt;&lt;\/div&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;div class=&quot;col-md-3&quot; style=&quot;height:275px;&quot;&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:15%;border-bottom:2px solid #8acb8d;padding:3.7%;font-size:18px;color: #555&quot;&gt; Quick Links&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:83%;&quot;&gt;\n\t\t\t\t\t\t  &lt;ol style=&quot;margin-top: 2%;padding-left:0px;&quot;&gt;\n\t\t\t\t\t\t  &lt;li class=&quot;quickLinkList&quot;&gt;\n\t\t\t\t\t\t  &lt;a href=&quot;#Form:Student_Attendance&quot; target=&quot;_blank&quot; &gt;Student Attendance&lt;\/a&gt;\n\t\t\t\t\t\t  &lt;\/li&gt;\n\t\t\t\t\t\t  &lt;li class=&quot;quickLinkList&quot;&gt;\n\t\t\t\t\t\t&lt;a href=&quot;#Form:Send_Mail?zc_LoadIn=dialog&quot;&gt;Send Announcement&lt;\/a&gt;\n\t\t\t\t\t\t  &lt;\/li&gt;\n\t\t\t\t\t\t  &lt;li class=&quot;quickLinkList&quot;&gt;\n\t\t\t\t\t\t&lt;a href=&quot;#Report:Academic_Calendar&quot; target=&quot;_blank&quot;&gt;Academic Calendar&lt;\/a&gt;\n\t\t\t\t\t\t  &lt;\/li&gt;\n\t\t\t\t\t\t  &lt;li class=&quot;quickLinkList&quot;&gt;\n\t\t\t\t\t\t&lt;a href=&quot;#Form:Set_Timetable&quot; target=&quot;_blank&quot;&gt;Set Timetable&lt;\/a&gt;\n\t\t\t\t\t\t  &lt;\/li&gt;\n\t\t\t\t\t\t &lt;li class=&quot;quickLinkList&quot;&gt;\n\t\t\t\t\t\t&lt;a href=&quot;#Report:Grades&quot; target=&quot;_blank&quot;&gt;View Gradewise Students&lt;\/a&gt;\n\t\t\t\t\t\t  &lt;\/li&gt;\n\t\t\t\t\t\t  &lt;\/ol&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;div class=&quot;row&quot; style=&quot;margin-top:0.5%;&quot;&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;col-md-7&quot; style=&quot;height: 400px;padding:0px;&quot; &gt;\n&lt;%\n\t\tDaysList = thisapp.getTimetable();\n\t\t%&gt;\n&lt;div style=&quot;height: 100%;background:white;border: 1px solid #f1f1f1;border-radius: 1px;&quot;&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:11%;border-bottom: 2px solid #6ebbf7;padding: 1.1%;font-size: 18px;margin: 0 2%;line-height:30px;color: #555&quot;&gt;Timetable&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:87%;overflow: auto;width:98%;margin:1%;&quot;&gt;\n&lt;%\n\t\tdayListEmpty = true;\n\t\tfor each  day in DaysList\n\t\t{\n\t\t\tdayMap = day.toMap();\n\t\t\tif(!dayMap.isEmpty())\n\t\t\t{\n\t\t\t\tdayListEmpty = false;\n\t\t\t}\n\t\t}\n\t\tif(dayListEmpty)\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;height:100%;width:100%;display:flex;align-items:center;justify-content:center;font-size: 19px;&quot;&gt; No Data Available &lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse\n\t\t{\n\t\t\t%&gt;\n&lt;table class=&quot;customtable&quot; style=&quot;border-spacing:3px;border-collapse: separate;&quot;&gt;\n&lt;%\n\t\t\tdayMap = DaysList.get(0).toMap();\n\t\t\tif(!dayMap.isEmpty())\n\t\t\t{\n\t\t\t\tdaykeys = dayMap.keys().sort();\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Sunday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in daykeys\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec%&gt;&lt;br&gt;&lt;div&gt;&lt;%=dayMap.get(eachrec)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tdayMap = DaysList.get(1).toMap();\n\t\t\tif(!dayMap.isEmpty())\n\t\t\t{\n\t\t\t\tdaykeys = dayMap.keys().sort();\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Monday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in daykeys\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec%&gt;&lt;br&gt;&lt;div&gt;&lt;%=dayMap.get(eachrec)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tdayMap = DaysList.get(2).toMap();\n\t\t\tif(!dayMap.isEmpty())\n\t\t\t{\n\t\t\t\tdaykeys = dayMap.keys().sort();\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Tuesday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in daykeys\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec%&gt;&lt;br&gt;&lt;div&gt;&lt;%=dayMap.get(eachrec)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tdayMap = DaysList.get(3).toMap();\n\t\t\tif(!dayMap.isEmpty())\n\t\t\t{\n\t\t\t\tdaykeys = dayMap.keys().sort();\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Wednesday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in daykeys\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec%&gt;&lt;br&gt;&lt;div&gt;&lt;%=dayMap.get(eachrec)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tdayMap = DaysList.get(4).toMap();\n\t\t\tif(!dayMap.isEmpty())\n\t\t\t{\n\t\t\t\tdaykeys = dayMap.keys().sort();\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Thursday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in daykeys\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec%&gt;&lt;br&gt;&lt;div&gt;&lt;%=dayMap.get(eachrec)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tdayMap = DaysList.get(5).toMap();\n\t\t\tif(!dayMap.isEmpty())\n\t\t\t{\n\t\t\t\tdaykeys = dayMap.keys().sort();\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Friday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in daykeys\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec%&gt;&lt;br&gt;&lt;div&gt;&lt;%=dayMap.get(eachrec)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tdayMap = DaysList.get(6).toMap();\n\t\t\tif(!dayMap.isEmpty())\n\t\t\t{\n\t\t\t\tdaykeys = dayMap.keys().sort();\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Saturday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in daykeys\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec%&gt;&lt;br&gt;&lt;div&gt;&lt;%=dayMap.get(eachrec)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/table&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;col-md-5&quot; style=&quot;height: 400px;padding:0px;&quot; &gt;\n\t\t\t\t\t\t  &lt;div class=&quot;studentAttendanceDiv&quot; style=&quot;height: 100%;background:white;border: 1px solid #f1f1f1;border-radius: 1px;&quot;&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:11%;border-bottom: 2px solid #ffd75e;padding: 1.5%;font-size: 18px;margin: 0 2%;line-height:30px;color: #555&quot;&gt;Student Attendance(Current Month)&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:66%;margin: 9.5% 0;&quot;&gt;\n\t\t\t\t\t\t  &lt;%=thisapp.BarChart.getBarChartStyle()%&gt;\n\t\t\t\t\t\t  &lt;%=thisapp.BarChart.getAttendanceChart()%&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t   &lt;\/div&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
		custom Employee_Attendance_Report
		{
			displayName = "Employee Attendance"
			show all rows from Employee_Attendance    
			(
				Date_field as "Date"
				Select_Employee.Phone
				Select_Employee.Email
				Select_Employee as "Select Employee"
				Status
			)
			group by
			(
				Date_field ascending
			)
			options
			(
				icon = "ui-1-calendar-check-62"
	 		)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Select_Employee as "Select Employee"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Select_Employee as "Select Employee"
							Date_field as "Date"
							Status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Student_Attendance_View
		{
			displayName = "Students Attendance"
			show all rows from Student_Attendance    
			(
				Date_field as "Date"
				Grade
				Academic_Year as "Academic Year"
				Absentees
				Present_Students as "Present Students"
				Absentees_Count as "Absentees Count"
			)
			group by
			(
				Date_field ascending
			)
			options
			(
				icon = "education-pencil-47"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Date_field as "Date"
							Grade
							Present_Students as "Present Students"
							Absentees
							Absentees_Count as "Absentees Count"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Date_field as "Date"
							Grade
							Academic_Year as "Academic Year"
							Present_Students as "Present Students"
							Absentees
							Absentees_Count as "Absentees Count"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Student
	{
		icon = "users-square-33"
				 page Student_Dashboard 
	 	 { 
 	 	 displayname = "Student Dashboard" 

 	 	 icon = "" 
	 	 Content="<zml \t\t\n\t\t\n\t\t\tbgColor='#F4F4F5'\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"style\":\"padding-right:0px;padding-top:0px;padding-bottom:0px;padding-left:0px;\",\"design\":\"fluid\",\"displayType\":\"plain\"}}'\n\t\t\n\t\t\tmobileDeviceConfig='{\"layout\":{\"displayType\":\"plain\",\"design\":\"onebyone\",\"forcedOrientation\":false}}'\n\t\t\n\t\t\ttabletDeviceConfig='{\"layout\":{\"design\":\"onebyone\",\"displayType\":\"plain\",\"forcedOrientation\":false}}'\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet'>\n\t<![CDATA[htmlpage html_snippet()\ncontent\n&lt;%{\n\t%&gt;\n&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\n\t\t\t  &lt;link rel=&quot;stylesheet&quot; href=&quot;https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.7\/css\/bootstrap.min.css&quot;&gt;\n&lt;%\n\tcurrentYear = Add_Current_Academic_Year[ID != 0].Academic_Year;\n\tstudentRecord = Add_Student[Email_Student == zoho.loginuserid];\n\tallGrades = Add_Grade[Academic_Year == currentYear];\n\tfor each  grade in allGrades\n\t{\n\t\tif(grade.Students.contains(studentRecord.ID))\n\t\t{\n\t\t\tgradeID = grade.ID;\n\t\t\tstudentGrade = grade.Grade;\n\t\t}\n\t}\n\toverallpresent = 0;\n\tmonthlypresent = 0;\n\tattendanceRecords = Student_Attendance[Grade == gradeID];\n\tfor each  Rec in attendanceRecords\n\t{\n\t\tif(Rec.Present_Students.contains(studentRecord.ID))\n\t\t{\n\t\t\toverallpresent = overallpresent + 1;\n\t\t}\n\t}\n\toverallTotal = attendanceRecords.count();\n\tif(overallTotal != 0)\n\t{\n\t\toverallPresentPercent = (overallpresent \/ overallTotal * 360).round(0);\n\t\tif(overallPresentPercent &lt;= 180)\n\t\t{\n\t\t\tpieSlice1Transform = overallPresentPercent;\n\t\t\tpieSlice2Start = overallPresentPercent;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpieSlice1Transform = 180;\n\t\t\tpieSlice1AdditionalStart = 180;\n\t\t\tpieSlice1AdditionalTransform = overallPresentPercent - 180;\n\t\t\tpieSlice2Start = overallPresentPercent;\n\t\t}\n\t\toverallAbsentPercent = ((overallTotal - overallpresent) \/ overallTotal * 360).round(0);\n\t\tif(overallAbsentPercent &lt;= 180)\n\t\t{\n\t\t\tpieSlice2Transform = overallAbsentPercent;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpieSlice2Transform = 180;\n\t\t\tpieSlice2AdditionalStart = 180 + pieSlice1Transform;\n\t\t\tpieSlice2AdditionalTransform = overallAbsentPercent - 180;\n\t\t}\n\t}\n\tthisMonthAttendanceRecords = Student_Attendance[Grade == gradeID &amp;&amp; Date_field &gt; toStartOfMonth(zoho.currentdate) &amp;&amp; Date_field &lt; eomonth(zoho.currentdate,0)];\n\tfor each  monthlyRec in thisMonthAttendanceRecords\n\t{\n\t\tif(monthlyRec.Present_Students.contains(studentRecord.ID))\n\t\t{\n\t\t\tmonthlypresent = monthlypresent + 1;\n\t\t}\n\t}\n\tmonthlyTotal = thisMonthAttendanceRecords.count();\n\tif(monthlyTotal != 0)\n\t{\n\t\tmonthlyPresentPercent = (monthlypresent \/ monthlyTotal * 360).round(0);\n\t\tif(monthlyPresentPercent &lt;= 180)\n\t\t{\n\t\t\tpieSlice3Transform = monthlyPresentPercent;\n\t\t\tpieSlice4Start = monthlyPresentPercent;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpieSlice3Transform = 180;\n\t\t\tpieSlice3AdditionalStart = 180;\n\t\t\tpieSlice3AdditionalTransform = monthlyPresentPercent - 180;\n\t\t\tpieSlice4Start = monthlyPresentPercent;\n\t\t}\n\t\tmonthlyAbsentPercent = ((monthlyTotal - monthlypresent) \/ monthlyTotal * 360).round(0);\n\t\tif(monthlyAbsentPercent &lt;= 180)\n\t\t{\n\t\t\tpieSlice4Transform = monthlyAbsentPercent;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpieSlice4Transform = 180;\n\t\t\tpieSlice4AdditionalStart = 180 + pieSlice3Transform;\n\t\t\tpieSlice4AdditionalTransform = monthlyAbsentPercent - 180;\n\t\t}\n\t\t\/\/monthlyPresentPercent = (monthlypresent  \/  monthlyTotal  *  360).round(2);\n\t\t\/\/monthlyAbsentPercent = ((monthlyTotal  -  monthlypresent)  \/  monthlyTotal  *  360).round(2);\n\t}\n\t%&gt;\n&lt;style&gt;\n\t\t\t  .topbar_dropdown#zc-app-dropdown a{\n\t\t\t  height:100%;\n\t\t\t  }\n\t\t\t  .container-fluid {\n\t\t\t  background:#f2f2f2;\n\t\t\t      color: #767676;\n\t\t\t  }\n\t\t\t  .row\n\t\t\t  {\n\t\t\t  margin-right:0px;\n\t\t\t  margin-left:0px;\n\t\t\t  }\n\t\t\t  .inner .page_content_wrapper\n\t\t\t  {\n\t\t\t  padding:0px;\n\t\t\t  }\n\t\t\t  .page_content_wrapper\n\t\t\t  {\n\t\t\t  background:whitesmoke;\n\t\t\t  padding:0px;\n\t\t\t  }\n\t\t\t  .subjectList\n\t\t\t  {\n\t\t\t    border: 1px solid #ececec;\n\t\t\t    box-shadow: 1px -1px 3px rgba(232, 232, 232, 0.63);\n\t\t\t    padding: 2%;\n\t\t\t    margin: 2% 0;\n\t\t\t    border-left: 3px solid rgb(247, 224, 192);\n\t\t\t  }\n\t\t\t  .studentName\n\t\t\t  {\n\t\t\t  font-size:20px;\n\t\t\t  color:#555;\n\t\t\t  }\n\t\t\t  .profileHeader\n\t\t\t  {\n\t\t\t  \/\/border:1px solid rgba(155, 155, 155, 0.1);\n\t\t\t  box-shadow: -1px 1px 1px rgba(0, 0, 0, 0.05);\n\t\t\t  background: white;\n\t\t\t  margin-bottom:0.7%;\n\t\t\t  height:10.5%;\n\t\t\t  }\n\t\t\t  \n\t\t\t  \n\t\t\t  \n\t\t\t  \n\t\t\t  .pieContainer { height: 87%;width: 68%;margin: auto; } \n\t\t\t  .pieBackground { background-color: lightgrey; position: absolute; width: 180px; height: 180px; -moz-border-radius: 50%; -webkit-border-radius: 50%; -o-border-radius: 50%; border-radius: 50%; -moz-box-shadow: -1px 1px 3px #000; -webkit-box-shadow: -1px 1px 3px #000; -o-box-shadow: -1px 1px 3px #000; box-shadow: -1px 1px 3px #000; }\n\t\t\t  .pie { position: absolute; width: 180px; height: 180px; -moz-border-radius: 50%; -webkit-border-radius: 50%; -o-border-radius: 50%; border-radius: 50%; clip: rect(0px, 90px, 180px, 0px); } \n\t\t\t  .hold { position: absolute; width: 180px; height: 180px; -moz-border-radius: 50%; -webkit-border-radius: 50%; -o-border-radius: 50%; border-radius: 50%; clip: rect(0px, 180px, 180px, 90px); } \n\t\t\t  \n\t\t\t  #pieSlice1 .pie { background-color: #bbe491; -webkit-transform:rotate(&lt;%=pieSlice1Transform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice1Transform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice1Transform%&gt;deg); transform:rotate(&lt;%=pieSlice1Transform%&gt;deg); } \n\t\t\t  #pieSlice1additional { -webkit-transform:rotate(&lt;%=pieSlice1AdditionalStart%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice1AdditionalStart%&gt;deg); -o-transform:rotate(&lt;%=pieSlice1AdditionalStart%&gt;deg); transform:rotate(&lt;%=pieSlice1AdditionalStart%&gt;deg); } \n\t\t\t  #pieSlice1additional .pie { background-color: #bbe491; -webkit-transform:rotate(&lt;%=pieSlice1AdditionalTransform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice1AdditionalTransform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice1AdditionalTransform%&gt;deg); transform:rotate(&lt;%=pieSlice1AdditionalTransform%&gt;deg); } \n\t\t\t  \n\t\t\t  #pieSlice2 { -webkit-transform:rotate(&lt;%=pieSlice2Start%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice2Start%&gt;deg); -o-transform:rotate(&lt;%=pieSlice2Start%&gt;deg); transform:rotate(&lt;%=pieSlice2Start%&gt;deg); } \n\t\t\t  #pieSlice2 .pie { background-color: #fd6666; -webkit-transform:rotate(&lt;%=pieSlice2Transform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice2Transform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice2Transform%&gt;deg); transform:rotate(&lt;%=pieSlice2Transform%&gt;deg); } \n\t\t\t  #pieSlice2additional { -webkit-transform:rotate(&lt;%=pieSlice2AdditionalStart%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice2AdditionalStart%&gt;deg); -o-transform:rotate(&lt;%=pieSlice2AdditionalStart%&gt;deg); transform:rotate(&lt;%=pieSlice2AdditionalStart%&gt;deg); } \n\t\t\t  #pieSlice2additional .pie { background-color: #fd6666; -webkit-transform:rotate(&lt;%=pieSlice2AdditionalTransform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice2AdditionalTransform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice2AdditionalTransform%&gt;deg); transform:rotate(&lt;%=pieSlice2AdditionalTransform%&gt;deg); } \n\t\t\t  \n\t\t\t  #pieSlice3 .pie { background-color: #bbe493; -webkit-transform:rotate(&lt;%=pieSlice3Transform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice3Transform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice3Transform%&gt;deg); transform:rotate(&lt;%=pieSlice3Transform%&gt;deg); } \n\t\t\t  #pieSlice3additional { -webkit-transform:rotate(&lt;%=pieSlice3AdditionalStart%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice3AdditionalStart%&gt;deg); -o-transform:rotate(&lt;%=pieSlice3AdditionalStart%&gt;deg); transform:rotate(&lt;%=pieSlice3AdditionalStart%&gt;deg); } \n\t\t\t  #pieSlice3additional .pie { background-color: #bbe493; -webkit-transform:rotate(&lt;%=pieSlice3AdditionalTransform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice3AdditionalTransform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice3AdditionalTransform%&gt;deg); transform:rotate(&lt;%=pieSlice3AdditionalTransform%&gt;deg); } \n\t\t\t  \n\t\t\t  #pieSlice4 { -webkit-transform:rotate(&lt;%=pieSlice4Start%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice4Start%&gt;deg); -o-transform:rotate(&lt;%=pieSlice4Start%&gt;deg); transform:rotate(&lt;%=pieSlice4Start%&gt;deg); } \n\t\t\t  #pieSlice4 .pie { background-color: #fd6666; -webkit-transform:rotate(&lt;%=pieSlice4Transform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice4Transform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice4Transform%&gt;deg); transform:rotate(&lt;%=pieSlice4Transform%&gt;deg); } \n\t\t\t  #pieSlice4additional { -webkit-transform:rotate(&lt;%=pieSlice4AdditionalStart%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice4AdditionalStart%&gt;deg); -o-transform:rotate(&lt;%=pieSlice4AdditionalStart%&gt;deg); transform:rotate(&lt;%=pieSlice4AdditionalStart%&gt;deg); } \n\t\t\t  #pieSlice4additional .pie { background-color: #fd6666; -webkit-transform:rotate(&lt;%=pieSlice4AdditionalTransform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice4AdditionalTransform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice4AdditionalTransform%&gt;deg); transform:rotate(&lt;%=pieSlice4AdditionalTransform%&gt;deg); } \n\t\t\t  \n\t\t\t  @media (max-width: 1200px){\n\t\t\t  .pieBackground{\n\t\t\t  height:150px;\n\t\t\t  width:150px;\n\t\t\t  min-height:150px;\n\t\t\t  min-width:150px;\n\t\t\t\t  }\n\t\t\t.hold{\n\t\t\t  height:150px;\n\t\t\t  width:150px;\n\t\t\t    min-height:150px;\n\t\t\t  min-width:150px;\n\t\t\t      clip: rect(0px, 150px, 150px, 75px);\n\t\t\t\t  }\n\t\t\t\t  .pie{\n\t\t\t      clip: rect(0px, 75px, 150px, 0px);\n\t\t\t\t  width:150px;\n\t\t\t\t  height:150px;\n\t\t\t\t   }\n\t\t\t  }\n\t\t\t   \n\t\t\t   @media (max-height: 820px){\n\t\t\t  .pieBackground{\n\t\t\t  height:150px;\n\t\t\t  width:150px;\n\t\t\t  min-height:150px;\n\t\t\t  min-width:150px;\n\t\t\t\t  }\n\t\t\t.hold{\n\t\t\t  height:150px;\n\t\t\t  width:150px;\n\t\t\t    min-height:150px;\n\t\t\t  min-width:150px;\n\t\t\t      clip: rect(0px, 150px, 150px, 75px);\n\t\t\t\t  }\n\t\t\t\t  .pie{\n\t\t\t      clip: rect(0px, 75px, 150px, 0px);\n\t\t\t\t  width:150px;\n\t\t\t\t  height:150px;\n\t\t\t\t   }\n\t\t\t  }\n\t\t\t   @media (max-height: 700px){\n\t\t\t  .studentName{\n\t\t\t  font-size:18px;\n\t\t\t  }\n\t\t\t  }\n\t\t\t  @media (max-height: 600px){\n\t\t\t  .attendance-height{\n\t\t\t  min-height:245px;}\n\t\t\t  .profileHeader{\n\t\t\t  min-height:55px;\n\t\t\t  }\n\t\t\t  }\n\t\t\t  \n\t\t\t  @media (max-width: 900px){\n\t\t\t  .pieBackground{\n\t\t\t  height:120px;\n\t\t\t  width:120px;\n\t\t\t  min-height:120px;\n\t\t\t  min-width:120px;\n\t\t\t\t  }\n\t\t\t.hold{\n\t\t\t  height:120px;\n\t\t\t  width:120px;\n\t\t\t    min-height:120px;\n\t\t\t  min-width:120px;\n\t\t\t      clip: rect(0px, 120px, 120px, 60px);\n\t\t\t\t  }\n\t\t\t\t  .pie{\n\t\t\t      clip: rect(0px, 60px, 120px, 0px);\n\t\t\t\t  width:120px;\n\t\t\t\t  height:120px;\n\t\t\t\t   }\n\t\t\t  }\n\t\t\t  \n\t\t\t  .customtable td\n\t\t\t  {\n\t\t\t  text-align:center;\n\t\t\t  \/\/padding: 12px;\n\t\t\t  \/\/border: 1px solid #f9f9f9;\n\t\t\t  \/\/border: 1px solid #d3eaff;\n\t\t\t  border: 1px solid #eeeeee;\n\t\t\t   width: 92px;\n\t\t\t    padding: 13px 7px;\n\t\t\t  }\n\t\t\t  .customtable div\n\t\t\t  {\n\t\t\t  text-overflow: ellipsis;\n\t\t\t    white-space: nowrap;\n\t\t\t    overflow: hidden;\n\t\t\t    width: inherit;\n\t\t\t  }\n\t\t\t  .tableDay\n\t\t\t  {\n\t\t\t  \/\/background: rgba(79, 169, 241, 0.64);\n\t\t\t  background:rgba(93, 170, 224, 0.9);\n\t\t\t  color: white;\n\t\t\t  border: none;\n\t\t\t  }\n\t\t\t  .profileDetails\n\t\t\t  {\n\t\t\t  \/\/height: 38%;\n\t\t\t  height:113px;\n\t\t\t  width: 100%;\n\t\t\t  \/\/margin-top: 10%;\n\t\t\t  margin-top: 42px;\n\t\t\t  background:white;\n\t\t\t  }\n\t\t\t  .profileDetails i\n\t\t\t  {\n\t\t\t  color:cadetblue;\n\t\t\t  }\n\t\t\t  \n\t\t\t  \n\t\t\t  &lt;\/style&gt;\n\t\t\t  &lt;div class=&quot;container-fluid&quot; style=&quot;padding:1%;&quot;&gt;\n&lt;%\n\tif(studentRecord.count() == 0)\n\t{\n\t\t%&gt;\n&lt;div style=&quot;text-align:center;font-size: 20px;&quot;&gt;You are not a registered Student!&lt;\/div&gt;\n&lt;%\n\t}\n\telse\n\t{\n\t\t%&gt;\n&lt;div class=&quot;row&quot; &gt;\n\t\t\t  \n\t\t\t  \n\t\t\t  &lt;div class=&quot;col-md-8&quot; style=&quot;padding:0px;height: 310px;margin-bottom:1%;&quot;&gt;\n\t\t\t  &lt;div class=&quot;attendance-height&quot; style=&quot;height:100%;box-shadow: -1px 1px 1px rgba(0, 0, 0, 0.05);&quot;&gt;\n\t\t\t  &lt;div  style=&quot;background:white;height:100%;&quot;&gt;\n\t\t\t  &lt;div style=&quot;height:14%;padding:1%;font-size:18px;border-top: 3px solid #f78686;border-bottom: 1px solid #eee;color: #555;&quot;&gt; Attendance &lt;\/div&gt;\n\t\t\t \n\t\t\t  &lt;div style=&quot;width:40%;height:86%;float:left;padding: 3% 0 1% 0;&quot;&gt;\n\t\t\t  &lt;div class=&quot;pieContainer&quot; style=&quot;display:flex;align-items:center;justify-content:center;&quot;&gt;\n&lt;%\n\t\tif(overallTotal != 0)\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;pieBackground&quot;&gt;&lt;\/div&gt; \n\t\t\t  &lt;div id=&quot;pieSlice1&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\tif(overallPresentPercent &gt; 180)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div id=&quot;pieSlice1additional&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;div id=&quot;pieSlice2&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\tif(overallAbsentPercent &gt; 180)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div id=&quot;pieSlice2additional&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt; \n\t\t\t  &lt;div style=&quot;height:13%;display:flex;align-items:center;justify-content:center;font-size:15px;&quot;&gt;Overall(&lt;%=(overallpresent \/ overallTotal * 100).round(0)%&gt;%)&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;color:red;&quot;&gt;No Data Available&lt;\/div&gt;\n\t\t\t  &lt;\/div&gt; \n\t\t\t  &lt;div style=&quot;height:13%;display:flex;align-items:center;justify-content:center;font-size:15px;&quot;&gt;Overall&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt; \n\t\t\t  &lt;div style=&quot;width:40%;height:86%;float:left;padding: 3% 0 1% 0;&quot;&gt;\n\t\t\t  &lt;div class=&quot;pieContainer&quot; style=&quot;display:flex;align-items:center;justify-content:center;&quot;&gt;\n&lt;%\n\t\tif(monthlyTotal != 0)\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;pieBackground&quot;&gt;&lt;\/div&gt; \n\t\t\t  &lt;div id=&quot;pieSlice3&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\tif(monthlyPresentPercent &gt; 180)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div id=&quot;pieSlice3additional&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;div id=&quot;pieSlice4&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\tif(monthlyAbsentPercent &gt; 180)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div id=&quot;pieSlice4additional&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t  &lt;div style=&quot;height:13%;display:flex;align-items:center;justify-content:center;font-size:15px;&quot;&gt;Current Month(&lt;%=(monthlypresent \/ monthlyTotal * 100).round(0)%&gt;%)&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;color:red;&quot;&gt;No Data Available&lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;div style=&quot;height:13%;display:flex;align-items:center;justify-content:center;font-size:15px;&quot;&gt;Current Month&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt; \n\t\t\t  &lt;div style=&quot;width:20%;height:86%;float:right;padding: 6% 0 1% 0;&quot;&gt;\n\t\t\t  &lt;div style=&quot;margin-bottom:5px;width:75px;&quot;&gt;&lt;div style=&quot;width:13px;height:13px;background:#bbe491;float:left;margin: 4%;&quot;&gt;&lt;\/div&gt;&lt;span&gt;Present&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;div style=&quot;width:75px;&quot;&gt;&lt;div style=&quot;width:13px;height:13px;background:#fd6666;float:left;margin: 4%;&quot;&gt;&lt;\/div&gt;&lt;span&gt;Absent&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n&lt;%\n\t\tstudentPhoto = studentRecord.Photo.replaceFirst(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName&quot;,zoho.appuri + &quot;My_Details_Student\/Photo&quot;);\n\t\tbackgroundImage = studentPhoto.remove(&quot;&lt;img src = \\&quot;&quot;).getPrefix(&quot;\\&quot;&quot;);\n\t\t%&gt;\n&lt;div class=&quot;col-md-4&quot; style=&quot;height: 310px;padding-right: 0px;padding-left: 0.7%;margin-bottom:1%;&quot;&gt;\n\t\t\t  &lt;div style=&quot;background: white;height:100%;width:100%;text-align: center;border: 1px solid #eee;&quot;&gt; \n\t\t\t  &lt;div align=&quot;center;&quot; style=&quot;width: 100%;height: 155px;padding: 0px 25%;background: url(&apos;&lt;%=backgroundImage%&gt;&apos;);background-repeat: no-repeat;background-size: cover;opacity:0.41;background-position: center;&quot;&gt;&lt;\/div&gt;\n\t\t\t  &lt;div style=&quot;height: 50%;width: 50%;position: absolute;top: 0;left: 25%;&quot;&gt;\n\t\t\t  &lt;%=studentPhoto.replacefirst(&quot;&lt;img&quot;,&quot;&lt;img style=&apos;height:100%;margin:20% 0;width:94%;border:3px solid #fff;&apos;&quot;)%&gt;\n\t\t\t   &lt;\/div&gt; \n\t\t\t  &lt;div class=&quot;profileDetails&quot; &gt;\n\t\t\t  &lt;div style=&quot;margin-bottom: 2%; height: 48%; border-bottom: 1px solid #eee;&quot;&gt; \n\t\t\t  \n\t\t\t  &lt;span style=&quot;font-size: 17px; color: #555;&quot;&gt;&lt;%=studentRecord.Student_Name%&gt; &lt;\/span&gt;&lt;br&gt; \n\t\t\t  &lt;span style=&quot;font-size: 16px;&quot;&gt;Student&lt;\/span&gt; &lt;\/div&gt;\n\t\t\t  &lt;div style=&quot;text-align: left;width: 46%;float:left;padding: 0 4% 0 5%;&quot;&gt;\n\t\t\t  &lt;div&gt;&lt;i class=&quot;zc-li-solid education-hat&quot;style=&quot;margin-right: 3px;position: relative;top: 3px&quot;&gt;&lt;\/i&gt;&lt;%=ifnull(studentGrade,&quot;-&quot;)%&gt;&lt;\/div&gt; \n\t\t\t  &lt;div style=&quot;padding-top:5px;&quot;&gt;&lt;i class=&quot;zc-li-solid users-badge-15&quot;style=&quot;font-size: 15px;margin: 0 3px 0 2px;&quot;&gt;&lt;\/i&gt; &lt;%=studentRecord.Roll_No%&gt;&lt;\/div&gt; &lt;\/div&gt; \n\t\t\t  &lt;div style=&quot;text-align: left;width: 53%;float:right;background-color: white;padding: 0 4% 0 5%;&quot;&gt; \n\t\t\t  &lt;div&gt;&lt;i class=&quot;zc-li-solid ui-3-phone-call&quot; style=&quot;margin-right: 5px;position: relative;top: 2px&quot;&gt;&lt;\/i&gt;&lt;%=studentRecord.Mobile_No_Student%&gt;&lt;\/div&gt; \n\t\t\t  &lt;div style=&quot;white-space: nowrap;text-overflow: ellipsis;overflow: hidden;padding-top:5px;&quot; title=&quot;&lt;%=studentRecord.Email_Student%&gt;&quot;&gt;\n\t\t\t  &lt;i class=&quot;zc-li-solid ui-1-email-83&quot; style=&quot;margin-right: 3px;position: relative;top: 2px&quot;  &gt;&lt;\/i&gt;&lt;%=studentRecord.Email_Student%&gt;&lt;\/div&gt;&lt;\/div&gt; \n\t\t\t  &lt;\/div&gt; &lt;\/div&gt; &lt;\/div&gt;\n\t\t\t  \n\t\t\t  \n\t\t\t  \n\t\t\t  \n\t\t\t  \n\t\t\t  &lt;\/div&gt;\n&lt;%\n\t\ttimetableID = Set_Timetable[Grade == gradeID &amp;&amp; From_field &lt;= zoho.currentdate &amp;&amp; To_field &gt;= zoho.currentdate].ID;\n\t\ttimetableRecords = Timetable_subform[Set_Timetable_Id == timetableID];\n\t\t%&gt;\n&lt;div class=&quot;row&quot; &gt;\n\t\t\t  &lt;div class=&quot;col-md-8&quot; style=&quot;padding:0px;height:420px;;background:white;box-shadow: -1px 1px 1px rgba(0, 0, 0, 0.05);margin-bottom:1%;&quot;&gt;\n\t\t\t   \n\t\t\t  &lt;div style=&quot;height:11%;padding: 1%;font-size: 18px;border-top: 3px solid #45a3e6;border-bottom: 1px solid #eee;color:#555;&quot;&gt;Timetable&lt;\/div&gt;\n\t\t\t  &lt;div style=&quot;overflow: auto;width: 100%;height:89%&quot;&gt;\n&lt;%\n\t\tif(timetableID == null)\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;height:100%;width:100%;display:flex;align-items:center;justify-content:center;font-size:19px;&quot;&gt;\n\t\t\t  No Data Available\n\t\t\t  &lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse\n\t\t{\n\t\t\t%&gt;\n&lt;table class=&quot;customtable&quot; style=&quot;border-spacing:3px;border-collapse: separate;&quot;&gt;\n&lt;%\n\t\t\tif(timetableRecords.Sunday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t  Sunday\n\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Sunday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(timetableRecords.Monday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot; &gt;Monday&lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Monday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;&lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(timetableRecords.Tuesday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t  Tuesday\n\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Tuesday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(timetableRecords.Wednesday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t  Wednesday\n\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Wednesday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(timetableRecords.Thursday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t  Thursday\n\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Thursday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(timetableRecords.Friday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t  Friday\n\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Friday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(timetableRecords.Saturday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t  Saturday\n\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Saturday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;\n\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/table&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t  \n\t\t\t  \n\t\t\t  &lt;\/div&gt;\n\t\t\t  \n\t\t\t  &lt;div class=&quot;col-md-4&quot; style=&quot;height:420px;padding-right: 0px;padding-left:0.7%;margin-bottom:1%;&quot; &gt;\n\t\t\t  &lt;div style=&quot;background:white;height:100%;box-shadow: -1px 1px 1px rgba(0, 0, 0, 0.05);&quot;&gt;\n\t\t\t  &lt;div style=&quot;height:11%;padding:2%;font-size:18px;border-top: 3px solid #fda711;border-bottom: 1px solid #eee;color:#555;&quot;&gt; Subjects and Faculties &lt;\/div&gt;\n\t\t\t  &lt;ol style=&quot;height:89%;margin: 3%;overflow:auto;padding:0px;&quot;&gt;\n&lt;%\n\t\tallocationRecords = Assign_Subjects_and_Faculties[Grade == gradeID];\n\t\tif(allocationRecords.count() == 0)\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;height:100%;width:100%;display:flex;align-items:center;justify-content:center;font-size:19px;&quot;&gt;\n\t\t\t  No Data Available\n\t\t\t  &lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor each  Record in allocationRecords.Allocation\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;li class=&quot;subjectList&quot;&gt;\n\t\t\t   &lt;span style=&quot;font-size: 16px;color:#fda711;&quot;&gt;&lt;%=Record.Subject_field.Subject_Name%&gt;&lt;\/span&gt;\n\t\t\t  &lt;span style=&quot;color: #c7c7c7;&quot;&gt;-&lt;%=Record.Subject_field.Subject_Code%&gt;&lt;\/span&gt;&lt;br&gt;\n\t\t\t  &lt;span&gt;&lt;%=Record.Faculty.Employee_Name%&gt;(&lt;%=Record.Faculty.Employee_Id_No%&gt;)&lt;\/span&gt;\n\t\t\t  &lt;\/li&gt;\n&lt;%\n\t\t\t}\n\t\t}\n\t\t%&gt;\n&lt;\/ol&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n\t\t\t  &lt;\/div&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Parent
	{
		icon = "users-parent"
				 page Parent_Dashboard 
	 	 { 
 	 	 displayname = "Parent Dashboard" 

 	 	 icon = "" 
	 	 Content="<zml \t\t\n\t\t\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"style\":\"padding-right:0px;padding-top:0px;padding-bottom:0px;padding-left:0px;\",\"design\":\"fluid\",\"displayType\":\"plain\"}}'\n\t\t\n\t\t\tmobileDeviceConfig='{\"layout\":{\"design\":\"onebyone\",\"displayType\":\"plain\",\"forcedOrientation\":false}}'\n\t\t\n\t\t\ttabletDeviceConfig='{\"layout\":{\"design\":\"onebyone\",\"displayType\":\"plain\",\"forcedOrientation\":false}}'\n\t\t>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='Parent_Dashboard1'>\n\t<![CDATA[htmlpage Parent_Dashboard1()\ncontent\n&lt;%{\n\t%&gt;\n&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\n\t\t\t\t\t\t  &lt;link rel=&quot;stylesheet&quot; href=&quot;https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.7\/css\/bootstrap.min.css&quot;&gt;\n&lt;%\n\tcurrentYear = Add_Current_Academic_Year[ID != 0].Academic_Year;\n\tstudentRecord = Add_Student[Email_Parent == zoho.loginuserid];\n\tallGrades = Add_Grade[Academic_Year == currentYear];\n\tfor each  grade in allGrades\n\t{\n\t\tif(grade.Students.contains(studentRecord.ID))\n\t\t{\n\t\t\tgradeID = grade.ID;\n\t\t\tstudentGrade = grade.Grade;\n\t\t}\n\t}\n\toverallpresent = 0;\n\tmonthlypresent = 0;\n\tattendanceRecords = Student_Attendance[Grade == gradeID];\n\tfor each  Rec in attendanceRecords\n\t{\n\t\tif(Rec.Present_Students.contains(studentRecord.ID))\n\t\t{\n\t\t\toverallpresent = overallpresent + 1;\n\t\t}\n\t}\n\toverallTotal = attendanceRecords.count();\n\tif(overallTotal != 0)\n\t{\n\t\toverallPresentPercent = (overallpresent \/ overallTotal * 360).round(0);\n\t\tif(overallPresentPercent &lt;= 180)\n\t\t{\n\t\t\tpieSlice1Transform = overallPresentPercent;\n\t\t\tpieSlice2Start = overallPresentPercent;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpieSlice1Transform = 180;\n\t\t\tpieSlice1AdditionalStart = 180;\n\t\t\tpieSlice1AdditionalTransform = overallPresentPercent - 180;\n\t\t\tpieSlice2Start = overallPresentPercent;\n\t\t}\n\t\toverallAbsentPercent = ((overallTotal - overallpresent) \/ overallTotal * 360).round(0);\n\t\tif(overallAbsentPercent &lt;= 180)\n\t\t{\n\t\t\tpieSlice2Transform = overallAbsentPercent;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpieSlice2Transform = 180;\n\t\t\tpieSlice2AdditionalStart = 180 + pieSlice1Transform;\n\t\t\tpieSlice2AdditionalTransform = overallAbsentPercent - 180;\n\t\t}\n\t}\n\tthisMonthAttendanceRecords = Student_Attendance[Grade == gradeID &amp;&amp; Date_field &gt; toStartOfMonth(zoho.currentdate) &amp;&amp; Date_field &lt; eomonth(zoho.currentdate,0)];\n\tfor each  monthlyRec in thisMonthAttendanceRecords\n\t{\n\t\tif(monthlyRec.Present_Students.contains(studentRecord.ID))\n\t\t{\n\t\t\tmonthlypresent = monthlypresent + 1;\n\t\t}\n\t}\n\tmonthlyTotal = thisMonthAttendanceRecords.count();\n\tif(monthlyTotal != 0)\n\t{\n\t\tmonthlyPresentPercent = (monthlypresent \/ monthlyTotal * 360).round(0);\n\t\tif(monthlyPresentPercent &lt;= 180)\n\t\t{\n\t\t\tpieSlice3Transform = monthlyPresentPercent;\n\t\t\tpieSlice4Start = monthlyPresentPercent;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpieSlice3Transform = 180;\n\t\t\tpieSlice3AdditionalStart = 180;\n\t\t\tpieSlice3AdditionalTransform = monthlyPresentPercent - 180;\n\t\t\tpieSlice4Start = monthlyPresentPercent;\n\t\t}\n\t\tmonthlyAbsentPercent = ((monthlyTotal - monthlypresent) \/ monthlyTotal * 360).round(0);\n\t\tif(monthlyAbsentPercent &lt;= 180)\n\t\t{\n\t\t\tpieSlice4Transform = monthlyAbsentPercent;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpieSlice4Transform = 180;\n\t\t\tpieSlice4AdditionalStart = 180 + pieSlice3Transform;\n\t\t\tpieSlice4AdditionalTransform = monthlyAbsentPercent - 180;\n\t\t}\n\t\t\/\/monthlyPresentPercent = (monthlypresent  \/  monthlyTotal  *  360).round(2);\n\t\t\/\/monthlyAbsentPercent = ((monthlyTotal  -  monthlypresent)  \/  monthlyTotal  *  360).round(2);\n\t}\n\t%&gt;\n&lt;style&gt;\n\t\t\t\t\t\t  .topbar_dropdown#zc-app-dropdown a{\n\t\t\t\t\t\t  height:100%;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .container-fluid {\n\t\t\t\t\t\t  background:none;\n\t\t\t\t\t\t      color: #767676;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .row\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  margin-right:0px;\n\t\t\t\t\t\t  margin-left:0px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .inner .page_content_wrapper\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  padding:0px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .page_content_wrapper\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  background:whitesmoke;\n\t\t\t\t\t\t  padding:0px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .subjectList\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t    border: 1px solid #ececec;\n\t\t\t\t\t\t    box-shadow: 1px -1px 3px rgba(232, 232, 232, 0.63);\n\t\t\t\t\t\t    padding: 2%;\n\t\t\t\t\t\t    margin: 2% 0;\n\t\t\t\t\t\t    border-left: 3px solid rgb(247, 224, 192);\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .studentName\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  font-size:20px;\n\t\t\t\t\t\t  color:#555;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .profileHeader\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  \/\/border:1px solid rgba(155, 155, 155, 0.1);\n\t\t\t\t\t\t  box-shadow: -1px 1px 1px rgba(0, 0, 0, 0.05);\n\t\t\t\t\t\t  background: white;\n\t\t\t\t\t\t  margin-bottom:0.7%;\n\t\t\t\t\t\t  height:10.5%;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  .pieContainer { height: 87%;width: 68%;margin: auto; } \n\t\t\t\t\t\t  .pieBackground { background-color: lightgrey; position: absolute; width: 180px; height: 180px; -moz-border-radius: 50%; -webkit-border-radius: 50%; -o-border-radius: 50%; border-radius: 50%; -moz-box-shadow: -1px 1px 3px #000; -webkit-box-shadow: -1px 1px 3px #000; -o-box-shadow: -1px 1px 3px #000; box-shadow: -1px 1px 3px #000; }\n\t\t\t\t\t\t  .pie { position: absolute; width: 180px; height: 180px; -moz-border-radius: 50%; -webkit-border-radius: 50%; -o-border-radius: 50%; border-radius: 50%; clip: rect(0px, 90px, 180px, 0px); } \n\t\t\t\t\t\t  .hold { position: absolute; width: 180px; height: 180px; -moz-border-radius: 50%; -webkit-border-radius: 50%; -o-border-radius: 50%; border-radius: 50%; clip: rect(0px, 180px, 180px, 90px); } \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  #pieSlice1 .pie { background-color: #bbe491; -webkit-transform:rotate(&lt;%=pieSlice1Transform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice1Transform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice1Transform%&gt;deg); transform:rotate(&lt;%=pieSlice1Transform%&gt;deg); } \n\t\t\t\t\t\t  #pieSlice1additional { -webkit-transform:rotate(&lt;%=pieSlice1AdditionalStart%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice1AdditionalStart%&gt;deg); -o-transform:rotate(&lt;%=pieSlice1AdditionalStart%&gt;deg); transform:rotate(&lt;%=pieSlice1AdditionalStart%&gt;deg); } \n\t\t\t\t\t\t  #pieSlice1additional .pie { background-color: #bbe491; -webkit-transform:rotate(&lt;%=pieSlice1AdditionalTransform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice1AdditionalTransform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice1AdditionalTransform%&gt;deg); transform:rotate(&lt;%=pieSlice1AdditionalTransform%&gt;deg); } \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  #pieSlice2 { -webkit-transform:rotate(&lt;%=pieSlice2Start%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice2Start%&gt;deg); -o-transform:rotate(&lt;%=pieSlice2Start%&gt;deg); transform:rotate(&lt;%=pieSlice2Start%&gt;deg); } \n\t\t\t\t\t\t  #pieSlice2 .pie { background-color: #fd6666; -webkit-transform:rotate(&lt;%=pieSlice2Transform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice2Transform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice2Transform%&gt;deg); transform:rotate(&lt;%=pieSlice2Transform%&gt;deg); } \n\t\t\t\t\t\t  #pieSlice2additional { -webkit-transform:rotate(&lt;%=pieSlice2AdditionalStart%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice2AdditionalStart%&gt;deg); -o-transform:rotate(&lt;%=pieSlice2AdditionalStart%&gt;deg); transform:rotate(&lt;%=pieSlice2AdditionalStart%&gt;deg); } \n\t\t\t\t\t\t  #pieSlice2additional .pie { background-color: #fd6666; -webkit-transform:rotate(&lt;%=pieSlice2AdditionalTransform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice2AdditionalTransform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice2AdditionalTransform%&gt;deg); transform:rotate(&lt;%=pieSlice2AdditionalTransform%&gt;deg); } \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  #pieSlice3 .pie { background-color: #bbe493; -webkit-transform:rotate(&lt;%=pieSlice3Transform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice3Transform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice3Transform%&gt;deg); transform:rotate(&lt;%=pieSlice3Transform%&gt;deg); } \n\t\t\t\t\t\t  #pieSlice3additional { -webkit-transform:rotate(&lt;%=pieSlice3AdditionalStart%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice3AdditionalStart%&gt;deg); -o-transform:rotate(&lt;%=pieSlice3AdditionalStart%&gt;deg); transform:rotate(&lt;%=pieSlice3AdditionalStart%&gt;deg); } \n\t\t\t\t\t\t  #pieSlice3additional .pie { background-color: #bbe493; -webkit-transform:rotate(&lt;%=pieSlice3AdditionalTransform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice3AdditionalTransform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice3AdditionalTransform%&gt;deg); transform:rotate(&lt;%=pieSlice3AdditionalTransform%&gt;deg); } \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  #pieSlice4 { -webkit-transform:rotate(&lt;%=pieSlice4Start%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice4Start%&gt;deg); -o-transform:rotate(&lt;%=pieSlice4Start%&gt;deg); transform:rotate(&lt;%=pieSlice4Start%&gt;deg); } \n\t\t\t\t\t\t  #pieSlice4 .pie { background-color: #fd6666; -webkit-transform:rotate(&lt;%=pieSlice4Transform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice4Transform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice4Transform%&gt;deg); transform:rotate(&lt;%=pieSlice4Transform%&gt;deg); } \n\t\t\t\t\t\t  #pieSlice4additional { -webkit-transform:rotate(&lt;%=pieSlice4AdditionalStart%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice4AdditionalStart%&gt;deg); -o-transform:rotate(&lt;%=pieSlice4AdditionalStart%&gt;deg); transform:rotate(&lt;%=pieSlice4AdditionalStart%&gt;deg); } \n\t\t\t\t\t\t  #pieSlice4additional .pie { background-color: #fd6666; -webkit-transform:rotate(&lt;%=pieSlice4AdditionalTransform%&gt;deg); -moz-transform:rotate(&lt;%=pieSlice4AdditionalTransform%&gt;deg); -o-transform:rotate(&lt;%=pieSlice4AdditionalTransform%&gt;deg); transform:rotate(&lt;%=pieSlice4AdditionalTransform%&gt;deg); } \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  @media (max-width: 1200px){\n\t\t\t\t\t\t  .pieBackground{\n\t\t\t\t\t\t  height:150px;\n\t\t\t\t\t\t  width:150px;\n\t\t\t\t\t\t  min-height:150px;\n\t\t\t\t\t\t  min-width:150px;\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t.hold{\n\t\t\t\t\t\t  height:150px;\n\t\t\t\t\t\t  width:150px;\n\t\t\t\t\t\t    min-height:150px;\n\t\t\t\t\t\t  min-width:150px;\n\t\t\t\t\t\t      clip: rect(0px, 150px, 150px, 75px);\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  .pie{\n\t\t\t\t\t\t      clip: rect(0px, 75px, 150px, 0px);\n\t\t\t\t\t\t\t  width:150px;\n\t\t\t\t\t\t\t  height:150px;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t   \n\t\t\t\t\t\t   @media (max-height: 820px){\n\t\t\t\t\t\t  .pieBackground{\n\t\t\t\t\t\t  height:150px;\n\t\t\t\t\t\t  width:150px;\n\t\t\t\t\t\t  min-height:150px;\n\t\t\t\t\t\t  min-width:150px;\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t.hold{\n\t\t\t\t\t\t  height:150px;\n\t\t\t\t\t\t  width:150px;\n\t\t\t\t\t\t    min-height:150px;\n\t\t\t\t\t\t  min-width:150px;\n\t\t\t\t\t\t      clip: rect(0px, 150px, 150px, 75px);\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  .pie{\n\t\t\t\t\t\t      clip: rect(0px, 75px, 150px, 0px);\n\t\t\t\t\t\t\t  width:150px;\n\t\t\t\t\t\t\t  height:150px;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t   @media (max-height: 700px){\n\t\t\t\t\t\t  .studentName{\n\t\t\t\t\t\t  font-size:18px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  @media (max-height: 600px){\n\t\t\t\t\t\t  .attendance-height{\n\t\t\t\t\t\t  min-height:245px;}\n\t\t\t\t\t\t  .profileHeader{\n\t\t\t\t\t\t  min-height:55px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  @media (max-width: 900px){\n\t\t\t\t\t\t  .pieBackground{\n\t\t\t\t\t\t  height:120px;\n\t\t\t\t\t\t  width:120px;\n\t\t\t\t\t\t  min-height:120px;\n\t\t\t\t\t\t  min-width:120px;\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t.hold{\n\t\t\t\t\t\t  height:120px;\n\t\t\t\t\t\t  width:120px;\n\t\t\t\t\t\t    min-height:120px;\n\t\t\t\t\t\t  min-width:120px;\n\t\t\t\t\t\t      clip: rect(0px, 120px, 120px, 60px);\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  .pie{\n\t\t\t\t\t\t      clip: rect(0px, 60px, 120px, 0px);\n\t\t\t\t\t\t\t  width:120px;\n\t\t\t\t\t\t\t  height:120px;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  .customtable td\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  text-align:center;\n\t\t\t\t\t\t  \/\/padding: 12px;\n\t\t\t\t\t\t  \/\/border: 1px solid #f9f9f9;\n\t\t\t\t\t\t  \/\/border: 1px solid #d3eaff;\n\t\t\t\t\t\t  border: 1px solid #eeeeee;\n\t\t\t\t\t\t   width: 92px;\n\t\t\t\t\t\t    padding: 13px 7px;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .customtable div\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  text-overflow: ellipsis;\n\t\t\t\t\t\t    white-space: nowrap;\n\t\t\t\t\t\t    overflow: hidden;\n\t\t\t\t\t\t    width: inherit;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .tableDay\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  \/\/background: rgba(79, 169, 241, 0.64);\n\t\t\t\t\t\t  background:rgba(93, 170, 224, 0.9);\n\t\t\t\t\t\t  color: white;\n\t\t\t\t\t\t  border: none;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .profileDetails\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  height: 38%;\n\t\t\t\t\t\t  width: 100%;\n\t\t\t\t\t\t  margin-top: 10%;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .profileDetails i\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  color:cadetblue;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .studentDetails\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  height: 55%;\n\t\t\t\t\t\t  width:100%;\n\t\t\t\t\t\t  overflow:auto;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  .studentDetails li\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t  white-space: nowrap;\n\t\t\t\t\t\t text-overflow: ellipsis;\n\t\t\t\t\t\t overflow: hidden;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  &lt;\/style&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;container-fluid&quot; style=&quot;padding:1%;background: #f9f9f9;&quot;&gt;\n&lt;%\n\tif(studentRecord.count() == 0)\n\t{\n\t\t%&gt;\n&lt;div style=&quot;text-align:center;font-size: 20px;&quot;&gt;You are not a registered Parent!&lt;\/div&gt;\n&lt;%\n\t}\n\telse\n\t{\n\t\t%&gt;\n&lt;div class=&quot;row&quot;&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;div class=&quot;col-md-8&quot; style=&quot;padding:0px;height:310px;margin-bottom:1%;&quot;&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;attendance-height&quot; style=&quot;height:100%;box-shadow: -1px 1px 1px rgba(0, 0, 0, 0.05);&quot;&gt;\n\t\t\t\t\t\t  &lt;div  style=&quot;background:white;;height:100%;&quot;&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:14%;padding:1%;font-size:18px;border-top: 3px solid #f78686;border-bottom: 1px solid #eee;color: #555;&quot;&gt; Attendance &lt;\/div&gt;\n\t\t\t\t\t\t \n\t\t\t\t\t\t  &lt;div style=&quot;width:40%;height:86%;float:left;padding: 3% 0 1% 0;&quot;&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;pieContainer&quot; style=&quot;display:flex;align-items:center;justify-content:center;&quot;&gt;\n&lt;%\n\t\tif(overallTotal != 0)\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;pieBackground&quot;&gt;&lt;\/div&gt; \n\t\t\t\t\t\t  &lt;div id=&quot;pieSlice1&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\tif(overallPresentPercent &gt; 180)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div id=&quot;pieSlice1additional&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;div id=&quot;pieSlice2&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\tif(overallAbsentPercent &gt; 180)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div id=&quot;pieSlice2additional&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt; \n\t\t\t\t\t\t  &lt;div style=&quot;height:13%;display:flex;align-items:center;justify-content:center;font-size:15px;&quot;&gt;Overall(&lt;%=(overallpresent \/ overallTotal * 100).round(0)%&gt; %)&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;color:red;&quot;&gt;No Data Available&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt; \n\t\t\t\t\t\t  &lt;div style=&quot;height:13%;display:flex;align-items:center;justify-content:center;font-size:15px;&quot;&gt;Overall&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt; \n\t\t\t\t\t\t  &lt;div style=&quot;width:40%;height:86%;float:left;padding: 3% 0 1% 0;&quot;&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;pieContainer&quot; style=&quot;display:flex;align-items:center;justify-content:center;&quot;&gt;\n&lt;%\n\t\tif(monthlyTotal != 0)\n\t\t{\n\t\t\t%&gt;\n&lt;div class=&quot;pieBackground&quot;&gt;&lt;\/div&gt; \n\t\t\t\t\t\t  &lt;div id=&quot;pieSlice3&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\tif(monthlyPresentPercent &gt; 180)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div id=&quot;pieSlice3additional&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;div id=&quot;pieSlice4&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\tif(monthlyAbsentPercent &gt; 180)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;div id=&quot;pieSlice4additional&quot; class=&quot;hold&quot;&gt;&lt;div class=&quot;pie&quot;&gt;&lt;\/div&gt;&lt;\/div&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:13%;display:flex;align-items:center;justify-content:center;font-size:15px;&quot;&gt;Current Month(&lt;%=(monthlypresent \/ monthlyTotal * 100).round(0)%&gt; %)&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;color:red;&quot;&gt;No Data Available&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:13%;display:flex;align-items:center;justify-content:center;font-size:15px;&quot;&gt;Current Month&lt;\/div&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt; \n\t\t\t\t\t\t  &lt;div style=&quot;width:20%;height:86%;float:right;padding: 6% 0 1% 0;&quot;&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;margin-bottom:5px;width:75px;&quot;&gt;&lt;div style=&quot;width:13px;height:13px;background:#bbe491;float:left;margin: 4%;&quot;&gt;&lt;\/div&gt;&lt;span&gt;Present&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;width:75px;&quot;&gt;&lt;div style=&quot;width:13px;height:13px;background:#fd6666;float:left;margin: 4%;&quot;&gt;&lt;\/div&gt;&lt;span&gt;Absent&lt;\/span&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;div class=&quot;col-md-4&quot; style=&quot;height:310px;padding-right: 0px;padding-left: 0.7%;margin-bottom:1%;&quot;&gt;\n&lt;%\n\t\tstudentPhoto = studentRecord.Photo.replaceFirst(&quot;\/sharedBy\/appLinkName\/viewLinkName\/fieldName&quot;,zoho.appuri + &quot;My_Details_Student\/Photo&quot;);\n\t\t%&gt;\n&lt;div style=&quot;background: white;height:100%;width:100%;&quot;&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height: 14%;font-size: 18px;border-top: 3px solid gray;border-bottom: 1px solid #eee;color: #555;padding: 2%;&quot;&gt;\n\t\t\t\t\t\t  Student Details&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:86%;width:100%;&quot;&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:40%;width:100%;background: #eee;margin-top: 3%;&quot;&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height: 85%;width: 25%;float:left;margin: 2% 0;&quot;&gt;\n\t\t\t\t\t\t  &lt;%=studentPhoto.replacefirst(&quot;&lt;img&quot;,&quot;&lt;img style=&apos;height:100%;margin: 0px 10%;width: 94%;border:1px solid #e3e3e3;border-radius: 50%;&apos;&quot;)%&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:100%;width: 75%;float:right;text-align: center;&quot;&gt; \n\t\t\t\t\t\t  &lt;div style=&quot;font-size: 20px;margin: 13% 0px;&quot;&gt;&lt;%=studentRecord.Student_Name%&gt;&lt;\/div&gt;  \n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div class=&quot;studentDetails&quot; &gt;\n\t\t\t\t\t\t &lt;div style=&quot;height: 80%;width: 48%;float:left;margin: 4% 0;border-right: 1px solid #dcdcdc;&quot;&gt; \n\t\t\t\t\t\t  &lt;ul style=&quot;margin-top: 10px;padding-left: 0px;&quot;&gt;\n\t\t\t\t\t\t  &lt;li style=&quot;padding: 4% 4% 4% 10%;&quot;&gt;Grade : &lt;%=ifnull(studentGrade,&quot;-&quot;)%&gt;&lt;\/li&gt; \n\t\t\t\t\t\t  &lt;li style=&quot;padding: 4% 4% 4% 10%;&quot;&gt;Admission No : &lt;%=studentRecord.Admission_No%&gt;&lt;\/li&gt; \n\t\t\t\t\t\t  &lt;li style=&quot;padding: 4% 4% 4% 10%;&quot;&gt;Roll No : &lt;%=studentRecord.Admission_No%&gt;&lt;\/li&gt;\n\t\t\t\t\t\t  &lt;\/ul&gt; \n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height: 80%;width:50%;float:right;margin: 4% 0;&quot;&gt;\n\t\t\t\t\t\t    &lt;ul style=&quot;padding-left: 0px;margin-top: 10px;&quot;&gt;\n\t\t\t\t\t\t      &lt;li style=&quot;padding: 4%;&quot;&gt;Parent Name : &lt;%=studentRecord.Parent_Name%&gt;&lt;\/li&gt;\n\t\t\t\t\t\t      &lt;li style=&quot;padding: 4%;&quot;&gt;Mobile No :&lt;%=studentRecord.Mobile_No_Parent%&gt;&lt;\/li&gt;\n\t\t\t\t\t\t      &lt;li style=&quot;padding: 4%;&quot;&gt;Email : &lt;%=studentRecord.Email_Parent%&gt;&lt;\/li&gt;\n\t\t\t\t\t\t      &lt;\/ul&gt;\n\t\t\t\t\t\t   &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt; \n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n&lt;%\n\t\ttimetableID = Set_Timetable[Grade == gradeID &amp;&amp; From_field &lt;= zoho.currentdate &amp;&amp; To_field &gt;= zoho.currentdate].ID;\n\t\ttimetableRecords = Timetable_subform[Set_Timetable_Id == timetableID];\n\t\t%&gt;\n&lt;div class=&quot;row&quot; &gt;\n\t\t\t\t\t\t  &lt;div class=&quot;col-md-8&quot; style=&quot;padding:0px;height:420px;background:white;box-shadow: -1px 1px 1px rgba(0, 0, 0, 0.05);margin-bottom:1%;&quot;&gt;\n\t\t\t\t\t\t   \n\t\t\t\t\t\t  &lt;div style=&quot;height:11%;padding: 1%;font-size: 18px;border-top: 3px solid #45a3e6;border-bottom: 1px solid #eee;color:#555;&quot;&gt;Timetable&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;overflow: auto;width: 100%;height:89%&quot;&gt;\n&lt;%\n\t\tif(timetableID == null)\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;height:100%;width:100%;display:flex;align-items:center;justify-content:center;font-size:19px;&quot;&gt;\n\t\t\t\t\t\t  No Data Available\n\t\t\t\t\t\t  &lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse\n\t\t{\n\t\t\t%&gt;\n&lt;table class=&quot;customtable&quot; style=&quot;border-spacing:3px;border-collapse: separate;&quot;&gt;\n&lt;%\n\t\t\tif(timetableRecords.Sunday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Sunday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Sunday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(timetableRecords.Monday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot; &gt;Monday&lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Monday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;&lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(timetableRecords.Tuesday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Tuesday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Tuesday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(timetableRecords.Wednesday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Wednesday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Wednesday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(timetableRecords.Thursday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Thursday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Thursday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(timetableRecords.Friday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Friday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Friday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\tif(timetableRecords.Saturday.getall().size() != 0)\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;tr&gt;\n\t\t\t\t\t\t  &lt;td class=&quot;tableDay&quot; style=&quot;border:none;&quot;&gt;\n\t\t\t\t\t\t  Saturday\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\tfor each  eachrec in timetableRecords\n\t\t\t\t{\n\t\t\t\t\t%&gt;\n&lt;td&gt;&lt;%=eachrec.Session.Start_Time%&gt;-&lt;%=eachrec.Session.End_Time%&gt;&lt;br&gt;&lt;div&gt;&lt;%=ifnull(eachrec.Saturday.Subject_Name,&quot;-&quot;)%&gt;&lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/td&gt;\n&lt;%\n\t\t\t\t}\n\t\t\t\t%&gt;\n&lt;\/tr&gt;\n&lt;%\n\t\t\t}\n\t\t\t%&gt;\n&lt;\/table&gt;\n&lt;%\n\t\t}\n\t\t%&gt;\n&lt;\/div&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  &lt;div class=&quot;col-md-4&quot; style=&quot;height:420px;padding-right: 0px;padding-left:0.7%;margin-bottom:1%;&quot; &gt;\n\t\t\t\t\t\t  &lt;div style=&quot;background:white;height:100%;box-shadow: -1px 1px 1px rgba(0, 0, 0, 0.05);&quot;&gt;\n\t\t\t\t\t\t  &lt;div style=&quot;height:11%;padding:2%;font-size:18px;border-top: 3px solid #fda711;border-bottom: 1px solid #eee;color:#555;&quot;&gt; Subjects and Faculties &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;ol style=&quot;height:89%;margin: 3%;overflow:auto;padding:0px;&quot;&gt;\n&lt;%\n\t\tallocationRecords = Assign_Subjects_and_Faculties[Grade == gradeID];\n\t\tif(allocationRecords.count() == 0)\n\t\t{\n\t\t\t%&gt;\n&lt;div style=&quot;height:100%;width:100%;display:flex;align-items:center;justify-content:center;font-size:19px;&quot;&gt;\n\t\t\t\t\t\t  No Data Available\n\t\t\t\t\t\t  &lt;\/div&gt;\n&lt;%\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor each  Record in allocationRecords.Allocation\n\t\t\t{\n\t\t\t\t%&gt;\n&lt;li class=&quot;subjectList&quot;&gt;\n\t\t\t\t\t\t   &lt;span style=&quot;font-size: 16px;color:#fda711;&quot;&gt;&lt;%=Record.Subject_field.Subject_Name%&gt;&lt;\/span&gt;\n\t\t\t\t\t\t  &lt;span style=&quot;color: #c7c7c7;&quot;&gt;-&lt;%=Record.Subject_field.Subject_Code%&gt;&lt;\/span&gt;&lt;br&gt;\n\t\t\t\t\t\t  &lt;span&gt;&lt;%=Record.Faculty.Employee_Name%&gt; (&lt;%=Record.Faculty.Employee_Id_No%&gt;)&lt;\/span&gt;\n\t\t\t\t\t\t  &lt;\/li&gt;\n&lt;%\n\t\t\t}\n\t\t}\n\t\t%&gt;\n&lt;\/ol&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n\t\t\t\t\t\t  &lt;\/div&gt;\n&lt;%\n\t}\n\t%&gt;\n&lt;\/div&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Academics
	{
		icon = "files-book-08"
		form Add_Grade
		{
			displayname = "Add Grade"
			success message = "Grade Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Academic_Year
			(
				type = picklist
				displayname = "Academic Year"
				values  = Add_Academic_Year.ID
    			displayformat = [Academic_Year]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Grade
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Students
			(
				type = list
				values  = Add_Student.ID
    			displayformat = [Roll_No]
				allow new entries = true
				[
					displayname = "Add New"
				]
				searchable = true
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "files-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		summary Grades
		{
			displayName = "Grades"
			show all rows from Add_Grade    
			(
				Academic_Year as "Academic Year"
				Grade
				Students
			)
			group by
			(
				Academic_Year ascending
			)
			options
			(
				display rows = 1
				display records per row = 2
				icon = "education-hat"
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Academic_Year as "Academic Year"
							Grade
							Students
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Academic_Year as "Academic Year"
							Grade
						)
					)
					datablock3
					(
			 			layout type = -1
		     			title = "Students"
		     			related field =  Students
						fields
						(
							Photo
							Student_Name as "Student Name"
							Gender
							Blood_Group as "Blood Group"
							Nationality
							Mobile_No_Student as "Mobile No"
							Address_Student as "Student Address"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Subjects_and_Faculties_Allotment
		{
			displayName = "Subjects and Faculties Allotment"
			show all rows from Assign_Subjects_and_Faculties    
			(
				Allocation.Faculty as "Subject.Faculty"
				Allocation.Subject_field as "Allocation"
				(
					isLinkEnabled = true
				)
				Academic_Year as "Academic Year"
				Grade
			)
			group by
			(
				Academic_Year ascending
			)
			options
			(
				icon = "ui-1-check-square-11"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Academic_Year as "Academic Year"
							Grade
							Allocation.Subject_field as "Allocation"
							Allocation.Faculty as "Subject.Faculty"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Academic_Year as "Academic Year"
							Grade
							Allocation.Subject_field as "Allocation"
							Allocation.Faculty as "Subject.Faculty"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list All_Subjects
		{
			displayName = "All Subjects"
			show all rows from Add_Subject    
			(
				Subject_Name as "Subject Name"
				Subject_Code as "Subject Code"
			)
			options
			(
				icon = "education-books-46"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Subject_Name as "Subject Name"
							Subject_Code as "Subject Code"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Subject_Name as "Subject Name"
							Subject_Code as "Subject Code"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Announcements
		{
			displayName = "Announcements"
			show all rows from Send_Mail    
			(
				Select_Grade as "Select Grade"
				(
					view = Grades
				)
				Added_User as "Added User"
				To
				Subject_field as "Subject"
				Message
			)
			options
			(
				icon = "media-1-speaker"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Added_User as "Added User"
							To
							Subject_field as "Subject"
							Message
							Select_Grade as "Select Grade"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Added_User as "Added User"
							To
							Subject_field as "Subject"
							Message
							Select_Grade as "Select Grade"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Timetable
	{
		icon = "ui-1-calendar-grid-58"
		list Class_Timing_Sets
		{
			displayName = "Class Timing Sets"
			show all rows from Create_Class_Timing_Set    
			(
				Add_Sessions.Start_Time as "Add Sessions.Start_Time"
				Add_Sessions.End_Time as "Add Sessions.End_Time"
				Set_Name as "Set Name"
				Add_Sessions.Session_Name as "Add Sessions"
				(
					view = Sessions
				)
			)
			options
			(
				icon = "arrows-2-time"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Set_Name as "Set Name"
							Add_Sessions.Session_Name as "Add Sessions"
							Add_Sessions.Start_Time as "Add Sessions.Start_Time"
							Add_Sessions.End_Time as "Add Sessions.End_Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Set_Name as "Set Name"
							Add_Sessions.Session_Name as "Add Sessions"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Grade_Timing_set_Mapping
		{
			displayName = "Grade & Timing Set Mapping"
			show all rows from Allocate_Timing_sets    
			(
				Academic_Year as "Academic Year"
				Grade
				Class_Timing_Set as "Class Timing Set"
				Weekdays
			)
			group by
			(
				Academic_Year ascending
			)
			options
			(
				icon = "files-time"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Academic_Year as "Academic Year"
							Grade
							Class_Timing_Set as "Class Timing Set"
							Weekdays
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Academic_Year as "Academic Year"
							Grade
							Class_Timing_Set as "Class Timing Set"
							Weekdays
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Set_Timetable
		{
			displayname = "Set Timetable"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Academic_Year
			(
				type = picklist
				displayname = "Academic Year"
				values  = Add_Academic_Year.ID
    			displayformat = [Academic_Year]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Grade
			(
				type = picklist
				values  = Add_Grade[Academic_Year == input.Academic_Year].ID
    			displayformat = [Grade]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have From_field
			(
    			type = date
				displayname = "From"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have To_field
			(
    			type = date
				displayname = "To"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			plain
			(
    			type = plaintext
				value = ""
	 			row = 1
	 			column = 1   
				width = medium
			)
			Timetable_sub
			(
				type = grid
				displayname = "Timetable"
				values  = Timetable_subform.ID
    			bidirectional = Set_Timetable_Id
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-3-calendar-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list All_Grade_Timetables
		{
			displayName = "All Grade Timetables"
			show all rows from Set_Timetable    
			(
				custom action "View Timetable"
				(
	  			workflow = View_Timetable
				show action in view header = true
				show action in edit record menu = true
				column header = "View Timetable"
				success message = ""
				)
				Academic_Year as "Academic Year"
				Grade
				From_field as "From"
				To_field as "To"
			)
			group by
			(
				Academic_Year ascending
			)
			options
			(
				icon = "ui-1-calendar-grid-61"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Academic_Year as "Academic Year"
							Grade
							From_field as "From"
							To_field as "To"
				"View Timetable"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Academic_Year as "Academic Year"
							Grade
							From_field as "From"
							To_field as "To"
				"View Timetable"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Settings
	{
		icon = "ui-1-settings-gear-64"
		summary Institute_Details
		{
			displayName = "Institute Details"
			show all rows from Add_Institute_Details    
			(
				School_Name as "School Name"
				Website
				Fax
				Email
				Address 
	 			(
	      			displayformat = [address_line_13+""+address_line_23+""+district_city3+""+state_province3+""+postal_Code3+""+country3]
	      			enable = Show_As_Text
	 			)
				Phone
				Mobile_No as "Mobile No"
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "education-school"
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							School_Name as "School Name"
							Address
							Phone
							Mobile_No as "Mobile No"
							Website
							Fax
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							School_Name as "School Name"
							Website
							Fax
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Current_Academic_Year
		{
			displayName = "Current Academic Year"
			show all rows from Add_Current_Academic_Year    
			(
				Academic_Year as "Current Year"
			)
			options
			(
				icon = "ui-1-calendar-check-62"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Academic_Year as "Current Year"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Academic_Year as "Current Year"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Departments
		{
			displayName = "Departments"
			show all rows from Add_Department    
			(
				Department
			)
			options
			(
				icon = "design-2-filter-organization"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Department
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Department
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Designations
		{
			displayName = "Designations"
			show all rows from Add_Designation    
			(
				Designation
			)
			options
			(
				icon = "design-2-layers"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Designation
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Designation
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Student_Categories
		{
			displayName = "Student Categories"
			show all rows from Add_Student_Category    
			(
				Category_Name as "Category Name"
			)
			options
			(
				icon = "business-hierarchy-53"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Category_Name as "Category Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Category_Name as "Category Name"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Student_Religions
		{
			displayName = "Student Religions"
			show all rows from Add_Religion    
			(
				Religion
			)
			options
			(
				icon = "travel-church"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Religion
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Religion
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Hidden
	{
		hide = true
		form Assign_Subjects_and_Faculties
		{
			displayname = "Assign Subjects and Faculties"
			success message = "Subjects & Faculties has been assigned Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Academic_Year
			(
				type = picklist
				displayname = "Academic Year"
				values  = Add_Academic_Year.ID
    			displayformat = [Academic_Year]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Grade
			(
				type = picklist
				values  = Add_Grade[Academic_Year == input.Academic_Year].ID
    			displayformat = [Grade]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Allocation
			(
				type = grid
	    
				S_No
				(
					type = number
					displayname = "S No"
					width = medium
				)
				must have Subject_field
				(
					type = picklist
					displayname = "Subject"
					values  = Add_Subject.ID
    				displayformat = [Subject_Name]
					allow new entries = true
					[
						displayname = "Add New"
					]
					searchable = true
					sortorder = ascending
					width = medium
				)
				must have Faculty
				(
					type = picklist
					values  = Add_Employee.ID
    				displayformat = [Employee_Id_No]
					allow new entries = true
					[
						displayname = "Add New"
					]
					searchable = true
					sortorder = ascending
					width = medium
				)
				Maximum_no_of_classes_week
				(
					type = number
					displayname = "Maximum no of classes/week"
					width = medium
				)
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "business-hierarchy-53"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Allocate_Sessions
		{
			displayname = "Allocate Sessions"
			store data in zc = false
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Rec_Id
			(
				type = number
				displayname = "Rec Id"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Select_Subject
			(
				type = picklist
				displayname = "Select Subject"
				values  = Add_Subject.ID
    			displayformat = [Subject_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			notes_field
			(
    			type = plaintext
				value = ""
	 			row = 1
	 			column = 1   
				width = medium
			)
			Monday
			(
				type = checkboxes
				values = {""}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Tuesday
			(
				type = checkboxes
				values = {""}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Wednesday
			(
				type = checkboxes
				values = {""}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Thursday
			(
				type = checkboxes
				values = {""}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Friday
			(
				type = checkboxes
				values = {""}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Saturday
			(
				type = checkboxes
				values = {""}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Sunday
			(
				type = checkboxes
				values = {""}
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-focus"
			)
			actions
			{
				Assign_Next
				(
   					type = button
   					displayname = "Assign & Next"
				)
				Finish
				(
   					type = button
   					displayname = "Finish"
				)
			}
		}
		form Timetable_subform
		{
			displayname = "Timetable"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Set_Timetable_Id
			(
				type = picklist
				displayname = "Set Timetable Id"
				values  = Set_Timetable.ID
    			bidirectional = Timetable_sub
    			displayformat = [ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Session
			(
				type = picklist
				values  = Add_session.ID
    			displayformat = [" " + Start_Time + " - " + End_Time]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Sunday
			(
				type = picklist
				values  = Add_Subject.ID
    			displayformat = [Subject_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Monday
			(
				type = picklist
				values  = Add_Subject.ID
    			displayformat = [Subject_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Tuesday
			(
				type = picklist
				values  = Add_Subject.ID
    			displayformat = [Subject_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Wednesday
			(
				type = picklist
				values  = Add_Subject.ID
    			displayformat = [Subject_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Thursday
			(
				type = picklist
				values  = Add_Subject.ID
    			displayformat = [Subject_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Friday
			(
				type = picklist
				values  = Add_Subject.ID
    			displayformat = [Subject_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Saturday
			(
				type = picklist
				values  = Add_Subject.ID
    			displayformat = [Subject_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "ui-1-calendar-grid-61"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Timetable_subform_Report
		{
			displayName = "Timetable"
   			hide = true
			show all rows from Timetable_subform    
			(
				Thursday
				Friday
				Session
				Set_Timetable_Id as "Set Timetable Id"
				Sunday
				Monday
				Tuesday
				Wednesday
				Saturday
			)
			sort by
			(
				Session ascending
			)
			options
			(
				icon = "ui-1-calendar-grid-61"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Session
							Sunday
							Monday
							Tuesday
							Wednesday
							Thursday
							Friday
							Saturday
							Set_Timetable_Id as "Set Timetable Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Session
							Sunday
							Monday
							Tuesday
							Wednesday
							Thursday
							Friday
							Saturday
							Set_Timetable_Id as "Set Timetable Id"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Add_session
		{
			displayname = "Add Session"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Create_Class_Timing_Set_Id
			(
				type = picklist
				displayname = "Create Class Timing Set Id"
				values  = Create_Class_Timing_Set.ID
    			bidirectional = Add_Sessions
    			displayformat = [ID]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Session_Name
			(
    			type = text
				displayname = "Session Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Start_Time
			(
    			type = text
				displayname = "Start Time"
				initial value = "00:00"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have End_Time
			(
    			type = text
				displayname = "End Time"
				initial value = "00:00"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Is_a_Break
			(
    			type = checkbox
				displayname = "Is a Break"
				initial value = false
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-2-3d-29"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Sessions
		{
			displayName = "Sessions"
   			hide = true
			show all rows from Add_session    
			(
				Is_a_Break as "Is a Break"
				Create_Class_Timing_Set_Id as "Create Class Timing Set Id"
				Session_Name as "Session Name"
				Start_Time as "Start Time"
				End_Time as "End Time"
			)
			options
			(
				icon = "media-2-guitar"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Create_Class_Timing_Set_Id as "Create Class Timing Set Id"
							Session_Name as "Session Name"
							Start_Time as "Start Time"
							End_Time as "End Time"
							Is_a_Break as "Is a Break"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Create_Class_Timing_Set_Id as "Create Class Timing Set Id"
							Session_Name as "Session Name"
							Start_Time as "Start Time"
							End_Time as "End Time"
							Is_a_Break as "Is a Break"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Create_Class_Timing_Set
		{
			displayname = "Create Class Timing Set"
			success message = "New Timing Set created Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Set_Name
			(
    			type = text
				displayname = "Set Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Add_Sessions
			(
				type = grid
				displayname = "Add Sessions"
				values  = Add_session.ID
    			bidirectional = Create_Class_Timing_Set_Id
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "media-1-brightness-47"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Allocate_Timing_sets
		{
			displayname = "Allocate Timing sets"
			success message = "Timing Set Allocated Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Academic_Year
			(
				type = picklist
				displayname = "Academic Year"
				values  = Add_Academic_Year.ID
    			displayformat = [Academic_Year]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Grade
			(
				type = picklist
				values  = Add_Grade[Academic_Year == input.Academic_Year].ID
    			displayformat = [Grade]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Weekdays
			(
				type = checkboxes
				values = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Class_Timing_Set
			(
				type = picklist
				displayname = "Class Timing Set"
				values  = Create_Class_Timing_Set.ID
    			displayformat = [Set_Name]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-mobile-card"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Institute_Details
		{
			displayname = "Add Institute Details"
			success message = "Institute Details Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have School_Name
			(
    			type = text
				displayname = "School Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_13
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_23
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city3
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province3
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code3
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country3
     			(
	     			  type = country
	     			  displayname = "Country"
     			) 
     			latitude3
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude3
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Email
			(
    			type = email
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone
			(
    			type = phonenumber
	 			row = 1
	 			column = 1   
				width = medium
			)
			Mobile_No
			(
    			type = phonenumber
				displayname = "Mobile No"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Fax
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
			Website
			(
    			type = url
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "users-2-contacts-44"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		properties
		{
			total entries
			{
				allowed count = 1
			}
		}
		}
		form Add_Academic_Year
		{
			displayname = "Add Academic Year"
			success message = "Academic Year Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Academic_Year
			(
    			type = text
				displayname = "Academic Year"
    			description
    			[
    				type = help_text
    			 	message = "E.g.2000-01,2001-02,2002-03"
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "business-progress"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Academic_Years
		{
			displayName = "Academic Years"
   			hide = true
			show all rows from Add_Academic_Year    
			(
				Academic_Year as "Academic Year"
			)
			options
			(
				icon = "education-pencil-47"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Academic_Year as "Academic Year"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Academic_Year as "Academic Year"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Add_Current_Academic_Year
		{
			displayname = "Add Current Academic Year"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Academic_Year
			(
				type = picklist
				displayname = "Academic Year"
				values  = Add_Academic_Year.ID
    			displayformat = [Academic_Year]
				allow new entries = true
				[
					displayname = "Add New Academic Year"
				]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "media-1-button-previous"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		properties
		{
			total entries
			{
				allowed count = 1
			}
		}
		}
		form Add_Student_Category
		{
			displayname = "Add Student Category"
			success message = "Category Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Category_Name
			(
    			type = text
				displayname = "Category Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-shape-circle"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Religion
		{
			displayname = "Add Religion"
			success message = "Religion Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Religion
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "travel-church"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Department
		{
			displayname = "Add Department"
			success message = "Department Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Department
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-2-l-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Designation
		{
			displayname = "Add Designation"
			success message = "Designation Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Designation
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "tech-2-l-add"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_Subject
		{
			displayname = "Add Subject"
			success message = "New Subject Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have unique Subject_Name
			(
    			type = text
				displayname = "Subject Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			unique Subject_Code
			(
    			type = text
				displayname = "Subject Code"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-2-3d-29"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Send_Mail
		{
			displayname = "Send Mail"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have To
			(
				type = radiobuttons
				values = {"Students", "All Employees", "Parents"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Select_Grade
			(
				type = checkboxes
				displayname = "Select Grade"
				values  = Add_Grade.ID
    			displayformat = [Grade]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Subject_field
			(
    			type = text
				displayname = "Subject"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Message
			(
    			type = richtext
				height = 200px
				toolbar = enable
				[
					style, font-color, background-color, alignment, link, table, bullets-and-numbering, 
					font-size : {1, 2, 3, 4, 5, 6, 7},
					font-family : {"Serif", "Arial", "Courier New", "Georgia", "Tahoma", "Times New Roman", "Trebuchet", "Verdana", "Comic Sans Ms"}
				]
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "shopping-delivery"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Add_to_Academic_Calender
		{
			displayname = "Plan Academic Calender"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Academic_Year
			(
				type = picklist
				displayname = "Academic Year"
				values  = Add_Academic_Year.ID
    			displayformat = [Academic_Year]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Name
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Description
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Type
			(
				type = radiobuttons
				values = {"Holiday", "Event", "Exam"}
				initial value = "Holiday"
				others option = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have From
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have To
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			No_of_Days
			(
				type = number
				displayname = "No of Days"
				initial value = 0
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "sport-tactic"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		calendar Academic_Calendar
		{
			displayName = "Academic Calendar"
   			hide = true
			show all rows from Add_to_Academic_Calender    
			(
				Academic_Year as "Academic Year"
				No_of_Days as "No of Days"
				Type
				Name
				Description
				From
				To
			)
			options
			(
				display type = month
				week start day = sunday
				display field = Name
				start date = From
				end date = To
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "ui-1-calendar-60"
			)
			conditional formatting
			(
				"Holiday Formatting"
				{
				condition = (Type == "Holiday")
				format = "color:#666666;background-color:#b8f2e1;"
				}
				"Event Formatting"
				{
				condition = (Type == "Event")
				format = "color:#666666;background-color:#ebc4aa;"
				}
				"Exam Formatting"
				{
				condition = (Type == "Exam")
				format = "color:#666666;background-color:#c5e3fa;"
				}
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
		     			title = "Overview"
						fields
						(
							Academic_Year as "Academic Year"
							Name
							Description
							Type
							From
							To
							No_of_Days as "No of Days"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Academic_Year as "Academic Year"
							Name
							Description
							Type
							From
							To
							No_of_Days as "No of Days"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		form Employee_Attendance
		{
			displayname = "Add Attendance"
			success message = "Data Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Academic_Year
			(
				type = picklist
				displayname = "Academic Year"
				values  = Add_Academic_Year.ID
    			displayformat = [Academic_Year]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Select_Employee
			(
				type = picklist
				displayname = "Select Employee"
				values  = Add_Employee.ID
    			displayformat = [Employee_Id_No]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Date_field
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = radiobuttons
				values = {"Present", "Absent"}
				initial value = "Present"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "food-hob"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Student_Attendance
		{
			displayname = "Add Attendance"
			success message = "Attendance Added Successfully!"
			field alignment = left
			feature property = 32
					hide = true
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Academic_Year
			(
				type = picklist
				displayname = "Academic Year"
				values  = Add_Academic_Year.ID
    			displayformat = [Academic_Year]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Grade
			(
				type = picklist
				values  = Add_Grade.ID
    			displayformat = [Grade]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Date_field
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Present_Students
			(
				type = checkboxes
				displayname = "Present Students"
				values  = Add_Student.ID
    			displayformat = [Roll_No]
				sortorder = ascending
    			description
    			[
    				type = help_text
    			 	message = "Deselect Absent Students"
    			]
	 			row = 1
	 			column = 1   
				width = medium
			)
			Absentees
			(
				type = list
				values  = Add_Student.ID
    			displayformat = [Roll_No]
				searchable = true
				sortorder = ascending
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Absentees_multiline
			(
    			type = textarea
				displayname = "Absentees"
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Absentees_Count
			(
				type = number
				displayname = "Absentees Count"
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "food-hob"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		list Holidays
		{
			displayName = "Holidays"
   			hide = true
			show all rows from Add_to_Academic_Calender  [Type == "Holiday"]  
			(
				Name
				Description
				No_of_Days as "No of Days"
				Academic_Year as "Academic Year"
				Type
				From
				To
			)
			options
			(
				icon = "holidays-glove"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Name
							Description
							No_of_Days as "No of Days"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Name
							Description
							No_of_Days as "No of Days"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		summary My_Details_Employee
		{
			displayName = "My Details-Employee"
   			hide = true
			show all rows from Add_Employee  [Email == zoho.loginuserid]  
			(
				Type
				Marital_Status as "Marital Status"
				Employee_Status as "Employee Status"
				Photo
				Email
				Employee_Id_No as "Employee Id/No"
				Experience_Info as "Experience Info"
				Designation
				Department
				Phone
				Employee_Name  as "Employee Name"
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Qualification
				Joining_Date as "Joining Date"
				Date_of_Birth as "Date of Birth"
				Gender
				Mobile_No as "Mobile No"
				Address 
	 			(
	      			displayformat = [address_line_13+""+address_line_23+""+district_city3+""+state_province3+""+postal_Code3+""+country3]
	      			enable = Show_As_Text
	 			)
				Blood_Group as "Blood Group"
			)
			options
			(
				display rows = 10
				display records per row = 2
				icon = "users-2-b-love"
			)
			quickview
			(
				layout
				(
		 			type = -2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Employee_Id_No as "Employee Id/No"
							Photo
							Employee_Name as "Employee Name"
							Gender
							Date_of_Birth as "Date of Birth"
							Blood_Group as "Blood Group"
							Phone
							Mobile_No as "Mobile No"
							Address
							Email
							Department
							Designation
							Joining_Date as "Joining Date"
							Experience_Info as "Experience Info"
							Qualification
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Employee_Id_No as "Employee Id/No"
							Department
							Designation
							Qualification
							Type
							Experience_Info as "Experience Info"
							Joining_Date as "Joining Date"
							Gender
							Date_of_Birth as "Date of Birth"
							Marital_Status as "Marital Status"
							Blood_Group as "Blood Group"
							Email
							Photo
							Employee_Status as "Employee Status"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
		pivotchart Absentees
		{ 
			displayname = "Absentees(Current Month)"
			based on Autoview_1489486354677_Student_Attendance
					hide = true
				show all rows from Student_Attendance
				(
 					Date_field  as "Date"
 					Grade 
 					Absentees_Count  as "Absentees Count"
 					Absentees_multiline  as "Absentees"
				)
		}
		pivotchart Employee_Attendance_Chart
		{ 
			displayname = "My Attendance(Current Month)"
			based on Autoview_1488535807690_Employee_Attendance
					hide = true
							icon = "users-2-b-love"				show all rows from Employee_Attendance
				(
 					Academic_Year  as "Academic Year"
 					Status 
 					Select_Employee  as "Select Employee"
 					Date_field  as "Date"
				)
		}
		list My_Details_Student
		{
			displayName = "My Details-Student"
   			hide = true
			show all rows from Add_Student  [Email_Parent == zoho.loginuserid || Email_Student == zoho.loginuserid]  
			(
				Status
				Email_Student as "Email"
				Email_Parent as "Email"
				Photo
				Address_Student  as "Student Address"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
				Admission_No as "Admission No"
				Joining_Date as "Joining Date"
				Mobile_No_Student as "Mobile No"
				Phone_Student as "Phone"
				Roll_No as "Roll No"
				Nationality
				Gender
				Blood_Group as "Blood Group"
				Category
				Religion
				Date_of_Birth as "Date of Birth"
				Student_Name  as "Student Name"
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Parent_Name  as "Parent Name"
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Address_Parent  as "Parent Address"
	 			(
	      			displayformat = [address_line_12+""+address_line_22+""+district_city2+""+state_province2+""+postal_Code2+""+country2]
	      			enable = Show_As_Text
	 			)
				Relation
				Occupation
				Mobile_No_Parent as "Mobile No"
				Phone_Parent as "Phone"
			)
			options
			(
				icon = "users-2-b-love"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
		     			title = "Overview"
						fields
						(
							Date_of_Birth as "Date of Birth"
							Gender
							Blood_Group as "Blood Group"
							Category
							Religion
							Email_Student as "Email"
							Photo
							Status
							Admission_No as "Admission No"
							Joining_Date as "Joining Date"
							Roll_No as "Roll No"
							Relation
							Occupation
							Email_Parent as "Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    		 			Add 
    		 			Print 
    		 			Import 
    		 			Export 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Print   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								Print   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Date_of_Birth as "Date of Birth"
							Gender
							Blood_Group as "Blood Group"
							Category
							Religion
							Email_Student as "Email"
							Photo
							Status
							Admission_No as "Admission No"
							Joining_Date as "Joining Date"
							Roll_No as "Roll No"
							Relation
							Occupation
							Email_Parent as "Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Print 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	functions
	{
 			list CountryList()
			{
				CountryList = {"China","India","United States","Indonesia","Brazil","Pakistan","Nigeria","Bangladesh","Russia","Japan","Mexico","Philippines","Vietnam","Ethiopia","Egypt","Germany","Iran","Turkey","Democratic Republic of the Congo","Thailand","France","United Kingdom","Italy","Burma","South Africa","South Korea","Colombia","Spain","Ukraine","Tanzania","Kenya","Argentina","Algeria","Poland","Sudan","Uganda","Canada","Iraq","Morocco","Peru","Uzbekistan","Saudi Arabia","Malaysia","Venezuela","Nepal","Afghanistan","Yemen","North Korea","Ghana","Mozambique","Taiwan","Australia","Ivory Coast","Syria","Madagascar","Angola","Cameroon","Sri Lanka","Romania","Burkina Faso","Niger","Kazakhstan","Netherlands","Chile","Malawi","Ecuador","Guatemala","Mali","Cambodia","Senegal","Zambia","Zimbabwe","Chad","South Sudan","Belgium","Cuba","Tunisia","Guinea","Greece","Portugal","Rwanda","Czech Republic","Somalia","Haiti","Benin","Burundi","Bolivia","Hungary","Sweden","Belarus","Dominican Republic","Azerbaijan","Honduras","Austria","United Arab Emirates","Israel","Switzerland","Tajikistan","Bulgaria","Hong Kong (China)","Serbia","Papua New Guinea","Paraguay","Laos","Jordan","El Salvador","Eritrea","Libya","Togo","Sierra Leone","Nicaragua","Kyrgyzstan","Denmark","Finland","Slovakia","Singapore","Turkmenistan","Norway","Lebanon","Costa Rica","Central African Republic","Ireland","Georgia","New Zealand","Republic of the Congo","Palestine","Liberia","Croatia","Oman","Bosnia and Herzegovina","Puerto Rico","Kuwait","Moldov","Mauritania","Panama","Uruguay","Armenia","Lithuania","Albania","Mongolia","Jamaica","Namibia","Lesotho","Qatar","Macedonia","Slovenia","Botswana","Latvia","Gambia","Kosovo","Guinea-Bissau","Gabon","Equatorial Guinea","Trinidad and Tobago","Estonia","Mauritius","Swaziland","Bahrain","Timor-Leste","Djibouti","Cyprus","Fiji","Reunion (France)","Guyana","Comoros","Bhutan","Montenegro","Macau (China)","Solomon Islands","Western Sahara","Luxembourg","Suriname","Cape Verde","Malta","Guadeloupe (France)","Martinique (France)","Brunei","Bahamas","Iceland","Maldives","Belize","Barbados","French Polynesia (France)","Vanuatu","New Caledonia (France)","French Guiana (France)","Mayotte (France)","Samoa","Sao Tom and Principe","Saint Lucia","Guam (USA)","Curacao (Netherlands)","Saint Vincent and the Grenadines","Kiribati","United States Virgin Islands (USA)","Grenada","Tonga","Aruba (Netherlands)","Federated States of Micronesia","Jersey (UK)","Seychelles","Antigua and Barbuda","Isle of Man (UK)","Andorra","Dominica","Bermuda (UK)","Guernsey (UK)","Greenland (Denmark)","Marshall Islands","American Samoa (USA)","Cayman Islands (UK)","Saint Kitts and Nevis","Northern Mariana Islands (USA)","Faroe Islands (Denmark)","Sint Maarten (Netherlands)","Saint Martin (France)","Liechtenstein","Monaco","San Marino","Turks and Caicos Islands (UK)","Gibraltar (UK)","British Virgin Islands (UK)","Aland Islands (Finland)","Caribbean Netherlands (Netherlands)","Palau","Cook Islands (NZ)","Anguilla (UK)","Wallis and Futuna (France)","Tuvalu","Nauru","Saint Barthelemy (France)","Saint Pierre and Miquelon (France)","Montserrat (UK)","Saint Helena"," Ascension and Tristan da Cunha (UK)","Svalbard and Jan Mayen (Norway)","Falkland Islands (UK)","Norfolk Island (Australia)","Christmas Island (Australia)","Niue (NZ)","Tokelau (NZ)","Vatican City","Cocos (Keeling) Islands (Australia)","Pitcairn Islands (UK)"};
				return CountryList;
			}
 			list BloodGroupList()
			{
				BloodGrpList = {"A+","A-","A1+","A1-","A1B+","A1B-","A2+","A2-","A2B+","A2B-","B+","B-","B1+","O+","O-","AB+","AB-"};
				return BloodGrpList;
			}
 			bool TimeValidation(string timeVal)
			{
				//return input.timeVal.matches("^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$");
				hrsVal = timeVal.getPrefix(":");
				minsVal = timeVal.getSuffix(":");
				if(isNumber(hrsVal) && isNumber(minsVal))
				{
					hrsValInt = hrsVal.toLong();
					minsValInt = minsVal.toLong();
					if(hrsValInt < 24 && minsValInt < 60)
					{
						return true;
					}
					else
					{
						return false;
					}
				}
				else
				{
					return false;
				}
			}
 			string GetStringTime(int hrsVal, int minsVal)
			{
				strhrs = hrsVal.toString();
				strmins = minsVal.toString();
				if(input.hrsVal < 10)
				{
					strhrs = "0" + hrsVal;
				}
				if(input.minsVal < 10)
				{
					strmins = "0" + minsVal;
				}
				return strhrs + ":" + strmins;
			}
 			map SubFunction(map dayMap)
			{
				sessionMap = Map();
				ReturnMap = Map();
				daykey = dayMap.keys();
				for each  id in daykey
				{
					startTime = Add_session[ID == id.toLong()].Start_Time;
					hourVal = startTime.getPrefix(":").toLong() * 60;
					minVal = startTime.getSuffix(":").toLong();
					total = hourVal + minVal;
					sessionMap.put(total.toString(),id);
				}
				sessionKeys = sessionMap.keys();
				sessionKeys.sort();
				for each  session in sessionKeys
				{
					sessionRec = Add_session[ID == sessionMap.get(session).toLong()];
					sessionString = sessionRec.Start_Time + "-" + sessionRec.End_Time;
					ReturnMap.put(sessionString,Add_Subject[ID == dayMap.get(sessionMap.get(session)).toLong()].Subject_Name);
				}
				return ReturnMap;
			}
 			void Viewtimetable(int Id)
			{
				openUrl("#Report:Timetable_subform_Report?Set_Timetable_Id=" + Id,"popup window");
			}
 			string BarChart.getAttendanceChart()
			{
				chartString = "<ul class='chart' >";
				status_var = false;
				currentYear = Add_Current_Academic_Year[ID != 0].Academic_Year;
				employeeRecord = Add_Employee[Email == zoho.loginuserid];
				gradeList = Assign_Subjects_and_Faculties[Academic_Year == currentYear && Allocation.Faculty == employeeRecord.ID].Grade.getAll();
				for each  grade in gradeList
				{
					attendanceRecord = Student_Attendance[Grade == grade && Date_field == zoho.currentdate];
					if(attendanceRecord.count() > 0)
					{
						status_var = true;
						presentCount = attendanceRecord.Present_Students.size();
						totalCount = attendanceRecord.Absentees_Count + presentCount;
						attendancePercentage = (presentCount / totalCount * 100).round(2);
					}
					else
					{
						attendancePercentage = 0;
					}
					chartString = chartString + "<li><span style='height:" + attendancePercentage + "%' title='" + Add_Grade[ID == grade].Grade + " (" + attendancePercentage + "%)'></span></li>";
				}
				chartString = chartString + "</ul>";
				if(!status_var)
				{
					return "<div style='height:100%;width:100%;display:flex;align-items:center;justify-content:center;font-size:19px;'>No Data Available </div>";
				}
				else
				{
					return chartString;
				}
			}
 			string BarChart.getBarChartStyle()
			{
				cssString = "<style>body {  font: 13px/1.3 'Lucida Grande',sans-serif;  color: #666;}.chart {  display: table;  table-layout: fixed;  width: 86%;  max-width: 700px;  height: 76%;  margin: 0 7%;  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.1) 2%, rgba(0, 0, 0, 0) 2%);  background-size: 100% 50px;  background-position: op;}.chart li {  position: relative;  display: table-cell;  vertical-align: bottom;  height: 200px;}.chart span {  margin: 0 1em;  display: block;  background: #ffe28a;  animation: draw 1s ease-in-out;}.chart span:before {  position: absolute;  left: 0;  right: 0;  top: 100%;  padding: 5px 1em 0; display: block;  text-align: center;  content: attr(title);  word-wrap: break-word;}@keyframes draw {  0% {    height: 0;  }}</style>";
				return cssString;
			}
 			list getTimetable()
			{
				currentYear = Add_Current_Academic_Year[ID != 0].Academic_Year;
				employeeRecord = Add_Employee[Email == zoho.loginuserid];
				fac_rec = Assign_Subjects_and_Faculties[Academic_Year == currentYear && Allocation.Faculty == employeeRecord.ID];
				gradeList = List:String();
				mondayMap = Map();
				tuesdayMap = Map();
				wednesdayMap = Map();
				thursdayMap = Map();
				fridayMap = Map();
				saturdayMap = Map();
				sundayMap = Map();
				sessionMap = Map();
				ReturnMap = Map();
				ReturnList = List:String();
				for each  rec in fac_rec
				{
					for each  allocationRec in rec.Allocation
					{
						if(allocationRec.Faculty == employeeRecord.ID)
						{
							gradeID = Set_Timetable[Grade == rec.Grade && From_field <= zoho.currentdate && To_field >= zoho.currentdate].ID;
							if(!isNull(Timetable_subform[Set_Timetable_Id == gradeID && Monday == allocationRec.Subject_field].Session))
							{
								mondayMap.put(Timetable_subform[Set_Timetable_Id == gradeID && Monday == allocationRec.Subject_field].Session.toString(),allocationRec.Subject_field);
							}
							if(!isNull(Timetable_subform[Set_Timetable_Id == gradeID && Tuesday == allocationRec.Subject_field].Session))
							{
								tuesdayMap.put(Timetable_subform[Set_Timetable_Id == gradeID && Tuesday == allocationRec.Subject_field].Session.toString(),allocationRec.Subject_field);
							}
							if(!isNull(Timetable_subform[Set_Timetable_Id == gradeID && Wednesday == allocationRec.Subject_field].Session))
							{
								wednesdayMap.put(Timetable_subform[Set_Timetable_Id == gradeID && Wednesday == allocationRec.Subject_field].Session.toString(),allocationRec.Subject_field);
							}
							if(!isNull(Timetable_subform[Set_Timetable_Id == gradeID && Thursday == allocationRec.Subject_field].Session))
							{
								thursdayMap.put(Timetable_subform[Set_Timetable_Id == gradeID && Thursday == allocationRec.Subject_field].Session.toString(),allocationRec.Subject_field);
							}
							if(!isNull(Timetable_subform[Set_Timetable_Id == gradeID && Friday == allocationRec.Subject_field].Session))
							{
								fridayMap.put(Timetable_subform[Set_Timetable_Id == gradeID && Friday == allocationRec.Subject_field].Session.toString(),allocationRec.Subject_field);
							}
							if(!isNull(Timetable_subform[Set_Timetable_Id == gradeID && Saturday == allocationRec.Subject_field].Session))
							{
								saturdayMap.put(Timetable_subform[Set_Timetable_Id == gradeID && Saturday == allocationRec.Subject_field].Session.toString(),allocationRec.Subject_field);
							}
							if(!isNull(Timetable_subform[Set_Timetable_Id == gradeID && Sunday == allocationRec.Subject_field].Session))
							{
								sundayMap.put(Timetable_subform[Set_Timetable_Id == gradeID && Sunday == allocationRec.Subject_field].Session.toString(),allocationRec.Subject_field);
							}
						}
					}
				}
				MondaySessions = thisapp.SubFunction(mondayMap);
				TuesdaySessions = thisapp.SubFunction(tuesdayMap);
				WednesdaySessions = thisapp.SubFunction(wednesdayMap);
				ThursdaySessions = thisapp.SubFunction(thursdayMap);
				FridaySessions = thisapp.SubFunction(fridayMap);
				SaturdaySessions = thisapp.SubFunction(saturdayMap);
				SundaySessions = thisapp.SubFunction(sundayMap);
				ReturnList.addall({SundaySessions,MondaySessions,TuesdaySessions,WednesdaySessions,ThursdaySessions,FridaySessions,SaturdaySessions});
				return ReturnList;
			}
 			void AddTimetable(int Rec_Id, list inputlist, int givensubject, string day)
			{
				mp = Map();
				mp = {"Monday":"","Tuesday":"","Wednesday":"","Thursday":"","Friday":"","Saturday":"","Sunday":""};
				mp.remove(day);
				mp.put(day,givensubject.toString());
				for each  session in inputlist
				{
					gradeid = Set_Timetable[ID == input.Rec_Id].Grade;
					setid = Allocate_Timing_sets[Grade == gradeid].Class_Timing_Set;
					start_time = session.getPrefix("-");
					end_time = session.getSuffix("-");
					sessionid = Add_session[Create_Class_Timing_Set_Id == setid && Start_Time == start_time && End_Time == end_time && Is_a_Break == false].ID;
					sessionrec = Timetable_subform[Set_Timetable_Id == input.Rec_Id && Session == sessionid];
					if(sessionid != null)
					{
						if(sessionrec.Monday == null)
						{
							if(mp.get("Monday") == "")
							{
								sessionrec.Monday=null;
							}
							else
							{
								sessionrec.Monday=mp.get("Monday").toLong();
							}
						}
						if(sessionrec.Tuesday == null)
						{
							if(mp.get("Tuesday") == "")
							{
								sessionrec.Tuesday=null;
							}
							else
							{
								sessionrec.Tuesday=mp.get("Tuesday").toLong();
							}
						}
						if(sessionrec.Wednesday == null)
						{
							if(mp.get("Wednesday") == "")
							{
								sessionrec.Wednesday=null;
							}
							else
							{
								sessionrec.Wednesday=mp.get("Wednesday").toLong();
							}
						}
						if(sessionrec.Thursday == null)
						{
							if(mp.get("Thursday") == "")
							{
								sessionrec.Thursday=null;
							}
							else
							{
								sessionrec.Thursday=mp.get("Thursday").toLong();
							}
						}
						if(sessionrec.Friday == null)
						{
							if(mp.get("Friday") == "")
							{
								sessionrec.Friday=null;
							}
							else
							{
								sessionrec.Friday=mp.get("Friday").toLong();
							}
						}
						if(sessionrec.Saturday == null)
						{
							if(mp.get("Saturday") == "")
							{
								sessionrec.Saturday=null;
							}
							else
							{
								sessionrec.Saturday=mp.get("Saturday").toLong();
							}
						}
						if(sessionrec.Sunday == null)
						{
							if(mp.get("Sunday") == "")
							{
								sessionrec.Sunday=null;
							}
							else
							{
								sessionrec.Sunday=mp.get("Sunday").toLong();
							}
						}
					}
				}
			}
 			list appendSubject(list givenList, string givenSubject)
			{
				count = 0;
				for each index value in givenList
				{
					if(givenList.get(value).getPrefix("<br><font>(Session") == input.givenSubject || input.givenList.get(value) == input.givenSubject)
					{
						count = count + 1;
					}
				}
				if(count == 1)
				{
					tempList = givenList.subList(0,givenList.indexOf(givenSubject));
					tempList.add(givenSubject + "<br><font>(Session 1)</font>");
					tempList.addall(givenList.subList(givenList.indexOf(givenSubject) + 1));
					tempList.add(givenSubject + "<br><font>(Session 2)</font>");
					givenList = tempList;
				}
				else if(count > 1)
				{
					givenList.add(givenSubject + "<br><font>(Session " + (count + 1) + ")</font>");
				}
				else if(count == 0)
				{
					givenList.add(givenSubject);
				}
				return givenList;
			}
	}



	workflow
	{
		form
		{
			Run_Scripts_On_Clicking_A as "Run Scripts - On Clicking 'Assign' Button"
			{
				type =  form
				form = Allocate_Sessions
				button = Assign_Next
				on click
				{
					actions 
					{
					on click
					(
						if(input.Select_Subject == null)
										{
											alert "Please select a subject!";
										}
										else
										{
											timetable_rec = Timetable_subform[Set_Timetable_Id == input.Rec_Id];
											if(timetable_rec.count() == 0)
											{
												gradeid = Set_Timetable[ID == input.Rec_Id].Grade;
												setid = Allocate_Timing_sets[Grade == gradeid].Class_Timing_Set;
												sessionid = Add_session[Create_Class_Timing_Set_Id == setid].ID.getAll();
												for each  id in sessionid
												{
													insert into Timetable_subform
													[
														Added_User=zoho.loginuser
														Set_Timetable_Id=input.Rec_Id
														Session=id
													]
												}
											}
											if(!Monday.isEmpty())
											{
												thisapp.AddTimetable(input.Rec_Id,input.Monday,input.Select_Subject,"Monday");
											}
											if(!Tuesday.isEmpty())
											{
												thisapp.AddTimetable(input.Rec_Id,input.Tuesday,input.Select_Subject,"Tuesday");
											}
											if(!Wednesday.isEmpty())
											{
												thisapp.AddTimetable(input.Rec_Id,input.Wednesday,input.Select_Subject,"Wednesday");
											}
											if(!Thursday.isEmpty())
											{
												thisapp.AddTimetable(input.Rec_Id,input.Thursday,input.Select_Subject,"Thursday");
											}
											if(!Friday.isEmpty())
											{
												thisapp.AddTimetable(input.Rec_Id,input.Friday,input.Select_Subject,"Friday");
											}
											if(!Saturday.isEmpty())
											{
												thisapp.AddTimetable(input.Rec_Id,input.Saturday,input.Select_Subject,"Saturday");
											}
											if(!Sunday.isEmpty())
											{
												thisapp.AddTimetable(input.Rec_Id,input.Sunday,input.Select_Subject,"Sunday");
											}
											openUrl("#Form:Allocate_Sessions?Rec_Id=" + input.Rec_Id,"same window");
										}
					)
					}
				}
			}
			Run_Scripts_On_Clicking_F as "Run Scripts - On Clicking 'Finish' Button "
			{
				type =  form
				form = Allocate_Sessions
				button = Finish
				on click
				{
					actions 
					{
					on click
					(
						openUrl("#Form:Set_Timetable","same window");
					)
					}
				}
			}
			Run_Scripts_On_Always10 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Employee
				record event = on add or edit

	field rules
	{
					actions  (Type == "Fresher")
					{
						hide Experience_Info;
					}
	}

			}
			Run_Scripts_On_Always11 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Employee
				record event = on add or edit

	on user input of Date_of_Birth
	{
					actions 
					{
						custom deluge script
						(
											if(input.Date_of_Birth >= zoho.currentdate)
										{
											input.Date_of_Birth = null;
											alert "Enter a valid date!";
										}
						)
					}
	}

			}
			Walkthrough_Step_2 as "Walkthrough - Step 1"
			{
				type =  form
				form = Add_Institute_Details
				record event = on add

	on success
	{
					actions 
					{
						openURL("#Form:Add_Current_Academic_Year","new window");
					}
	}

			}
			Run_Scripts_While_Adding_14 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Current_Academic_Year
				record event = on add

	on success
	{
					actions 
					{
						openURL("#Form:Add_Grade","new window");
					}
	}

			}
			Run_Scripts_While_Adding_15 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Student
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Joining_Date = zoho.currentdate;
										input.Blood_Group:ui.add(thisapp.BloodGroupList());
										hide Status;
						)
					}
	}

			}
			Run_Scripts_While_Adding_16 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Student
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											thisapp.permissions.assignUserInProfile(input.Email_Student,"Student");
										thisapp.permissions.assignUserInProfile(input.Email_Parent,"Parent");
										instituteName = Add_Institute_Details[ID != 0].School_Name;
										if(input.Gender == "Male")
										{
											genderValue = "son";
										}
										else
										{
											genderValue = "daughter";
										}
										sendmail
										[
											from :zoho.adminuserid
											to :input.Email_Student
											subject :"Invitation to access School Management App"
											message :("Hi&nbsp;" + input.Student_Name) + ",<div><br></div><div><div>You have been added as a Student in " + instituteName + ".</div><div><br></div><div>Please click&nbsp;<a href=\"" + "https://app.zohocreator.com" + zoho.appuri + "\"" + " target=\"_blank\">here</a>&nbsp;to manage all your school activities.</div><div><br></div><div>Regards,</div><div>" + zoho.adminuser + "</div></div>"
										]
										sendmail
										[
											from :zoho.adminuserid
											to :input.Email_Parent
											subject :"Invitation to access School Management App"
											message :("Hi " + input.Parent_Name) + ",<div><br></div><div><div>Your " + genderValue + " has been added as a Student in " + instituteName + ".</div><div><br></div><div>Please click&nbsp;<a href=\"" + "https://app.zohocreator.com" + zoho.appuri + "\"" + " target=\"_blank\">here</a>&nbsp;to manage all your school activities.</div><div><br></div><div>Regards,</div><div>" + zoho.adminuser + "</div></div>"
										]
										openUrl("#Script:page.refresh","same window");
						)
					}
	}

			}
			Run_Scripts_While_Editing as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Student
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											Blood_GroupValue = input.Blood_Group;
										input.Blood_Group:ui.add(thisapp.BloodGroupList());
										Blood_Group.select(Blood_GroupValue);
						)
					}
	}

			}
			Run_Scripts_While_Editing4 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Student
				record event = on edit

	on validate
	{
					actions 
					{
						custom deluge script
						(
											instituteName = Add_Institute_Details[ID != 0].School_Name;
										if(old.Email_Student != input.Email_Student)
										{
											thisapp.permissions.deleteuser(old.Email_Student);
											thisapp.permissions.assignUserInProfile(input.Email_Student,"Student");
											sendmail
											[
												from :zoho.adminuserid
												to :input.Email_Student
												subject :"Invitation to access School Management App"
												message :("Hi&nbsp;" + input.Student_Name) + ",<div><br></div><div><div>You have been added as a Student in " + instituteName + ".</div><div><br></div><div>Please click&nbsp;<a href=\"" + "https://app.zohocreator.com" + zoho.appuri + "\"" + " target=\"_blank\">here</a>&nbsp;to manage all your school activities.</div><div><br></div><div>Regards,</div><div>" + zoho.adminuser + "</div></div>"
											]
										}
										if(old.Email_Parent != input.Email_Parent)
										{
											thisapp.permissions.deleteuser(old.Email_Parent);
											thisapp.permissions.assignUserInProfile(input.Email_Parent,"Parent");
											if(input.Gender == "Male")
											{
												genderValue = "son";
											}
											else
											{
												genderValue = "daughter";
											}
											sendmail
											[
												from :zoho.adminuserid
												to :input.Email_Parent
												subject :"Invitation to access School Management App"
												message :("Hi " + input.Parent_Name) + ",<div><br></div><div><div>Your " + genderValue + " has been added as a Student in " + instituteName + ".</div><div><br></div><div>Please click&nbsp;<a href=\"" + "https://app.zohocreator.com" + zoho.appuri + "\"" + " target=\"_blank\">here</a>&nbsp;to manage all your school activities.</div><div><br></div><div>Regards,</div><div>" + zoho.adminuser + "</div></div>"
											]
										}
						)
					}
	}

			}
			Run_Scripts_While_Deletin2 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Add_Student
				record event = on delete

	on validate
	{
					actions 
					{
						custom deluge script
						(
											thisapp.permissions.deleteuser(input.Email_Parent);
										thisapp.permissions.deleteuser(input.Email_Student);
						)
					}
	}

			}
			Run_Scripts_On_Always12 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Student
				record event = on add or edit

	on user input of Address_same_as_Student_Address
	{
					actions 
					{
						custom deluge script
						(
											if(input.Address_same_as_Student_Address)
										{
											input.Address_Parent = input.Address_Student;
											disable Address_Parent;
										}
										else
										{
											input.Address_Parent = null;
										}
						)
					}
	}

			}
			Run_Scripts_On_Always13 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Student
				record event = on add or edit

	on user input of Date_of_Birth
	{
					actions 
					{
						custom deluge script
						(
											if(input.Date_of_Birth >= zoho.currentdate)
										{
											input.Date_of_Birth = null;
											alert "Enter a valid date!";
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_17 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Employee
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Joining_Date = zoho.currentdate;
										input.Blood_Group:ui.add(thisapp.BloodGroupList());
										hide Employee_Status;
						)
					}
	}

			}
			Run_Scripts_While_Adding_18 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Employee
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											thisapp.permissions.assignUserInProfile(input.Email,"Employee");
										instituteName = Add_Institute_Details[ID != 0].School_Name;
										sendmail
										[
											from :zoho.adminuserid
											to :input.Email
											subject :"Invitation to access School Management App"
											message :"Hi&nbsp;" + input.Employee_Name.first_name + ",<div><br></div><div>You have been added as an Employee in " + instituteName + ".</div><div><br></div><div>Please click <a href=\"" + "https://app.zohocreator.com" + zoho.appuri + "\"" + " target=\"_blank\">here</a> to manage all your school activities.</div><div><br></div><div>Regards,</div><div>" + zoho.adminuser + "<br></div>"
										]
										openUrl("#Script:page.refresh","same window");
						)
					}
	}

			}
			Run_Scripts_While_Editing5 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Employee
				record event = on edit

	on load
	{
					actions 
					{
						custom deluge script
						(
											Blood_GroupValue = input.Blood_Group;
										input.Blood_Group:ui.add(thisapp.BloodGroupList());
										Blood_Group.select(Blood_GroupValue);
										if(zoho.loginuserid != zoho.adminuserid)
										{
											disable Employee_Id_No;
											disable Department;
											disable Designation;
											disable Type;
											disable Joining_Date;
											disable Employee_Status;
											disable Email;
										}
						)
					}
	}

			}
			Run_Scripts_While_Editing6 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Add_Employee
				record event = on edit

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(old.Email != input.Email)
										{
											thisapp.permissions.deleteuser(old.Email);
											thisapp.permissions.assignUserInProfile(input.Email,"Employee");
											instituteName = Add_Institute_Details[ID != 0].School_Name;
											sendmail
											[
												from :zoho.adminuserid
												to :input.Email
												subject :"Invitation to access School Management App"
												message :"Hi&nbsp;" + input.Employee_Name.first_name + ",<div><br></div><div>You have been added as an Employee in " + instituteName + ".</div><div><br></div><div>Please click <a href=\"" + "https://app.zohocreator.com" + zoho.appuri + "\"" + " target=\"_blank\">here</a> to manage all your school activities.</div><div><br></div><div>Regards,</div><div>" + zoho.adminuser + "<br></div>"
											]
										}
						)
					}
	}

			}
			Run_Scripts_While_Deletin3 as "Run Scripts - While Deleting a Record"
			{
				type =  form
				form = Add_Employee
				record event = on delete

	on validate
	{
					actions 
					{
						custom deluge script
						(
											thisapp.permissions.deleteuser(input.Email);
						)
					}
	}

			}
			Run_Scripts_While_Adding_19 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Grade
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Academic_Year = Add_Current_Academic_Year[ID != 0].Academic_Year;
						)
					}
	}

			}
			Run_Scripts_While_Adding_20 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Grade
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(Add_Grade[Academic_Year == input.Academic_Year && Grade == input.Grade].count() > 0)
										{
											alert "This Grade already exists in the given Academic Year!";
											cancel submit;
										}
						)
					}
	}

			}
			Run_Scripts_On_Always14 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_Grade
				record event = on add or edit

	on user input of Academic_Year
	{
					actions 
					{
						custom deluge script
						(
											//clear Students;
										All_students_list = Add_Student[Status = "Active"].ID.getAll();
										student_list = Add_Grade[Academic_Year == input.Academic_Year].Students.getAll();
										All_students_list.removeall(student_list);
										input.Students:ui.add(All_students_list);
						)
					}
	}

			}
			Run_Scripts_While_Adding_21 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Set_Timetable
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Timetable_sub;
										input.Academic_Year = Add_Current_Academic_Year[ID != 0].Academic_Year;
										input.Grade:ui.add(Add_Grade[Academic_Year == input.Academic_Year].ID.getAll());
						)
					}
	}

			}
			Run_Scripts_While_Adding_22 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Set_Timetable
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#Form:Allocate_Sessions?Rec_Id=" + input.ID,"same window");
						)
					}
	}

			}
			Run_Scripts_On_Always15 as "Run Scripts - On Always"
			{
				type =  form
				form = Set_Timetable
				record event = on add or edit

	on user input of To_field
	{
					actions 
					{
						custom deluge script
						(
											if(input.From_field != null && input.To_field != null)
										{
											if(input.From_field > input.To_field)
											{
												alert "Please enter valid date!";
												input.To_field = null;
											}
										}
						)
					}
	}

			}
			Run_Scripts_On_Always16 as "Run Scripts - On Always"
			{
				type =  form
				form = Set_Timetable
				record event = on add or edit

	on user input of From_field
	{
					actions 
					{
						custom deluge script
						(
											if(input.From_field != null && input.To_field != null)
										{
											if(input.From_field > input.To_field)
											{
												alert "Please enter valid date!";
												input.From_field = null;
											}
										}
						)
					}
	}

			}
			Run_Scripts_On_Always17 as "Run Scripts - On Always"
			{
				type =  form
				form = Set_Timetable
				record event = on add or edit

	on user input of Grade
	{
					actions 
					{
						custom deluge script
						(
											/* timingset_rec  =  Allocate_Timing_sets  [Grade == input.Grade];
																																																																														weekday_list = timingset_rec.Weedays;
																																																																														timing_set_rec  =  Add_session  [Create_Class_Timing_Set_Id == timingset_rec.Class_Timing_Set];
																																																																														timeset_list = List();
																																																																														for each rec in timing_set_rec
																																																																														{
																																																																														    timeset_list.add(rec.Session_Name + "<br>(" + rec.Start_Time + "-" + rec.End_Time + ")");
																																																																														}
																																																																														plainstr = "";
																																																																														//.zc-Monday-group label{ padding-top:30px} 
																																																																														for each day in weekday_list
																																																																														{
																																																																														    plainstr = plainstr + " .zc-" + day + "-group{margin-bottom:0px;} .zc-" + day + "-label{margin-top: 20px;}";
																																																																														}
																																																																														input.plain = "<style>" + plainstr + " .form-field .tempContDiv{ display:block;width:770px;}  .form-field .tempContDiv .choice-table-cell{float:left;border: 1px solid #d4d5d8;padding: 10px 20px 20px 20px;}</style>";
																																																																														for each value in weekday_list
																																																																														{
																																																																														    if (value  ==  "Monday")
																																																																														    {
																																																																														        Monday:ui.add(timeset_list);
																																																																														        show Monday;
																																																																														    }
																																																																														    if (value  ==  "Tuesday")
																																																																														    {
																																																																														        Tuesday:ui.add(timeset_list);
																																																																														        show Tuesday;
																																																																														    }
																																																																														    if (value  ==  "Wednesday")
																																																																														    {
																																																																														        Wednesday:ui.add(timeset_list);
																																																																														        show Wednesday;
																																																																														    }
																																																																														    if (value  ==  "Thursday")
																																																																														    {
																																																																														        Thursday:ui.add(timeset_list);
																																																																														        show Thursday;
																																																																														    }
																																																																														    if (value  ==  "Friday")
																																																																														    {
																																																																														        Friday:ui.add(timeset_list);
																																																																														        show Friday;
																																																																														    }
																																																																														    if (value  ==  "Saturday")
																																																																														    {
																																																																														        Saturday:ui.add(timeset_list);
																																																																														        show Saturday;
																																																																														    }
																																																																														    if (value  ==  "Sunday")
																																																																														    {
																																																																														        Sunday:ui.add(timeset_list);
																																																																														        show Sunday;
																																																																														    }
																																																																														}
																																																																														 */
						)
					}
	}

			}
			Run_Scripts_While_Adding_23 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Assign_Subjects_and_Faculties
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Academic_Year = Add_Current_Academic_Year[ID != 0].Academic_Year;
										input.Grade:ui.add(Add_Grade[Academic_Year == input.Academic_Year].ID.getAll());
										disable Allocation.S_No;
						)
					}
	}

			}
			Run_Scripts_While_Adding_24 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Assign_Subjects_and_Faculties
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(Assign_Subjects_and_Faculties[Academic_Year == input.Academic_Year && Grade == input.Grade].count() > 0)
										{
											alert "You have already asigned Subjects and Faculties for this Grade!";
											cancel submit;
										}
						)
					}
	}

			}
			Run_Scripts_On_Always18 as "Run Scripts - On Always"
			{
				type =  form
				form = Assign_Subjects_and_Faculties
				record event = on add or edit

	on add row of Allocation
	{
					actions 
					{
						custom deluge script
						(
											row_count = 0;
										all_subject_list = Add_Subject[ID != 0].ID.getAll();
										for each  rec in Allocation
										{
											row_count = row_count + 1;
											all_subject_list.removeelement(rec.Subject_field);
										}
										row.S_No=row_count;
										row.Subject_field:ui.add(all_subject_list);
						)
					}
	}

			}
			Run_Scripts_On_Always19 as "Run Scripts - On Always"
			{
				type =  form
				form = Assign_Subjects_and_Faculties
				record event = on add or edit

	on delete row of Allocation
	{
					actions 
					{
						custom deluge script
						(
											for each  rec in Allocation
										{
											if(rec.S_No > row.S_No)
											{
												rec.S_No=rec.S_No - 1;
											}
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_25 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Allocate_Sessions
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Monday;
										clear Monday;
										hide Tuesday;
										clear Tuesday;
										hide Wednesday;
										clear Wednesday;
										hide Thursday;
										clear Thursday;
										hide Friday;
										clear Friday;
										hide Saturday;
										clear Saturday;
										hide Sunday;
										clear Sunday;
										hide Rec_Id;
										plainstr = "";
										//Adding subjects
										subjectlist = List:Int();
										gradeid = Set_Timetable[ID == input.Rec_Id].Grade;
										subjects_rec = Assign_Subjects_and_Faculties[Grade == gradeid];
										for each  subrec in subjects_rec.Allocation
										{
											subjectlist.add(subrec.Subject_field);
										}
										//Adding timing sets
										timingset_rec = Allocate_Timing_sets[Grade == gradeid];
										weekday_list = timingset_rec.Weekdays;
										timing_set_rec = Add_session[Create_Class_Timing_Set_Id == timingset_rec.Class_Timing_Set];
										count_var = 1;
										sessionName = "<div class='form-field'><div class='flLeft tempContDiv'><div class='choice-table-cell'style='padding: 10px 15px 20px 10px;'><label><span style='padding-top:20px;'><a>WeekDays</a></span></label></div>";
										for each  session in timing_set_rec
										{
											sessionName = sessionName + "<div class='choice-table-cell' style='padding: 10px 15px 20px 10px;'><label><span style='padding-top:20px;'><a>" + session.Session_Name + "</a></span></label></div>";
											count_var = count_var + 1;
											if(session.Is_a_Break)
											{
												plainstr = plainstr + "input[id$=checkboxesEl_zc-Monday_" + count_var + "]+label,";
												plainstr = plainstr + "input[id$=checkboxesEl_zc-Tuesday_" + count_var + "]+label,";
												plainstr = plainstr + "input[id$=checkboxesEl_zc-Wednesday_" + count_var + "]+label,";
												plainstr = plainstr + "input[id$=checkboxesEl_zc-Thursday_" + count_var + "]+label,";
												plainstr = plainstr + "input[id$=checkboxesEl_zc-Friday_" + count_var + "]+label,";
												plainstr = plainstr + "input[id$=checkboxesEl_zc-Saturday_" + count_var + "]+label,";
												plainstr = plainstr + "input[id$=checkboxesEl_zc-Sunday_" + count_var + "]+label,";
												plainstr = plainstr.removeLastOccurence(",") + "{display:none;}";
											}
										}
										sessionName = sessionName + "</div></div>";
										for each  day in weekday_list
										{
											plainstr = plainstr + ".form-outer-wrapper .formContainer .zc-" + day + "-group{margin-bottom:0px;} .zc-" + day + "-label{margin-top: 20px;}";
										}
										for each  day in weekday_list
										{
											plainstr = plainstr + " input[id$=checkboxesEl_zc-" + day + "_1]+label,";
										}
										plainstr = plainstr.removeLastOccurence(",") + "{display: none;}";
										plainstr = plainstr + ".form-outer-wrapper .formContainer div.zc-Select_Subject-group+div {margin-bottom:0px;} .customCheckbox+label{margin-right:0px;}.zc-Monday span, .zc-Tuesday span, .zc-Wednesday span, .zc-Thursday span, .zc-Friday span, .zc-Saturday span, .zc-Sunday span{ padding-top:20px;width: 120px;text-overflow: ellipsis;white-space: nowrap;overflow: hidden; } .formColumn .form-group .zc-Monday-label,.formColumn .form-group .zc-Tuesday-label, .formColumn .form-group .zc-Wednesday-label,.formColumn .form-group .zc-Thursday-label,.formColumn .form-group .zc-Friday-label,.formColumn .form-group .zc-Saturday-label,.formColumn .form-group .zc-Sunday-label{display:none;} .form-field .tempContDiv{ display:block;width:" + (timing_set_rec.count() + 1) * 142 + "px;}  .form-field .tempContDiv .choice-table-cell{float:left;border: 1px solid #e0e0e3;padding: 10px 20px 20px 5px;width:100px;height: 50px;text-align:center;} .zc-Monday font, .zc-Tuesday font, .zc-Wednesday font, .zc-Thursday font, .zc-Friday font, .zc-Saturday font, .zc-Sunday font{font-size : 12px; color : white; display : none;}";
										session_rec = Timetable_subform[Set_Timetable_Id == input.Rec_Id];
										if(session_rec.count() > 0)
										{
											input.Monday:ui.append("<a>Monday</a>");
											input.Tuesday:ui.append("<a>Tuesday</a>");
											input.Wednesday:ui.append("<a>Wednesday</a>");
											input.Thursday:ui.append("<a>Thursday</a>");
											input.Friday:ui.append("<a>Friday</a>");
											input.Saturday:ui.append("<a>Saturday</a>");
											input.Sunday:ui.append("<a>Sunday</a>");
											count_var = 1;
											selected_subject_list = Timetable_subform[Set_Timetable_Id == input.Rec_Id].Monday.getAll();
											selected_subject_list.addall(Timetable_subform[Set_Timetable_Id == input.Rec_Id].Tuesday.getAll());
											selected_subject_list.addall(Timetable_subform[Set_Timetable_Id == input.Rec_Id].Wednesday.getAll());
											selected_subject_list.addall(Timetable_subform[Set_Timetable_Id == input.Rec_Id].Thursday.getAll());
											selected_subject_list.addall(Timetable_subform[Set_Timetable_Id == input.Rec_Id].Friday.getAll());
											selected_subject_list.addall(Timetable_subform[Set_Timetable_Id == input.Rec_Id].Saturday.getAll());
											selected_subject_list.addall(Timetable_subform[Set_Timetable_Id == input.Rec_Id].Sunday.getAll());
											subjectlist.removeall(selected_subject_list.distinct());
											input.Select_Subject:ui.add(subjectlist);
											mondayNewList = List();
											tuesdayNewList = List();
											wednesdayNewList = List();
											thursdayNewList = List();
											fridayNewList = List();
											saturdayNewList = List();
											sundayNewList = List();
											mondayMap = Map:String();
											for each  ses_rec in session_rec
											{
												count_var = count_var + 1;
												if(ses_rec.Monday != null)
												{
													mondayNewList = thisapp.appendSubject(mondayNewList,ses_rec.Monday.Subject_Name);
													plainstr = plainstr + "input[id$=checkboxesEl_zc-Monday_" + count_var + "]+label,";
												}
												else
												{
													mondayNewList.add(ses_rec.Session.Start_Time + "-" + ses_rec.Session.End_Time);
												}
												if(ses_rec.Tuesday != null)
												{
													tuesdayNewList = thisapp.appendSubject(tuesdayNewList,ses_rec.Tuesday.Subject_Name);
													plainstr = plainstr + "input[id$=checkboxesEl_zc-Tuesday_" + count_var + "]+label,";
												}
												else
												{
													tuesdayNewList.add(ses_rec.Session.Start_Time + "-" + ses_rec.Session.End_Time);
												}
												if(ses_rec.Wednesday != null)
												{
													wednesdayNewList = thisapp.appendSubject(wednesdayNewList,ses_rec.Wednesday.Subject_Name);
													plainstr = plainstr + "input[id$=checkboxesEl_zc-Wednesday_" + count_var + "]+label,";
												}
												else
												{
													wednesdayNewList.add(ses_rec.Session.Start_Time + "-" + ses_rec.Session.End_Time);
												}
												if(ses_rec.Thursday != null)
												{
													thursdayNewList = thisapp.appendSubject(thursdayNewList,ses_rec.Thursday.Subject_Name);
													plainstr = plainstr + "input[id$=checkboxesEl_zc-Thursday_" + count_var + "]+label,";
												}
												else
												{
													thursdayNewList.add(ses_rec.Session.Start_Time + "-" + ses_rec.Session.End_Time);
												}
												if(ses_rec.Friday != null)
												{
													fridayNewList = thisapp.appendSubject(fridayNewList,ses_rec.Friday.Subject_Name);
													plainstr = plainstr + "input[id$=checkboxesEl_zc-Friday_" + count_var + "]+label,";
												}
												else
												{
													fridayNewList.add(ses_rec.Session.Start_Time + "-" + ses_rec.Session.End_Time);
												}
												if(ses_rec.Saturday != null)
												{
													saturdayNewList = thisapp.appendSubject(saturdayNewList,ses_rec.Saturday.Subject_Name);
													plainstr = plainstr + "input[id$=checkboxesEl_zc-Saturday_" + count_var + "]+label,";
												}
												else
												{
													saturdayNewList.add(ses_rec.Session.Start_Time + "-" + ses_rec.Session.End_Time);
												}
												if(ses_rec.Sunday != null)
												{
													sundayNewList = thisapp.appendSubject(sundayNewList,ses_rec.Sunday.Subject_Name);
													plainstr = plainstr + "input[id$=checkboxesEl_zc-Sunday_" + count_var + "]+label,";
												}
												else
												{
													sundayNewList.add(ses_rec.Session.Start_Time + "-" + ses_rec.Session.End_Time);
												}
											}
											plainstr = plainstr.removeLastOccurence(",") + "{display:none;}";
											input.Monday:ui.append(mondayNewList);
											input.Tuesday:ui.append(tuesdayNewList);
											input.Wednesday:ui.append(wednesdayNewList);
											input.Thursday:ui.append(thursdayNewList);
											input.Friday:ui.append(fridayNewList);
											input.Saturday:ui.append(saturdayNewList);
											input.Sunday:ui.append(sundayNewList);
										}
										else
										{
											input.Select_Subject:ui.add(subjectlist);
											monday_list = List:String({"<a>Monday</a>"});
											tuesday_list = List:String({"<a>Tuesday</a>"});
											wednesday_list = List:String({"<a>Wednesday</a>"});
											thursday_list = List:String({"<a>Thursday</a>"});
											friday_list = List:String({"<a>Friday</a>"});
											saturday_list = List:String({"<a>Saturday</a>"});
											sunday_list = List:String({"<a>Sunday</a>"});
											timeset_list = List();
											templist = List();
											for each  rec in timing_set_rec
											{
												timeset_list.add(rec.Start_Time + "-" + rec.End_Time);
											}
											map = Map:String();
											map = Map:String({"Monday":monday_list,"Tuesday":tuesday_list,"Wednesday":wednesday_list,"Thursday":thursday_list,"Friday":friday_list,"Saturday":saturday_list,"Sunday":sunday_list});
											for each  value in weekday_list
											{
												templist = map.get(value).toListString();
												templist.addall(timeset_list);
												map.put(value,templist);
											}
											input.Monday:ui.add(map.get("Monday").toListString());
											input.Tuesday:ui.add(map.get("Tuesday").toListString());
											input.Wednesday:ui.add(map.get("Wednesday").toListString());
											input.Thursday:ui.add(map.get("Thursday").toListString());
											input.Friday:ui.add(map.get("Friday").toListString());
											input.Saturday:ui.add(map.get("Saturday").toListString());
											input.Sunday:ui.add(map.get("Sunday").toListString());
										}
										for each  value in weekday_list
										{
											if(value == "Monday")
											{
												show Monday;
											}
											if(value == "Tuesday")
											{
												show Tuesday;
											}
											if(value == "Wednesday")
											{
												show Wednesday;
											}
											if(value == "Thursday")
											{
												show Thursday;
											}
											if(value == "Friday")
											{
												show Friday;
											}
											if(value == "Saturday")
											{
												show Saturday;
											}
											if(value == "Sunday")
											{
												show Sunday;
											}
										}
										input.notes_field = "<style>" + plainstr + "</style>" + sessionName;
						)
					}
	}

			}
			Run_Scripts_On_Always20 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_session
				record event = on add or edit

	on user input of End_Time
	{
					actions 
					{
						custom deluge script
						(
											if(thisapp.TimeValidation(input.End_Time))
										{
											hrsVal = input.End_Time.getPrefix(":");
											minsVal = input.End_Time.getSuffix(":");
											if(hrsVal.length() < 2 || minsVal.length() < 2)
											{
												input.End_Time = thisapp.GetStringTime(hrsVal.toLong(),minsVal.toLong());
											}
										}
										else
										{
											alert "Please enter time in 24 hours format";
										}
						)
					}
	}

			}
			Run_Scripts_On_Always21 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_session
				record event = on add or edit

	on user input of Start_Time
	{
					actions 
					{
						custom deluge script
						(
											if(thisapp.TimeValidation(input.Start_Time))
										{
											hrsVal = input.Start_Time.getPrefix(":");
											minsVal = input.Start_Time.getSuffix(":");
											if(hrsVal.length() < 2 || minsVal.length() < 2)
											{
												input.Start_Time = thisapp.GetStringTime(hrsVal.toLong(),minsVal.toLong());
											}
										}
										else
										{
											alert "Please enter time in 24 hours format";
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_26 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Create_Class_Timing_Set
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											for each  sessionRec in Add_Sessions
										{
											if(thisapp.TimeValidation(sessionRec.Start_Time))
											{
												hrsVal = sessionRec.Start_Time.getPrefix(":");
												minsVal = sessionRec.Start_Time.getSuffix(":");
												if(hrsVal.length() < 2 || minsVal.length() < 2)
												{
													sessionRec.Start_Time=thisapp.GetStringTime(hrsVal.toLong(),minsVal.toLong());
												}
												endtime = (zoho.currentdate + " " + sessionRec.End_Time + ":00").toTime();
												starttime = (zoho.currentdate + " " + sessionRec.Start_Time + ":00").toTime();
												if(endtime < starttime)
												{
													alert "Please specify valid start time!";
													cancel submit;
												}
											}
											else
											{
												alert "Please enter Start time in 24 hours format!";
												cancel submit;
											}
											if(thisapp.TimeValidation(sessionRec.End_Time))
											{
												hrsVal = sessionRec.End_Time.getPrefix(":");
												minsVal = sessionRec.End_Time.getSuffix(":");
												if(hrsVal.length() < 2 || minsVal.length() < 2)
												{
													sessionRec.End_Time=thisapp.GetStringTime(hrsVal.toLong(),minsVal.toLong());
												}
												endtime = (zoho.currentdate + " " + sessionRec.End_Time + ":00").toTime();
												starttime = (zoho.currentdate + " " + sessionRec.Start_Time + ":00").toTime();
												if(endtime < starttime)
												{
													alert "Please specify valid end time!";
													cancel submit;
												}
											}
											else
											{
												alert "Please enter End time in 24 hours format!";
												cancel submit;
											}
										}
						)
					}
	}

			}
			Run_Scripts_On_Always22 as "Run Scripts - On Always"
			{
				type =  form
				form = Create_Class_Timing_Set
				record event = on add or edit

	on user input of Add_Sessions.Start_Time
	{
					actions 
					{
						custom deluge script
						(
											if(thisapp.TimeValidation(row.Start_Time))
										{
											hrsVal = row.Start_Time.getPrefix(":");
											minsVal = row.Start_Time.getSuffix(":");
											if(hrsVal.length() < 2 || minsVal.length() < 2)
											{
												row.Start_Time=thisapp.GetStringTime(hrsVal.toLong(),minsVal.toLong());
											}
											endtime = (zoho.currentdate + " " + row.End_Time + ":00").toTime();
											starttime = (zoho.currentdate + " " + row.Start_Time + ":00").toTime();
											if(row.End_Time != "00:00" && row.Start_Time != "00:00" && endtime < starttime)
											{
												alert "Please specify valid start time!";
											}
										}
										else
										{
											alert "Please enter time in 24 hours format";
										}
						)
					}
	}

			}
			Run_Scripts_On_Always23 as "Run Scripts - On Always"
			{
				type =  form
				form = Create_Class_Timing_Set
				record event = on add or edit

	on user input of Add_Sessions.End_Time
	{
					actions 
					{
						custom deluge script
						(
											if(thisapp.TimeValidation(row.End_Time))
										{
											hrsVal = row.End_Time.getPrefix(":");
											minsVal = row.End_Time.getSuffix(":");
											if(hrsVal.length() < 2 || minsVal.length() < 2)
											{
												row.End_Time=thisapp.GetStringTime(hrsVal.toLong(),minsVal.toLong());
											}
											endtime = (zoho.currentdate + " " + row.End_Time + ":00").toTime();
											starttime = (zoho.currentdate + " " + row.Start_Time + ":00").toTime();
											if(row.End_Time != "00:00" && row.Start_Time != "00:00" && endtime < starttime)
											{
												alert "Please specify valid end time!";
											}
										}
										else
										{
											alert "Please enter time in 24 hours format";
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_27 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Allocate_Timing_sets
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Academic_Year = Add_Current_Academic_Year[ID != 0].Academic_Year;
										input.Grade:ui.add(Add_Grade[Academic_Year == input.Academic_Year].ID.getAll());
						)
					}
	}

			}
			Run_Scripts_While_Adding_28 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Allocate_Timing_sets
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(Allocate_Timing_sets[Academic_Year == input.Academic_Year && Grade == input.Grade].count() > 0)
										{
											alert "This Grade has been already allotted!";
											cancel submit;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_29 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_Institute_Details
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Email = zoho.loginuserid;
						)
					}
	}

			}
			Run_Scripts_While_Adding_30 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Send_Mail
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											currentYear = Add_Current_Academic_Year[ID != 0].Academic_Year;
										gradeList = Add_Grade[Academic_Year == currentYear].ID.getAll();
										//input.Select_Grade.ui:addAll( gradeList );
										input.Select_Grade:ui.add(gradeList);
										hide Select_Grade;
						)
					}
	}

			}
			Run_Scripts_While_Adding_31 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Send_Mail
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											if(input.To == "Students")
										{
											studentList = Add_Grade[ID in input.Select_Grade].Students.getAll();
											for each  student in studentList
											{
												studentMail = Add_Student[ID == student].Email_Student;
												sendmail
												[
													from :zoho.adminuserid
													to :studentMail
													subject :input.Subject_field
													message :input.Message
												]
											}
										}
										else if(input.To == "Parents")
										{
											studentList = Add_Grade[ID in input.Select_Grade].Students.getAll();
											for each  student in studentList
											{
												parentMail = Add_Student[ID == student].Email_Parent;
												sendmail
												[
													from :zoho.adminuserid
													to :parentMail
													subject :input.Subject_field
													message :input.Message
												]
											}
										}
										else if(input.To == "All Employees")
										{
											employeeEmail = Add_Employee[Employee_Status == "Active"].Email.getAll();
											for each  mail in employeeEmail
											{
												sendmail
												[
													from :zoho.adminuserid
													to :mail
													subject :input.Subject_field
													message :input.Message
												]
											}
										}
										openUrl("#Script:page.refresh","same window");
						)
					}
	}

			}
			Run_Scripts_On_Always24 as "Run Scripts - On Always"
			{
				type =  form
				form = Send_Mail
				record event = on add or edit

	on user input of To
	{
					actions 
					{
						custom deluge script
						(
											if(input.To == "Students" || input.To == "Parents")
										{
											show Select_Grade;
										}
										else
										{
											hide Select_Grade;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_32 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_to_Academic_Calender
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											disable No_of_Days;
										currentYear = Add_Current_Academic_Year[ID != 0].Academic_Year;
										input.Academic_Year = currentYear;
						)
					}
	}

			}
			Run_Scripts_While_Adding_33 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Add_to_Academic_Calender
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:page.refresh","same window");
						)
					}
	}

			}
			Run_Scripts_On_Always25 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_to_Academic_Calender
				record event = on add or edit

	on user input of From
	{
					actions 
					{
						custom deluge script
						(
											if(input.From != null && input.To != null)
										{
											input.No_of_Days = days360(input.From,input.To);
										}
										else
										{
											input.No_of_Days = 0;
										}
										if(input.From > input.To)
										{
											input.From = null;
											alert "Please enter a valid date";
										}
						)
					}
	}

			}
			Run_Scripts_On_Always26 as "Run Scripts - On Always"
			{
				type =  form
				form = Add_to_Academic_Calender
				record event = on add or edit

	on user input of To
	{
					actions 
					{
						custom deluge script
						(
											if(input.From != null && input.To != null)
										{
											input.No_of_Days = days360(input.From,input.To) + 1;
										}
										else
										{
											input.No_of_Days = 0;
										}
										if(input.From > input.To)
										{
											input.To = null;
											alert "Please enter a valid date";
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_34 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Employee_Attendance
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											input.Academic_Year = Add_Current_Academic_Year[ID != 0].Academic_Year;
										input.Select_Employee = Add_Employee[Email == zoho.loginuserid].ID;
										hide Academic_Year;
										input.Date_field = zoho.currentdate;
										disable Select_Employee;
						)
					}
	}

			}
			Run_Scripts_While_Adding_35 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Employee_Attendance
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(Employee_Attendance[Date_field == input.Date_field && Select_Employee == input.Select_Employee].count() > 0)
										{
											alert "You have already marked attendance for the given date!";
											cancel submit;
										}
						)
					}
	}

			}
			Run_Scripts_While_Adding_36 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Employee_Attendance
				record event = on add

	on success
	{
					actions 
					{
						custom deluge script
						(
											openUrl("#Script:page.refresh","same window");
						)
					}
	}

			}
			Run_Scripts_While_Adding_37 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Student_Attendance
				record event = on add

	on load
	{
					actions 
					{
						custom deluge script
						(
											hide Absentees;
										hide Present_Students;
										hide Absentees_Count;
										input.Academic_Year = Add_Current_Academic_Year[ID != 0].Academic_Year;
										input.Date_field = zoho.currentdate;
						)
					}
	}

			}
			Run_Scripts_While_Adding_38 as "Run Scripts - While Adding a Record"
			{
				type =  form
				form = Student_Attendance
				record event = on add

	on validate
	{
					actions 
					{
						custom deluge script
						(
											if(Student_Attendance[Academic_Year == input.Academic_Year && Grade == input.Grade && Date_field == input.Date_field].count() > 0)
										{
											alert "The Attendance of this Grade has already been added for the given date!";
											cancel submit;
										}
										else
										{
											student_list = Add_Grade[ID == input.Grade].Students;
											student_list.removeall(input.Present_Students);
											input.Absentees = student_list;
											studentDetail = "";
											for each  student in student_list
											{
												studentRecord = Add_Student[ID == student];
												studentDetail = (studentDetail + studentRecord.Student_Name) + "-" + studentRecord.Roll_No + ",";
											}
											input.Absentees_multiline = studentDetail;
											input.Absentees_Count = student_list.size();
										}
						)
					}
	}

			}
			Run_Scripts_While_Editing7 as "Run Scripts - While Editing a Record"
			{
				type =  form
				form = Student_Attendance
				record event = on edit

	on validate
	{
					actions 
					{
						custom deluge script
						(
											student_list = Add_Grade[ID == input.Grade].Students;
										student_list.removeall(input.Present_Students);
										input.Absentees = student_list;
										studentDetail = "";
										for each  student in student_list
										{
											studentRecord = Add_Student[ID == student];
											studentDetail = (studentDetail + studentRecord.Student_Name) + "-" + studentRecord.Roll_No + "<br>";
										}
										input.Absentees_multiline = studentDetail;
										input.Absentees_Count = student_list.size();
						)
					}
	}

			}
			Run_Scripts_On_Always27 as "Run Scripts - On Always"
			{
				type =  form
				form = Student_Attendance
				record event = on add or edit

	field rules
	{
					actions 
					{
						hide Absentees_multiline;
					}
	}

			}
			Run_Scripts_On_Always28 as "Run Scripts - On Always"
			{
				type =  form
				form = Student_Attendance
				record event = on add or edit

	on user input of Date_field
	{
					actions 
					{
						custom deluge script
						(
											if(input.Date_field > zoho.currentdate)
										{
											input.Date_field = null;
											alert "Please enter a valid date!";
										}
						)
					}
	}

			}
			Run_Scripts_On_Always29 as "Run Scripts - On Always"
			{
				type =  form
				form = Student_Attendance
				record event = on add or edit

	on user input of Grade
	{
					actions 
					{
						custom deluge script
						(
											student_list = Add_Grade[ID == input.Grade].Students;
										input.Present_Students:ui.add(student_list);
										Present_Students.selectall();
										show Present_Students;
						)
					}
	}

			}
		}
		functions
		{
			View_Timetable as "View Timetable"
			{
				type =  functions
				form = Set_Timetable
				on start
				{
					actions 
					{
					Viewtimetable(ID);
					}
				}
			}
		}
	}
	share_settings
	{
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true}
				description = "This profile will have all the permissions.\n"
			}
			"Employee"
			{
				name = "Employee"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false}
				description = "This profile will have employee permissions.\n"
				ModulePermissions
				{
					Add_Subject
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Subject_Name{visibility:true,readonly:false}
							Subject_Code{visibility:true,readonly:false}
						}
					}
					Add_Current_Academic_Year
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Create_Class_Timing_Set
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Class_Timing_Sets={"View","Edit","Delete"}
						}
						FieldPermissions
						{
							Set_Name{visibility:true,readonly:false}
							Add_Sessions{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Allocate_Sessions
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Rec_Id{visibility:true,readonly:false}
							notes_field{visibility:true,readonly:false}
							Monday{visibility:true,readonly:false}
							Thursday{visibility:true,readonly:false}
							Friday{visibility:true,readonly:false}
							Sunday{visibility:true,readonly:false}
							Wednesday{visibility:true,readonly:false}
							Select_Subject{visibility:true,readonly:false}
							Tuesday{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Saturday{visibility:true,readonly:false}
						}
					}
					Add_session
					{
						enabled= Create,Tab 
						FieldPermissions
						{
							Create_Class_Timing_Set_Id{visibility:true,readonly:false}
							Is_a_Break{visibility:true,readonly:false}
							End_Time{visibility:true,readonly:false}
							Start_Time{visibility:true,readonly:false}
							Session_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Grade
					{
						enabled= Viewall,Import,Export 
						ReportPermissions
						{
							Grades={"View","Edit","Delete"}
						}
						FieldPermissions
						{
							Grade{visibility:true,readonly:false}
							Students{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Add_Academic_Year
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Timetable_subform
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Timetable_subform_Report={"View","Edit","Delete"}
						}
						FieldPermissions
						{
							Monday{visibility:true,readonly:false}
							Thursday{visibility:true,readonly:false}
							Friday{visibility:true,readonly:false}
							Sunday{visibility:true,readonly:false}
							Wednesday{visibility:true,readonly:false}
							Tuesday{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Set_Timetable_Id{visibility:true,readonly:false}
							Session{visibility:true,readonly:false}
							Saturday{visibility:true,readonly:false}
						}
					}
					Add_Institute_Details
					{
						FieldPermissions
						{
							Email{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							Phone{visibility:true,readonly:false}
							Mobile_No{visibility:true,readonly:false}
							Website{visibility:true,readonly:false}
							School_Name{visibility:true,readonly:false}
							Fax{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Employee
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							My_Details_Employee={"View","Edit"}
						}
						FieldPermissions
						{
							Designation{visibility:true,readonly:false}
							Date_of_Birth{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Joining_Date{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							Employee_Id_No{visibility:true,readonly:false}
							Marital_Status{visibility:true,readonly:false}
							Photo{visibility:true,readonly:false}
							Gender{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Department{visibility:true,readonly:false}
							Qualification{visibility:true,readonly:false}
							Type{visibility:true,readonly:false}
							Blood_Group{visibility:true,readonly:false}
							Employee_Status{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							Phone{visibility:true,readonly:false}
							Mobile_No{visibility:true,readonly:false}
							Experience_Info{visibility:true,readonly:false}
							plain1{visibility:true,readonly:false}
							Employee_Name{visibility:true,readonly:false}
						}
					}
					Set_Timetable
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							All_Grade_Timetables={"View","Edit","Delete"}
						}
						FieldPermissions
						{
							Timetable_sub{visibility:true,readonly:false}
							From_field{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							Academic_Year{visibility:true,readonly:false}
							To_field{visibility:true,readonly:false}
							Grade{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Religion
					{
						FieldPermissions
						{
							Religion{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Department
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Department{visibility:true,readonly:false}
						}
					}
					Employee_Attendance
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Employee_Attendance_Report={"View"}
							Employee_Attendance_Chart={"View"}
						}
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Select_Employee{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Add_Student_Category
					{
						FieldPermissions
						{
							Category_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Designation
					{
						FieldPermissions
						{
							Designation{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Student_Attendance
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Student_Attendance_View={"View","Edit","Delete"}
						}
						FieldPermissions
						{
							Date_field{visibility:true,readonly:false}
							Absentees_multiline{visibility:true,readonly:false}
							Absentees_Count{visibility:true,readonly:false}
							Present_Students{visibility:true,readonly:false}
							Academic_Year{visibility:true,readonly:false}
							Absentees{visibility:true,readonly:false}
							Grade{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Assign_Subjects_and_Faculties
					{
						FieldPermissions
						{
							Grade{visibility:true,readonly:false}
							Allocation{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Send_Mail
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Announcements={"View","Edit","Delete"}
						}
						FieldPermissions
						{
							To{visibility:true,readonly:false}
							Select_Grade{visibility:true,readonly:false}
							Message{visibility:true,readonly:false}
							Subject_field{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_to_Academic_Calender
					{
						enabled= Viewall,Export 
						ReportPermissions
						{
							Academic_Calendar={"View"}
						}
						FieldPermissions
						{
							Type{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Academic_Year{visibility:true,readonly:false}
							No_of_Days{visibility:true,readonly:false}
							From{visibility:true,readonly:false}
							To{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:true,readonly:false}
						}
					}
					Allocate_Timing_sets
					{
						enabled= Create,Viewall,Import,Export,Tab 
						ReportPermissions
						{
							Grade_Timing_set_Mapping={"View","Edit","Delete"}
						}
						FieldPermissions
						{
							Class_Timing_Set{visibility:true,readonly:false}
							Grade{visibility:true,readonly:false}
							Weekdays{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Add_Student
					{
						FieldPermissions
						{
							Category{visibility:true,readonly:false}
							Mobile_No_Student{visibility:true,readonly:false}
							Email_Parent{visibility:true,readonly:false}
							Photo{visibility:true,readonly:false}
							Gender{visibility:true,readonly:false}
							Address_Parent{visibility:true,readonly:false}
							Roll_No{visibility:true,readonly:false}
							Relation{visibility:true,readonly:false}
							Blood_Group{visibility:true,readonly:false}
							Student_Name{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							plain2{visibility:true,readonly:false}
							plain1{visibility:true,readonly:false}
							Phone_Parent{visibility:true,readonly:false}
							Parent_Name{visibility:true,readonly:false}
							Address_same_as_Student_Address{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Admission_No{visibility:true,readonly:false}
							Date_of_Birth{visibility:true,readonly:false}
							Joining_Date{visibility:true,readonly:false}
							Religion{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Nationality{visibility:false,readonly:false}
							Address_Student{visibility:true,readonly:false}
							Phone_Student{visibility:false,readonly:false}
							Occupation{visibility:true,readonly:false}
							Email_Student{visibility:true,readonly:false}
							Mobile_No_Parent{visibility:true,readonly:false}
						}
					}
					Employee_Dashboard
					{
						enabled = tab
					}
				}
			}
			"Student"
			{
				name = "Student"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false}
				description = "This profile will have student permissions.\n"
				ModulePermissions
				{
					Add_Subject
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Subject_Name{visibility:true,readonly:false}
							Subject_Code{visibility:true,readonly:false}
						}
					}
					Add_Current_Academic_Year
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Create_Class_Timing_Set
					{
						FieldPermissions
						{
							Set_Name{visibility:true,readonly:false}
							Add_Sessions{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Allocate_Sessions
					{
						FieldPermissions
						{
							Rec_Id{visibility:true,readonly:false}
							notes_field{visibility:true,readonly:false}
							Monday{visibility:true,readonly:false}
							Thursday{visibility:true,readonly:false}
							Friday{visibility:true,readonly:false}
							Sunday{visibility:true,readonly:false}
							Wednesday{visibility:true,readonly:false}
							Select_Subject{visibility:true,readonly:false}
							Tuesday{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Saturday{visibility:true,readonly:false}
						}
					}
					Add_session
					{
						FieldPermissions
						{
							Create_Class_Timing_Set_Id{visibility:true,readonly:false}
							Is_a_Break{visibility:true,readonly:false}
							End_Time{visibility:true,readonly:false}
							Start_Time{visibility:true,readonly:false}
							Session_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Grade
					{
						FieldPermissions
						{
							Grade{visibility:true,readonly:false}
							Students{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Add_Academic_Year
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Timetable_subform
					{
						FieldPermissions
						{
							Monday{visibility:true,readonly:false}
							Thursday{visibility:true,readonly:false}
							Friday{visibility:true,readonly:false}
							Sunday{visibility:true,readonly:false}
							Wednesday{visibility:true,readonly:false}
							Tuesday{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Set_Timetable_Id{visibility:true,readonly:false}
							Session{visibility:true,readonly:false}
							Saturday{visibility:true,readonly:false}
						}
					}
					Add_Institute_Details
					{
						FieldPermissions
						{
							Email{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							Phone{visibility:true,readonly:false}
							Mobile_No{visibility:true,readonly:false}
							Website{visibility:true,readonly:false}
							School_Name{visibility:true,readonly:false}
							Fax{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Employee
					{
						FieldPermissions
						{
							Designation{visibility:true,readonly:false}
							Date_of_Birth{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Joining_Date{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							Employee_Id_No{visibility:true,readonly:false}
							Marital_Status{visibility:true,readonly:false}
							Photo{visibility:true,readonly:false}
							Gender{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Department{visibility:true,readonly:false}
							Qualification{visibility:true,readonly:false}
							Type{visibility:true,readonly:false}
							Blood_Group{visibility:true,readonly:false}
							Employee_Status{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							Phone{visibility:true,readonly:false}
							Mobile_No{visibility:true,readonly:false}
							Experience_Info{visibility:true,readonly:false}
							plain1{visibility:true,readonly:false}
							Employee_Name{visibility:true,readonly:false}
						}
					}
					Set_Timetable
					{
						FieldPermissions
						{
							Timetable_sub{visibility:true,readonly:false}
							From_field{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							Academic_Year{visibility:true,readonly:false}
							To_field{visibility:true,readonly:false}
							Grade{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Religion
					{
						FieldPermissions
						{
							Religion{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Department
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Department{visibility:true,readonly:false}
						}
					}
					Employee_Attendance
					{
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Select_Employee{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Add_Student_Category
					{
						FieldPermissions
						{
							Category_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Designation
					{
						FieldPermissions
						{
							Designation{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Student_Attendance
					{
						FieldPermissions
						{
							Date_field{visibility:true,readonly:false}
							Absentees_multiline{visibility:true,readonly:false}
							Absentees_Count{visibility:true,readonly:false}
							Present_Students{visibility:true,readonly:false}
							Academic_Year{visibility:true,readonly:false}
							Absentees{visibility:true,readonly:false}
							Grade{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Assign_Subjects_and_Faculties
					{
						FieldPermissions
						{
							Grade{visibility:true,readonly:false}
							Allocation{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Send_Mail
					{
						FieldPermissions
						{
							To{visibility:true,readonly:false}
							Select_Grade{visibility:true,readonly:false}
							Message{visibility:true,readonly:false}
							Subject_field{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_to_Academic_Calender
					{
						FieldPermissions
						{
							Type{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Academic_Year{visibility:true,readonly:false}
							No_of_Days{visibility:true,readonly:false}
							From{visibility:true,readonly:false}
							To{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:true,readonly:false}
						}
					}
					Allocate_Timing_sets
					{
						FieldPermissions
						{
							Class_Timing_Set{visibility:true,readonly:false}
							Grade{visibility:true,readonly:false}
							Weekdays{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Add_Student
					{
						ReportPermissions
						{
							My_Details_Student={"View"}
						}
						FieldPermissions
						{
							Category{visibility:true,readonly:false}
							Mobile_No_Student{visibility:true,readonly:false}
							Email_Parent{visibility:true,readonly:false}
							Photo{visibility:true,readonly:false}
							Gender{visibility:true,readonly:false}
							Address_Parent{visibility:false,readonly:false}
							Roll_No{visibility:true,readonly:false}
							Relation{visibility:true,readonly:false}
							Blood_Group{visibility:true,readonly:false}
							Student_Name{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							plain2{visibility:true,readonly:false}
							plain1{visibility:true,readonly:false}
							Phone_Parent{visibility:true,readonly:false}
							Parent_Name{visibility:true,readonly:false}
							Address_same_as_Student_Address{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Admission_No{visibility:true,readonly:false}
							Date_of_Birth{visibility:true,readonly:false}
							Joining_Date{visibility:true,readonly:false}
							Religion{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Nationality{visibility:true,readonly:false}
							Address_Student{visibility:true,readonly:false}
							Phone_Student{visibility:true,readonly:false}
							Occupation{visibility:true,readonly:false}
							Email_Student{visibility:true,readonly:false}
							Mobile_No_Parent{visibility:true,readonly:false}
						}
					}
					Student_Dashboard
					{
						enabled = tab
					}
				}
			}
			"Customer"
			{
				name = "Customer"
				type = Customer_Portal
				permissions = {Chat:false, Predefined:true}
				description = "This is the default profile having only add and view permission.\n"
			}
			"Parent"
			{
				name = "Parent"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false}
				description = "This profile will have only parental permissions.\n"
				ModulePermissions
				{
					Add_Subject
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Subject_Name{visibility:true,readonly:false}
							Subject_Code{visibility:true,readonly:false}
						}
					}
					Add_Current_Academic_Year
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Create_Class_Timing_Set
					{
						FieldPermissions
						{
							Set_Name{visibility:true,readonly:false}
							Add_Sessions{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Allocate_Sessions
					{
						FieldPermissions
						{
							Rec_Id{visibility:true,readonly:false}
							notes_field{visibility:true,readonly:false}
							Monday{visibility:true,readonly:false}
							Thursday{visibility:true,readonly:false}
							Friday{visibility:true,readonly:false}
							Sunday{visibility:true,readonly:false}
							Wednesday{visibility:true,readonly:false}
							Select_Subject{visibility:true,readonly:false}
							Tuesday{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Saturday{visibility:true,readonly:false}
						}
					}
					Add_session
					{
						FieldPermissions
						{
							Create_Class_Timing_Set_Id{visibility:true,readonly:false}
							Is_a_Break{visibility:true,readonly:false}
							End_Time{visibility:true,readonly:false}
							Start_Time{visibility:true,readonly:false}
							Session_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Grade
					{
						FieldPermissions
						{
							Grade{visibility:true,readonly:false}
							Students{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Add_Academic_Year
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Timetable_subform
					{
						FieldPermissions
						{
							Monday{visibility:true,readonly:false}
							Thursday{visibility:true,readonly:false}
							Friday{visibility:true,readonly:false}
							Sunday{visibility:true,readonly:false}
							Wednesday{visibility:true,readonly:false}
							Tuesday{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Set_Timetable_Id{visibility:true,readonly:false}
							Session{visibility:true,readonly:false}
							Saturday{visibility:true,readonly:false}
						}
					}
					Add_Institute_Details
					{
						FieldPermissions
						{
							Email{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							Phone{visibility:true,readonly:false}
							Mobile_No{visibility:true,readonly:false}
							Website{visibility:true,readonly:false}
							School_Name{visibility:true,readonly:false}
							Fax{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Employee
					{
						FieldPermissions
						{
							Designation{visibility:true,readonly:false}
							Date_of_Birth{visibility:true,readonly:false}
							Email{visibility:true,readonly:false}
							Joining_Date{visibility:true,readonly:false}
							Address{visibility:true,readonly:false}
							Employee_Id_No{visibility:true,readonly:false}
							Marital_Status{visibility:true,readonly:false}
							Photo{visibility:true,readonly:false}
							Gender{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Department{visibility:true,readonly:false}
							Qualification{visibility:true,readonly:false}
							Type{visibility:true,readonly:false}
							Blood_Group{visibility:true,readonly:false}
							Employee_Status{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							Phone{visibility:true,readonly:false}
							Mobile_No{visibility:true,readonly:false}
							Experience_Info{visibility:true,readonly:false}
							plain1{visibility:true,readonly:false}
							Employee_Name{visibility:true,readonly:false}
						}
					}
					Set_Timetable
					{
						FieldPermissions
						{
							Timetable_sub{visibility:true,readonly:false}
							From_field{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							Academic_Year{visibility:true,readonly:false}
							To_field{visibility:true,readonly:false}
							Grade{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Religion
					{
						FieldPermissions
						{
							Religion{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Department
					{
						FieldPermissions
						{
							Section{visibility:false,readonly:false}
							Department{visibility:true,readonly:false}
						}
					}
					Employee_Attendance
					{
						FieldPermissions
						{
							Status{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Select_Employee{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Add_Student_Category
					{
						FieldPermissions
						{
							Category_Name{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_Designation
					{
						FieldPermissions
						{
							Designation{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Student_Attendance
					{
						FieldPermissions
						{
							Date_field{visibility:true,readonly:false}
							Absentees_multiline{visibility:true,readonly:false}
							Absentees_Count{visibility:true,readonly:false}
							Present_Students{visibility:true,readonly:false}
							Academic_Year{visibility:true,readonly:false}
							Absentees{visibility:true,readonly:false}
							Grade{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Assign_Subjects_and_Faculties
					{
						FieldPermissions
						{
							Grade{visibility:true,readonly:false}
							Allocation{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Send_Mail
					{
						FieldPermissions
						{
							To{visibility:true,readonly:false}
							Select_Grade{visibility:true,readonly:false}
							Message{visibility:true,readonly:false}
							Subject_field{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
						}
					}
					Add_to_Academic_Calender
					{
						FieldPermissions
						{
							Type{visibility:true,readonly:false}
							Description{visibility:true,readonly:false}
							Academic_Year{visibility:true,readonly:false}
							No_of_Days{visibility:true,readonly:false}
							From{visibility:true,readonly:false}
							To{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Name{visibility:true,readonly:false}
						}
					}
					Allocate_Timing_sets
					{
						FieldPermissions
						{
							Class_Timing_Set{visibility:true,readonly:false}
							Grade{visibility:true,readonly:false}
							Weekdays{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Academic_Year{visibility:true,readonly:false}
						}
					}
					Add_Student
					{
						ReportPermissions
						{
							My_Details_Student={"View"}
						}
						FieldPermissions
						{
							Category{visibility:true,readonly:false}
							Mobile_No_Student{visibility:true,readonly:false}
							Email_Parent{visibility:true,readonly:false}
							Photo{visibility:true,readonly:false}
							Gender{visibility:true,readonly:false}
							Address_Parent{visibility:false,readonly:false}
							Roll_No{visibility:true,readonly:false}
							Relation{visibility:true,readonly:false}
							Blood_Group{visibility:true,readonly:false}
							Student_Name{visibility:true,readonly:false}
							plain{visibility:true,readonly:false}
							plain2{visibility:true,readonly:false}
							plain1{visibility:true,readonly:false}
							Phone_Parent{visibility:true,readonly:false}
							Parent_Name{visibility:true,readonly:false}
							Address_same_as_Student_Address{visibility:true,readonly:false}
							Status{visibility:true,readonly:false}
							Admission_No{visibility:true,readonly:false}
							Date_of_Birth{visibility:true,readonly:false}
							Joining_Date{visibility:true,readonly:false}
							Religion{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Nationality{visibility:true,readonly:false}
							Address_Student{visibility:true,readonly:false}
							Phone_Student{visibility:true,readonly:false}
							Occupation{visibility:true,readonly:false}
							Email_Student{visibility:true,readonly:false}
							Mobile_No_Parent{visibility:true,readonly:false}
						}
					}
					Parent_Dashboard
					{
						enabled = tab
					}
				}
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users.\n\n"
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 3
		new theme color = 1
		icons = true
    	icon type = 1
    	icon name = "zc-ab-finance6"
    	icon theme = "blue"
		icons style = solid
	}

	phone
	{
		section  Admin
		{
			icon = "ui-1-lock-circle"
			page Admin_Dashboard
			{
			}
			form  Add_Student
			{
				layout = left
				icon = "users-add-27"
			}
			form  Add_Employee
			{
				layout = left
				icon = "users-2-a-add"
			}
			custom Student_Details
			{
				icon = "users-2-contacts-44"
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 19
		     				title = "Overview"
							fields
							(
								Photo
								Student_Name as "Student Name"
								Address_Student as "Student Address"
								Mobile_No_Parent as "Mobile No"
								Roll_No as "Roll No"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Admission_No as "Admission No"
								Roll_No as "Roll No"
								Photo
								Email_Student as "Email"
								Date_of_Birth as "Date of Birth"
								Gender
								Blood_Group as "Blood Group"
								Nationality
								Category
								Religion
								Joining_Date as "Joining Date"
								Relation
								Email_Parent as "Email"
								Occupation
								Status
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			custom Employee_Details
			{
				icon = "users-2-contacts-45"
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 19
		     				title = "Overview"
							fields
							(
								Photo
								Employee_Name as "Employee Name"
								Designation
								Department
								Employee_Id_No as "Employee Id/No"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Employee_Id_No as "Employee Id/No"
								Photo
								Employee_Name as "Employee Name"
								Qualification
								Joining_Date as "Joining Date"
								Department
								Designation
								Email
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Personal Detais"
							fields
							(
								Gender
								Blood_Group as "Blood Group"
								Joining_Date as "Joining Date"
								Phone
								Address
								Mobile_No as "Mobile No"
								Qualification
								Experience_Info as "Experience Info"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Employee
		{
			icon = "users-single-03"
			page Employee_Dashboard
			{
			}
			custom Employee_Attendance_Report
			{
				icon = "ui-1-calendar-check-62"
				quickview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = 1
		     				title = "Overview"
							fields
							(
								Select_Employee as "Select Employee"
								Status
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Select_Employee as "Select Employee"
								Date_field as "Date"
								Status
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Student_Attendance_View
			{
				icon = "education-pencil-47"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Grade
								Present_Students as "Present Students"
								Absentees_Count as "Absentees Count"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Date_field as "Date"
								Grade
								Academic_Year as "Academic Year"
								Present_Students as "Present Students"
								Absentees
								Absentees_Count as "Absentees Count"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Student
		{
			icon = "files-user"
			page Student_Dashboard
			{
			}
		}
		section  Parent
		{
			icon = "users-parent"
			page Parent_Dashboard
			{
			}
		}
		section  Academics
		{
			icon = "files-book-08"
			form  Add_Grade
			{
				layout = left
				icon = "files-add"
			}
			summary Grades
			{
				icon = "education-hat"
				quickview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = 1
		     				title = "Overview"
							fields
							(
								Grade
								Students
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = 19
		     				title = "Overview"
							fields
							(
								Academic_Year as "Academic Year"
								Grade
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Subjects_and_Faculties_Allotment
			{
				icon = "ui-1-check-square-11"
				quickview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = 1
		     				title = "Overview"
							fields
							(
								Academic_Year as "Academic Year"
								Grade
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Academic_Year as "Academic Year"
								Grade
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list All_Subjects
			{
				icon = "education-books-46"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Subject_Name as "Subject Name"
								Subject_Code as "Subject Code"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Subject_Name as "Subject Name"
								Subject_Code as "Subject Code"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Announcements
			{
				icon = "media-1-speaker"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Subject_field as "Subject"
								Message
								To
								Added_User as "Added User"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Added_User as "Added User"
								To
								Subject_field as "Subject"
								Message
								Select_Grade as "Select Grade"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Timetable
		{
			icon = "ui-1-calendar-grid-58"
			list Class_Timing_Sets
			{
				icon = "arrows-2-time"
				quickview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = 1
		     				title = "Overview"
							fields
							(
								Set_Name as "Set Name"
								Add_Sessions.Session_Name as "Add Sessions"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Set_Name as "Set Name"
								Add_Sessions.Session_Name as "Add Sessions"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Grade_Timing_set_Mapping
			{
				icon = "files-time"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Grade
								Weekdays
								Class_Timing_Set as "Class Timing Set"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Academic_Year as "Academic Year"
								Grade
								Class_Timing_Set as "Class Timing Set"
								Weekdays
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			form  Set_Timetable
			{
				layout = left
				icon = "ui-3-calendar-add"
			}
			list All_Grade_Timetables
			{
				icon = "ui-1-calendar-grid-61"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Academic_Year as "Academic Year"
								Grade
								From_field as "From"
								To_field as "To"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
										"View Timetable"
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
										"View Timetable"
    								)
									on left swipe
									(
										"View Timetable"
    								)
									on right swipe
									(
										Edit   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Academic_Year as "Academic Year"
								Grade
								From_field as "From"
								To_field as "To"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
			 				"View Timetable"
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Settings
		{
			icon = "ui-1-settings-gear-64"
			summary Institute_Details
			{
				icon = "education-school"
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								School_Name as "School Name"
								Address
								Phone
								Mobile_No as "Mobile No"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								School_Name as "School Name"
								Website
								Fax
								Email
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Current_Academic_Year
			{
				icon = "ui-1-calendar-check-62"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Academic_Year as "Current Year"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Academic_Year as "Current Year"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Departments
			{
				icon = "design-2-filter-organization"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Department
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Department
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Designations
			{
				icon = "design-2-layers"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Designation
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Designation
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Student_Categories
			{
				icon = "business-hierarchy-54"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Category_Name as "Category Name"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Category_Name as "Category Name"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			list Student_Religions
			{
				icon = "travel-temple-25"
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Religion
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Religion
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		section  Hidden
		{
			hide = true
			icon = "holidays-dead-hand"
			form  Assign_Subjects_and_Faculties
			{
				layout = left
				icon = "business-hierarchy-53"
				hide = true
			}
			form  Allocate_Sessions
			{
				layout = left
				icon = "users-2-focus"
				hide = true
			}
			form  Timetable_subform
			{
				layout = left
				icon = "ui-1-calendar-grid-61"
				hide = true
			}
			list Timetable_subform_Report
			{
				icon = "ui-1-calendar-grid-61"
				hide = true
				quickview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = 1
		     				title = "Overview"
							fields
							(
								Session
								Set_Timetable_Id as "Set Timetable Id"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Set_Timetable_Id as "Set Timetable Id"
								Session
								Monday
								Tuesday
								Wednesday
								Thursday
								Friday
								Saturday
								Sunday
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			form  Add_session
			{
				layout = left
				icon = "design-2-3d-29"
				hide = true
			}
			list Sessions
			{
				icon = "media-2-guitar"
				hide = true
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Session_Name as "Session Name"
								Start_Time as "Start Time"
								End_Time as "End Time"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Edit   	   
										Delete   	   
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Create_Class_Timing_Set_Id as "Create Class Timing Set Id"
								Session_Name as "Session Name"
								Start_Time as "Start Time"
								End_Time as "End Time"
								Is_a_Break as "Is a Break"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			form  Create_Class_Timing_Set
			{
				layout = left
				icon = "media-1-brightness-47"
				hide = true
			}
			form  Allocate_Timing_sets
			{
				layout = auto
				icon = "shopping-mobile-card"
				hide = true
			}
			form  Add_Institute_Details
			{
				layout = left
				icon = "users-2-contacts-44"
				hide = true
			}
			form  Add_Academic_Year
			{
				layout = left
				icon = "business-progress"
				hide = true
			}
			list Academic_Years
			{
				icon = "education-pencil-47"
				hide = true
				quickview
				(
					layout
					(
		 				type = 9
						datablock1
						(
			 				layout type = 31
		     				title = "Overview"
							fields
							(
								Academic_Year as "Academic Year"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Academic_Year as "Academic Year"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			form  Add_Current_Academic_Year
			{
				layout = left
				icon = "media-1-button-previous"
				hide = true
			}
			form  Add_Student_Category
			{
				layout = left
				icon = "design-shape-circle"
				hide = true
			}
			form  Add_Religion
			{
				layout = left
				icon = "travel-church"
				hide = true
			}
			form  Add_Department
			{
				layout = left
				icon = "tech-2-l-add"
				hide = true
			}
			form  Add_Designation
			{
				layout = left
				icon = "tech-2-l-add"
				hide = true
			}
			form  Add_Subject
			{
				layout = left
				icon = "design-2-3d-29"
				hide = true
			}
			form  Send_Mail
			{
				layout = left
				icon = "shopping-delivery"
				hide = true
			}
			form  Add_to_Academic_Calender
			{
				layout = left
				icon = "sport-tactic"
				hide = true
			}
			calendar Academic_Calendar
			{
				icon = "ui-1-calendar-60"
				hide = true
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Name
								Description
								From
								To
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Academic_Year as "Academic Year"
								Name
								Description
								Type
								From
								To
								No_of_Days as "No of Days"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			form  Employee_Attendance
			{
				layout = left
				icon = "food-hob"
				hide = true
			}
			form  Student_Attendance
			{
				layout = left
				icon = "food-hob"
				hide = true
			}
			list Holidays
			{
				icon = "holidays-glove"
				hide = true
				quickview
				(
					layout
					(
		 				type = 12
						datablock1
						(
			 				layout type = 35
		     				title = "Overview"
							fields
							(
								Name
								Description
								No_of_Days as "No of Days"
								To
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Academic_Year as "Academic Year"
								Name
								Description
								No_of_Days as "No of Days"
								From
								To
								Type
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			summary My_Details_Employee
			{
				icon = "users-2-b-love"
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 19
		     				title = "Overview"
							fields
							(
								Photo
								Employee_Id_No as "Employee Id/No"
								Address
								Phone
								Mobile_No as "Mobile No"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Employee_Id_No as "Employee Id/No"
								Department
								Designation
								Qualification
								Type
								Experience_Info as "Experience Info"
								Joining_Date as "Joining Date"
								Gender
								Date_of_Birth as "Date of Birth"
								Marital_Status as "Marital Status"
								Blood_Group as "Blood Group"
								Email
								Photo
								Employee_Status as "Employee Status"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
			pivotchart Absentees
			{
				hide = true
			}
			pivotchart Employee_Attendance_Chart
			{
				icon = "users-2-b-love"
				hide = true
			}
			list My_Details_Student
			{
				icon = "users-2-b-love"
				hide = true
				quickview
				(
					layout
					(
		 				type = 6
						datablock1
						(
			 				layout type = 19
		     				title = "Overview"
							fields
							(
								Photo
								Student_Name as "Student Name"
								Address_Student as "Student Address"
								Phone_Student as "Phone"
								Mobile_No_Student as "Mobile No"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    		 				Add 
    		 				Print 
    		 				Import 
    		 				Export 
    	 				)
									record
									(
										Edit   	   
										Duplicate   	   
										Print   	   
										Delete   	   
    								)
    				)
    				action
    				(
									on tap
									(
										View Record   	   
    								)
									on long press
									(
										Duplicate   	   
										Print   	   
										View Record   	   
    								)
									on right swipe
									(
										Edit   	   
										Delete   	   
    								)
     				)
				)
				detailview
				(
					layout
					(
		 				type = 2
						datablock1
						(
			 				layout type = -2
		     				title = "Overview"
							fields
							(
								Roll_No as "Roll No"
								Student_Name as "Student Name"
								Photo
								Address_Student as "Student Address"
								Admission_No as "Admission No"
								Joining_Date as "Joining Date"
								Mobile_No_Student as "Mobile No"
								Phone_Student as "Phone"
								Date_of_Birth as "Date of Birth"
								Gender
								Nationality
							)
						)
						datablock2
						(
			 				layout type = -2
		     				title = "Parent Details"
							fields
							(
								Parent_Name as "Parent Name"
								Address_Parent as "Parent Address"
								Relation
								Occupation
								Mobile_No_Parent as "Mobile No"
								Phone_Parent as "Phone"
							)
						)
					)

					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Print 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		customize
		{
			colour = blue
        	layout = slidingpane
		 	icons style = outline
		}
	}
	tablet
	{
		section  Admin
		{
			icon = "ui-1-lock-circle"
			page Admin_Dashboard
			{
			}
			form  Add_Student
			{
				layout = left
				icon = "users-add-27"
			}
			form  Add_Employee
			{
				layout = left
				icon = "users-2-a-add"
			}
			custom Student_Details
			{
				icon = "users-2-contacts-44"
			}
			custom Employee_Details
			{
				icon = "users-2-contacts-45"
			}
		}
		section  Employee
		{
			icon = "users-single-03"
			page Employee_Dashboard
			{
			}
			custom Employee_Attendance_Report
			{
				icon = "ui-1-calendar-check-62"
			}
			list Student_Attendance_View
			{
				icon = "education-pencil-47"
			}
		}
		section  Student
		{
			icon = "users-circle-10"
			page Student_Dashboard
			{
			}
		}
		section  Parent
		{
			icon = "users-parent"
			page Parent_Dashboard
			{
			}
		}
		section  Academics
		{
			icon = "files-book-08"
			form  Add_Grade
			{
				layout = left
				icon = "files-add"
			}
			summary Grades
			{
				icon = "education-hat"
			}
			list Subjects_and_Faculties_Allotment
			{
				icon = "ui-1-check-square-11"
			}
			list All_Subjects
			{
				icon = "education-books-46"
			}
			list Announcements
			{
				icon = "media-1-speaker"
			}
		}
		section  Timetable
		{
			icon = "ui-1-calendar-grid-61"
			list Class_Timing_Sets
			{
				icon = "arrows-2-time"
			}
			list Grade_Timing_set_Mapping
			{
				icon = "files-time"
			}
			form  Set_Timetable
			{
				layout = left
				icon = "ui-3-calendar-add"
			}
			list All_Grade_Timetables
			{
				icon = "ui-1-calendar-grid-61"
			}
		}
		section  Settings
		{
			icon = "ui-1-settings-gear-63"
			summary Institute_Details
			{
				icon = "education-school"
			}
			list Current_Academic_Year
			{
				icon = "ui-1-calendar-check-62"
			}
			list Departments
			{
				icon = "design-2-filter-organization"
			}
			list Designations
			{
				icon = "design-2-layers"
			}
			list Student_Categories
			{
				icon = "business-hierarchy-54"
			}
			list Student_Religions
			{
				icon = "travel-temple-25"
			}
		}
		section  Hidden
		{
			hide = true
			icon = "holidays-dead-hand"
			form  Assign_Subjects_and_Faculties
			{
				layout = left
				icon = "business-hierarchy-53"
				hide = true
			}
			form  Allocate_Sessions
			{
				layout = left
				icon = "users-2-focus"
				hide = true
			}
			form  Timetable_subform
			{
				layout = left
				icon = "ui-1-calendar-grid-61"
				hide = true
			}
			list Timetable_subform_Report
			{
				icon = "ui-1-calendar-grid-61"
				hide = true
			}
			form  Add_session
			{
				layout = left
				icon = "design-2-3d-29"
				hide = true
			}
			list Sessions
			{
				icon = "media-2-guitar"
				hide = true
			}
			form  Create_Class_Timing_Set
			{
				layout = left
				icon = "media-1-brightness-47"
				hide = true
			}
			form  Allocate_Timing_sets
			{
				layout = auto
				icon = "shopping-mobile-card"
				hide = true
			}
			form  Add_Institute_Details
			{
				layout = left
				icon = "users-2-contacts-44"
				hide = true
			}
			form  Add_Academic_Year
			{
				layout = left
				icon = "business-progress"
				hide = true
			}
			list Academic_Years
			{
				icon = "education-pencil-47"
				hide = true
			}
			form  Add_Current_Academic_Year
			{
				layout = left
				icon = "media-1-button-previous"
				hide = true
			}
			form  Add_Student_Category
			{
				layout = left
				icon = "design-shape-circle"
				hide = true
			}
			form  Add_Religion
			{
				layout = left
				icon = "travel-church"
				hide = true
			}
			form  Add_Department
			{
				layout = left
				icon = "tech-2-l-add"
				hide = true
			}
			form  Add_Designation
			{
				layout = left
				icon = "tech-2-l-add"
				hide = true
			}
			form  Add_Subject
			{
				layout = left
				icon = "design-2-3d-29"
				hide = true
			}
			form  Send_Mail
			{
				layout = left
				icon = "shopping-delivery"
				hide = true
			}
			form  Add_to_Academic_Calender
			{
				layout = left
				icon = "sport-tactic"
				hide = true
			}
			calendar Academic_Calendar
			{
				icon = "ui-1-calendar-60"
				hide = true
			}
			form  Employee_Attendance
			{
				layout = left
				icon = "food-hob"
				hide = true
			}
			form  Student_Attendance
			{
				layout = left
				icon = "food-hob"
				hide = true
			}
			list Holidays
			{
				icon = "holidays-glove"
				hide = true
			}
			summary My_Details_Employee
			{
				icon = "users-2-b-love"
				hide = true
			}
			pivotchart Absentees
			{
				hide = true
			}
			pivotchart Employee_Attendance_Chart
			{
				icon = "users-2-b-love"
				hide = true
			}
			list My_Details_Student
			{
				icon = "users-2-b-love"
				hide = true
			}
		}
		customize
		{
			colour = blue
        	layout = slidingpane
		 	icons style = outline
		}
	}
	
	reports configuration
	{
	
		Version = 1251000165802273
		Key     = "tugyqZDx6B6QJe8CenzTGv0X0UJBMwDqKpz0zyQCY2HF5DwYePK4QT99WmXDuAGpSwz6uXpt7qmUQ2Rh2r0JfMnxMR3jWPthmfaP"
	}
}